{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "395367d6-53a4-4ed9-b29f-167a18fc3b97",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8e11bb43-2b4a-4042-a080-583c96aba64c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c9234b24-40f9-4e08-bcde-fee94415ee80",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ef1ea262-18a6-461a-9b88-9079ffef784c"
                }
              }
            ]
          },
          {
            "id": "c166cac3-06d4-491f-937b-57fe77d97d8b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b677f33a-add9-43e9-9bd7-712c117182ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "84d7d49b-17c8-4b6c-b671-ade908646839"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4e124a3c-87bf-4e13-bdd7-354d1808444b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fd670ab0-3ded-4f59-b427-86036e8a8720",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45c410a5-44a4-4623-bc78-751a139c7c4a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bf5705c-eb9d-442c-a571-d34209f97a7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b511e7d-2974-48db-afe6-64da8c4cfa33"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc37a226-4759-46f9-96c3-d986727367ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "703766c8-f59a-4404-a101-f4a4934eb4c5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cca6c02b-347b-4368-8c3b-28a2f47d609b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df287482-0ddd-4680-b682-3f28fc6cf9d5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6403cb5e-f821-49db-83e2-5b10720d9bed",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8987da14-707e-4ce6-a5c9-60e282e22c96"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0013f87f-b1e0-4092-a2db-502f16fbcbfd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "201a6b7f-cd6b-43ae-87f1-2d7eb7d77445"
            }
          }
        ]
      },
      {
        "id": "7040e696-9702-4156-8770-7d7d09dce36e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "46faac08-680e-406e-aec7-5f345fb47017",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29ad062c-fe53-4209-bc71-b19ada8f0602",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf0b33ef-bf20-40f1-937b-4ca197ee88ea",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce620457-5862-4e9a-97e7-474bae078fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4622a039-0d55-4586-a745-8d5eff2f1d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f853d7-5981-4b93-87b2-18a7307c0ab5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271c8d17-5484-4ba3-99de-31b5307d5d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c96550cc-db4d-4777-8c85-4e6cc0ddba36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3c2b27-e604-4c5b-b71f-ef99abccb7fb",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df56c47-dd18-42c9-8061-a1f7b83b831d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d27bf42-31e6-4cf4-89a1-c6ce4d50ff79"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e652353e-b133-4a2b-b27a-7032f58baee9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1aee16f4-789b-488b-8510-a4899222b249",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae9c148-4153-45d2-ba10-9a49ad8822c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83697b80-3664-427e-855c-227fae72c22e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df68a06-8e05-442a-8d36-9c7491835447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89dab1d-3b11-41e1-934c-088018af2994"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "36323856-cbaf-4ee5-b25f-66d00de5f542",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b6e35434-aa5e-43c1-a58b-c7010012b5c8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a95630b-d261-4e6f-807b-91f2e67fa9bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "eef139b1-b3ff-4aee-9509-2c86c33952b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4c441cd-756e-4729-ab96-63f31e50427b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "84a6f50e-e29a-4cf9-91a4-2ccced0fc2c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "537f24ad-a295-474f-88a1-a2862c7c871d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "469165bf-cf12-4922-8128-fb928fb67868"
            }
          }
        ]
      },
      {
        "id": "5792a21a-2fcd-4c33-acff-bdba5b71a0db",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "18b49229-a7d9-41c8-a6c8-2e4d6dc8afe3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2015e964-3c37-4240-bbe6-f83bb8096f8a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "69534fda-09ae-4f54-bd8e-4e44e8cf043d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e05da3f-a95f-45da-9241-df054efd65ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0731706-b5f0-4eba-97c1-c518791acc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a9bdff-8d24-48be-96f0-b463a694afee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "975c2acb-476c-468d-a7a4-d8e4115be47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bef2cd-a85e-4b0e-8d00-c4c7a6183db2",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81255457-1049-408f-aaa3-afbbf3301d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a24f21-78af-43eb-835c-f32d9b84d272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c71554e-cb1e-47ed-b172-391109f27177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ee3031a-f905-481a-bb7f-38841556465b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb6cf0d-1299-4fd4-abfc-264a57b420dc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960b1741-d563-4f6f-9406-00a4fd927be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c184511-fd9b-4115-8c69-813a0f385cae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954cdbc3-4d64-4dde-8f4f-9f570dc04db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f14549d-6366-4192-9122-e4048607ffbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab1e36d-73a1-4fad-961a-b1667d6a2bf2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71906987-8c13-4f57-a27e-e29bd2d9c648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938be377-276c-4688-b8d1-3f829ffacd82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78e64a4-2856-4669-8ce0-97e6519f2a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e882f5d5-918b-4984-9fae-01e75fafaa5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c368af4-7e7f-4241-8e38-28eb813f4774",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4da3c8-f43a-4255-8b97-546d24c61bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa96faa-6061-465a-8025-b0dfa908deb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b7908f-0cac-4195-8024-95015c33c883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf53992f-e653-4581-b8eb-10c08fed1316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d8d40d-77a7-409c-8bb6-f399c373e987",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784d52a9-2712-46ef-a865-64833da5f6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60417c20-4d2a-44c8-90a2-47400d4dfda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a13bed-4419-46c3-b652-db755d384061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6924904-f027-4f48-99ff-8bbcd5d63c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3de432-cb7b-47a6-87a3-14c6a54e18f7",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "612bb855-83ac-4b09-873f-9b91351e0bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dbf742-e370-421e-bccf-ac3e7cc2278f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbe57da-58cd-44aa-9f3c-dc276f936dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd3c1a4e-b044-4a32-aac4-c1b49d60c049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817a0927-79cd-4d36-9a3c-c2d78d84fbb5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5322311-d801-4f98-9c4f-7283b1242122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6944200-8c96-41ef-b2cd-ae396c4ec15f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a48c3bb-b68a-4c17-b62c-6d6b7276075e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0090a20-35c6-49db-aee5-4c9c0908ca09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e147982-3bbf-4ca0-b6f6-fceca18cb678",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c474336f-89de-4f47-9fcd-fe1997ce0522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31cd67d0-a97a-4342-b498-bee1f58b618e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa9fac5-b0cd-4c2b-bea9-7518a215ca97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "749e341c-b839-4dd0-ba48-2d5cf0712c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0c87c9-5240-444e-8bd4-15df7bc5b8de",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeaf7b73-94e6-4872-931e-58555be63650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "419ea29f-23ad-420e-aeea-4712023d5c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1faf09-5ce2-4068-9eb0-5c6185147fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17930978-f26a-4478-9426-cda81dd1c177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d915629e-bc66-4059-8113-4960fcaea0a7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5ea326-4b09-4017-abe9-607e4530da83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b5fd57-db80-4787-9949-6d31db2dfd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a815ec-8a03-40b0-b907-7ca644c4180d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b4b4876-ca8f-450d-b27a-7ac80ac3bdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c062c6e-b78f-4d22-a7a6-4e58e1512d04",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f942310-d926-4d76-a5cf-e558be540cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83eefbff-1bcf-46fd-86d3-c57aa92b5362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f093b42-cbc7-429c-8067-343ce226ad9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0397ef67-4544-495e-8030-782a0c837596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bed08ce-c064-4df8-8a87-71da1ebcc7e4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb111e49-ff73-4024-9300-01041c293ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696eaf2d-479b-44c4-a8af-9db9218aff24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e926a6d8-f076-4df9-ba8a-107c871dd04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d147d35-40cb-4fb4-bfa0-344e27793e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396f5034-0405-4adc-b388-ba87eaf1e086",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fabd16-ec59-4922-bafb-56d28004caeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949172e7-7ef2-4c6a-b731-bfb89654c3a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faea316-8171-4067-9ecf-c4540985f91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3a1d225-dda9-43de-8aba-18861cbe2c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a1979b-2223-4092-820a-41ca660d9618",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd81beb5-da21-47f2-920a-098227d199cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402411f1-a14d-4d7a-9213-d30e8a90d1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810228aa-26c0-4a4b-abfa-a1c232530ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d32f0b5-413d-4b10-bf3d-698850a7e7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24727b67-d7d7-4845-9e1b-8317b87eaaa0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc78e757-1748-4ff8-9015-45b664d810ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a4626f0-8bd1-4012-99b4-8227981bf4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a990bc8b-a8c3-4ed8-aabb-03133d1b2e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2568365-f8a0-4570-971c-fd5e612a7650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9365c2-3ed4-4471-9a0a-5198c1b14347",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf41787-4825-4e0b-8b6e-a3145eb94d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c274bb7-0675-465e-8897-61ecf3c90112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de402dc-2e47-48aa-8278-848e21e34df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22c9f057-0aea-47d4-9a34-f27972e6df15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb095596-8988-40f7-918c-758c3f6eb844",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f89886d-c4ed-42e0-88f3-9ae5afb7ab4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea4c5bfc-29dd-4fe4-aa38-244f63690060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c560d39-7d23-4c5f-8174-60ec86256f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4050a015-ec6e-4c1b-b934-8a6e45fecc48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eb738d-7e23-4f85-aa7b-03963b6b6861",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c14206b-6e8d-450a-8f90-5bfc62cc49d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f67bcb0-7369-4cd5-9b58-b06f5b96ce49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40333cab-60fd-43ed-b36d-cdfd7e3e978e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "032a24ae-e02f-4c41-90f8-8b33ce7d7448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f48321d-c323-49e1-a643-8ae4f7e5a7a1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa5f25e-b7b1-40a3-a799-8aa2eaf3d851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa29cf7e-f27d-4960-a350-f3facce6702d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e653d76-531c-4903-98cf-f9678940a0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6272f3e-741f-4068-bd31-c280036bc28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae539c60-e053-4a39-ba9e-19b64e683e16",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f6467b-6bd8-4e0b-9cb3-93c6f921e266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250ea4c4-e33d-498f-a015-77560be4bfce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4451956-10dd-4602-b44e-aa4170fb2562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "df360030-c910-456f-ab88-317533a92815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62279aa7-52f2-488b-88e8-26299c0c901d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e991c628-cd93-46ac-b13c-c5e6a9736437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f468b5f-b2d1-42e7-a443-01168bcfdc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174227b3-14fc-4c41-8a78-ffdb4cbbcfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75fe9642-5bed-4e15-8193-0ecd873972ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a248b88-6ae1-4baf-b743-466841478dc0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a8c0a8-f4f1-4ec7-8920-94f604a4e14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38b0228-e3bb-4ae3-96f3-4a84a6f0a344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e930d8d0-8c34-4a49-aed4-bbd6a4f7673c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "637b359a-e852-4888-b25e-d4629b49d180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a643f31-8653-4b42-890f-ebc779afe5c2",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0e8796-3033-44d7-a0d6-1ddd046cc6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dbeb296-4dd2-474b-b398-325c47735de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06e9539-d287-4da3-9586-192465167612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c28873a-014a-4765-b98c-c13abdc8fd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4b6f82-4c7e-482e-84d2-ec3f0d9b0e94",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c42f6a07-5d11-4f6d-a3a0-34685bf275a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b679379-7807-4eed-ae21-ce6a7bc6d5e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3c0a03-db00-41f5-a82f-13ec4c17bc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa78bcdc-44bf-452e-b000-3cf353085b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff25eaf-e4d2-4c4c-9d58-6b53c2f4550f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b07fc5-9dae-4d09-8efc-6285c305dd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b24fd03-4148-4130-9355-caa2fefcb636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb485cb-c20d-421f-a5ab-f601e40336d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0167d4-1bef-4c5a-b5e5-b184091541f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35249fc2-f991-4d57-b478-924f07174860",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817a8271-d1d3-4e4c-a0b2-8cd58d883110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c2c4ca-f324-4841-80eb-c0724bbb491d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87c15d7-7792-4d4a-bd90-170ff3f851d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df8e998-d3d9-41e8-b84b-e2d84528543c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a6e266-69ae-4c05-b430-e805259193b3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b3dff1-e3e4-4ee0-8439-9eef93fd7e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffa5e02-ae10-4dda-b05f-d193caa44154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476b716d-0b5c-4e73-8bb6-cc4849b4114d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c049fd0-5607-4eec-905a-7b263e64d07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed880dc-1e73-4c29-b6e9-7b1d4d30744a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cb81d9-8b5d-4998-b179-b76ac5f6fb9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74593d75-eb79-4a3b-8349-9c3f8dc40e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cd371a-9616-4580-8de4-d4e363c356c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1198a2cf-39fb-47e7-9d79-b4dc5523829a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8b18d8-cf18-4662-8b41-247db7738b7f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8f7ea5-873f-4278-858a-1139e30797e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e68efad-86d9-4dc0-9554-afa8df09ef86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588a3797-cf80-4579-9d14-bf6a7f0874ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8041dc2-0b27-41d7-9eae-20d4326616cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1029afd3-20a0-4048-ad54-9ee0440a0271",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc04e51-030f-4280-b360-87a4f9f2b37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c03f9c-3b5b-4b73-b3cd-3ca77ef2f008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e900c9-23df-4502-b1a2-6606080e1b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8504af4b-3cb0-4197-bdaf-2e9805b3581c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4b545d-4563-4b06-9ca9-bf2c81c065af",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173e2d03-6c07-481d-829e-9e61f572f1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c61539-94ab-4e82-af83-a33d3c5b19ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f6bc99-67b1-4b76-a7cd-2bd6f294672f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb874dad-46ea-4678-95e8-1329cbc1e176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9157f053-b995-4563-bf8e-5014a06da1e9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b91e5d-aac4-45c5-8562-a8ae5ce533e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e28861-042d-4e97-bf11-f9d0e614ea7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d40fd7f-d095-430f-a471-b48cbfb01dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38e1072c-87db-45b7-b70c-2b992bf51304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db03025a-455c-4c64-beb0-bcab825c7889",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eee95e1-4bd3-4207-be30-f5559b74f727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c483d36-6cfe-4b73-9b4b-618e4fe6a77f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5c5764-69ea-4b06-b8aa-6f17ed5ab600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "954f66d5-2c70-4b99-94fc-f20271bd69b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4636e1a6-d296-43fb-9bdd-81bf913d05ec",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275e696c-bcda-4f8d-a5ae-1b2d380e0072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce037bf-9548-4219-9c50-eb5378998f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a53acd3-c190-4a4d-99bd-d3cae306fbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "053bf3e7-28ec-44df-bc98-57207ab2e6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209362b1-1bf9-47a6-8b2e-42d2db6b8f62",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dafdc0a-af05-4c26-9088-29ccb99f8beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b14fb5f-1b06-4f48-b468-7b8b7abe4390"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb71b5c-67b0-4048-ade7-63b8796edd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4201fa-aed2-4ba0-8ca9-9df09e8849d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfeb1d44-f303-43aa-bb49-9d872aba2ec3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464ffd8b-0582-4b07-9d52-9b045766877a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8b4c91-73e4-412f-abd6-abc8a59e8b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb31958-2d04-4e69-9646-a9623be2e601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f19719c9-0268-4539-be72-3333ff9e173d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b55b4df-8fb3-4558-97aa-b83ad38f963b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c343586-2197-43ec-9791-a0036e4ad14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8351ff0-7be0-4c70-8317-d99fcac1b259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eadd2be2-4502-42f6-92a6-424eeb182899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1908097c-f898-4b80-9df4-aada68d396c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9b06ee-db07-4dfd-800c-6c8cdb441dc6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0998ae92-4725-4a3a-8472-25f01fa27c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb27e72-b48e-4919-aa0a-022694b68e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e45c9c-eb22-48b1-b8a8-db3e1f32ceca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "101cb3de-56e8-4569-a7e8-b33391869b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de611a90-6f3f-4480-9980-20720d3bc7bc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb4ac9b-93fa-470a-9b11-e210c0c833aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55821785-af40-4fd0-a789-d44bacca11b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3305dfb9-bcd7-438b-a5d0-10483f8c1408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "aecabc50-fa16-4812-8630-b9efc54910ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77440be7-c641-428e-bf74-c0218a4bc427",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee999222-e1be-49e9-9e37-5790469fcd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb07447-0a56-41cf-8a04-409aedff8f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39b2290-99dd-4fd6-aa28-4aedb56749b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "83d3ae2f-083e-42e7-86a4-0f5b3a2ca8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6feca7-0c9c-475a-b8dc-feac54076cb4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98205414-e697-40d9-afc3-a597c1ee50ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180a5a66-6cf9-4196-b038-b6c18c41ca4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0823903-bace-45db-b42f-147cd511cde8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8b08f796-b7ad-4310-8f7d-421be47d4ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c981df-4fb4-4a11-a7f9-8f1317704c32",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18cdb769-2d15-4711-89eb-ce1ff6b5a511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad238fbf-8bb9-4b03-ad03-66fb1ea5dfe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdeab1a-9596-44e1-9973-8065cb5c9bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "430f340b-b147-428a-aaaa-7434e61f4b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fa2539-3453-4e23-9087-614487e20986",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6856790-3c7c-4b65-a2f3-3141e9c1c8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27380b7b-45d1-401d-90be-01b75eeeae45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d874fa1a-2c98-4fc4-bf47-f3bf5d82df14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "979dc378-56ad-44e0-983b-51b49f7d9025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a159345c-edcf-4414-ad1d-99e47ad06777",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b8b852-94b9-42f5-9c2c-5b8230df802b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0801c937-7bc3-463d-99be-4a1ab17c74ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe5088c-0163-47c1-8a6f-49f86fd6e31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "66b89153-7f8b-4089-a732-51f5cbdd524d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896a8222-dd42-43db-a871-7ba8b939ad83",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cb5762-eeb6-4c2c-838f-4ba90a97f297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6c203b-7eb8-49d7-8df7-ba52e5434543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34dd36fd-491c-4c4d-94ff-3b611e5d167f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "250865db-118b-44b5-bb55-73dafd401672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9f8043-b05a-4c9f-800f-5ec2cd81f709",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd347bd4-349a-4ae8-ab2d-b842bf00ac2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205bb046-032a-459b-9c4d-665ad0f2a00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa2fcdf-92f7-4ed2-aac6-209dbf0122a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa46184b-fe2a-4033-9189-7d229dd51f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a9cddf-937f-4070-9c10-c38d03377914",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8be35f1-06c8-4c23-9883-580640bfce11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b082cf54-d569-47be-a87d-1eb17de87c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5cb1fa-2343-4349-8159-2f29bd42fd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc31373-129c-4a02-959d-cdd5c02594f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b420a399-c41c-4752-bc31-2199f4295d54",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f12e0b-ae33-4659-8ba2-03baf3be8144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee4a08e-5636-450f-8bd2-ef39688dfec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f17c1c2-7ade-4b15-a2e0-1edb0cc72bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae97922c-b95e-47d2-b2dc-289a5f30ca1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3794af-7eb6-49d8-b981-7958dae0dd62",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930e93da-0da2-4ddb-a165-170235b1d91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acee233e-ba3c-4175-94f8-ed0803ea5543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f81329a-625f-45c6-b80c-4f2a45cefe9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11922d56-5996-4725-b221-1d995defcb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e6f223-0db6-4d3c-a463-061273030405",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9019e480-a56d-4f1c-9bf6-b3e030332e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3568751e-b611-44cf-a0fc-1d148d5980c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd61baf2-5ce5-4ee8-beb5-7e483eb62336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e9133b-d3f1-4121-997d-b384e9c6c792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5f9be12-bcc9-4530-ae87-b3a0f3d2e326",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97027f81-e83e-4548-99fd-9c9f24d7c5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d630fa97-b0f9-4b97-9083-b576876e402a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb75659-4cfc-459a-938a-5c218a0e649a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "983c9837-8f4b-4950-8628-c8ad08019dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d9b9f2-8614-44b5-bb17-b61656c4eebc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f1581e-54ed-4d86-bcc5-f572345533cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15e3f95-b331-40bc-b679-16bb8c1052cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f62516c-2bc8-4c64-b21e-eac935afd79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "07ec76af-b273-4865-bd6f-32777a9f429a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd6b0cf-bfda-49d7-a84b-67ebe9e3accb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70edfa8a-0a74-4b1a-99fd-ae84ba52e5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffa447d-2f41-43c0-a72a-e2e5edb94574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5aa686-fff8-42c9-ad2a-f7abd6162782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53d67d9d-1e32-4ef2-86c5-52250600ee1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07affbc6-635c-4373-b118-4a6ecbafe3d2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5651c420-788e-4de2-94aa-01aa14509d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69eb6a1a-3cdc-4421-97cc-69fab2eb737f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a58318-8886-4517-a0b6-311bccf5564c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa90dae-8a0b-4eee-ab70-121c316d7f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883f16e3-aecb-4536-99de-b09346e84d1a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "514ecc7c-f04f-41f7-b585-299e4123f32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958f6b7f-9b92-4ee0-8a97-98fbc1eeb3d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46651126-aaf4-46ac-826b-5d9929a34e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf418d4-bd53-4d39-92cc-c4ae9098fefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296ecab1-8181-4d9c-994d-fd96db65f6cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b880522b-6a54-42c4-8ecc-092e5a313e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2def75a6-0f55-44f3-b91a-871862eefb88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40232821-1a2c-46fd-8c33-b56a670683ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "683ec4ad-80be-4767-a3df-2de1910675f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027a2278-6088-4a6c-88ba-766c949ec7c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b76794-4240-4689-bf7c-8b4cfe82805f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60543fc7-18fb-41c4-a2d8-4194317de31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af10a1d-766f-414c-aa65-c625ee20fd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fabb4b1-24e2-4384-a0ec-8437e6bfe434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe34ba13-dc58-404a-9c12-02a64bc367c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffed002-44e1-459f-9aca-a04afee23d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b684932c-f74b-4902-a374-a823f9be5bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8fc471-a9aa-4571-bb0b-1e6200cfaaa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de40d753-d1d5-45e7-8a81-1567c3bbba86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952d113b-6426-41b2-92d3-3211ab72d46a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88eaf027-1b53-4b13-8533-fb0405a6c017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bc1f77-d0e1-4e24-a9f6-9689185f37d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5eaf6a-6673-46ab-9c9c-b11eb2b3c176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa3fa39-beb3-4ef9-a99e-ad710276310a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d9e9e9-fc30-4433-916d-f69222dfe1b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9836d351-8915-4cb3-975b-9fbaa97972d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611ac69e-4ba0-4823-bc62-be1117e84c99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff89daf-8d33-49c7-86c1-b80464f55472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fec729-5e9e-483c-9073-30cf44491e35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a5b1af-2de2-41f9-b961-03e0aa609ed5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aaec4ef-d5f7-4869-a121-0269fe416bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728eb6a7-f05c-4c77-be53-09bff270a5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0b6e1e-c413-4940-bd55-fd01e7398e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "204ea606-0744-4bd0-8aa6-ddccc99474af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492d3596-b98c-4884-9cff-2567f62a8872",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6a05a3-74c0-45a9-96f4-4cab6b15df97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5998c1f3-4b8c-41eb-a877-60a6cb1e9a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5b3979-fc3c-459e-93f1-40e647ccdd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d28aef-c02a-4df6-aa04-c4a4683aa05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf237cfa-8e07-42ba-9669-7ce05a916227",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f0a938-3e41-4b62-811b-e0e378852de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fd37b2-517c-4b44-8663-c7833d46c811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9951c147-a3d2-41c2-8250-038f77073750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e20388f-cf61-496b-8403-47a61a56d4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b60298b-8172-4156-b03f-7bd6ee818e31",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51301b3e-9d09-4d36-8ea2-250c5b3fb176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d6731e-0177-436f-a6e6-2d5326f35051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546e6369-9037-4dd4-a550-d6c9aec4e78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f86db863-1a21-4ae5-9da9-5d51df184487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5ebbee-f73b-4188-adca-336f06a7b70d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b22d4ae9-4c13-4a34-8763-99e1895041d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c699f0f-82d5-49ef-bf79-fd4303d6f8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2babdbb7-4692-4ac0-9c09-baf615ef57ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9afc4ba1-64a0-4c9a-bd91-c5768b874ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8d5c44-f308-4f3b-b49b-7c623b6bac0f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd4c015-acc3-437d-9521-23449f2abebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b78fcaba-e21d-4614-8886-40788b54c648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d85275c-2461-4c14-8240-f7c91164933c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e76b247d-a489-4cb6-b323-31902cfa6c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6119a1-b00a-4fd6-8df1-b1d416e24bc2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9fdae28-34ff-4a6f-9492-e9c65c8f9cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca3cab7-e266-4c86-a6a7-589791bc6768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d4534c-bdd4-41cd-8082-c75d87f586cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "79bea9ef-1e15-4325-ab9d-2c2775216408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a82eb5-ab58-4ded-9386-df068981f3ae",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716ee223-3bbd-493b-bfd9-323b3144031c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0276d863-48d8-4fdf-93a7-90403e410530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d46e8b0-c92b-4eb6-9aaa-087112d1a879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6294f1-e2ab-494e-aeb3-a02dda9027e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c3f5e9-7f01-41c3-a6b8-43c5a3d5b247",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb99067-7cff-4cf7-88a7-d1c62ae8164d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdf2503-d6c0-4668-9f7f-a9687920d812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e4c400-ca87-4667-ae21-c54418082493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c06e70e3-5928-46f3-a21b-aa0be6a13f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49506bb2-2270-4ff3-bbab-12a89656d2f7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ccd3299-b5c5-429e-bc38-f23ebba84412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f36d6a0-85eb-4a28-9786-761831a5bcb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efbddaf-241c-4ff6-9dd2-b7a029a1e264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ee0817c-57b4-4cfe-b5a8-e877a2ca1354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04530bc0-1ee9-49e9-b719-6a42fc7fee4b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5056a3f-ad79-4007-b79b-8ae94af52c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da52b45-2b9e-4cb5-b9f7-c2a95a1ada1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bb4ca8-9dd2-43a9-bac5-2e8bd95e6b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1080d555-b8fc-4d8e-bb80-0397e9022273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef13d9e-a2ee-4a60-b7dc-291cb9dfde07",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d0f864-8a82-4437-b834-b6b6379f161e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3040552-098a-474c-8316-1bbeed9916b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61781b6-e48c-4eaa-871e-a096ab575a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "043ca9f5-2def-4fb1-b05a-51c0b2dca83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9938aa30-b6b6-4bce-a858-164a5c247231",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c47a0c-5de6-4a71-805a-9a583d6dd909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5984bcb3-2fa7-4478-a190-40905d67336c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8899dfee-bb84-4791-b61a-028488d9c461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "550e4fac-ba72-425b-a4e2-570744140e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264972b2-2af0-4717-be81-1123a12f194d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf74301-b2d3-4dac-8b9a-9df97f52d593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b99942-2aba-496e-aae4-a6c1a7b0ef93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00651b8-09c9-4ad0-b9cb-138f2c76982b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6877fe96-93ce-43b5-9425-db13ff7ddd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af780d87-199d-4ce9-a595-e363b3b16d31",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2bc79a5-cd45-4169-b332-33d593d33155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024e66c7-3270-4ec8-8902-13a94993dfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e10f3d4-f348-4a2f-af97-d50b2eea9e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3fbda3e-fd9f-4921-9c0e-b7dda6785095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f6c2a8-b2c3-4352-be25-39183510344b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5b16d5-6751-4ae0-85ed-be86e5e236f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f805505-8933-49af-bd98-8771dd32f5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5f8339-5229-4007-aedf-b93e2ef0a699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dba4c53-7162-4843-a858-b450cc0f72ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f65f8049-0266-4985-8f66-e12248067810",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b73203c-e0d6-4e42-a87e-ba99bc36e674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8a9a01-4907-4280-90cd-5a57a1d98683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170d2cf4-4b16-498c-9b8f-f7238c988e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "721a49d7-928f-45ee-ac7d-b968afbda22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf4c0ba-c608-48de-95ac-6ef40d36461d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9feb9c6-164d-4367-a97d-954bf6301807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1242693-a13b-4651-8717-99d0c9663175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608ea06e-2818-4303-9997-d17661efbb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70013875-58b8-4990-b100-d5fe61f0a757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e20f38-031b-4280-beeb-89dc203b2c35",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1960d6-ded8-4ce9-baad-3d1e217cae7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62d75cb-0200-4fdb-88c6-a076d2cfa2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb3ee3f-753d-4f23-b784-9fc524c16efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c347e44e-904d-4798-8414-e74d733c6882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145f0da2-7046-4077-8532-9af708650e4c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b3ec5c-fea1-47ea-abb3-1c735b8782ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09fd9f7-8a42-4e4e-a3a9-4230068ceee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc6dd68-dab2-4d01-8f5a-ea5d3f060223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80aed0bf-8b25-42ae-9488-b2e2853878a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38a4050-a210-4c7d-960d-4a6b9c30e8c8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c7baa0-2c24-4dfa-80ec-c4f5f9948740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a570895-58c6-4f78-9d98-060feb8c6c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82093ed6-2759-468c-ab3b-6e051cfc3fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d92b0be2-924f-40e0-9940-4d6928d43704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f3ed13-f61d-479b-b557-6dd1aa289312",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84c2029-f17e-4642-8270-871934f9003f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51e0bbd9-f07b-4cb2-885f-2300b69acc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75240b56-fc18-4f0d-b062-704cd25119b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5dbde3-9e48-48a7-a270-c68ca50b1b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28428ec-9471-4f6c-9318-a7210ad3d806",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7a5d10-0771-4142-821b-a4250ba290b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be00528e-c8f5-42b6-8acb-440c6185c65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ce5735-5e47-4630-992c-9c58db44029e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "636625cd-2afa-4813-81cf-2243876305d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324195f8-4699-4d66-b273-9bbcb4fe33d9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7604fa14-6463-4821-ab42-d079ed3ff862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6e0552-6583-4612-9d30-889137241781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d316992c-7d4f-4df7-bba9-904fc2c500b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df7f5ef6-9712-4017-8750-c00a2a4c1187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27babe97-5001-4515-8e45-a074911de56b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b9f61e-6448-48d4-ba69-c68055d4b3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa25fff-e783-4637-9a13-3f41b5b82ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac6e442-4d92-4cbe-8752-d89b56d170f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68f1c62e-e49c-47d3-b3ea-9d3867e89cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66dd4138-88df-4579-806b-12988195ad98",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07de4f5f-700f-4393-a6ff-c9d8a5607c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6327345-a382-4ea6-ad04-41d82a6d6952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1f5212-1894-4f92-9132-2c07e7224839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb61576-e57a-4ebb-99f8-d72a83352200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0010ea2-e09e-46b4-9196-778268d9e9c6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7deb55-347b-49cd-a6b4-5da647bcf768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e1a3fd-f16a-4360-be0d-c6593c73966e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c5be0e-80ef-484c-91f1-6c8215c63195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "82e470f3-eb75-47bf-b20e-e7cf18c90097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e22136-3fb2-4d04-a3e7-b8f3d52af8db",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ac4351-1a44-480a-bb46-fed50f001c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b9a3e5-6f86-4edd-8917-9992dec0fd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5307987-234b-4d04-98ae-de081bae3b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3684377-8dac-4189-849f-c0b7c03f5b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b559afac-e7e3-469e-acb9-a1c6ee4bc6ea",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56dd3e50-1ef0-4b98-99c2-8432c39c6fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c38d4f-1a41-47b1-a064-eb197652d06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21e3ae1-ceca-47ec-b371-a3a7f6b7381a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a25f0f8a-4ac4-4477-98e7-22319ba58cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b3ef10-3ce3-422f-a7a5-8174f8f0a920",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7628864d-1ec1-49ce-aaea-19d8b6556519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3c4716-1405-43fc-ac1c-c6898d8e1528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8afe5af-b8f2-41d6-b9cc-cd6ba05fb316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5202c724-9032-4184-b160-f87385345928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c81c3e4-4708-405a-86bd-cbd05755b269",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92198f65-53fe-43cb-b93d-440496faf3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c4ed1343-0d25-40e7-8361-ab7e86f2dd5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653b699f-751c-4a91-ac6f-45230522f775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ed52514-67f1-42d3-bfb3-9355ae950cbd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "61b9d906-7b95-42df-98f3-f89576fc1bd7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f941c896-debd-4e83-a847-77347dbac348",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1b2081-17fb-4c33-b052-c78b5377741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd3e4989-d11d-47bd-b44e-fc9e311c752c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5915b735-952e-4f04-ad6e-9a1d25b6c1ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57aff8ca-cc17-4668-876d-1e9ad3099042"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c49b8a9-826d-4523-b90a-3e887135e2fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6e5bfd0-7f09-408e-8212-eab0fde5fdce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "27c251fc-57fc-4df0-a988-43f9efb6fb5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "427f9ed5-ef38-44b1-99ee-a756fcd1c917"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3007b68-e46e-4613-845f-8f2333babe5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08f461f9-f372-4b37-926c-e981accfa3ea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a05c789e-73fc-4d97-9675-3d3d4c100bfe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "06558bd2-ffab-48df-bb5b-0ff9cd38bf53"
                }
              }
            ]
          },
          {
            "id": "ecb49f2c-2eb1-43e6-b7ea-0c1f81ee26b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b225152-3589-49f9-b24b-915fd37d22dc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0737497d-14a6-4a43-a7a7-e4dc7f13e7f8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd1b193-eb99-49ca-bfe0-b1951ce3ce7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d1076771-017e-4313-854f-023dbedd75a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c9877c-438f-4e4c-927a-786ede2505bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cedb1f1-c741-4c93-a53e-19b41abd3ff0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "49d2ff8a-67d3-4127-b709-20b2323a4498",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8718010a-c7aa-4b87-8e3c-65d3fa019073",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0b7146e-117a-42dd-8b1c-7982a7e9b3a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74d45e3f-fb01-4b5c-bac1-67f4e51dc806",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f0ff8d95-aa94-43d0-a818-648238444d2f"
                    }
                  }
                ]
              },
              {
                "id": "9772508c-7356-46ac-8dc4-45655cb8d32a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "108fa89b-dde6-45e8-8f50-4ba397ab6919",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c80c713-c50a-464a-aca8-e53b17274c6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02decc59-a951-4edc-8455-5b6d4ee56470",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "58bb42f5-0e57-44cc-b4d1-92e767e37c12"
                    }
                  }
                ]
              },
              {
                "id": "2a37f374-9162-4d54-bf53-5a89343162f5",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bc1b3a6-490a-410c-a409-6fa3cf892c32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "145c7478-25e6-4c42-b223-0360912a2455"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da1c0bca-37ab-4b83-b4f8-61ed48fc3ded",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df88520c-6730-4cd2-950e-b51c008471e3"
                    }
                  }
                ]
              },
              {
                "id": "a6ea9c7d-3126-4271-8f04-963fef1bf0d4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4ad6a96-1835-4a4e-b6b3-4b94e9eb19ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c73bdda-0b27-4f59-adba-086db5a8dc65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c79b0ce7-5b1f-40bb-890b-7281adcdc25c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8b188446-3de4-422c-ba34-ff6c6532076d"
                    }
                  }
                ]
              },
              {
                "id": "4a95c9fb-3058-4bcd-a55c-26a1921f3717",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39a185e1-f7f5-4473-a512-9bed6076471d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae95701a-f4b8-4a10-b6fd-7e5cc1f61175"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15e9c8b1-0461-47e7-92a9-81f76e3f246e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4f6246e2-474b-4493-a6bf-bc5e637b944e"
                    }
                  }
                ]
              },
              {
                "id": "ccbfd19f-a19a-448e-9c3c-77ecd8d2ab9c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28b85cc2-8347-492a-b470-cec59a5e064e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84c62963-2b60-4f90-944c-a928cd401aae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7129edf7-afb1-40bd-af57-7d1bc8a0a22e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e33206ad-0b06-448a-94b3-e2b7b6dac7da"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "21862fc2-2f9e-4832-8fc6-790204897677",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52d87756-3d32-4479-91f7-786a6345241b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fb465ecf-d87c-4ac3-bd46-351b28b6a14c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9d3cf99-eb77-4e7e-9676-b747d914488e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2156abe-dc15-4c67-83f8-f7e8f1f85f2a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c9ad82a0-4e4e-4065-85b5-8dca2e65b911"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "374dcac6-f6d4-4fa3-a8c4-bfb23d3cf847",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4b8b01e4-b6eb-42ff-8425-0dc0abfe52b9"
            }
          }
        ]
      },
      {
        "id": "ab23861a-36d3-4e3d-96e2-baf7420ba93d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "705ba133-9900-4c8c-88ac-e4866d7b9bf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65e6c9ec-cbd1-40c3-8dfc-08daab8e8659",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a12b1406-d5da-45a9-a74a-04ed2ad3395a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1a2817-3049-4125-b92c-39bdf10e65b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119d9665-30d8-4ad8-a5ac-847a19115737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a66aee8-7942-4117-bdc1-a6d2f66b54bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c04759a-a4e8-4890-b419-40527f4e966b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf47152-fead-4d6d-a6c8-cf16d1658065",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d0b567-4790-416e-80a3-d4bba47b695a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c546ab9-13e3-41b5-9549-c098301bb12a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ee582d-8487-4630-8d26-0eabd01e250b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33d311ce-24c8-49a1-8cc3-b8456bd13049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82da22fe-0898-4d1d-af41-26a199e3c57e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7607646c-9dc3-4fa4-a4a4-a87548e864e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c250e1-9c55-4d5d-8935-43b51b695f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df320b6-1bbf-4d4f-ab9c-faa914a8a250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6315bf6b-c860-4681-a5ed-564b6a49eef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60c1377-e33d-471c-bb0f-286617774f1b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2def6ac7-2401-4ade-8366-cbbbbde47a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da2f6c0-e77d-4ee7-bdb0-0f4b05637599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fe9464-04f1-424c-9c59-fb773d2dc115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a82d49f-3221-4b8f-8ff2-e8462dc468ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fe40c0-e23e-4e8f-997d-a81c3f8a858e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b681717-c54e-4b2a-90a9-aeb14cd7cc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a40ee2c6-5b07-494a-b7ff-9ac40c99c580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1c58a3-f3cd-460f-967e-69f08d7c0964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8a9369-876a-4137-bc5d-302492004dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d1cdda-ceaf-4a32-94bd-ef09bf53cccc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b8bc34-05b9-4d73-bda6-5fa5de96a7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2ff3f3-84d9-4ac3-9a7b-62b160500136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061df211-1a03-40a5-ad07-62dc52b2fe53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd8781b-f3ba-4d16-a659-994e4134ea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648c88b8-3fb6-45e1-a7ac-6f3319eba8ef",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3e8428-35fd-4a9d-aada-e1e82b24fb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c407aa-184c-4600-9cc3-eae2f992ae8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f551d3-898f-4eed-bd85-bca2f1aff158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd315c1-44e2-4dcc-8935-f6321c45ae31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fdfdc8-e08e-44bf-a444-9ecfc151582d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb27df5-0f1c-4395-8b00-7be2ccfeee74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1db763d-ac79-4276-8095-79e37226dcd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dac9225-0806-4baa-adf5-6bb7cdc9e7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2383b868-e4e1-41af-a7b8-2c43af30953b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1266e3-f441-4d5c-81e1-c084cfcf9e91",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5b1336-485b-4f7a-b737-7c8302995fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce39210-00e5-4536-826b-fa3bd336fb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839058cb-7819-44a2-a238-114e64f7f7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40baa809-353c-49a0-b7ef-71057de3273d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f258e8-e9bd-4e04-ad0e-ae6243d820fc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2c325d-079a-4ed2-990b-0fce2c5223f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab35eb83-080d-482e-9116-4ef268a7360f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7da6dad-2320-409d-8e36-286c02f6f5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a39af3f-3af9-4536-8af3-f1f46a5e1401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3001970-2797-4855-8cdf-25dcb8226ac3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b3f1d3-5586-4563-a9d4-218683abde29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceb5e773-fe7d-4fe0-a0ad-472b87e5ddbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1163c9-4b91-422f-adc9-9b557227ac82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef45a11-f17c-47b5-95c3-9af43f835db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e83528-59be-4294-a13d-24135132cb64",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70317a5-1d2a-414f-a65c-b76dc4b0c083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d7a5a6-6281-48d1-aa87-6798af19948a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735e6f75-7eeb-40d5-bca0-50101f45d12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8ec8ac-f857-4042-a89a-069bdaf49267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9d9d3f-41b7-4ade-bae4-640c25526317",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6cec76-c16a-48ed-8faf-e6710581c962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a631e2ec-1c53-4494-9c4e-acb3f853e955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d8ad40-b604-4783-ba62-a1cca3d0751b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a91488e-f023-4199-ba0f-b9abf6477a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af13329b-fcb8-4b19-85bb-f62440e449c2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797a9c0e-de27-4c6b-9d0a-a19d47a38967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6972c273-acbe-45a9-ac9f-ead5aeb02169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609638a0-ceef-448e-87f6-dcee11e15693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a907aaf2-6ee1-460e-af2a-760474c688f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708e1362-76c8-4263-b092-da4e949da4ce",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47002854-1180-4bf8-ad9e-4d6209c020b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46769416-6b7f-4e64-84fe-f9dc6dcfa164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f685a5-2862-4c6d-9a93-6e807dc0885d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e156ba-7ded-4a06-a763-56f5ded276c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af825b37-2eab-4d70-bbd4-6b9356bb5918",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fd593e-dacd-439d-b8b6-7d69aaccc2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83739de8-0724-4658-8543-508353965e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ed2298-89e1-426d-80d7-aaeaded84a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27b7522-7907-42a3-8c55-2de518171dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181e910f-a711-41d0-8dae-0b703c9a594d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee8d893-9272-4145-99b1-9a000d5c495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63087378-23b0-42b4-b2f9-22e40123bdd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa9c623-272e-4c75-afd0-0111bf6915e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "068d7c96-e16d-449d-be9a-d7f787c1adf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e7b806-358a-49ad-b7e4-40d2d8d53fac",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f35105e-dc8a-4e07-b7d5-3bd1a8fc7558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b5212c-e825-4240-9cab-ec100b954ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff286819-7d50-4b02-8d04-60efb6ea30ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ad759d-60ad-43eb-93bb-b55902d16f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976f8610-f7d8-4203-853c-9298f5fe47a1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442b42a6-e59d-4eb1-8144-a093fd24abb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9e6edea-3903-4123-a760-888be0e7728a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df06bb7-48c5-4574-b9a5-052067635d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d76af0-b2e7-4be5-805c-9af53f3da3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b23d39-2219-43e8-b0ad-63518d5b8073",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c3a9f0-d1c9-4689-a1e6-61453ade6d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e7e2bf-e4f7-4b08-8fc2-29a6df0618ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab678f55-3fa9-4e13-b2dd-a7f3e8a273c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6216b60b-b716-45b1-a446-75115d67c4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c08ed5c-ba37-4f9c-90f8-10c2e0bd7b4c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b7e039-79a7-48cf-92eb-fc3642f95145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520f3eb1-65c0-41be-9d6a-72a67648ca7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb0ebf7-ecbc-4ad9-8531-fbd744a8be23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e7c50b6-419b-46dd-af34-68e4c9a4fc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446ce52b-a5eb-41b7-a6ae-e111efc12812",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaf168e-94a6-4db0-bcc6-863b3830d803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67e30632-8783-4881-a2fc-d115d2e2ccb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e37343b-c248-4f52-8c78-4e44bfe1ad3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f81d3815-a8b2-4756-8b7b-cb3290937398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c841b8a-3104-43e5-90d7-3c01d98fa9f5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d92759-d939-4df8-99e4-dc81d3fac160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31c52cee-329b-45a4-99d4-4cee70e39678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf825920-81d0-4435-bffc-6cf25845c8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6506a34a-0cc8-4b6a-a495-7dc682434367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e84f5b-6b29-4038-8dfa-3093a2a0691a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81796eb7-264a-428b-aa99-8e7615784364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ebbcfe-aa2c-4b71-885d-cd5c13ee265d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a31a73-a952-4753-84b7-586141471afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0ec446-cdd0-4ade-b6b1-699cbdf9ee75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f61e66-0efe-49bb-b44f-a17568270488",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad8e4ca-68a4-4952-ad80-88205a4cb019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50ecd263-0af1-4d54-8274-d6a5276883d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a16701e-bbef-4cbb-bb46-0ad521328538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d5deee-8d76-4e41-91e5-9959326035a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed6499b-3f77-48cd-bdb3-331ed88509df",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09061dca-67a5-402e-a114-2a22efe29379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbaa19c-80b7-4b5b-a5f3-d47924956951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7981eb-0693-41fe-8b6f-6ab93a381169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "791666ab-5cde-44a2-8b1d-ec9911ec0db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3593a84-8b11-4700-ac25-edfc8811c0de",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb0dadf-ecec-4235-ac75-e74a5800d734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a89930a-5de0-4eb4-bef9-29d32f2a34ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e863cf0-ef5d-4083-aeb2-d1941f71b4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef7f94f-9a59-4380-a16d-a082b907cdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707f6770-76a0-4fb7-90ce-60cb1f5c944a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4e68ea-e8bc-4d6e-81e7-72bee6f9c376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009f6fcb-d76d-415b-8a1b-2b723456e593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2356915-0584-442c-892b-2a4ada3b5abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea5d83ef-d2fd-47d2-9f38-6d3d54659339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029ed585-63d6-49e8-b5ab-58df42f2ea4b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fc45e7-2f53-48fa-8452-14631260fcaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82d755b-4f0a-4ef6-860d-c76ff6389e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8819e853-3479-4ae9-8810-fa7e011fc629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfaa19e2-5e18-483e-9e17-f876ceacf089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c4b4ef-c39e-4336-b47c-b326d71fbeb8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581e34fb-90d4-41c5-8783-747871ce2322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2811f6-a787-41f1-9f99-efa70938d966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082addb6-785f-44a2-84c4-4e771dd37e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a128f3d-e1e5-4b47-914e-92b5f5e75e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2af47f-1b29-4047-bb1d-8741d15db9b7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979e6a7c-07e9-4713-807e-7b20f0dc661e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b92c4e09-95f8-46e5-8a67-0a0dd978aa07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b8c559-c54a-466f-80e5-3d927460c632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf441de3-6f6d-4d90-bc64-377e10f03395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1442ed07-b28c-4170-ae49-a6afa977728f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfceb7d-10bc-45dd-8412-70c15cd65754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910644e4-bb5d-409e-ac98-f40752ed71eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7969f22-2018-4c44-90dc-c49610cbcabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84e73976-3c1d-4322-a1c4-b48ef257bbc6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aefb4051-e191-42a3-8442-09c0dfd1818c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f6485f17-e7d1-482f-8d49-82b309af6e97",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dc6d23-a6fe-4da4-9662-3d560dacd490",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a23e7af3-abd5-41c6-903d-1af871218524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881cd5a8-b9e5-4cf1-bdd4-286bf9416422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9745ef2d-a5e6-4823-87f2-5568fb963e84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ea66f48-2f43-4917-88bf-4fac44cea986",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc3ac4d9-ab07-4be9-86fe-1bb3560b57ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65e16b0e-8bb6-4cb7-93ee-6ab5a1a1ac4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9f03079-e171-47da-a4df-582ce112d04b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bdc2ee6f-dfc0-441a-bb53-183b0113db8d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "310420cf-ff80-44ad-888a-e521fbc11ce2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57750578-81f6-432b-a6d5-5aa83191a694",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8a7908eb-e8e9-4f5d-846f-6d16e82b656a"
            }
          }
        ]
      },
      {
        "id": "32d4e608-ce18-48da-b3e0-0a0b7ab935f0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5a6a4135-a04a-4b70-83d2-d934b1a9d607",
            "name": "Negative Testing",
            "item": [
              {
                "id": "401b3b58-0ad2-4cba-9433-e8088d837e8f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad8d80e4-c730-4d07-8659-6a880fb86074",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31cd307a-46e1-40ce-8442-3be4392d87ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3f84b3-5fc5-4fef-a036-1562565d9148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad274dc7-d5d8-48f4-a086-0fc39c6df7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5f5688-dfbf-4a61-894b-98d1ff2a9e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea266a6-927e-458a-b6c5-59b93bf0f0b1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec8409e-ea65-4bc3-b8bb-1ddb92c89451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b09d508-f95e-48b1-8c7d-365608756e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33af439-dfe0-4f90-aebb-f892c81277cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5c07dc-8787-4ab7-a91a-e30cfff9d55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a25b3a-abf8-4e37-83c6-c56f7e4e4839",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11838e10-c9a0-4a00-af8a-a53465213865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12deb5f6-8b0b-4a86-8a77-f62f8d260143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e7f7f7-cf52-4b20-b229-8396534cea0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61a8e077-7fc0-493e-a334-c43c2c1ace22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2f4f15-daec-4e32-b7a5-30bac17a107a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283d65b9-8dda-46a7-a671-ac3b56775be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c0e2a9-8145-4fa1-8a2a-e970e84e1f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c542f08d-9fdc-484f-bb07-9f3c95f680a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98393ca1-a564-4c14-bda7-a5f2dd9637bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870465fd-4eb4-4551-9c32-0f61d327e260",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765b535e-6a56-4b61-8278-61b9d69a68fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26f01c1-1304-4875-b2b5-f9c4499f33af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2846d9f5-411b-4f41-b03e-91a4ac5b853e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9892896-39b2-4d6f-822c-e23ec2b118fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b773914-588f-47a8-ae1d-15aacd2dc8ca",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61729e75-d8bd-435b-a5ec-8af4e2f749b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d2fd77-faaa-4c61-a095-65525f7fddb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7f3b72-1748-4614-b74a-320775c2aa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38bcb890-6027-46c5-8a83-dba426f4c44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afce7da3-f75e-453e-a3c8-c04846e91d8c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "856e15d7-e266-4f88-ac31-2f61ed72c48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c065791c-c322-4099-93df-85c2702916ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3e1a59-f86e-43a0-a59e-197942ba38a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f6c715-70a0-465c-95c5-766cfbdd101a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf5d385-2c04-44c1-b984-cbc039d40ce9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0614cc03-a03f-45f4-bc24-5404f6258a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec590e17-d1d9-43ae-90ed-546c0d085d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc692e06-f480-4902-9de2-90ec356f247b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41775342-a7d8-4802-b2d3-a0fb6c899793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360cdc49-ca04-4b67-a065-d6b780cb7e16",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "282cbe48-017c-43dc-bb2b-92e788eccb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ad7e1f-0007-4c83-81f4-20227df0208d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed7215d-2e10-4551-9582-ce2a4c7fa862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04178c73-f7fc-4375-8dfa-b7389ecedb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6188b88-741a-4315-84cc-436d2d6d2043",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c76df5-fdd3-40c0-8d0d-729dda11a24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2cfa5af-7e09-4667-9b3e-2e79293c84cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578ce843-3b3c-4531-9f2e-4a26f9d6e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6427fa35-de04-43af-998b-0bb9f7c6d061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ce1a68-c785-4667-9a18-1d57afe7fda0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f7ba2b-248a-4242-ba2b-79017490371a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e80120e-32a1-4f72-af55-e6ac1cdee140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a47830-f4bf-49aa-a959-04521aa895c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c95bbdc9-f988-4b07-8f6b-10efe67b7896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d57027-6800-47a1-9aa2-54133ce3e7e4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557bdf7c-bb85-428a-905a-190ff9581e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701d1b71-749f-4ef6-9ab9-c7f88d009e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfb32ad-78bb-499f-b013-f67450070ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fdff5134-811d-4f22-a0ee-37dfbdb1ecdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8004e6ab-602e-415f-993a-c989ce2c0c97",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90201dce-32f2-41c9-a215-48e1124bea14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41048ef8-a5fc-483d-aa57-92af452a83d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc442ff4-9a31-46e1-be36-9730af6ac64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3b4fbb-c21a-416f-a644-982fd3bab6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83311804-017d-4d3c-b269-b0772e54039f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2eacdee-2621-4d05-986d-a6d29b9692b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5092af0c-c610-423e-9be2-f06f6b2f72c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e914ad-c228-43e3-8403-e7df32920363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce596d47-9a6b-4a77-bbcc-348dd48a429f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e891a8-55f4-43b9-9d82-898425d4f330",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "805fa4a4-465a-478c-87ac-d08545b56f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee7d250-83e0-4292-a001-b38188e2fabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b7b54c-0558-4549-a568-86ce1f5b05cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b613926-b04e-48db-bd56-d41db745f1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99299e00-ba80-4bc9-808f-6f302c563aa3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f032c9df-e91a-41c1-ab41-7eedb01b9335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ef2656-756c-41ac-8744-71be01d2087d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5215f19a-5e2e-491b-b7c3-f2fe1b6fbfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5fd86e-3d3a-4739-b053-1d44ed559c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dc2783-a083-4173-b738-2fdada157feb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c532937-cd72-403b-956d-ec62428813dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3aa6ea4-384c-4543-9a62-e1069cfe3a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c20bf0-e400-4042-994b-b2e17fa23a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "642d94b8-c5f9-4204-be58-39f5d3758693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9f307f-c7b3-411b-a9e9-77b47bd3d61e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f347e28e-5736-45b1-9cfb-bc62c361321d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d611869-a704-4f4f-b8d8-0b7503d25936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb60623-e18e-40f0-87dc-ab7e0baeb3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9fa6d2-b1ff-419b-bb21-15f50d66b1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d72582-07e6-4b64-aca4-f64ab8d708ea",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8fdad3-4dd1-4cfb-bb74-b9512adbb099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ec3ae2-e3bf-404f-956d-94acc442908a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddee21d-f0b1-4cad-a8f1-35008ca0e872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f8d1ed-dc6f-4ea8-87ff-d6e09c920b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0d90b3-67bc-4268-8707-44957ee75ad2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba614593-25bc-4883-8993-d8d6fe1d8c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9319db7-7fcf-412a-a043-5a13822e91be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef0e42c-487e-48f6-b845-4db56fc13133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29b3444f-0ef3-4157-b892-df69de54c47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a1150f-18d7-42ea-af53-a62099e231c8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3730da2-9b83-4aa2-b521-ae5e21afcb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede35297-fefd-4242-86b9-7328b5d02a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c209f0-5d39-44bf-b8ec-882783d17c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d59c287-3daf-4c4a-b211-8c05e739e858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dd76b7-cbca-4bd6-b2c0-80766cafca7d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53989904-d6b4-4667-9185-8744d4a13816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dbcb5f-9190-4e67-b7e7-6d2143b48123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6161c74-531e-4891-99df-e7b9dbccfee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5759d39e-b376-4448-bbeb-0f3ac0c43f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483c73ee-6b45-4ff0-ab13-97d44c633982",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84656f7a-a389-4778-9446-1320de290ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d694e29-74b6-477a-967f-04aadee4bbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2558ef-e0e0-430c-9ff9-728b262d605d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57c26903-6e34-401f-9af5-84eda3583c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10e8798-0f7c-44d0-b42d-ac81a2bf1f8c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0209920c-c296-4777-a71f-b62f5c632178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516a1ec5-157c-47c2-b736-24bcc38b30a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01527f10-5bfa-4ed8-be2b-eaec5a369d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb21c911-7019-4a21-a28a-dc39680ab658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26220459-0b8f-4f33-82a3-10c19dcb3d41",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5d3faa-1825-419a-97da-2b07f63983a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31019dc1-4b88-4d09-a8bb-5c7ea2c02516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38011e63-67ac-46e9-ba45-e02ad9a59edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5a567d-ff64-4985-9914-8df4d79bf812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd70c860-9760-4d77-87dd-b7cf683597ed",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c0b410-0d53-43a5-bb0e-40fad608d5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46461bc6-d467-414f-97d1-adcbca5458d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc839bf-4029-4c82-8b27-dc3c08878133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f1eb351-be51-4cc7-8557-c5949207d16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcc6573-a9d0-4667-8c6c-0d336a7125e5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badfc371-8184-41a6-b4b5-0de39344d085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "571ef565-343c-4a9a-9144-d66c17c4dcaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17edd6f4-b088-494d-b300-e48bf0524b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fadd727-ba95-4226-8803-9f013d2f10f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36b7010-87b8-4401-9861-762bc8c3a538",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e05394-fe1a-4fd1-be80-57c99aed2cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55204c9e-7d04-4b22-8164-478f97dc6b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913053c0-d253-4081-a1ec-e432d350c7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2bdce6-9f94-4609-bdcd-467d5a7c1525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978c610f-e4cc-4d24-9e88-f67c3ed42a70",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "160e8c22-4efd-41ec-8688-8bdcf2888291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a10b198-7c7a-43f8-bce1-d9bd0b13d229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4b5663-74ef-44b4-bcf1-ef399aa90464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e542224-fd10-417e-a072-964dfbda8a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b439b2-8184-41bd-93b1-a8b114fada7f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450ccc3a-3166-43ff-85b8-5bf1a60c6ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75efbd55-9ce8-4d28-960f-b3a8cf9ff850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417e90d8-6f3f-41b7-9725-1e9421396295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae18384b-e0a4-49c2-b3aa-36436f425909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f77ad65-35af-4f69-881a-4ecb83ac88db",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7ce37d-0f16-4620-8402-0d2a3d1ea17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d704dba1-f1a8-4080-8b3e-49dafb6aa3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9ed641-e0c9-479d-88ca-d8068ec1fc9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f60aadc4-4607-4f25-af42-6c11a64d0c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e5bd58-27ad-4d50-96df-910ef17d6f60",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efd2f2d-bcf8-4f8f-8c4f-ae9bd4c0ea40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "765db701-17ad-4668-b239-2db78b2da895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb3638c-6ad6-4983-bd72-8edaba26645e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c7b0e8-2c2b-4612-9f01-29979d403d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9519c1-c2c3-4bb9-bbba-656502449cec",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2663821-2cb5-4abc-9c55-51b0349b98bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da88b73-60e5-4d5d-9040-13107ba9b383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e9361e-b0ba-4d88-93ac-8200f3fc06f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68a50747-0c26-4043-b67f-6bfd6c890f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c08ecf-e653-4457-83e2-4a9563a8a4b2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d6d3d2e-c867-47dd-b793-1aeccee751b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472677cf-d376-4805-aca6-16b5c0e76c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a905486-59c3-4dbc-ae2f-a1ddead7e4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2fad465-b281-4321-a341-a474167d60de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c279443-3b2a-4709-9e29-e3cb733f6660",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230ee2f7-111f-4974-a27d-3109258f566b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b76c7a9-31d2-42e1-af75-0ba524593d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f236789-8e14-4681-8ffe-c4fb94c7d897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c7b2233-2978-41a6-bd7a-09d021713e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8957659d-8960-4eba-b5db-d97f57a33b4b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be19f3e3-be69-4517-8696-1acf416c73d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71042c3-40f5-453a-b138-4d16ba0c919e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d376fd56-06ab-4177-94a7-2fae0272036e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1a15065-35d4-4689-b8b0-bf2fcf8e2d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c872435-aa81-4373-9efe-43ae334351ac",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed85b1f3-383e-4646-bd62-5bb646252ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8a46ba-fa10-4f17-a804-e82ffa787c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea2b2ba-fa5d-4520-b661-3dc28a30456d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a97fd7-9224-46ab-bb40-ee42bb4bd221"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4eb680fc-ec86-478d-9938-c551a5ca6d33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f02b0f4-f92e-45c1-af3b-9bd95a1bab08",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cd2141-3ab0-48d5-aed6-ddc68ecec5bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cb02f313-c7de-4e74-88df-78d7ac98cea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef8db0e-0b3b-4bb7-b235-300c2a2d40d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c92c21b1-06c7-4ef4-a4ea-2ec9b4ea5712"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55e717d5-7079-4c33-a23a-f7b0db474ff9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "284590b7-6621-4637-a656-14f75977bad4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b9332aa-1bf3-456e-881d-b56000459182",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2798c227-adf9-43f0-b0c7-4b143e932281"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55b0bee0-cd9c-4f9b-a308-1a1307eb9543",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "633c58c1-fa04-46dc-abc9-8df8a42bf578"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95586ab2-b796-4254-b0d8-f9637b7fd3a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1572a2f-fb53-4921-8673-1a2a450e7bf3"
            }
          }
        ]
      },
      {
        "id": "17fb0c79-da75-4ba6-bc25-f81ab4fb0c22",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "00d21ae1-30a8-4a6b-9f42-9b076016cddc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b1d4d6f-fef1-4070-8156-bb35f74b95f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "519adab9-3cf9-449e-ac69-99ff27e64c89",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e95db2-ef3d-4749-8c5f-e247b8a60217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfef9d9c-2845-453e-b1e6-006f669b0c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40aec753-2b59-48c2-a018-af0650953d94",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c17d21-b4e1-4161-8104-188f975a92b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2dc9f90-e7e9-4b76-8e45-067ec89dd5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f5664e-6268-4d92-9af3-9867d516c042",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbaed7c-0a2d-4e37-a8c2-f35ba7242a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aac30115-7a3a-438f-b842-058f4b4decef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837ca1d7-ffca-45e6-bebd-4f303f7b4093",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaba37a-fc50-48e1-8a22-437d5c2a4131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669965cb-ef67-4bd7-ae49-e6c445177b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b840760-ece9-4ed0-a7b3-0c0a8eba23ea",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c2cfb0-b2a1-4dd5-a2e8-a21b42fbeefc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874b6a67-531a-4913-901f-6fa7545f7849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcb86a5-1c04-459d-97d4-51d0ff1163f5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8c779d-27b8-4230-93ba-f8ef54db5fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b2badd-b6d2-4190-9a74-85b325655e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540797a7-318d-4a9d-bef4-3af233b5cfd4",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ea572c-04b9-42e9-939f-22c9ca76dcb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce59cb7-523c-42bb-94c1-bc000503c098"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32624d3-d2b5-47bc-9da2-70f875cc3036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cecd24ba-1f08-4d9d-aad5-984fa90035ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd9cbee-e4a8-409e-b37d-63187a77aff5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9810722-1601-4050-8942-d1ea678bd633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c819f2d-4609-4f73-87b1-df5f6559c862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40009fbf-0d92-429d-96db-f34d21f1df2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9474052e-791f-4a21-91e0-d65e6f228cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72e463b-2483-4038-894a-f93fb74cec65",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea583a3-7b25-443e-9c2d-f04a0f265eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3765506-cde4-4b76-ac74-ac824c83c53f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f62785-33e6-4f95-b591-9da616342f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434f8a8d-12cc-4220-aee0-911a7cf9f22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95d60c5-0d6c-47f1-9c62-bc0ffea14c85",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b24dd6c-24d8-40ad-b0d4-0257f7a6e8c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f09e7d67-901f-4255-962c-14da152269ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "677d7596-a691-409a-b2f7-38ceac6e6180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22b754c-69ad-47ee-9a69-43bc8d7ade1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccba77b8-afb0-4e30-b527-083a47c3cd02",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a3cd8e-a2dc-430f-bc2f-8fbf097c54a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4250fa83-6608-4bb8-abfa-f6c3d4fc646f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0eeb4e-1d36-45c2-834e-bb13407419f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d040c269-ae3e-4992-8bae-65d451189f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19484764-b6a2-4486-aa41-97f96df81648",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab6908d-e153-4765-b5f0-57db506bc7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3827194-597f-43dd-ae6d-665e79d3c9c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01f17a7-06fd-4765-babf-f42f4c5c9653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c4cc53-416e-499c-845e-5ae812a9bf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b4f1b6-a288-410d-829a-7374cc2b0779",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5962b30f-2022-4e84-ba83-39212cd32268",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "503f616e-9a97-4ff4-904b-53a5fc6f597c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62dbd04-3f13-4f12-974c-a6c69edff4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5887203c-7376-4f22-ba08-9bca1f221aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af31680f-2f36-4df3-8c73-ec0b43b68c03",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbad087e-7d15-4981-b963-a07cd2b7ba15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4296b3ab-b679-45a7-952d-8c6e1fa3706b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ba2591-4d81-4d98-bc97-827a730050e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032793f3-9c21-47eb-b104-911d862125a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf110582-d1c8-490f-8d37-786f81c513bc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e71484-e91c-459a-a3ca-ce487bd5ed26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f875a1-74bf-4eb4-9aed-5f2af3b1f25d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac426c8-1f47-49fd-b594-252d156f3623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdaaa0d8-2e52-44e1-a9b1-f604e979c912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccb44a0-9f88-40d3-875f-144cf77e07a9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff9d382-96eb-40cc-aa7b-dd2c28fe43ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d2e5124-7ce4-416e-a15a-f26f5fe25c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9ee483-791f-4997-8b6d-c763df6069e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42c1b5c-41f3-4930-83cc-23ba717615c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52214fe-be73-4e9b-b8fc-af7bc2ac7348",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cc2bba-257b-4056-b018-bedb36bd0c0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcbd1e96-0606-4183-b615-a74e7acdee09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51072328-1fda-48aa-a63d-6bca0460e1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e4f079-ca1b-4e10-8b37-e6bf1adbf5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd0ed68-9884-40bd-aa43-f6a203b9592b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5579a2a-489b-4b64-98f0-ae10e89d95a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f029f239-2adb-4ca7-9f10-b8eafd7b50cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b82964-4153-416b-b252-b3d45c93b6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee45518-dabd-4ab3-b491-cab2407f15fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98540559-e954-42dd-bb52-71e85868e774",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949c6b6a-57f4-4713-b077-f90d75ccfef4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27e36e6-10ab-431f-b63a-24f928380438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5ff943-62be-45fa-9c8f-c57fc4369b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79df4ff3-e70f-449d-8eea-976ec0326a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b8624a-0fce-4889-974b-c007ee426af5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5f2254-00c5-483b-ace6-de25114342c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580ed9b2-912f-41bf-a505-7a9aad5bba39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1186e2-4b4c-40e7-8904-489d6135b5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734b36d7-00d9-4de1-84bb-21703b4ea719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7bb2d4-b90e-4fcd-aad3-e85c6a032cb8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63aa4ef-6222-4436-b0ce-b901b08384b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928501e8-9756-47b7-b8cb-e20529c34899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e39d38c-d34d-43af-9c2d-5c134c9e14a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e17db45-01e4-4801-a158-cb088dbbcd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25006a5e-ce30-46da-8423-7edef7f72242",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeb72da-8431-4e41-86cb-2e82d082a03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83347e97-29d5-4f7b-9cff-318fea4e435f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd39f04a-ebef-4052-a43b-cf107530de1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c373d3d-d503-4425-8ebc-79373d1c4917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06e4b83-a623-40ad-ae43-de7eab91a783",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912e7a3f-2876-4b0c-8f50-665f9fbb938c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06c5388-5914-4556-8979-1d94a5e91bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf23308-0429-49ae-9d46-b0de7cc11031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6449d1a-c03f-42d6-b73c-d47a0e6a9b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5fe2d5-abcb-4269-8294-f92175e3a577",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a35c88c-e108-4af4-a8ce-03257e6f4f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f10a37dc-d28f-4a3b-98f5-4437e713250e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe94e04-6556-4cda-92f8-d903013223e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7608b16a-47b3-4107-9b0f-e8173ce0a12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a9072a-8548-46be-9cb1-c64a94395e79",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c495d32-2387-473d-8ab4-f15b5574f8a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d201c3f7-100a-47f2-b453-01452bf9f2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbc120e-d4f1-49fb-b6be-634c6d3e85cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a75100-d49d-43ad-a1ef-4641fbe270db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281672aa-f68f-46f9-ae6d-6eee1a766302",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb097ebf-b077-44db-8fad-7028332e55e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36936eec-f5db-46b9-883d-30180b55d07a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71625550-ad58-43c2-b216-80fea31dfe63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75837a5c-faf4-48e5-8dae-e9c98f79e04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c444bd-b144-4cf1-a206-d4d1ba3f3b82",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fc9c47-8640-4143-acca-2bc04bd97072",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91633038-4250-445f-82bd-7332ebdddd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fc1bfa-5da9-49b2-95b6-c14fd98f0662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a0844c-114d-429a-a90d-eac123e6cbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3949d3-781d-46fd-8b2d-574c64e634fd",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44d8a2a-de99-44e8-8728-d862682f9c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece2671e-5510-4ad9-b9e5-ef019b8fc725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86311149-ed4e-4b10-9efc-ac50a909521a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd96e1a-1375-4cf4-b24f-3057eebcda3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3b4fc1-5f83-4e70-b8ba-d6a410b8a87d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e221e47-d318-4fb1-9a6b-05637da66735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "529720f5-33aa-42bc-9665-cf519c6c65df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221a09c7-b836-4d5e-b171-2d2e3d04e5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fc773c-5c2a-4e76-88b2-67464edb4d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193981da-f78c-4666-8ae4-fbf55dd78519",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0017e703-100d-48a5-847b-de2f2dfb67bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b91e46df-465c-4b95-91ce-68790f983780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e147bd3c-f1c4-4e68-a437-a76ed20c79c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18350e5c-205e-43c3-ada0-508895881864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e066175f-c36f-48bf-b7c3-72c42aeeab8b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7f61ef-505e-4c4e-b8ec-842f112eab8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36cc499b-2732-4c1d-b756-592d3341f192"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0582ab0e-e403-42d5-bc3e-7267996df4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc92551d-4714-4001-904b-d98c5f2eda79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f018bdde-9b9c-4784-94be-5fedc032b292",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543bd022-ace0-4d9a-bb0e-7b8f98360c2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c095e8d4-e5ea-4467-a2b1-692c16173334"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec09219-2b3e-4ead-8b1b-2cfe7ff8743f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4b19ce-ff36-445b-a340-6708c2449def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0795105-044f-4f73-8cff-21cb7a801ef6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95671661-ada1-405a-97d6-0f1f09fa8184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c5e568-7ff4-4ee3-9f2d-813f47029668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad69a877-3598-4ac6-8969-7ce4ad873c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24db69f0-ecb8-46a2-95f0-1b4968b7e262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52022d6f-1fd5-4ff6-86bb-edbf63932652",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8755e9fa-53eb-4576-8fd7-7b11f48ffa27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3003bddc-1938-4f54-b579-dbf026692bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3385fe57-e27d-49c2-9cb9-3362050d0517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34e77d8-c6ba-4179-8488-21560aad554c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f7c2c1-67f8-4dcd-890b-fede426b7323",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933678dc-278f-4056-b11e-a2b18a601b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f9df7d-74a2-45ae-9ad9-6e9642642fc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a568e7d6-3c9b-44fd-baa5-3396262671c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead72bd1-7308-473b-8386-bac273feecdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b05df74-0891-4bdc-b02f-3211a6d0d3ce",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9fe693-cb39-40be-9dba-ef50d198813e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7439505c-e2b0-4e8a-9ff4-f879a55b74fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f0e73a-ca0c-40bb-a939-d931f9b4d9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b77306c-0567-4ad3-942c-ddf430f316e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25329871-9e4b-4327-8281-ee48363caf64",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4d57be-a19e-4e98-abf0-cc4cd58e1658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9ee3901-38e4-4e17-b654-2308df9fe4e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca60d51-5722-4700-9b3a-fd885c90c83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69140a7b-bac8-486c-8847-4494458e83c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595f3213-63c4-43ad-8609-458fe144320c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2072e9f9-ceea-4e9e-a2fe-3131d5ec44d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a472316a-6462-4d62-b83d-4056ea3ce426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b511bdb5-1197-4b6f-aeab-9243161bc460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d89c7c9-a6bd-4e3f-9a29-b92d5271afe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635a1bb3-d524-4f00-9436-a7cb4ffa820d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae0fdd3-8031-4592-ae2f-5e10a8874256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9dcfb49-e990-4a4b-8859-51260d48c081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3ccf9e-09ee-4ad1-be22-2f9af4e2e9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad44321-9b05-439a-b42c-e5172d491a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f2b31f-7607-4e1b-ba57-87a59402b66b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2b23e9-2ea8-4273-a58b-e119779111a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5accbca1-e303-4b5d-8947-008fb912c5b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3015ed-ee05-48fe-9652-8292735a1134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71dc883-9664-432c-997b-59956458718e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1abc127-58d6-4892-b37f-50edd4d2baa3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f007ea-dbae-499a-8c89-04cecac0eb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b3aa62-964f-420f-bc4b-5e5616168140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1036d973-9be3-4525-8ecf-9a9259790061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65409b43-7b63-49d1-ab05-163acc44d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdab9908-5d66-41c2-a86f-422bbd44c013",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6455ee6-a4d0-44c2-ad6b-8c2769723097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259627ab-ae79-4bae-8012-10c9c1aed9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06ef8fd-d857-48d9-8897-74a7520d0c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881cbc11-9eac-40fc-9450-369ef3d5d058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d6d72e-542a-4e92-9fcb-9fb121535cab",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23735b4a-7f20-4d90-8eee-2f2ce4cb1284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9d2c4b-d2c5-4df0-bc77-cb95a74b0a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7213036-d56f-4db4-a1b5-fb05dc552ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c13a5a-0137-4ade-9d7a-b2a3d7f299ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4138390-3fff-4ece-8ca4-327d94dbab5f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07cc0cc-8f56-446a-b14d-e900cd7fecb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d27d5422-d6b6-418d-a50e-a1dc2fa5d3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d64aed0-1df0-443b-aec2-7e4c86f24078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f6f951-5f09-4551-a016-fe1d41f9cb0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431b42c0-4113-4e24-b168-a5c08a2155ca",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475f5f71-f0ec-4c05-ab10-ca1dcf058fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a4db73-5303-499d-944d-d3345e948d87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd668c7-2b13-4dcd-b3fb-d3c04168d600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d321ba2-717c-4875-9208-8e6fd9a64c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8e4844-e7d0-412f-ae1f-07d95432643a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef63e408-061b-4609-af22-1afd4b036ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183d662c-e9c1-4b30-a532-10c3f1ea0f29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb26b8a-011f-4044-a79e-625fcb78a43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1eb455b4-7902-4d71-b4fd-5cb4bfe00240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe22a67-fba6-4fea-be76-d2458fbfbd08",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff54aa02-2ae2-44a7-aec3-50f4fb294e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a49ab8b6-69aa-4463-bb4a-b7d8be536553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dedf33-e215-4a99-9c7d-a9227529bd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed6682e-ebea-47be-a146-a02432d93dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0942ab86-b7ec-40e3-af20-26ebc32ddd5d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a0d33a-6699-41fd-8fde-46bf15026cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f2b573-05f8-4c35-a1e4-dac377033df2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc4141d-0fa4-434f-bdf2-6ff395d84f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daecb332-77a3-4d99-a363-a154f7d53c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cacab84-19e6-406a-8e56-a18b1ce14f62",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55dbdce3-5e15-4af6-9163-3f371dd66110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52d4f9e-4f46-41b8-a02f-74d0ff4dfaa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc807be-6ad6-4e81-8576-b09f2484a73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadb9375-5de0-425b-b426-7a90d470914a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf1bcff-32b0-401f-bf5b-32c9944667d1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105aea3d-b426-4e12-8e25-6a07de69b55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc905fbd-fd18-4656-abf7-cfa393d24912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0726bc-3ed0-46b6-b288-03ea76a66c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62f70b5-749e-49c0-8ff2-b746b7fc379b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8c70f2-b209-45ed-abbf-489c1960aa9c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37911809-6899-42d8-8409-8628472da656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf12d74-865f-4206-9368-49928dbfad24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b6fadb-7e29-4429-b8b1-0aad99d01782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29372f95-b352-4bd4-81f8-5acdfb387e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6648d8b5-aa4c-423e-ab22-ff4b2261f751",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35832108-568d-4926-bdd3-7886cdff98b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11987278-0101-4e5a-b676-34fae7969a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cdf625-b14d-4427-9ffa-6fe941f19e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d185a9-e7a1-48b4-916c-bd3d42e78cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ec9a6c-820a-4aa8-ab93-72fe200a5110",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c717f5-370a-4815-ac7e-7e6bc2d17506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4e3ff68-379a-4513-987b-bbfda063856f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d202b635-5a4f-4093-a4a1-55f7484f5e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e045501-8b3d-4c94-9bc9-89e4d5cbb944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57837952-afc4-4b5e-9788-ffe4a0e54a98",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da435a0-ecf4-43fa-b585-506d7b9e41c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc6d0c1-5d84-4c8e-823b-dfe710147eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929f1b7a-6027-4a64-b6b7-c5f3683d170f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb08bf01-7800-4558-b0c9-3b3600adaa78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a3bc49-de67-476f-95b1-c0e71d6bb708",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17132745-532a-4aef-be85-22daca5be4a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ceb0e3-2e87-496b-8391-fe179a78861a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990d51f3-7dcb-4455-9612-0bc65bd5e1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80abad9-c17b-4ff7-91d1-b2535f752176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6a7253-478a-4640-8f0e-9f3965c24625",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ffa644-8df6-40e9-bb94-45237d8d941c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ceaa2fa-0fd9-42eb-925c-72edde00d3cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee57a26-6b06-411f-8398-52c8ea5bc26d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebdbf689-1c62-4149-ba53-f3db40fe797c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29225fdb-fbad-464b-8b0e-f8b6e162c742",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe9b562-d771-4ee8-b2d8-29214b067414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56fb18c0-69ad-4a94-aa69-709118388a2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a918ad3-e6ae-4fc6-9f8c-6dd00016710e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1536f5-83ec-45b7-86ae-ca519c45a4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14958d81-05e8-4e90-a180-6ed458194a1b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01980374-c9a5-48dc-9dfc-f7bb416f1a55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae6fb96-4079-4404-b657-ae2c169abc67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9609d0-1e0a-4924-952a-2205af367b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6407a3-02a8-426d-be89-059c7ea4afaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74002c42-a46b-4fe3-ab0e-106f345640e1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721f14ca-2edb-429b-a67a-d0f329a803a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b96beb-3a6a-41ed-a773-3e00dcb043ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaee205-38b7-49cb-ad71-0e71caf122a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef61049-1582-42ef-b5ca-49eb570ae3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d19140-cb67-476d-9c6d-e0a0eba625f1",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dcf0d4-3d4d-4aed-bcb8-f84fdbf1c7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75c7122-2d90-45ee-9258-e968d225a8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb3810e-f1d2-418c-8c68-0f24a869f447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40f41b3-1a7d-4699-97ca-073106b86cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326d1560-9d27-44fb-9b23-31957ca105b9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4987142-3a96-4e7a-bf35-7087324d2341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07c8c1d-dcab-4b58-9c5c-89a284680e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0819d77-a732-4d53-8ebd-802f741e981c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696a41b5-3040-4821-9bbf-7b2bb8cbb08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd410d04-f4cc-4431-a72e-1766f84bfb42",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216c1b0c-bc0d-4344-891f-430efb1e3eff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deff1051-370b-49bf-b3cb-b9f787053061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e486f8-71c6-4c5a-ad1f-c40d51c57ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e387bc28-ce2d-48df-a5d9-f125f4de5eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd4c0fd-f719-4eaa-853a-96e1ce7d4454",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a8b6fe-f4b4-4034-81aa-1d4fca4ba539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6149f4b8-5b2c-4cd8-ac63-d00046601ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975e934a-00c9-4305-9832-1af684b1ab42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d991e2-89eb-4e08-ab54-1e5f1862d8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e42023d-dd2b-42a5-80f6-e17ae64d3970",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20190751-3d3d-4343-a252-a23dfe2cd2c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "170688ad-a7a6-416a-9b63-97eb27c53729"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfa732e-ce8a-4395-ac8d-a5978c806e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f81798e7-d7c6-42a2-ab41-5360924757dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a915a4ab-1ae2-4186-a4f1-62d953cb90fa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11e4dee-6aa3-4429-bd13-72ed5baacfc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "082c9fa8-3175-436e-9191-09744d5d59f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6354a4e2-143a-4d70-a08b-36bddf4bd832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38179ffe-b8d1-4d14-8dd2-bb94a6b4df4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418b2b73-897f-4275-9053-20fff60b41e1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2db3a3-afcd-4b09-8218-5946840e7d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebc79ea4-5a47-4e7a-a065-b386bf410e9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b0e843-28be-4671-b1ae-fa7f3b2fe2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60bd73a-1fca-49b4-b8fc-c38c95302e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4369b37-56d3-4a96-9f88-eaa93ee9055c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234841be-e46a-49fb-8953-73cd946da3df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9fcbfd0-ce90-4c9d-885b-f22d60312648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c0760d-1664-4634-9233-77a13eb1442d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c560521-8bd1-4056-80c3-cb6daef2af46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcee73e-18fa-4fde-a16d-aafb20f02790",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67aca8a-a390-4394-aefa-739281ffdb4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f83061d-3b3e-40ea-b9e5-8fc232821cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3218fdba-99f8-4346-a112-ae48219519ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afde3833-c358-438e-9878-023a1847f539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bddbd8-bed0-4a28-85cf-9a799d1f63bd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4057159-92d6-4171-86c3-b5bb1058ca9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9dafaa4-55fa-498f-b5c0-cc6d8593df1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "288a9ac8-e7fe-4cf5-9ce6-732688fdf97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783e5bd0-f350-49c3-a761-65b68e2efd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b54f854-9e33-40cf-9c08-e096c0203aad",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf45d38-7c5a-45ee-b73a-9fdcdc556330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e3e3ad-127f-460f-bdf3-34965277404f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e4156a-a162-403e-ade8-2eb5e31ce40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5685294-2b29-4ba5-8b29-2233742cdfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b929cab-0730-4d30-8ef5-103c90f1870e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a24268-cd7a-4c98-9583-7d128cc564e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d677ff28-f4f0-49aa-8b3c-b7157473cb9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4ec66c-b207-45ef-8f82-4f2d93e8f8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7d6b19-2e26-4f34-8073-a358475bde47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283841e1-041d-433f-81cb-ef4402ced839",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8512b320-8877-4554-8ece-68fe26197cd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ea4ccf2-1f61-4480-9483-b6617820dc33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601f302e-26bc-4803-b7f6-89d8b801b1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6beec7bd-0f92-4fa0-8311-6c15d454d637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae84e70-39e2-4ddc-9566-ce9216f72a6c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2a41d1-fc51-4e88-9e5c-495e7c5e2ef0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6389d128-1f20-43fd-8760-56ba2728f8ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc23a791-64af-46b6-8ab2-4ef71cc6ec7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfee7837-80be-4c5f-8ea4-6dd4dfc01f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f068d510-20e7-4fee-843d-b5b3d8dedfe0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8204eef7-2b18-4713-9d70-a26313c0d0a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efa25894-8942-41f0-85e4-93e88e75b9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8ee6d9-6d4a-4fb8-8829-b4b604247508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f78a2b3-5eba-4fe2-82c9-08e4e71de511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f216a987-3b23-4a91-9c39-753f531a3621",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e551431e-8dff-497a-98e4-9f5b3e64d496",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f3e1e29-3cb8-4b92-ba74-345ca85331f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac13d58d-092d-4eb6-9852-0cc67843a6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7425f139-619b-4615-9977-fa81a8b09ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397ddc3a-c300-424c-a80b-76eee5be91b9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee6bf84-98a8-4a1d-8bb4-34484be31b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1481ec72-fe41-4cbd-8dd9-f38fb895e6b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b08a523-4348-444e-a0b5-1f5765ccfeaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e89ab25-83d4-4e47-a604-ccc648cb24c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fca328-2547-4780-8cc3-bf91676abbbf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544541dc-e976-4d63-9ddb-fe66d006d231",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "803c1c0b-c4aa-4cd3-ae01-c158f48414c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f50c6c0-1437-4a06-a2d3-5f267c51daf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9ac7b5-422f-4dec-9496-3fdee6656b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d78347-6d31-463f-a47d-6371013bf05f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af181f1-2dfc-43bc-8bb9-fa4ca58f8063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "466cbdb7-1686-4fcd-a373-9623e53fe2ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285cc0d0-b2d1-48f1-a5c6-d117919e0127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2951202e-3b67-42a3-b781-b7a292ca8092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e72990-5112-449e-83cf-c24328fea9ef",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c65fc8f-ac98-4d7a-8b5e-73d491b50963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bc54597-d51f-4508-84cc-83922d4e887d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa164b93-780a-47b3-b9b8-26d02b776e7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0b3551-29e8-4a2f-bd06-6e3f6e69601e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528814e2-10e8-4cfe-8eaa-18abddbd27a4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9f435e-f2f0-4fce-b14f-665cae895204",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27aedaf9-466f-4654-bba4-8251d43b8c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a220e8-3d79-4b50-af85-e8d174406938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3c99a5-e82d-43da-9219-c4612bf16d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cb0fe0-6607-487c-bd91-c1d87be71fe1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068be635-1021-469f-b91a-75f029fb419c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3aea97b5-d2cc-4817-8623-2bc6a22a45f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a80132c-60d9-457b-a3c1-011391448dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccc7d25-8181-470a-a0e2-6652bc7fb569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f07d1c9-f968-4052-ab31-81a887e24b13",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66b138e3-f9a8-4a48-996d-c6719dcf6521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9875195e-ffc8-4342-8daa-5ea536c8480d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba424fd-96e1-4e94-99d6-ddaff9c3aa74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7d9388-b6b4-478c-a52f-7c8a77626447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48eefc98-d25e-49cf-a5fb-5bd24997a428",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c1c29e-6bdc-412b-ac3e-a5d67132ad39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c866fc-00c6-4d0a-9b06-3251e508153f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "257de1e1-7967-4978-860e-eeee5d81248a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8ad759-b4b4-4774-84e6-1469080e9771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b85444-3e12-46bc-bd74-fd767a4051ec",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497da730-3265-48f5-b040-09cf839d8dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4011cc6e-b3c1-4242-9c01-f737bf2f7f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b89f46-e9df-421b-8e87-12f70305cd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8438c495-f877-453e-a906-9bcb497967ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca602424-65e9-4524-ad47-e88f4841be2a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b91c5bc-03f9-4778-bdf1-0c2b8d4622c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a87bd75f-90e7-402c-a29f-625105bc6a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff87e57d-c95c-40b2-89b7-d8560ea0dc4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9234b60-275c-4039-a526-98014dc97706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e74c4b-ed52-45d0-bee8-19f27aacbddc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50cf434-2730-488d-81d5-8e867ee97710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c89367a-9347-4e68-9f06-503dce39658e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3716c9-0db1-4590-85f0-17c7fff5eb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b9c9d45-f964-46fd-b2ff-d4f6f095dd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6df88f-f688-4a09-ac32-51b76d419ff1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee6c3e2-99e0-4570-8266-2b3a645f8e73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7c3eaf-5f7d-49cf-834b-4f1e57ac78bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f4934b-978f-4376-b2f1-30d5fa56fe68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7b9705-d61f-4af9-80be-1340e068ac6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433f9d62-3c54-4fd9-aadb-b6250435857a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc05ad9f-9ede-4e0c-8204-df562c301d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fde60ef-e9f5-4251-b3d0-253fa9a60d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbae0a4b-e521-4a23-b18e-8d52e7987571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b12ca6-57cb-42e8-8e2b-5cdb9da2c4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c2f2d1-3a5d-475d-8747-5f6371cfe4a6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402bd302-93ab-4d6a-b5e4-fe68b370f41f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97de8b70-4938-44a0-9c25-3a0fc0f8b979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ee925d-2400-44a1-a9e9-f77be05c573a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5daf8086-6c45-419b-9aec-10ff9b34345a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2ba6fa-9a21-4d9c-8e72-074ad333f3aa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16670ad-ecfb-4f18-9065-a0609ae478f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c285f00-c7b7-4626-b6b3-aaf690d90b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f760f356-6c71-4d0c-a4aa-fd92123f77e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6635dd5c-9714-473f-ac7c-a5d94314d3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b606f62-3413-483f-b502-b4c0d0fa1a17",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721136ca-8222-4117-b10f-5f05448a5429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb324fe-79cd-4317-915d-ddcfb6f7a6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29a15e6-6ca8-449e-95aa-0d08e721fd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3287ac6-efe1-42d8-808a-f0e99d5d8816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb992ad-2ba5-4def-99fa-551c03bbd70d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddfa2c27-d8ec-40a4-b64b-cdfad709bdf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a86f02-ce08-4117-9e33-3198644cc9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8164381-5674-4d33-b15e-79d634eff39f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a4a317-c606-4610-b0f0-b8a3a989b0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a90f30-92e7-4ec1-ba57-f8ab011bd8b3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edddcb51-db95-4e06-9e2c-6427a57e5470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20fc4995-6070-4a00-b096-138215cad551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9ff396-814b-49e3-874d-0b3679e1d996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1eaabd6-b9e2-46a5-80e9-7faf658aa16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda6e557-8baa-4269-8039-94f8887676a9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03597934-f087-4995-a7c2-e95053a832f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2896a7a0-dcaa-437b-960c-45f35ea26058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad6542b-24b7-4845-8e61-8c012852471e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5317e1-0de0-474e-a65d-6f195c5098d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d238447-222d-4263-8f4d-6582d5e7c1dd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5452907-1983-48c8-8778-ff2a46d04e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97fd3aa3-2a3b-475d-865d-ab64df9c4575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee94f133-b181-46b2-80e4-1196353ff1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfeaa04b-7c71-4ed5-85f9-11b5fc4a21af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f67c133-b7b3-44ec-b0d9-362033a45063",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81786219-9c19-41e2-b335-ef88ad63d656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d6c17d-d158-4bda-b9a4-e46e2370ea5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c59bf2d-34e5-4da8-adc3-853a1d7c6248",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2ce0a0-0c10-48b9-ae32-928a2fecd63a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbb03e0-077f-40de-949d-938565440c86",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf27c51-689c-46bd-a23a-71b70dfdc042",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5fc59ac-30c2-4f8c-8b86-533a4cf7221c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a0ec0c-deac-471a-854a-4fb03cfcf2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ad72741-7ce0-4c1e-8e52-17dd6a31df44"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f21349f3-27d2-48b2-9fab-358b0422875b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0375225d-8022-468d-aa31-0c4aad072884"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2f1f500-7ed4-44e0-bc52-a24fccb914ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ca76f89-aff0-4e9a-b88e-4e053fab1f04"
                    }
                  }
                ]
              },
              {
                "id": "fb796ee6-897c-4f70-a8bb-be513d0748ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6a45ede-5a4c-41e1-80e1-a3e596d82d86",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6de57f-114b-4f8c-9d95-3f57feef4a92",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a7957769-bfdc-42c3-aed2-c3f686e55d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6ca937-bc4d-43ce-a6c3-8bc2361bf184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2076016d-d330-4294-af4b-56445118b735"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "611b27f5-db00-4d8a-b56c-0bf4fb50a2ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50d74ca4-54e3-4f92-83b6-78ecab9655fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bab98c46-f057-4cff-b0d7-9d27859e2b25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46841aa1-285c-47b2-a5ee-b1c089253c69"
                    }
                  }
                ]
              },
              {
                "id": "c90f7f62-035d-4796-b6c1-d4375ccdc753",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "61c06bb3-87e2-40a8-b461-deaf0f87b4e0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f9bdf77-212d-4709-9484-3b12208beb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "37bd162f-2e42-45f7-8b51-d8511307f311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d1cfde-39c1-4771-bb7b-145894e52b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "597eb49d-298e-4406-82c0-f2e2c9694795"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f05af374-7855-4247-b0f7-7688f39826ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05a1f547-c282-495b-b5d7-567498365b10",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2f0848f-7912-47bf-97c0-28b901bb16e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7176c60a-8709-4c29-ba71-d774ab6ac534"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adcef788-7cc2-4668-b911-75cccf35c849",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5d40d18-86e5-45b6-bb9f-5dead4e2e7d1"
                    }
                  }
                ]
              },
              {
                "id": "abf0239c-3535-402c-8d28-c0f1172c7cd6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5f9d019-2888-4b1a-a708-75b80a6fb69c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "758f8beb-5ffd-41b9-975b-4303c88f101d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57c0c35d-b93b-41a1-9c24-3022297cad20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "998d1676-9bfc-4160-bceb-dda70e7e184e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cff4a5af-de78-487c-9a7b-78ddea71c3b2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6307e529-d030-43c3-a397-6e9baf82323c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97cb5715-b707-4b15-a734-ed9ee1a9c1e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f17d96c-278e-4991-a382-b11414c9a4d7"
            }
          }
        ]
      },
      {
        "id": "f967e5dc-64a7-4764-b9f2-43f8ebb93381",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "88915bff-ca86-4936-b1a6-2c4dfa756e49",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7aaa2dab-b970-4989-82d9-b7f4e79fe962",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b547831d-2bdb-41c3-8bd6-384b062f26a6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a242bc5c-c2ed-478f-a1d6-360daae88d67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "de7d33d6-fa7a-42bf-a72c-639db6398f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae92b0d-74c9-49e8-ab86-38bd74bc21a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8b7d106-de8f-4656-bc74-59bef8e15381"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af983f57-70f8-41c4-b308-b930503b8559",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "633efa40-fc6c-48ab-8ec7-7573f184adff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d7c5d01-3baa-4b99-9d84-840d92a4f59c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57f8d1b2-a5fe-4735-aa41-3be1d6441695"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "096f165f-19bb-473f-ad83-9a7d9ebc2c69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "99b6bc45-0179-45de-a3a2-c1ed0014858b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a7cef7c-9591-4f77-8321-c30648c4d55b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b1236c6-370c-451d-ac81-a2e64b8f0217"
            }
          }
        ]
      },
      {
        "id": "b0f84569-46c4-4c1e-8b2c-d19266ea64b3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bb1cd27c-ea54-4e2a-b936-c584415d78f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6eb15270-1dab-472b-810e-f3d94871e47c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27a3ef27-9c2e-4a19-a749-c24f85551613",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a25361-68da-4344-a21c-94e651096b94",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27565f8e-adb7-4179-91f3-351d0ed8e641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d93f794-c0c2-4545-9d64-c858bb30ec89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a8bf727-f7ed-4e73-be1a-5ac2a54d2417"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce495ca5-c3be-4ad4-8613-149262d18b49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4117abe1-777b-4527-96fb-98504b6cc036"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40097441-e711-4b68-90c8-6964843d6aae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5b43f4b-13cb-4b3c-a58f-3d6d1c987132"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00365ecd-89ca-427a-aaee-870712cedeca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d95b1880-c0cc-4894-94f5-ff106a5982f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e5d7b7e-0247-4636-b22c-80ba2a2c564b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53f4e650-3714-4333-b62e-f9dbf2bdebff"
            }
          }
        ]
      },
      {
        "id": "89382508-f735-4aae-9996-7d26a384a4d9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6d9afa19-9e29-423e-a969-8324c57c3ea1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebf8f91f-08f1-49f2-9ab2-00d651fc6e67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94423dd5-b030-436c-85e0-07c398d5f09b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de4cd38-173f-486a-a3bc-40c7addbfcd4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddc9400e-623d-4d0b-876e-d01232eb7387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf003a5-9b5e-4945-bfcb-515da1b7478d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72cb1414-6127-473a-8ee9-341578f4e9c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c86a8643-f611-46bc-996d-de6d48098ad2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22a59a12-8a3b-4a3e-b968-769a25e6b5b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79c2090f-7d18-4675-bdc8-af8e34ad2b10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fda8c37-01f5-4fc4-9690-bfa917d45398"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "067bd959-049f-460c-8cdb-3d6b589cf2b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e02c1f4f-77bb-4ef0-b287-af2820dc1e92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f84d538f-96eb-4909-bb4d-c2c8377825f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27d304fc-432e-4ecd-96b0-02379f3d1d00"
            }
          }
        ]
      },
      {
        "id": "4766ed56-b0ab-407f-8ca9-da7505be42a5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dacc14c5-45f7-4100-9c7a-4702ef584018",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49a812a6-78ea-47ae-8c9f-7062818f3a7c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "91766f9b-9d03-48cf-b082-1d28ff76e570",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0baa860d-6754-4d37-84f2-fdf1534c835c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45f87fb1-8dbd-4dff-9f53-52d2a7628de9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 118.11929824561406,
      "responseMin": 10,
      "responseMax": 3047,
      "responseSd": 348.6288628520917,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1705106160703,
      "completed": 1705106204088
    },
    "executions": [
      {
        "id": "8e11bb43-2b4a-4042-a080-583c96aba64c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a866f5e9-a96a-49a0-ba31-67c1660c3e50",
          "httpRequestId": "3f2ae7c3-6f93-4c86-909a-ac167f7553bb"
        },
        "item": {
          "id": "8e11bb43-2b4a-4042-a080-583c96aba64c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d4d65e6b-87c4-4636-b769-e0914cc4822d",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "c166cac3-06d4-491f-937b-57fe77d97d8b",
        "cursor": {
          "ref": "864d9486-090f-4964-a5f9-83d7231bbe62",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "afddf76c-974e-4e4a-b91e-5d7e117d7139"
        },
        "item": {
          "id": "c166cac3-06d4-491f-937b-57fe77d97d8b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f543ff28-8039-4d76-9f80-54ebfca77088",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "45c410a5-44a4-4623-bc78-751a139c7c4a",
        "cursor": {
          "ref": "b15f4c18-3db3-4441-8956-c7c1b8d96f8b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7b6e57bd-48a9-473e-9a30-184aad354fdc"
        },
        "item": {
          "id": "45c410a5-44a4-4623-bc78-751a139c7c4a",
          "name": "did_json"
        },
        "response": {
          "id": "7f12e2b4-8721-4cd6-95e0-c70209670f1f",
          "status": "OK",
          "code": 200,
          "responseTime": 614,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0b33ef-bf20-40f1-937b-4ca197ee88ea",
        "cursor": {
          "ref": "8814abea-1ca1-4844-8bfa-3dcb1727b8af",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d15d341-37e3-472b-b7d7-9187998848dd"
        },
        "item": {
          "id": "cf0b33ef-bf20-40f1-937b-4ca197ee88ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c8e0476-f33d-411e-b7ec-391e088a5168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0b33ef-bf20-40f1-937b-4ca197ee88ea",
        "cursor": {
          "ref": "8814abea-1ca1-4844-8bfa-3dcb1727b8af",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d15d341-37e3-472b-b7d7-9187998848dd"
        },
        "item": {
          "id": "cf0b33ef-bf20-40f1-937b-4ca197ee88ea",
          "name": "did:invalid"
        },
        "response": {
          "id": "2c8e0476-f33d-411e-b7ec-391e088a5168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f853d7-5981-4b93-87b2-18a7307c0ab5",
        "cursor": {
          "ref": "1f46792b-560b-4da0-b13d-ab55777e2719",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a06d659f-3f2f-405f-8166-f5271e6f6fa5"
        },
        "item": {
          "id": "35f853d7-5981-4b93-87b2-18a7307c0ab5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6fe381ed-f568-4da7-984c-411ab4faa989",
          "status": "Not Found",
          "code": 404,
          "responseTime": 119,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3c2b27-e604-4c5b-b71f-ef99abccb7fb",
        "cursor": {
          "ref": "8120ff77-8a0d-4365-9b7c-4da8ddb48149",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "24bd1858-3559-4c1d-801c-ca4003b141cd"
        },
        "item": {
          "id": "1e3c2b27-e604-4c5b-b71f-ef99abccb7fb",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e3107f03-e1dc-4cc0-a0cf-8da7b9523021",
          "status": "Not Found",
          "code": 404,
          "responseTime": 54,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aee16f4-789b-488b-8510-a4899222b249",
        "cursor": {
          "ref": "9b940d38-b513-4357-a2de-254ce665eaa1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "61871ff3-3560-41cb-8478-de732b381129"
        },
        "item": {
          "id": "1aee16f4-789b-488b-8510-a4899222b249",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ed67ae83-da8c-406e-8d0b-d1072291cb9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e35434-aa5e-43c1-a58b-c7010012b5c8",
        "cursor": {
          "ref": "ad089c3e-02bb-495c-bd23-c3f0ab3aae85",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "708284dd-e91d-43c0-8fc4-6b6abdd5127b"
        },
        "item": {
          "id": "b6e35434-aa5e-43c1-a58b-c7010012b5c8",
          "name": "identifiers"
        },
        "response": {
          "id": "5659c3a0-cbdf-4320-b8ea-6c358753dd47",
          "status": "OK",
          "code": 200,
          "responseTime": 305,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69534fda-09ae-4f54-bd8e-4e44e8cf043d",
        "cursor": {
          "ref": "788d441e-db43-4c7a-a8ca-381168f11706",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bab350f0-81e0-4e0d-9e49-dabecf74b1ec"
        },
        "item": {
          "id": "69534fda-09ae-4f54-bd8e-4e44e8cf043d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3fb97520-063a-4ed9-bd5d-a138f2e36b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bef2cd-a85e-4b0e-8d00-c4c7a6183db2",
        "cursor": {
          "ref": "55ff4955-1f7c-4ba8-8d5f-221a48567f9e",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ac8ad186-2edf-445b-bcab-5a24299c3c2b"
        },
        "item": {
          "id": "90bef2cd-a85e-4b0e-8d00-c4c7a6183db2",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "87c28732-bb65-43b0-9f80-7420c21c422a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb6cf0d-1299-4fd4-abfc-264a57b420dc",
        "cursor": {
          "ref": "cfe9c6cc-16c4-433b-8f4a-0262de9ae8ef",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6b049e62-f648-439c-af1f-be38ae1f183a"
        },
        "item": {
          "id": "8bb6cf0d-1299-4fd4-abfc-264a57b420dc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2bc20add-96f1-41b9-ad50-7da13a3cc856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab1e36d-73a1-4fad-961a-b1667d6a2bf2",
        "cursor": {
          "ref": "29cfe89f-7063-4d23-b113-bece2701c1fb",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1553134a-add2-45b5-9290-6dbffbfc0599"
        },
        "item": {
          "id": "4ab1e36d-73a1-4fad-961a-b1667d6a2bf2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "da5d1e68-5b86-4130-9aac-9ba68b9ff293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c368af4-7e7f-4241-8e38-28eb813f4774",
        "cursor": {
          "ref": "ef925eea-3e8c-4e5b-8213-7e40bfa98a0a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "118f8a3d-66bb-45a8-ac23-acafa8b1e970"
        },
        "item": {
          "id": "5c368af4-7e7f-4241-8e38-28eb813f4774",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "54ff744d-a092-4b32-b015-56ab9a0d2ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d8d40d-77a7-409c-8bb6-f399c373e987",
        "cursor": {
          "ref": "68b8058d-4b16-4fc2-81f6-0cdd2adca703",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2529b0d1-a5b0-4153-a5fb-6050facdacea"
        },
        "item": {
          "id": "95d8d40d-77a7-409c-8bb6-f399c373e987",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "925afdaf-186b-427e-bd5d-2ad586c60681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3de432-cb7b-47a6-87a3-14c6a54e18f7",
        "cursor": {
          "ref": "7b20d009-ff58-4501-bf7c-99db6e299341",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "52f8d32c-ed75-439c-93c6-b8d6fe7f0228"
        },
        "item": {
          "id": "0a3de432-cb7b-47a6-87a3-14c6a54e18f7",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9c99eb5e-5788-424b-8d4d-1fea64ad8c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817a0927-79cd-4d36-9a3c-c2d78d84fbb5",
        "cursor": {
          "ref": "73545104-04ca-448f-80d7-8cfcf8154136",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "52070937-6b6d-4f7b-83e6-223538f61b3c"
        },
        "item": {
          "id": "817a0927-79cd-4d36-9a3c-c2d78d84fbb5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "577fbcf4-fbe7-446e-a827-2ca9b581940a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e147982-3bbf-4ca0-b6f6-fceca18cb678",
        "cursor": {
          "ref": "aee78a8c-7506-4d98-840a-722988c7bede",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6e6465d4-5b89-473c-96c5-3abce258a32a"
        },
        "item": {
          "id": "5e147982-3bbf-4ca0-b6f6-fceca18cb678",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7f47f499-1fce-44c9-b706-497df312b614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0c87c9-5240-444e-8bd4-15df7bc5b8de",
        "cursor": {
          "ref": "91810cd9-6a0c-4beb-8589-846791a278a6",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bee30bd3-a604-449c-a1d9-469124e66cc6"
        },
        "item": {
          "id": "bd0c87c9-5240-444e-8bd4-15df7bc5b8de",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "58400156-01b6-4760-aedd-14d5a59d9d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d915629e-bc66-4059-8113-4960fcaea0a7",
        "cursor": {
          "ref": "ca316858-7576-4040-8ca1-2e400505b243",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f01793eb-79d6-4240-b0f2-77caa0d83221"
        },
        "item": {
          "id": "d915629e-bc66-4059-8113-4960fcaea0a7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "df745656-8651-4d20-b181-e2d22717f2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c062c6e-b78f-4d22-a7a6-4e58e1512d04",
        "cursor": {
          "ref": "c21f2d6b-019f-4c20-b3be-2a94f4bf5299",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "805ffe52-d336-4ba2-b017-443c0b10928f"
        },
        "item": {
          "id": "2c062c6e-b78f-4d22-a7a6-4e58e1512d04",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0b03283b-8e4c-4063-9f44-14f96b17b3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bed08ce-c064-4df8-8a87-71da1ebcc7e4",
        "cursor": {
          "ref": "63cd1157-7a97-443e-990b-3d291c3a937d",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "af1a9467-ec9a-4a13-8af5-fe876b5736d7"
        },
        "item": {
          "id": "5bed08ce-c064-4df8-8a87-71da1ebcc7e4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "677e373c-4d84-4e47-8f2e-7603ed9296ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396f5034-0405-4adc-b388-ba87eaf1e086",
        "cursor": {
          "ref": "e1ab8510-2f3f-4084-8817-f998eafe42d2",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c3fd961d-b9c8-49df-8122-44f94685a695"
        },
        "item": {
          "id": "396f5034-0405-4adc-b388-ba87eaf1e086",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0817985c-1599-4aeb-86d0-5cf34d633b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a1979b-2223-4092-820a-41ca660d9618",
        "cursor": {
          "ref": "9b1fe3e2-1e0d-494e-b528-2dc077dcc74a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "01e71b8a-08a5-4cdc-8fef-01de8416d42d"
        },
        "item": {
          "id": "60a1979b-2223-4092-820a-41ca660d9618",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d05e0458-d30b-46c2-aca3-5c18c4e3bef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24727b67-d7d7-4845-9e1b-8317b87eaaa0",
        "cursor": {
          "ref": "b60b59a1-5de4-4024-8df2-3a92cef28913",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b871f158-307c-491b-9fc5-417edc3d7631"
        },
        "item": {
          "id": "24727b67-d7d7-4845-9e1b-8317b87eaaa0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1e4fb1ee-0426-4375-bc33-6768d31e5f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9365c2-3ed4-4471-9a0a-5198c1b14347",
        "cursor": {
          "ref": "a52068ab-cf38-4f17-913c-6c17f5f66504",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ded41f39-19df-43d2-9db4-f99e0b317103"
        },
        "item": {
          "id": "4a9365c2-3ed4-4471-9a0a-5198c1b14347",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bd150877-d082-487b-a2c9-015264ba772e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb095596-8988-40f7-918c-758c3f6eb844",
        "cursor": {
          "ref": "2bddcac9-27d1-4bb3-8742-7f700021b0e7",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9721ff07-8873-4125-a2de-23f88876e92f"
        },
        "item": {
          "id": "eb095596-8988-40f7-918c-758c3f6eb844",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "88cc5503-6d97-4ac7-a63b-b41afedeb0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eb738d-7e23-4f85-aa7b-03963b6b6861",
        "cursor": {
          "ref": "d6b6122c-20a9-4d05-b408-99daafb7957e",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e583e60d-0b0d-4f51-b333-40e7ef73e97b"
        },
        "item": {
          "id": "62eb738d-7e23-4f85-aa7b-03963b6b6861",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4f1c795c-838f-4caa-b52c-050bf9662b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f48321d-c323-49e1-a643-8ae4f7e5a7a1",
        "cursor": {
          "ref": "ec2d6db3-dea2-4583-9994-e40f60121987",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a2fd9255-91aa-4023-ab63-d8e3d3600526"
        },
        "item": {
          "id": "7f48321d-c323-49e1-a643-8ae4f7e5a7a1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "15b9dbba-0b4d-40ac-afd1-931c4a0a6ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae539c60-e053-4a39-ba9e-19b64e683e16",
        "cursor": {
          "ref": "e0cb168d-c1c6-44e5-8c2e-357a89e56d6f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c83bfb92-7b21-404d-aea7-ce4e23fc06ad"
        },
        "item": {
          "id": "ae539c60-e053-4a39-ba9e-19b64e683e16",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2a4a3427-8ae5-4632-9d19-d57f19517f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62279aa7-52f2-488b-88e8-26299c0c901d",
        "cursor": {
          "ref": "7066ecb7-8a1f-4e9c-9415-9b653636fb6d",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f5dd810f-34b7-4b97-94a3-9428b36e20c8"
        },
        "item": {
          "id": "62279aa7-52f2-488b-88e8-26299c0c901d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8d38cf0b-62c7-41e2-9faf-8f700bb88a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a248b88-6ae1-4baf-b743-466841478dc0",
        "cursor": {
          "ref": "71316cef-84f4-4b88-99dd-dc83459635c4",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "641f90dc-53e2-4d35-b185-cc10c7773e00"
        },
        "item": {
          "id": "6a248b88-6ae1-4baf-b743-466841478dc0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6ab32664-7aa4-48b7-b186-3d55fb774c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a643f31-8653-4b42-890f-ebc779afe5c2",
        "cursor": {
          "ref": "0a57b2ab-ecdb-41a1-b81c-a282f1a542d8",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4d1bdf52-9ce5-40ce-bbd4-12ec6b3ed590"
        },
        "item": {
          "id": "2a643f31-8653-4b42-890f-ebc779afe5c2",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "df2a3c89-ba65-4845-bd9a-f9f0a4c2dd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4b6f82-4c7e-482e-84d2-ec3f0d9b0e94",
        "cursor": {
          "ref": "747becc1-caf5-4d07-8436-883e7b288fb7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5a582f51-d67e-491e-8697-3468e307f9ff"
        },
        "item": {
          "id": "ea4b6f82-4c7e-482e-84d2-ec3f0d9b0e94",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bc00a3f1-540b-460f-9594-4e39d01c89fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff25eaf-e4d2-4c4c-9d58-6b53c2f4550f",
        "cursor": {
          "ref": "c359e63f-6012-4202-9d71-26e5db48f7ce",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6a2b9609-4c31-4df4-8281-51030975aa5f"
        },
        "item": {
          "id": "dff25eaf-e4d2-4c4c-9d58-6b53c2f4550f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5c0a2070-e3b6-4bb2-9e77-6489e7e968cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35249fc2-f991-4d57-b478-924f07174860",
        "cursor": {
          "ref": "528184b2-e298-4db0-8fac-01345143c8e7",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "140eb074-f77f-471e-9a3d-71dee2d5ab1d"
        },
        "item": {
          "id": "35249fc2-f991-4d57-b478-924f07174860",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "62d9d1f7-3fd4-4342-92d8-239082ac4176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a6e266-69ae-4c05-b430-e805259193b3",
        "cursor": {
          "ref": "4cc866bd-5506-4f23-9a1d-6d48254218e7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "37402171-e01e-47f8-b38c-13e4532a3d6d"
        },
        "item": {
          "id": "99a6e266-69ae-4c05-b430-e805259193b3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "072495c4-29ba-499a-9a00-7d0ce460dd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed880dc-1e73-4c29-b6e9-7b1d4d30744a",
        "cursor": {
          "ref": "aaf32df4-c6cc-4f50-9529-fd39c66a87fe",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "44a24f8c-2353-4bdc-929d-50971aef2754"
        },
        "item": {
          "id": "1ed880dc-1e73-4c29-b6e9-7b1d4d30744a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "16b0d671-d3ff-431d-89cb-97c1d2addd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8b18d8-cf18-4662-8b41-247db7738b7f",
        "cursor": {
          "ref": "245f860f-9c70-4ef8-bf11-ab1c8a6c533c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5b5d2865-81f0-4a8a-8528-a228588eab29"
        },
        "item": {
          "id": "ad8b18d8-cf18-4662-8b41-247db7738b7f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "540778bf-c4ac-4944-8db8-f2c45ab324f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1029afd3-20a0-4048-ad54-9ee0440a0271",
        "cursor": {
          "ref": "442f1659-e543-4fd5-b9b3-0c148722a24c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "df19e625-ac28-436b-a92d-7d1e7a1b05db"
        },
        "item": {
          "id": "1029afd3-20a0-4048-ad54-9ee0440a0271",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4b4d33d6-97af-4d64-a3da-7748242072ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4b545d-4563-4b06-9ca9-bf2c81c065af",
        "cursor": {
          "ref": "2f774306-d019-43f7-941f-4f387c67a040",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9af99cbf-c736-45ce-9b38-9c737bddb3b2"
        },
        "item": {
          "id": "6c4b545d-4563-4b06-9ca9-bf2c81c065af",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3f61e704-e01e-4b8c-a2e5-889e90b2445f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9157f053-b995-4563-bf8e-5014a06da1e9",
        "cursor": {
          "ref": "5a55aa67-cee0-491a-b242-5657e2ccb524",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "68a5a792-924a-40e9-9b24-2bce9908323e"
        },
        "item": {
          "id": "9157f053-b995-4563-bf8e-5014a06da1e9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4fd6bd6f-8b95-4a61-813e-31653bddf0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db03025a-455c-4c64-beb0-bcab825c7889",
        "cursor": {
          "ref": "db4d55e0-b516-462a-9b23-73e0792ecf48",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f281623e-17fa-47a2-934a-888566274c04"
        },
        "item": {
          "id": "db03025a-455c-4c64-beb0-bcab825c7889",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "99735ac1-bb2c-44ac-a645-d06b62ca2906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4636e1a6-d296-43fb-9bdd-81bf913d05ec",
        "cursor": {
          "ref": "900ecaf0-9fec-4b6a-a32b-e2b6e93ad5cd",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8303ea70-3c23-4b23-b4d4-0fc504c65122"
        },
        "item": {
          "id": "4636e1a6-d296-43fb-9bdd-81bf913d05ec",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ba02d00f-4096-4d38-b900-0a0cc4d52a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209362b1-1bf9-47a6-8b2e-42d2db6b8f62",
        "cursor": {
          "ref": "1014e727-8e50-471c-9f5f-054ad4efc4be",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "21129508-69b9-4411-9d49-55cec70aa95e"
        },
        "item": {
          "id": "209362b1-1bf9-47a6-8b2e-42d2db6b8f62",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "66e21114-8371-46b7-866d-7b3ee79924c0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 330,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfeb1d44-f303-43aa-bb49-9d872aba2ec3",
        "cursor": {
          "ref": "67b9a930-e895-40eb-aaf7-d0f57dbaa62b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fbae14ad-a121-4a89-963e-7d023eaa1cbc"
        },
        "item": {
          "id": "bfeb1d44-f303-43aa-bb49-9d872aba2ec3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "521edebc-dba4-415c-ac16-4cd1c5996840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b55b4df-8fb3-4558-97aa-b83ad38f963b",
        "cursor": {
          "ref": "a360d5c2-ad32-43c1-9002-e2dbe25a270c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "440eb104-8f29-4672-98cd-e9029cd690a9"
        },
        "item": {
          "id": "4b55b4df-8fb3-4558-97aa-b83ad38f963b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "099a589c-b0a3-4bfd-8568-86df0fc8e4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9b06ee-db07-4dfd-800c-6c8cdb441dc6",
        "cursor": {
          "ref": "dbe25e8d-8b2f-43e2-bb58-143a5daa13b5",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "44246915-bde5-4461-85e9-d11ccbd57aff"
        },
        "item": {
          "id": "7e9b06ee-db07-4dfd-800c-6c8cdb441dc6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2dde6449-261b-4dce-a287-6747926430cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de611a90-6f3f-4480-9980-20720d3bc7bc",
        "cursor": {
          "ref": "80c6b660-50ae-4520-9842-58ea5e64cb20",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dcbc0e8e-601f-4bee-a1f4-0a9b20503d19"
        },
        "item": {
          "id": "de611a90-6f3f-4480-9980-20720d3bc7bc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a24c7afa-53c6-4586-811a-71b46e566c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77440be7-c641-428e-bf74-c0218a4bc427",
        "cursor": {
          "ref": "91139b8f-354d-48e9-899a-c1e6f23d1872",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e979832c-c547-4438-a140-05cf96d53944"
        },
        "item": {
          "id": "77440be7-c641-428e-bf74-c0218a4bc427",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ed7cf3bc-ea3d-45d0-9e34-f6da465b5b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6feca7-0c9c-475a-b8dc-feac54076cb4",
        "cursor": {
          "ref": "38dcd79c-a6c7-41d2-a061-16508f63bb31",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "16d1a264-9b42-4344-9867-af48109284ce"
        },
        "item": {
          "id": "5e6feca7-0c9c-475a-b8dc-feac54076cb4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ce213d31-fd02-4cb5-8194-a3a43019cc24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c981df-4fb4-4a11-a7f9-8f1317704c32",
        "cursor": {
          "ref": "b8f129f2-8e6c-4439-93a2-348220093963",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c1616494-071d-471b-b652-e8d977229c25"
        },
        "item": {
          "id": "20c981df-4fb4-4a11-a7f9-8f1317704c32",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "92474920-298f-430f-8cec-6983d64828af",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 329,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fa2539-3453-4e23-9087-614487e20986",
        "cursor": {
          "ref": "f2f4e060-ac32-42c4-8ac6-c52db5c1e558",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8fd34d21-687d-4baf-8cb6-607db2305529"
        },
        "item": {
          "id": "60fa2539-3453-4e23-9087-614487e20986",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1df42703-57d8-4937-bcd8-b3412343ecdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a159345c-edcf-4414-ad1d-99e47ad06777",
        "cursor": {
          "ref": "2b8ab907-c10d-49f8-9922-c9c68b7e4f02",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2f7034b6-b3d8-43f2-ba96-bb36ff31c396"
        },
        "item": {
          "id": "a159345c-edcf-4414-ad1d-99e47ad06777",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c6bc9b4d-abe9-4b00-9aba-6a8866754ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896a8222-dd42-43db-a871-7ba8b939ad83",
        "cursor": {
          "ref": "c5c763c2-3864-4a76-8bd9-bb9131454ea3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "addaf238-3ef2-47b6-aa62-70f5c88749a0"
        },
        "item": {
          "id": "896a8222-dd42-43db-a871-7ba8b939ad83",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2e2b1592-cb2e-4e79-844c-e6ed80e5764c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9f8043-b05a-4c9f-800f-5ec2cd81f709",
        "cursor": {
          "ref": "46a39beb-8ad7-47af-be32-602c4b6a6e79",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e4e327e7-46d9-4629-96fc-4b8143378113"
        },
        "item": {
          "id": "9b9f8043-b05a-4c9f-800f-5ec2cd81f709",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f0573882-17da-4f75-9bb1-b62ef764e1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a9cddf-937f-4070-9c10-c38d03377914",
        "cursor": {
          "ref": "cdbc4fc5-78f1-4a97-a77c-4a81f6f336ac",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "52788f23-e0cb-4c7c-ba5e-9fcf9541318c"
        },
        "item": {
          "id": "34a9cddf-937f-4070-9c10-c38d03377914",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "365e28c8-d337-453e-a788-99ba2f281469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b420a399-c41c-4752-bc31-2199f4295d54",
        "cursor": {
          "ref": "980e0cc6-4998-42f1-98e5-96647541a0d1",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "25e71f51-529a-4525-aa80-e8daaf691d26"
        },
        "item": {
          "id": "b420a399-c41c-4752-bc31-2199f4295d54",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "15ce9ae0-4da0-40f6-b017-c2d179c5b10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3794af-7eb6-49d8-b981-7958dae0dd62",
        "cursor": {
          "ref": "2a9e4783-a24b-4a18-b995-40b5d6d4d60a",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9942c265-2b83-4387-a06b-b5f94223550e"
        },
        "item": {
          "id": "7c3794af-7eb6-49d8-b981-7958dae0dd62",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0b4510f8-f382-481a-8545-80ac7bc391cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e6f223-0db6-4d3c-a463-061273030405",
        "cursor": {
          "ref": "29558230-6fd7-4f44-ad4d-b16e70d6dcef",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4ab7947d-0165-47c0-98ed-1be2381e40f1"
        },
        "item": {
          "id": "f3e6f223-0db6-4d3c-a463-061273030405",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4589a18b-5751-487f-a55d-0e6ef4ed3bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f9be12-bcc9-4530-ae87-b3a0f3d2e326",
        "cursor": {
          "ref": "1efb6b85-27a1-4ca2-acda-e6ea17689118",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "bb2f929d-199b-4079-be24-d33a597b8fc2"
        },
        "item": {
          "id": "e5f9be12-bcc9-4530-ae87-b3a0f3d2e326",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bb96eb67-86f4-49bf-8175-978bb435f2c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d9b9f2-8614-44b5-bb17-b61656c4eebc",
        "cursor": {
          "ref": "4b9d1f63-02d7-4a16-badf-d453b8de9ebd",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d07dae2a-b3e6-4aa2-9241-5807cc6ad7de"
        },
        "item": {
          "id": "f9d9b9f2-8614-44b5-bb17-b61656c4eebc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4e40d7c7-80e6-4af3-9aa0-b81b4ba2ce86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd6b0cf-bfda-49d7-a84b-67ebe9e3accb",
        "cursor": {
          "ref": "7f7d33b8-b7c6-4334-8134-1a1820e4ce27",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "96dd1259-4a9c-4e32-9ec6-2ddd259ab02b"
        },
        "item": {
          "id": "1cd6b0cf-bfda-49d7-a84b-67ebe9e3accb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "22a93715-0452-4a77-8fc3-1c526b7915f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07affbc6-635c-4373-b118-4a6ecbafe3d2",
        "cursor": {
          "ref": "5520cf25-dcf4-411e-8cd4-cc1e8f871560",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2924dbc0-5c07-4fd7-b147-ad0cff62079e"
        },
        "item": {
          "id": "07affbc6-635c-4373-b118-4a6ecbafe3d2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c8b8002e-694f-4684-8031-25533002fee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883f16e3-aecb-4536-99de-b09346e84d1a",
        "cursor": {
          "ref": "4ed44d47-f2a6-4ca8-b6f7-ad46608c3002",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5fc83154-f9f6-4d6b-8c02-d4a0a5c8aa47"
        },
        "item": {
          "id": "883f16e3-aecb-4536-99de-b09346e84d1a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "98baf7d6-9d23-44b2-84a5-8e5fb10b5371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296ecab1-8181-4d9c-994d-fd96db65f6cb",
        "cursor": {
          "ref": "b7c3a5b7-2e22-437f-87d0-5faea78398ce",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8cabdf56-755f-4d3e-8c1d-3a9908ff0b97"
        },
        "item": {
          "id": "296ecab1-8181-4d9c-994d-fd96db65f6cb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "15fc69fe-4ba9-40c4-9ba2-bc8146097c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027a2278-6088-4a6c-88ba-766c949ec7c4",
        "cursor": {
          "ref": "46223256-99ac-4104-b02e-62be928633fb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5bb10a45-4351-4ed1-836e-0294fab4f8a5"
        },
        "item": {
          "id": "027a2278-6088-4a6c-88ba-766c949ec7c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "47813cda-7db8-4543-a406-a054a61e897f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe34ba13-dc58-404a-9c12-02a64bc367c2",
        "cursor": {
          "ref": "ef2b5108-c035-4868-b1f4-434eeeb0aca6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ba4dc13c-d3a3-4358-885f-639cea059b0e"
        },
        "item": {
          "id": "fe34ba13-dc58-404a-9c12-02a64bc367c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8b693aa0-ac6c-4e4e-9e14-f788003fdf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952d113b-6426-41b2-92d3-3211ab72d46a",
        "cursor": {
          "ref": "32191653-6a49-46f8-84ae-32cb57525a05",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "15a8fe2c-f5cf-43a4-b8be-ac2b1c900f5f"
        },
        "item": {
          "id": "952d113b-6426-41b2-92d3-3211ab72d46a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5649515c-43b9-461b-8854-6bd0a38f8c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d9e9e9-fc30-4433-916d-f69222dfe1b8",
        "cursor": {
          "ref": "b2b4f055-baf2-4af1-a410-c8d67adbadd6",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "85fbbf55-270b-450c-9326-9bf6df1e9e92"
        },
        "item": {
          "id": "64d9e9e9-fc30-4433-916d-f69222dfe1b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f03e0ce9-5e59-4a3d-9d41-9c760ba6abcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a5b1af-2de2-41f9-b961-03e0aa609ed5",
        "cursor": {
          "ref": "56d53484-5b0b-467c-8fd4-ad6312cdda80",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f410b593-6f13-4f43-b54f-7e330a72ce02"
        },
        "item": {
          "id": "19a5b1af-2de2-41f9-b961-03e0aa609ed5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "46c5d90b-0ebc-4520-8221-7bd819c22835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492d3596-b98c-4884-9cff-2567f62a8872",
        "cursor": {
          "ref": "9293d882-2969-4f96-9b0c-a8225221020d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9224ecbd-52c0-4634-b507-65f7f33c9808"
        },
        "item": {
          "id": "492d3596-b98c-4884-9cff-2567f62a8872",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f3fd142f-60e4-4ac5-80a7-142bdcd48984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf237cfa-8e07-42ba-9669-7ce05a916227",
        "cursor": {
          "ref": "b11129c0-3cce-4dfb-aaab-806b0eb77642",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b47be624-3d84-477f-9653-a81d8d665cc4"
        },
        "item": {
          "id": "cf237cfa-8e07-42ba-9669-7ce05a916227",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d88466c5-8886-4aff-9e2e-59052b97aa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b60298b-8172-4156-b03f-7bd6ee818e31",
        "cursor": {
          "ref": "56014d83-d29e-4acf-bcf3-ecb47b3cb9fe",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "efb64fa2-e6c7-4047-aa1c-911ea0892011"
        },
        "item": {
          "id": "7b60298b-8172-4156-b03f-7bd6ee818e31",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "98233c5e-189c-4ca1-aa6b-4ef3a2385250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5ebbee-f73b-4188-adca-336f06a7b70d",
        "cursor": {
          "ref": "7d349e0d-ba67-467b-b7d4-37176cf643d9",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bce3fcf0-a12f-48de-b7f4-c2eb5e2eae6e"
        },
        "item": {
          "id": "8f5ebbee-f73b-4188-adca-336f06a7b70d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dbdf7bc4-614a-47a3-8d59-e6b757b0d26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8d5c44-f308-4f3b-b49b-7c623b6bac0f",
        "cursor": {
          "ref": "97150b23-1930-48a0-9fca-b8665285b680",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "721c08c9-c082-4a79-8dd3-4360b4bf9e22"
        },
        "item": {
          "id": "3f8d5c44-f308-4f3b-b49b-7c623b6bac0f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5ab0fb6a-89f2-45fe-b866-b4f5393ce44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6119a1-b00a-4fd6-8df1-b1d416e24bc2",
        "cursor": {
          "ref": "38c9188b-1276-4908-9624-3529893f8722",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5207944b-43d8-4dcf-bd35-16240a583ccc"
        },
        "item": {
          "id": "0e6119a1-b00a-4fd6-8df1-b1d416e24bc2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "7d0284f6-4984-44e6-a534-3662c228b877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a82eb5-ab58-4ded-9386-df068981f3ae",
        "cursor": {
          "ref": "29399871-50bd-4fed-ad20-a97eb23f0164",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a084b122-1967-4a8d-9b10-02b722feb7b3"
        },
        "item": {
          "id": "c0a82eb5-ab58-4ded-9386-df068981f3ae",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7f49b51f-8f8f-4d24-adb3-fe18ee3f88c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c3f5e9-7f01-41c3-a6b8-43c5a3d5b247",
        "cursor": {
          "ref": "65221fc1-c15e-4b02-a262-843cc03851e3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "05602d3c-9214-4c17-b8e5-64748d3fcb87"
        },
        "item": {
          "id": "f7c3f5e9-7f01-41c3-a6b8-43c5a3d5b247",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dac8699d-a547-41d3-91d2-3ea1789c684a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49506bb2-2270-4ff3-bbab-12a89656d2f7",
        "cursor": {
          "ref": "af483f3d-de7b-4a48-8fec-6b8883ae3031",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7e9571f3-7a40-44b0-b17f-1b0b9eefd7d6"
        },
        "item": {
          "id": "49506bb2-2270-4ff3-bbab-12a89656d2f7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0828f218-a079-42d9-87a4-543974e61950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04530bc0-1ee9-49e9-b719-6a42fc7fee4b",
        "cursor": {
          "ref": "765d6b06-1ec1-4f56-a8f0-fc4890dcbd2d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ba04f58c-9596-4265-bbd3-8d80e38ce0ad"
        },
        "item": {
          "id": "04530bc0-1ee9-49e9-b719-6a42fc7fee4b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7913ed48-d106-4df1-80d1-dc746567e721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef13d9e-a2ee-4a60-b7dc-291cb9dfde07",
        "cursor": {
          "ref": "468b7d02-073a-41c0-98e2-d318bd3f4476",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0d2671e6-be24-4ba6-b366-7c6831d30934"
        },
        "item": {
          "id": "1ef13d9e-a2ee-4a60-b7dc-291cb9dfde07",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5fbf1d64-dbca-41d3-a1c4-4bfb309c02cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9938aa30-b6b6-4bce-a858-164a5c247231",
        "cursor": {
          "ref": "130e741a-d707-4071-96cf-9815b1e2c4e0",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e993a7fb-2719-4315-8a7f-11733df4cfde"
        },
        "item": {
          "id": "9938aa30-b6b6-4bce-a858-164a5c247231",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "12df64dc-f1f1-4cc6-8c6c-467f6e98d020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264972b2-2af0-4717-be81-1123a12f194d",
        "cursor": {
          "ref": "e8bf2561-6660-4b1a-b398-f532bc769219",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fec8f479-c6f4-4c77-8c5a-8afa292dac15"
        },
        "item": {
          "id": "264972b2-2af0-4717-be81-1123a12f194d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3b43fbd7-993a-4cfb-af69-b08c2654af52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af780d87-199d-4ce9-a595-e363b3b16d31",
        "cursor": {
          "ref": "0d77137e-8363-43d3-9c9c-2332795843ce",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b82da5ad-104a-4464-986b-2173e047a47b"
        },
        "item": {
          "id": "af780d87-199d-4ce9-a595-e363b3b16d31",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b5710ea5-29a2-4368-9958-0104232fc817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f6c2a8-b2c3-4352-be25-39183510344b",
        "cursor": {
          "ref": "590a9627-ecc6-40d8-a017-f8859414af73",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "54b11756-4ed4-479e-88a7-d702d419f384"
        },
        "item": {
          "id": "27f6c2a8-b2c3-4352-be25-39183510344b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "06a9066d-ff02-4a2b-8c0b-757e2288ce24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f65f8049-0266-4985-8f66-e12248067810",
        "cursor": {
          "ref": "57344e56-d73e-4138-8a94-7bda14e20ac4",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cc1a66c3-655e-47ec-87dd-fe60f9479c39"
        },
        "item": {
          "id": "f65f8049-0266-4985-8f66-e12248067810",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "34dbbab4-25e7-4ea2-a845-0da22b2a4840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf4c0ba-c608-48de-95ac-6ef40d36461d",
        "cursor": {
          "ref": "7f5b2f64-fc15-458b-b037-29bfd8282601",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ada34831-05f2-4b78-8d08-b7c560ee3ec3"
        },
        "item": {
          "id": "4cf4c0ba-c608-48de-95ac-6ef40d36461d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d4f1fb6b-d4ae-422d-b134-e630b6be3cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e20f38-031b-4280-beeb-89dc203b2c35",
        "cursor": {
          "ref": "cde9bedf-a136-42fb-bfa1-a7934d48d038",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "da2529b9-e9bf-4755-adf4-8b073dce62f4"
        },
        "item": {
          "id": "46e20f38-031b-4280-beeb-89dc203b2c35",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f1aafb93-e9f8-4a86-9984-2e00af736925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145f0da2-7046-4077-8532-9af708650e4c",
        "cursor": {
          "ref": "0eb30c6a-dec2-45c8-8051-0484be838871",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cd6ff80f-53c8-4827-808e-235e4c13375f"
        },
        "item": {
          "id": "145f0da2-7046-4077-8532-9af708650e4c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ebf842d7-4e32-4ac2-8ff1-50fd79f02205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38a4050-a210-4c7d-960d-4a6b9c30e8c8",
        "cursor": {
          "ref": "5a95c132-808a-449a-9b49-fe6ed613cc40",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ca55f46b-fc2b-4869-9c1d-af112eb66cfb"
        },
        "item": {
          "id": "a38a4050-a210-4c7d-960d-4a6b9c30e8c8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c97537e4-c975-4e6f-beca-9b76aef49a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f3ed13-f61d-479b-b557-6dd1aa289312",
        "cursor": {
          "ref": "1e38c584-7661-4fd1-a5fb-31058ad62937",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9c30f661-d3ac-4597-9984-90552b9b7e11"
        },
        "item": {
          "id": "59f3ed13-f61d-479b-b557-6dd1aa289312",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c20feb3a-5e1f-4532-b0d8-1bc3a8c6b3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28428ec-9471-4f6c-9318-a7210ad3d806",
        "cursor": {
          "ref": "81c8938d-fac7-45a9-960e-fc2b26c2eae5",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c3c9b2fb-1b57-4bee-b444-37c790a15727"
        },
        "item": {
          "id": "c28428ec-9471-4f6c-9318-a7210ad3d806",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8c4162df-5071-4e6b-bb7a-c38d0782cfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324195f8-4699-4d66-b273-9bbcb4fe33d9",
        "cursor": {
          "ref": "89492d43-eacc-41a4-bff6-249ba89fdede",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "68d73fa8-0d21-40ee-b877-930260aaa00b"
        },
        "item": {
          "id": "324195f8-4699-4d66-b273-9bbcb4fe33d9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eb012cb5-6de7-4440-9804-68fe503cbe45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27babe97-5001-4515-8e45-a074911de56b",
        "cursor": {
          "ref": "d67a717e-3fff-4a8c-8af1-fd07a7c0e0ca",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "80022d6f-979f-4bcf-a1e6-df88f16d7d31"
        },
        "item": {
          "id": "27babe97-5001-4515-8e45-a074911de56b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6dfc5538-0229-4f1c-85f0-e62a847206fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dd4138-88df-4579-806b-12988195ad98",
        "cursor": {
          "ref": "8216a2e7-18dc-481d-abf4-4e67c8ce268c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "48b8d1f9-0be1-4ec3-9d3b-25e9ca31c241"
        },
        "item": {
          "id": "66dd4138-88df-4579-806b-12988195ad98",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4cbb9697-e814-4d5e-98a7-ac02905edaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0010ea2-e09e-46b4-9196-778268d9e9c6",
        "cursor": {
          "ref": "95a447f2-46d6-4510-ae43-8a91275fd480",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5105aa98-0af9-4b17-a925-45e7349a4ea0"
        },
        "item": {
          "id": "e0010ea2-e09e-46b4-9196-778268d9e9c6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "91e0e66f-fee1-45a6-abaa-f2121ce69596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e22136-3fb2-4d04-a3e7-b8f3d52af8db",
        "cursor": {
          "ref": "3cad250a-a1c9-4fed-af01-9dfe46d87aae",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "30f83136-9807-4cd1-b14e-97b9a81ee3f7"
        },
        "item": {
          "id": "b6e22136-3fb2-4d04-a3e7-b8f3d52af8db",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "93ccb35c-eca3-49dc-bfa5-c160cbc468e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b559afac-e7e3-469e-acb9-a1c6ee4bc6ea",
        "cursor": {
          "ref": "5803c469-d534-4ee3-967e-e61741597d2f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "84a1ae9e-7a9b-4e42-8c69-bc23974376e9"
        },
        "item": {
          "id": "b559afac-e7e3-469e-acb9-a1c6ee4bc6ea",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cd4de972-4b5d-4db5-87ae-1a4237b5f090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b3ef10-3ce3-422f-a7a5-8174f8f0a920",
        "cursor": {
          "ref": "17a5b632-6bbe-4681-8dbf-06d060b22dab",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f638b2d2-110a-47c9-b9c5-a75de8d5fdd8"
        },
        "item": {
          "id": "b2b3ef10-3ce3-422f-a7a5-8174f8f0a920",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "fdee3d80-fd18-40ad-a0ea-f2d98af9ae67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c81c3e4-4708-405a-86bd-cbd05755b269",
        "cursor": {
          "ref": "806e4512-fc5f-4dbe-a1a5-989f55ff169c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "85d5d7ea-d3e9-40c7-9b10-f33f4b3a3317"
        },
        "item": {
          "id": "2c81c3e4-4708-405a-86bd-cbd05755b269",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "76cb8a1e-f44f-4c02-aac2-91382261326a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f941c896-debd-4e83-a847-77347dbac348",
        "cursor": {
          "ref": "6c349e52-48b5-4f67-ba6a-858ed9c1780b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5b4d988f-6076-415e-819b-2627e76dd112"
        },
        "item": {
          "id": "f941c896-debd-4e83-a847-77347dbac348",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a2fdff24-4156-4e65-9402-fbdbd5b5b653",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0737497d-14a6-4a43-a7a7-e4dc7f13e7f8",
        "cursor": {
          "ref": "64fb61d6-7816-4ebb-8488-15f74013f340",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4be7e871-bf90-44b8-8e09-9e5aa88c22e3"
        },
        "item": {
          "id": "0737497d-14a6-4a43-a7a7-e4dc7f13e7f8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8156ddff-d745-43ef-819d-13f98f90d2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "49d2ff8a-67d3-4127-b709-20b2323a4498",
        "cursor": {
          "ref": "766bff4a-b67c-4022-87e9-cdc0f3a99402",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "99b55961-282b-43b9-bea5-92d6b0194ab8"
        },
        "item": {
          "id": "49d2ff8a-67d3-4127-b709-20b2323a4498",
          "name": "credentials_issue"
        },
        "response": {
          "id": "96792070-92b9-41a9-bfd9-bde64b97a066",
          "status": "Created",
          "code": 201,
          "responseTime": 3047,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9772508c-7356-46ac-8dc4-45655cb8d32a",
        "cursor": {
          "ref": "47f0e859-c72b-48fa-b73c-4944730c5594",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "04957217-fe17-4b0f-a5a2-12afb2b98764"
        },
        "item": {
          "id": "9772508c-7356-46ac-8dc4-45655cb8d32a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "04abc52f-9175-461e-b8a3-34aa55e841aa",
          "status": "Created",
          "code": 201,
          "responseTime": 2297,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a37f374-9162-4d54-bf53-5a89343162f5",
        "cursor": {
          "ref": "579e290d-c424-47d2-a411-9187e396fac1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "441219f0-e287-4e02-b0d0-5d111d5d3c0c"
        },
        "item": {
          "id": "2a37f374-9162-4d54-bf53-5a89343162f5",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "637ddf8f-b5ec-412a-9234-9ab6e58cb481",
          "status": "Created",
          "code": 201,
          "responseTime": 2226,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ea9c7d-3126-4271-8f04-963fef1bf0d4",
        "cursor": {
          "ref": "e9fb7dbf-75df-4d33-a42e-17e1fa1ca617",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "85bdec3d-6a60-4a3b-bc67-50064027f6e7"
        },
        "item": {
          "id": "a6ea9c7d-3126-4271-8f04-963fef1bf0d4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c60f1ff6-6b6d-49b8-9b7e-5287846cc30b",
          "status": "Created",
          "code": 201,
          "responseTime": 2420,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a95c9fb-3058-4bcd-a55c-26a1921f3717",
        "cursor": {
          "ref": "2e5dc9cc-faef-4d1c-9e2c-eda65ba9efa9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6b039d92-6651-45d8-ae0a-5940b64db4a7"
        },
        "item": {
          "id": "4a95c9fb-3058-4bcd-a55c-26a1921f3717",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "325733cc-4dd6-4b41-9f65-06e383980fa8",
          "status": "Created",
          "code": 201,
          "responseTime": 2272,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbfd19f-a19a-448e-9c3c-77ecd8d2ab9c",
        "cursor": {
          "ref": "083cc07e-257f-4955-abc0-57672015427b",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c17dc598-e230-4210-b5ef-09c5aaace9eb"
        },
        "item": {
          "id": "ccbfd19f-a19a-448e-9c3c-77ecd8d2ab9c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e9a56ca6-75d4-4b71-a700-1d38b8563cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a12b1406-d5da-45a9-a74a-04ed2ad3395a",
        "cursor": {
          "ref": "54a374b6-22a6-4dfe-bfaa-1ce8bb494ae6",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ba809637-40ac-479f-9e1f-658b61babee0"
        },
        "item": {
          "id": "a12b1406-d5da-45a9-a74a-04ed2ad3395a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7db6e0d3-7f3a-4457-a0bd-827c91192248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf47152-fead-4d6d-a6c8-cf16d1658065",
        "cursor": {
          "ref": "68b87766-dc23-4b7a-a802-15941a3ed16c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "83e93553-6d03-4ab7-bf4a-1365c5f15a21"
        },
        "item": {
          "id": "dcf47152-fead-4d6d-a6c8-cf16d1658065",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c9e54319-7a09-46d7-b411-3fff34d40ddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82da22fe-0898-4d1d-af41-26a199e3c57e",
        "cursor": {
          "ref": "ee7de85b-b442-4ee0-9bde-391738253310",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "adb9d50c-90f0-4b7c-9085-9dc3ba8d188c"
        },
        "item": {
          "id": "82da22fe-0898-4d1d-af41-26a199e3c57e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a0d4b6ee-cb14-4043-b9d5-5d1fbe45baa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60c1377-e33d-471c-bb0f-286617774f1b",
        "cursor": {
          "ref": "91bc49ce-0c45-4d9c-bea1-7395705d2e84",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c92e5476-8bcf-4c4e-9e77-c6f5791e9428"
        },
        "item": {
          "id": "b60c1377-e33d-471c-bb0f-286617774f1b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c8a87824-a3c6-41b1-bc3d-4f8f98139d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fe40c0-e23e-4e8f-997d-a81c3f8a858e",
        "cursor": {
          "ref": "a9abe4ad-a070-4901-9162-b5fab913a283",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3ef0cfdb-8159-49db-b7f5-dc22acf7c441"
        },
        "item": {
          "id": "12fe40c0-e23e-4e8f-997d-a81c3f8a858e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "44dc242f-fe85-44d9-825a-654e1f6d0038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d1cdda-ceaf-4a32-94bd-ef09bf53cccc",
        "cursor": {
          "ref": "481789c8-8956-4178-ba41-13c5a6e327e7",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e8f6f660-994a-4647-9c8b-d62aee61b958"
        },
        "item": {
          "id": "41d1cdda-ceaf-4a32-94bd-ef09bf53cccc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4bff689f-6d12-4347-9854-c120565907f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648c88b8-3fb6-45e1-a7ac-6f3319eba8ef",
        "cursor": {
          "ref": "86b8d69e-ce73-4e9d-959a-d3936525a1a4",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "efeb44d2-ee0a-4410-9508-8fab61214405"
        },
        "item": {
          "id": "648c88b8-3fb6-45e1-a7ac-6f3319eba8ef",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8529d394-900c-48c4-ac68-1c1191eca5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fdfdc8-e08e-44bf-a444-9ecfc151582d",
        "cursor": {
          "ref": "cb2a1b8f-d23c-4c4e-affa-eeb70ffa7aa9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9dd313dd-e153-4a1d-b412-eb4759aece88"
        },
        "item": {
          "id": "f7fdfdc8-e08e-44bf-a444-9ecfc151582d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "57e7e1de-ed44-4df1-b560-27bad3d35061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1266e3-f441-4d5c-81e1-c084cfcf9e91",
        "cursor": {
          "ref": "451c7950-3556-42fe-9a94-47fb98c297fd",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8b366a44-198f-4c32-ab90-d203fb6b7b55"
        },
        "item": {
          "id": "5a1266e3-f441-4d5c-81e1-c084cfcf9e91",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4404f26d-489f-4c75-bf58-e9d8347faa6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f258e8-e9bd-4e04-ad0e-ae6243d820fc",
        "cursor": {
          "ref": "a159e708-2c22-4ff9-acb2-7a69e9331699",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e3df607a-9efd-43ec-9413-4347981c7ed1"
        },
        "item": {
          "id": "f6f258e8-e9bd-4e04-ad0e-ae6243d820fc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5b6c9f6f-f390-4f92-af25-4ef1e1f13a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3001970-2797-4855-8cdf-25dcb8226ac3",
        "cursor": {
          "ref": "791bd215-9bae-488d-8a06-45c0017d27d2",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "253e550d-6a1c-4646-a979-a29af5c024d7"
        },
        "item": {
          "id": "d3001970-2797-4855-8cdf-25dcb8226ac3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce637ce0-aeeb-467e-8e37-51a67b183306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e83528-59be-4294-a13d-24135132cb64",
        "cursor": {
          "ref": "3d2aa8f4-7f8e-439c-b4f7-176a8c2c1523",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7e2384e4-2a25-4148-8c83-91866219c441"
        },
        "item": {
          "id": "10e83528-59be-4294-a13d-24135132cb64",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1ca46c6b-109d-473b-80b6-4e51c7e20a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9d9d3f-41b7-4ade-bae4-640c25526317",
        "cursor": {
          "ref": "43b246c6-8f60-40b9-ba8e-863db1bf0a88",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b522f738-e412-4e5a-a668-ec7be304fa41"
        },
        "item": {
          "id": "9d9d9d3f-41b7-4ade-bae4-640c25526317",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "99f20da6-f875-495e-902e-18ba35499e47",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 118,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af13329b-fcb8-4b19-85bb-f62440e449c2",
        "cursor": {
          "ref": "43c8021f-93c6-487c-9587-130565e58858",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b45044df-fe00-433e-a6b1-09e6724db136"
        },
        "item": {
          "id": "af13329b-fcb8-4b19-85bb-f62440e449c2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c5dd9917-c766-4314-bf29-a5d2e43d508b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708e1362-76c8-4263-b092-da4e949da4ce",
        "cursor": {
          "ref": "80fe92d1-cb58-4f16-833f-139f2fab0861",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "635320fb-cdb4-4f95-b3f6-5184c4814a15"
        },
        "item": {
          "id": "708e1362-76c8-4263-b092-da4e949da4ce",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c898f9d2-dfc5-4cd8-ad1b-fe90d758ad48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af825b37-2eab-4d70-bbd4-6b9356bb5918",
        "cursor": {
          "ref": "d38619bb-7e15-40c2-bf54-d844206a9c90",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "11b40914-1783-4b88-b8d1-fe29f5feef5f"
        },
        "item": {
          "id": "af825b37-2eab-4d70-bbd4-6b9356bb5918",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2d248750-56e7-480a-8df5-c1a188b7bc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181e910f-a711-41d0-8dae-0b703c9a594d",
        "cursor": {
          "ref": "6416cc20-adab-4733-b6ef-91085feef669",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "59458d46-2a15-4f94-9508-5dcaa8fcf229"
        },
        "item": {
          "id": "181e910f-a711-41d0-8dae-0b703c9a594d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "84379e28-1482-4cab-b478-f458a6359f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e7b806-358a-49ad-b7e4-40d2d8d53fac",
        "cursor": {
          "ref": "62a5038c-cfda-4c5b-8f09-2f3b0e515409",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "93029755-4ae5-48a7-9bc8-45e80466459f"
        },
        "item": {
          "id": "38e7b806-358a-49ad-b7e4-40d2d8d53fac",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fda8b1d0-147c-4281-afed-3dd76664d1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976f8610-f7d8-4203-853c-9298f5fe47a1",
        "cursor": {
          "ref": "a1fd59ca-9862-4d0f-b74e-80ea5320b475",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d60200fe-6b78-4077-87f2-84be03993a9d"
        },
        "item": {
          "id": "976f8610-f7d8-4203-853c-9298f5fe47a1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7748e681-88be-4f86-a87a-d015fede77e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b23d39-2219-43e8-b0ad-63518d5b8073",
        "cursor": {
          "ref": "deb5b34e-02ef-42f3-9c8e-f227814dc254",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "affd3d5b-3895-423b-a9fc-02ba96dfc577"
        },
        "item": {
          "id": "10b23d39-2219-43e8-b0ad-63518d5b8073",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "09a32909-bdb5-476b-a7a3-95d23ba3c3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c08ed5c-ba37-4f9c-90f8-10c2e0bd7b4c",
        "cursor": {
          "ref": "5e3c56ab-e30b-4b73-a415-146dc6125d9e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2c31b149-34a8-4141-a458-5f6703bba42b"
        },
        "item": {
          "id": "1c08ed5c-ba37-4f9c-90f8-10c2e0bd7b4c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "01c44b1d-c255-43af-bd27-0a7e4f091554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446ce52b-a5eb-41b7-a6ae-e111efc12812",
        "cursor": {
          "ref": "9031f572-f8c2-4ed4-bfb5-ff8b923a92bb",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ef3a53fb-bb43-4376-b106-242fa25369ab"
        },
        "item": {
          "id": "446ce52b-a5eb-41b7-a6ae-e111efc12812",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ba2441ac-996c-4e50-8915-8c0586a539c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c841b8a-3104-43e5-90d7-3c01d98fa9f5",
        "cursor": {
          "ref": "20d51d5a-fa80-493d-8614-5d19ba27782e",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8c0a5cc8-41bf-4b28-87e6-78fe58e91df9"
        },
        "item": {
          "id": "0c841b8a-3104-43e5-90d7-3c01d98fa9f5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c8747e0c-5c29-4994-8c79-8eeb70e57231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e84f5b-6b29-4038-8dfa-3093a2a0691a",
        "cursor": {
          "ref": "bc960ada-40ed-4dd0-a4e0-5a403d0c3b7b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8b50f5dc-257a-4240-96e5-0766f296606c"
        },
        "item": {
          "id": "18e84f5b-6b29-4038-8dfa-3093a2a0691a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "42c7f5c0-f968-4346-9cde-324e7a081ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f61e66-0efe-49bb-b44f-a17568270488",
        "cursor": {
          "ref": "0c528d52-8aac-4720-8b4e-476faa5ed9c7",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9fc63907-4973-4c3d-bc29-002c177d23d7"
        },
        "item": {
          "id": "17f61e66-0efe-49bb-b44f-a17568270488",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "df025484-0989-40fb-af88-a7f0c151f587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed6499b-3f77-48cd-bdb3-331ed88509df",
        "cursor": {
          "ref": "ce4334b8-d215-483a-b228-46c258215073",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "570e4849-4e2f-4da8-b467-85dc0a41c6e2"
        },
        "item": {
          "id": "6ed6499b-3f77-48cd-bdb3-331ed88509df",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "13506161-b00f-4f7d-b72a-bc5d99656a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3593a84-8b11-4700-ac25-edfc8811c0de",
        "cursor": {
          "ref": "783db9c8-e84d-4428-8f5e-d54aa7e14a61",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ebce8bdb-3d3f-46fe-be1b-6dbc6bb6f89e"
        },
        "item": {
          "id": "f3593a84-8b11-4700-ac25-edfc8811c0de",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0c4e911a-79ff-4074-96a8-22d8dfb29b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707f6770-76a0-4fb7-90ce-60cb1f5c944a",
        "cursor": {
          "ref": "0a282a8c-f6bc-4506-bd87-56e9bc35e4c8",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0c328f21-d5dd-48f2-ae49-f29971c5c119"
        },
        "item": {
          "id": "707f6770-76a0-4fb7-90ce-60cb1f5c944a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "92af8fa9-8b83-4940-bcac-255137c8d665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029ed585-63d6-49e8-b5ab-58df42f2ea4b",
        "cursor": {
          "ref": "71baa36e-6424-4fc8-90b9-071de0f6675b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "be6479c6-c5fd-45ee-8b31-2cd625695ba8"
        },
        "item": {
          "id": "029ed585-63d6-49e8-b5ab-58df42f2ea4b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "41c51c80-a4a5-4ba1-ba00-bede7fa7a07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c4b4ef-c39e-4336-b47c-b326d71fbeb8",
        "cursor": {
          "ref": "b8527a55-0bb0-4475-8d67-24f00c6b4f8b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "835357dc-947f-4ed8-a051-f68cae4573c4"
        },
        "item": {
          "id": "29c4b4ef-c39e-4336-b47c-b326d71fbeb8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ee8d7ade-ed9f-4ac9-9e58-a7139b59bf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2af47f-1b29-4047-bb1d-8741d15db9b7",
        "cursor": {
          "ref": "45b504fc-8a24-4b93-9f87-ddfc94a8cd91",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d149e78c-7011-4a07-8788-83f21f07159a"
        },
        "item": {
          "id": "3e2af47f-1b29-4047-bb1d-8741d15db9b7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "71356e79-6135-4905-8c7e-830b5bccbe63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1442ed07-b28c-4170-ae49-a6afa977728f",
        "cursor": {
          "ref": "100a14c5-423f-468d-ba50-c3730ef99947",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bbcb81ca-ae7b-49d3-9aaf-61b8f1d95939"
        },
        "item": {
          "id": "1442ed07-b28c-4170-ae49-a6afa977728f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "bf4068a8-ec33-4729-bc5c-14fa4ddfd73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6485f17-e7d1-482f-8d49-82b309af6e97",
        "cursor": {
          "ref": "aa1167f4-ec9b-41fc-8be3-dc23314fe8bd",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f9e72550-7f10-48b6-b251-e01ed6e95bb8"
        },
        "item": {
          "id": "f6485f17-e7d1-482f-8d49-82b309af6e97",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3e911a4c-9def-4bc4-a201-a9b60ef50c57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8d80e4-c730-4d07-8659-6a880fb86074",
        "cursor": {
          "ref": "9fe38cfc-1bf5-4cba-bbd0-25dce1252523",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "19059339-cc83-450b-b9d7-8a7d406625b8"
        },
        "item": {
          "id": "ad8d80e4-c730-4d07-8659-6a880fb86074",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b8d15a0e-c6b7-42d6-8b22-5f57600965f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea266a6-927e-458a-b6c5-59b93bf0f0b1",
        "cursor": {
          "ref": "4f5dbe3f-5846-4f11-a1f5-a1228cb155e2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "69714e70-7561-421d-8ecf-b1ee07d96fd5"
        },
        "item": {
          "id": "2ea266a6-927e-458a-b6c5-59b93bf0f0b1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "17d9bada-19f1-4015-b7a7-122686b298cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a25b3a-abf8-4e37-83c6-c56f7e4e4839",
        "cursor": {
          "ref": "63e73d6b-acf0-4850-85f9-0ca0d87c70fc",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e340ea9f-a263-456d-85d4-47bf9423e917"
        },
        "item": {
          "id": "64a25b3a-abf8-4e37-83c6-c56f7e4e4839",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da3cbe68-509d-40b8-a2f4-0b9ffae3c18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2f4f15-daec-4e32-b7a5-30bac17a107a",
        "cursor": {
          "ref": "1f0a2796-966d-45a1-9554-089baf3230f6",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "90cda3d6-26fe-48ec-b858-b1c68c398ace"
        },
        "item": {
          "id": "7d2f4f15-daec-4e32-b7a5-30bac17a107a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "5400d0b1-8e5c-4788-831a-ac33a42f8fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870465fd-4eb4-4551-9c32-0f61d327e260",
        "cursor": {
          "ref": "de98195a-42c4-47f5-9099-5b3aadbaf0ff",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f4110e5a-1046-485d-96ee-9594166723e9"
        },
        "item": {
          "id": "870465fd-4eb4-4551-9c32-0f61d327e260",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c4e85e43-4ac1-4199-9af9-ff07b4a4bfc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b773914-588f-47a8-ae1d-15aacd2dc8ca",
        "cursor": {
          "ref": "ea47e3d8-6cd6-40fa-9e6d-c90486a1bbc4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8af0a0b9-a3f3-4a43-b3cd-397b16feb93f"
        },
        "item": {
          "id": "0b773914-588f-47a8-ae1d-15aacd2dc8ca",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ba7e436a-25ac-4646-9d21-900249689f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afce7da3-f75e-453e-a3c8-c04846e91d8c",
        "cursor": {
          "ref": "1532957a-6d96-4dc6-b139-ebd76f21bb5b",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9e6bddcd-abbc-49ad-ba31-3931ac098479"
        },
        "item": {
          "id": "afce7da3-f75e-453e-a3c8-c04846e91d8c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f582e06a-94d3-4c55-8086-4e1273e240bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf5d385-2c04-44c1-b984-cbc039d40ce9",
        "cursor": {
          "ref": "9ba6490d-0e6e-4cad-9941-e60c5e86d6d9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c9568c75-3cbb-41d6-bc81-a41175f803ac"
        },
        "item": {
          "id": "7bf5d385-2c04-44c1-b984-cbc039d40ce9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "60e0b414-d4aa-41e0-979a-7e2bd501ab20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360cdc49-ca04-4b67-a065-d6b780cb7e16",
        "cursor": {
          "ref": "e7001d81-801f-484d-98b8-5b8c8ae9d3bc",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9d4d0710-7438-4e9f-a373-833fcaf2c713"
        },
        "item": {
          "id": "360cdc49-ca04-4b67-a065-d6b780cb7e16",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9e0dc492-918e-47ad-ad9b-210a47b8223c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6188b88-741a-4315-84cc-436d2d6d2043",
        "cursor": {
          "ref": "8b6bbc88-1754-43ef-a161-ed6f59821cf3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c1b82cdc-aa3d-4b5a-aaa3-44c0e5b4120a"
        },
        "item": {
          "id": "b6188b88-741a-4315-84cc-436d2d6d2043",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "991fd609-138c-45b0-8336-3821a9128f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ce1a68-c785-4667-9a18-1d57afe7fda0",
        "cursor": {
          "ref": "4d5a750a-9484-40a3-8b2b-b538d0fe0897",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "950fb5af-4397-4795-96b2-bff9c9bc346a"
        },
        "item": {
          "id": "c2ce1a68-c785-4667-9a18-1d57afe7fda0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3b6d7caf-e53a-48b3-b06e-8a5cb7928706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d57027-6800-47a1-9aa2-54133ce3e7e4",
        "cursor": {
          "ref": "4ea582ad-7358-45ba-957b-e33a3d5077a6",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a4a3203b-69ba-40dc-b79c-81b6adcef806"
        },
        "item": {
          "id": "f2d57027-6800-47a1-9aa2-54133ce3e7e4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "10983a06-04e5-48b2-868a-0f664987525f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8004e6ab-602e-415f-993a-c989ce2c0c97",
        "cursor": {
          "ref": "a8dc19e5-797d-45e3-af63-37891dae4b3e",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "890caa0d-3d8c-4306-8501-d85111cad035"
        },
        "item": {
          "id": "8004e6ab-602e-415f-993a-c989ce2c0c97",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "68cb1159-ffbb-4859-8b2c-8ea2220c87f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83311804-017d-4d3c-b269-b0772e54039f",
        "cursor": {
          "ref": "888a4d24-1aa6-4a6f-95d6-2d4ceafde020",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "608c08e8-4f33-47f1-8aae-bb8355b4a642"
        },
        "item": {
          "id": "83311804-017d-4d3c-b269-b0772e54039f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b74447b1-b293-4fd0-9359-14049e7e9732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e891a8-55f4-43b9-9d82-898425d4f330",
        "cursor": {
          "ref": "a2d55039-ff61-4a06-a4a2-b772346c11bb",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2f040168-6644-417e-af48-e5b13e358efd"
        },
        "item": {
          "id": "a5e891a8-55f4-43b9-9d82-898425d4f330",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "10950252-04c2-463f-82eb-b16e3acafaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99299e00-ba80-4bc9-808f-6f302c563aa3",
        "cursor": {
          "ref": "30d6d9d1-a51c-45e5-9058-87b0efed5def",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3cadfb29-d78d-4d78-b956-f400005249ab"
        },
        "item": {
          "id": "99299e00-ba80-4bc9-808f-6f302c563aa3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3d674a5e-a0d5-4b87-b6b8-52b1ae771379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dc2783-a083-4173-b738-2fdada157feb",
        "cursor": {
          "ref": "fd801a64-7b66-431e-99f6-0d8dd6a614d9",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8eefdd9e-e96a-40cc-b032-dfd865aebfa3"
        },
        "item": {
          "id": "38dc2783-a083-4173-b738-2fdada157feb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cfe0238f-123f-406c-9d95-33eb548a20ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9f307f-c7b3-411b-a9e9-77b47bd3d61e",
        "cursor": {
          "ref": "dc9250ab-e519-4c0a-994f-30512e951cc1",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3a5276da-3b8a-41ef-b222-cf288c8c6f93"
        },
        "item": {
          "id": "fa9f307f-c7b3-411b-a9e9-77b47bd3d61e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ee64db93-72ad-4816-9598-c671269b77bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d72582-07e6-4b64-aca4-f64ab8d708ea",
        "cursor": {
          "ref": "338e9f6b-a543-4d46-914f-ab986d3f739f",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8ff51077-c0e9-45b8-9692-3b956eb1adb1"
        },
        "item": {
          "id": "35d72582-07e6-4b64-aca4-f64ab8d708ea",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "de44cff3-5a68-4d6f-af9a-013620f8d3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0d90b3-67bc-4268-8707-44957ee75ad2",
        "cursor": {
          "ref": "ffad4087-631d-458e-9eb3-24e0a78952a8",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a92248ae-4048-40f2-b114-f28a1bb5a824"
        },
        "item": {
          "id": "3d0d90b3-67bc-4268-8707-44957ee75ad2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "355b0e9c-fd48-48fe-832e-6b2807cb4ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a1150f-18d7-42ea-af53-a62099e231c8",
        "cursor": {
          "ref": "743cee74-017f-4b86-bed4-0c7b2e25096f",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "41d5f50e-c68d-4348-b552-9548b6809807"
        },
        "item": {
          "id": "20a1150f-18d7-42ea-af53-a62099e231c8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2a869bdc-80d9-4976-9074-397dc435a9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dd76b7-cbca-4bd6-b2c0-80766cafca7d",
        "cursor": {
          "ref": "b066a7c5-4722-465f-a24a-1b711a681869",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "981927f0-a162-40e8-a3c9-beab7086fcd5"
        },
        "item": {
          "id": "75dd76b7-cbca-4bd6-b2c0-80766cafca7d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5df83a80-5316-4df0-95da-5459db20cd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483c73ee-6b45-4ff0-ab13-97d44c633982",
        "cursor": {
          "ref": "b24d2aa0-9f2a-49cc-b35d-9c0b12b1fc93",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "31ce38be-c95d-4819-8574-640df0d1681d"
        },
        "item": {
          "id": "483c73ee-6b45-4ff0-ab13-97d44c633982",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b657d8d2-2637-4198-90ff-640f9cac4b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10e8798-0f7c-44d0-b42d-ac81a2bf1f8c",
        "cursor": {
          "ref": "302f9bd2-c121-4195-af4a-664883a9c72a",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "49b2b970-c4f2-48f9-9e23-3af752be09e0"
        },
        "item": {
          "id": "a10e8798-0f7c-44d0-b42d-ac81a2bf1f8c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0b16b633-f525-4913-9648-271233e54f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26220459-0b8f-4f33-82a3-10c19dcb3d41",
        "cursor": {
          "ref": "3b09e20a-6a82-4bfd-9bed-2234efd2be7c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "024a1c49-a371-44c3-a807-dc7407540a4e"
        },
        "item": {
          "id": "26220459-0b8f-4f33-82a3-10c19dcb3d41",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9b1ddb32-156c-4722-ab44-82f75f0b298a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd70c860-9760-4d77-87dd-b7cf683597ed",
        "cursor": {
          "ref": "5795ccc8-685b-4ce3-971c-91fcbe13270e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2bc0b31c-c421-4eb4-a335-0fdb78b29f8b"
        },
        "item": {
          "id": "bd70c860-9760-4d77-87dd-b7cf683597ed",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "db70253f-15bb-4129-ac2b-7b44523e3d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcc6573-a9d0-4667-8c6c-0d336a7125e5",
        "cursor": {
          "ref": "11849a0f-9057-4adb-99fa-5abd56b809f1",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c5cd9376-6e12-4470-9f4d-d968d6173e1a"
        },
        "item": {
          "id": "0bcc6573-a9d0-4667-8c6c-0d336a7125e5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f45445a2-2f53-465d-81b4-5382a3b09f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36b7010-87b8-4401-9861-762bc8c3a538",
        "cursor": {
          "ref": "51362a07-3c84-4bc0-a2f9-64f54d6fe7b5",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1c9ead5b-b5eb-4420-980d-dab3d8682766"
        },
        "item": {
          "id": "d36b7010-87b8-4401-9861-762bc8c3a538",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d6fec6cd-26a7-4d70-a486-57f637e1516c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978c610f-e4cc-4d24-9e88-f67c3ed42a70",
        "cursor": {
          "ref": "0ec20f7b-497d-4fdd-954e-e11eb0afe2ad",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9e32074a-4b42-4efd-96b2-da98829b6da0"
        },
        "item": {
          "id": "978c610f-e4cc-4d24-9e88-f67c3ed42a70",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f2ae94aa-ae5a-4253-9523-e7dd02d77b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b439b2-8184-41bd-93b1-a8b114fada7f",
        "cursor": {
          "ref": "6fbb2545-d64e-4fcc-86dc-a0cdfd0df3c3",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "87cf3676-d325-44b0-b07d-94891b34f619"
        },
        "item": {
          "id": "d1b439b2-8184-41bd-93b1-a8b114fada7f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7298bf56-3325-43ed-a2d2-aeac64308949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f77ad65-35af-4f69-881a-4ecb83ac88db",
        "cursor": {
          "ref": "cd78a4c6-29e0-423f-bc8c-45dcc4440a20",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "03b83d36-2b21-4bee-ac28-0c6a2b64ec1c"
        },
        "item": {
          "id": "7f77ad65-35af-4f69-881a-4ecb83ac88db",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9117d89c-1659-4d7f-929a-32d302dcf236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e5bd58-27ad-4d50-96df-910ef17d6f60",
        "cursor": {
          "ref": "b517a444-101f-448f-adf7-2b4319d647d8",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4351dd53-d167-4211-9797-2c637bd653d0"
        },
        "item": {
          "id": "15e5bd58-27ad-4d50-96df-910ef17d6f60",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e81f2be8-1bc6-423e-9ef1-3c19f43c0103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9519c1-c2c3-4bb9-bbba-656502449cec",
        "cursor": {
          "ref": "4f83592f-9a8d-4e1c-8c7f-7aa03f3e3aa4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "64a2829f-0fb4-4658-9bdd-000438ed68ab"
        },
        "item": {
          "id": "dd9519c1-c2c3-4bb9-bbba-656502449cec",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "84fbfde3-aaed-4138-960a-fee9617b8581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c08ecf-e653-4457-83e2-4a9563a8a4b2",
        "cursor": {
          "ref": "58c656eb-1ba4-43cb-b825-ac1d227e0024",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "120e4d80-f6dd-451a-be67-c99e25e9fa61"
        },
        "item": {
          "id": "83c08ecf-e653-4457-83e2-4a9563a8a4b2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "91d5bdd5-404f-4c5c-8639-e6a03472c9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c279443-3b2a-4709-9e29-e3cb733f6660",
        "cursor": {
          "ref": "55a0c8f1-fa09-4851-8dec-9adfa7986ef3",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "225097aa-07f5-4e5e-9198-f976d13e4c55"
        },
        "item": {
          "id": "9c279443-3b2a-4709-9e29-e3cb733f6660",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "07112069-2eea-4573-9d18-80f3fecdc891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8957659d-8960-4eba-b5db-d97f57a33b4b",
        "cursor": {
          "ref": "2421e066-a34a-4add-a12c-5239d1a52a73",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "99db88e1-43e3-438a-9017-1317a0369217"
        },
        "item": {
          "id": "8957659d-8960-4eba-b5db-d97f57a33b4b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ad89f1cf-f957-4607-82c9-70638471f668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c872435-aa81-4373-9efe-43ae334351ac",
        "cursor": {
          "ref": "16462230-0972-4ae3-9a5c-af3e8e908604",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "84b5c5d4-0832-42cf-8bd2-1cac1c242e9b"
        },
        "item": {
          "id": "3c872435-aa81-4373-9efe-43ae334351ac",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2abe0c1a-2335-4be3-977b-848c2028a38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f02b0f4-f92e-45c1-af3b-9bd95a1bab08",
        "cursor": {
          "ref": "20db0a3a-d062-47a2-a2ad-3f83b7cfcca8",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fa2c9c24-024b-45a5-920d-0c155ba0e0ef"
        },
        "item": {
          "id": "6f02b0f4-f92e-45c1-af3b-9bd95a1bab08",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d5cd3abb-07e8-4eae-9899-9cd8f7dbd4dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519adab9-3cf9-449e-ac69-99ff27e64c89",
        "cursor": {
          "ref": "6a09833b-8c9d-49c7-a9b7-41f44839cadf",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "22b9ebec-4157-4fde-ae1b-e8fb8494b151"
        },
        "item": {
          "id": "519adab9-3cf9-449e-ac69-99ff27e64c89",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "78db36c5-b626-4316-9f0f-32863eae43dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40aec753-2b59-48c2-a018-af0650953d94",
        "cursor": {
          "ref": "088ef7fb-649f-41fd-8e3d-b30361df69aa",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "55bfa529-d42c-4994-ba4a-7f1ab260999a"
        },
        "item": {
          "id": "40aec753-2b59-48c2-a018-af0650953d94",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5bef143c-a5ef-44ef-b3c5-663a872e6f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f5664e-6268-4d92-9af3-9867d516c042",
        "cursor": {
          "ref": "087a8f43-6c19-4c1b-bd65-2448e970ad7b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a9c2fbc5-e694-4534-9bc1-6e86b60d366a"
        },
        "item": {
          "id": "22f5664e-6268-4d92-9af3-9867d516c042",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "827528c5-93db-48a5-9442-446a97dc6cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837ca1d7-ffca-45e6-bebd-4f303f7b4093",
        "cursor": {
          "ref": "07d2a6e2-a600-47b4-b247-4b3f9da207e1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cd55c7a9-44cf-4414-baff-109370e499b0"
        },
        "item": {
          "id": "837ca1d7-ffca-45e6-bebd-4f303f7b4093",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "59229655-630a-4898-9727-a16f19e9b039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b840760-ece9-4ed0-a7b3-0c0a8eba23ea",
        "cursor": {
          "ref": "ad1b6ab8-011f-4ec1-b40f-f65f6344a60d",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "287c7695-82fc-46f3-9e24-01eb6a5a48e6"
        },
        "item": {
          "id": "2b840760-ece9-4ed0-a7b3-0c0a8eba23ea",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "db8ecc41-9260-4add-8f0d-6ab9ccf8fbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcb86a5-1c04-459d-97d4-51d0ff1163f5",
        "cursor": {
          "ref": "df6b2ce9-6193-48ad-a0c6-b33523103852",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "54826a1f-6add-482c-adb6-a37f50ce8847"
        },
        "item": {
          "id": "4dcb86a5-1c04-459d-97d4-51d0ff1163f5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9e1f45aa-08fe-4b07-a23a-61ebe7578d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540797a7-318d-4a9d-bef4-3af233b5cfd4",
        "cursor": {
          "ref": "396e660a-8994-40fd-a136-1a26bf5ddacd",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "994f012e-6f3d-4a07-a1be-636b95a00cd4"
        },
        "item": {
          "id": "540797a7-318d-4a9d-bef4-3af233b5cfd4",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "efff929b-bb78-4e20-9d5a-0b0268abf149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd9cbee-e4a8-409e-b37d-63187a77aff5",
        "cursor": {
          "ref": "0e2d0780-42c0-4278-8606-967cf5eeecd3",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "954cd75a-72dc-48be-9276-0ffeda22290e"
        },
        "item": {
          "id": "ecd9cbee-e4a8-409e-b37d-63187a77aff5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "31a32d78-6fc6-4c55-acfa-d6bbea87a764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72e463b-2483-4038-894a-f93fb74cec65",
        "cursor": {
          "ref": "098ec0ce-1d06-4a4d-95e4-31667d82f58b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7e1d4e05-e4f0-4cdd-8f9f-d10f8887b251"
        },
        "item": {
          "id": "b72e463b-2483-4038-894a-f93fb74cec65",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7849618f-3b10-4c4b-8336-4c68d8951596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95d60c5-0d6c-47f1-9c62-bc0ffea14c85",
        "cursor": {
          "ref": "2c146ed7-ba64-410b-8dfd-05e9f782b84f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cf54a8bc-b1e9-43ab-9e64-43b086a8b7d6"
        },
        "item": {
          "id": "f95d60c5-0d6c-47f1-9c62-bc0ffea14c85",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a8bc6550-e619-4264-8e62-1834885c8d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccba77b8-afb0-4e30-b527-083a47c3cd02",
        "cursor": {
          "ref": "8acab73e-f9ba-468b-9e90-1eb4b215905d",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2ef078ef-5192-4bef-b47e-59bf651e2121"
        },
        "item": {
          "id": "ccba77b8-afb0-4e30-b527-083a47c3cd02",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7a8cc6f4-932c-444d-b916-bed07f893707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19484764-b6a2-4486-aa41-97f96df81648",
        "cursor": {
          "ref": "80fe263b-e453-4d66-a257-d4ec7430b64e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a6f036b9-3d64-408e-8d14-4bdc8172a56b"
        },
        "item": {
          "id": "19484764-b6a2-4486-aa41-97f96df81648",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ef7a7c6a-f748-45b4-b239-0509eca731ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b4f1b6-a288-410d-829a-7374cc2b0779",
        "cursor": {
          "ref": "9812ffdd-39d5-4050-a476-ff97eea96d7c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "284b8da4-4e0e-4cee-ab79-bbed9d82c914"
        },
        "item": {
          "id": "d7b4f1b6-a288-410d-829a-7374cc2b0779",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "46216045-d38d-4005-8a73-1d8d4132082e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af31680f-2f36-4df3-8c73-ec0b43b68c03",
        "cursor": {
          "ref": "e87d2ded-8219-4995-8e23-6ea927d6d856",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3395aa7f-dd4f-4cc4-a5ad-2378fcd2fbb2"
        },
        "item": {
          "id": "af31680f-2f36-4df3-8c73-ec0b43b68c03",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7e3de177-19b4-4552-b391-0274b6e92ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf110582-d1c8-490f-8d37-786f81c513bc",
        "cursor": {
          "ref": "b6912422-7f63-415c-87f0-27ca94eda20b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ec33f29c-4a94-492c-9eff-023c8473a73d"
        },
        "item": {
          "id": "bf110582-d1c8-490f-8d37-786f81c513bc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "41e60699-3760-4793-8dc1-538403c7341d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccb44a0-9f88-40d3-875f-144cf77e07a9",
        "cursor": {
          "ref": "ab875cef-53b7-4b09-aba4-ba1850c722fb",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f4d5368f-3815-47a4-a340-9935d832764c"
        },
        "item": {
          "id": "eccb44a0-9f88-40d3-875f-144cf77e07a9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4f7ac80a-d7f1-4af0-b82e-a0eb2cf32250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52214fe-be73-4e9b-b8fc-af7bc2ac7348",
        "cursor": {
          "ref": "d793a40c-b845-4229-8b99-52c2ec105d35",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0d2e3ecd-e8ec-4bb7-8958-65b46ba02461"
        },
        "item": {
          "id": "a52214fe-be73-4e9b-b8fc-af7bc2ac7348",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "73c735fc-f467-4b17-b9ac-62b387122b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd0ed68-9884-40bd-aa43-f6a203b9592b",
        "cursor": {
          "ref": "05b697f1-d80b-41c8-a3cb-e7eedd251afd",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "367757fb-4143-4aef-825e-cb68a61a9378"
        },
        "item": {
          "id": "1dd0ed68-9884-40bd-aa43-f6a203b9592b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "32f102b4-39ff-425c-b97d-ccc59b83ec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98540559-e954-42dd-bb52-71e85868e774",
        "cursor": {
          "ref": "21ac56df-b722-4dfa-bd2e-396960dc79e1",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b6105c6e-1c0b-409f-a81e-fe046a20ebb3"
        },
        "item": {
          "id": "98540559-e954-42dd-bb52-71e85868e774",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "dc54621a-d820-48d8-a153-5f0e4aba2656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b8624a-0fce-4889-974b-c007ee426af5",
        "cursor": {
          "ref": "bcf8474f-43c8-4b44-967a-da6a15d99bb7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "395a707d-12f6-438d-af9b-93db3a252c94"
        },
        "item": {
          "id": "f2b8624a-0fce-4889-974b-c007ee426af5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "19f95aca-7d16-4b46-bbdb-9ab8f4b5e4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7bb2d4-b90e-4fcd-aad3-e85c6a032cb8",
        "cursor": {
          "ref": "c282f870-b8ea-4be6-961c-ffb5f2045248",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "17963fe7-7465-458d-8f72-78c63749286d"
        },
        "item": {
          "id": "8f7bb2d4-b90e-4fcd-aad3-e85c6a032cb8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7b35abb3-d3d6-4167-9868-bb163214cd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25006a5e-ce30-46da-8423-7edef7f72242",
        "cursor": {
          "ref": "1a0d9150-a99d-49d9-9aea-38b132febf97",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ffd44b0a-01dd-42f3-ae3c-d272018c48c1"
        },
        "item": {
          "id": "25006a5e-ce30-46da-8423-7edef7f72242",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "37074dec-0b4a-4cfc-8272-862db8806be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06e4b83-a623-40ad-ae43-de7eab91a783",
        "cursor": {
          "ref": "3d63d473-a3d7-4f19-9d03-b5dc2dc2e5b0",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c047cf54-edb7-4843-9954-1d9a44ec3ce9"
        },
        "item": {
          "id": "a06e4b83-a623-40ad-ae43-de7eab91a783",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9874b7ee-36c9-4f98-8d1d-626cd48ffcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5fe2d5-abcb-4269-8294-f92175e3a577",
        "cursor": {
          "ref": "edc25abe-a4a0-48f7-9363-4fd9a98968e3",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dd5fb89e-4837-46d3-a7d8-6911dbd29f8e"
        },
        "item": {
          "id": "1a5fe2d5-abcb-4269-8294-f92175e3a577",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "189ff81d-4c5d-4e07-9ed3-cfcb044c05e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a9072a-8548-46be-9cb1-c64a94395e79",
        "cursor": {
          "ref": "a831df81-1cb4-42a3-b838-1e91b4af7cc1",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ad377dbb-6dcd-4df4-b4a1-d6be281ca93f"
        },
        "item": {
          "id": "38a9072a-8548-46be-9cb1-c64a94395e79",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "df8dc07f-d6e5-4923-bfe9-995579f30a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281672aa-f68f-46f9-ae6d-6eee1a766302",
        "cursor": {
          "ref": "6f55dd1f-c062-42f6-bbb3-94137b314033",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4be885c4-39ca-4ca2-bb29-b592640af520"
        },
        "item": {
          "id": "281672aa-f68f-46f9-ae6d-6eee1a766302",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d60bc604-6024-46dc-a7c9-bf286f6f40d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c444bd-b144-4cf1-a206-d4d1ba3f3b82",
        "cursor": {
          "ref": "7e0c1c29-6619-4c7d-81b4-6ec057677157",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "25bd7735-918f-4160-8474-b0d12c04d046"
        },
        "item": {
          "id": "82c444bd-b144-4cf1-a206-d4d1ba3f3b82",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "74b93649-e353-4a10-bbbc-a5b6e243d96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3949d3-781d-46fd-8b2d-574c64e634fd",
        "cursor": {
          "ref": "439b6447-7822-4a18-9f90-c6c0c0eabf0d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7825bd55-bfe6-4720-968a-213dfbf4176e"
        },
        "item": {
          "id": "ff3949d3-781d-46fd-8b2d-574c64e634fd",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "430cf9b3-28e9-4cd6-9fcc-17653652c79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3b4fc1-5f83-4e70-b8ba-d6a410b8a87d",
        "cursor": {
          "ref": "ad5671c8-482d-4876-ac1c-1e40baa0f3e3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "327efcce-46dd-47ff-97bd-fa38837db011"
        },
        "item": {
          "id": "ce3b4fc1-5f83-4e70-b8ba-d6a410b8a87d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "74586468-21b6-4127-b3b6-71f89e9a99c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193981da-f78c-4666-8ae4-fbf55dd78519",
        "cursor": {
          "ref": "895dadfa-3d30-4281-beda-ac8d62073709",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8eac8cd1-5232-4e65-a634-9256977ceea2"
        },
        "item": {
          "id": "193981da-f78c-4666-8ae4-fbf55dd78519",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fcc25ad3-cae6-4f4f-9d8a-ecb2a99aa58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e066175f-c36f-48bf-b7c3-72c42aeeab8b",
        "cursor": {
          "ref": "508540ce-6711-4563-9395-6a767cfe71d7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "59b2185d-6f6d-4306-9e8e-1f742892bce3"
        },
        "item": {
          "id": "e066175f-c36f-48bf-b7c3-72c42aeeab8b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "79f670f9-56ff-4fbc-b9ec-6c4df298c7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f018bdde-9b9c-4784-94be-5fedc032b292",
        "cursor": {
          "ref": "e8821bee-fef4-4ca1-938d-145d740c5334",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3288879d-9ff6-481f-9097-46bbe758bc77"
        },
        "item": {
          "id": "f018bdde-9b9c-4784-94be-5fedc032b292",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "79b6fb4c-f3ad-4bf2-aebb-1f9d5bc42827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0795105-044f-4f73-8cff-21cb7a801ef6",
        "cursor": {
          "ref": "1d758652-8594-4f9e-9e94-49b3df9697cf",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c6621d3a-d13a-4795-87cc-3aa9205a88f0"
        },
        "item": {
          "id": "c0795105-044f-4f73-8cff-21cb7a801ef6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a35e8ba0-2cb5-4e99-82d9-ff94db4d1920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52022d6f-1fd5-4ff6-86bb-edbf63932652",
        "cursor": {
          "ref": "4af95cf4-1999-4580-8e75-833bc29f6a59",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8b30c5bd-ba4b-446e-bf24-a5727bf773b4"
        },
        "item": {
          "id": "52022d6f-1fd5-4ff6-86bb-edbf63932652",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b57e0be0-8aaa-46b6-85cb-83ba27c56042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f7c2c1-67f8-4dcd-890b-fede426b7323",
        "cursor": {
          "ref": "a2f7f2a3-f3ee-464d-8f2d-cbbba2074c31",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b0c41699-0174-4ffd-8602-aac13f5a6dba"
        },
        "item": {
          "id": "53f7c2c1-67f8-4dcd-890b-fede426b7323",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1aeb763d-4b14-4348-a4bb-159b9a2216a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b05df74-0891-4bdc-b02f-3211a6d0d3ce",
        "cursor": {
          "ref": "51fbd18d-8add-4789-a3a9-6ae826b192ff",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f82942a4-fcf4-44a7-b18d-dc3528efa038"
        },
        "item": {
          "id": "2b05df74-0891-4bdc-b02f-3211a6d0d3ce",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f0b072ce-ff83-4757-84ef-4c437b4e8c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25329871-9e4b-4327-8281-ee48363caf64",
        "cursor": {
          "ref": "b50aaf6f-e038-4c72-9366-49910e937f67",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "726a8b6f-e495-4473-851b-03463b1c9745"
        },
        "item": {
          "id": "25329871-9e4b-4327-8281-ee48363caf64",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "33d8cd28-37f9-449d-8894-d2a6e750d1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595f3213-63c4-43ad-8609-458fe144320c",
        "cursor": {
          "ref": "c6273b1b-d423-4859-b760-cd9b5277db6c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "724d385d-00f8-495f-8855-198927634bcd"
        },
        "item": {
          "id": "595f3213-63c4-43ad-8609-458fe144320c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "31c5fdda-539a-47e0-bd69-9266759076bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635a1bb3-d524-4f00-9436-a7cb4ffa820d",
        "cursor": {
          "ref": "3bd3c788-754d-4884-ae24-4b046f7ded63",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "824849b7-f93c-4657-a266-5648a1972a53"
        },
        "item": {
          "id": "635a1bb3-d524-4f00-9436-a7cb4ffa820d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "69f4416b-beb0-482e-8f50-49071ec2b6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f2b31f-7607-4e1b-ba57-87a59402b66b",
        "cursor": {
          "ref": "fea2e062-f4b0-49e8-b4dc-37876aebb0dc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9d2453f9-7436-4f3c-8542-b08e2b700238"
        },
        "item": {
          "id": "25f2b31f-7607-4e1b-ba57-87a59402b66b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ea52549b-bde7-4616-866d-153a172daf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1abc127-58d6-4892-b37f-50edd4d2baa3",
        "cursor": {
          "ref": "05b3d213-b6b2-4b48-a250-9b15a4275efd",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0bcc1eea-ed65-45a9-9f72-58854b5e9110"
        },
        "item": {
          "id": "f1abc127-58d6-4892-b37f-50edd4d2baa3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0b14f6ca-f812-410a-931d-ce18aab1b6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdab9908-5d66-41c2-a86f-422bbd44c013",
        "cursor": {
          "ref": "91eed971-f459-4b8e-a2f0-d9510cd33a03",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8ced321d-1b8b-42c5-a984-2b642fbc4a74"
        },
        "item": {
          "id": "bdab9908-5d66-41c2-a86f-422bbd44c013",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5d245dc1-cbd5-49c0-afb1-fdb95c300e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d6d72e-542a-4e92-9fcb-9fb121535cab",
        "cursor": {
          "ref": "77ca07cb-468d-49f0-b1bb-2b4a9d8bc5e2",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "eabf24ae-cb42-4a27-b99b-e33746fd4f61"
        },
        "item": {
          "id": "52d6d72e-542a-4e92-9fcb-9fb121535cab",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a36a0b7e-c5c5-47c3-9d43-294dd4b16175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4138390-3fff-4ece-8ca4-327d94dbab5f",
        "cursor": {
          "ref": "dcfcaa4c-adda-4648-a7fa-fe02f7c2bbf0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "689b1796-b222-4276-9952-b87e27f5061b"
        },
        "item": {
          "id": "d4138390-3fff-4ece-8ca4-327d94dbab5f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "eeef8a3a-3bb6-4c1c-a11f-a482512831ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431b42c0-4113-4e24-b168-a5c08a2155ca",
        "cursor": {
          "ref": "e5e3b26d-a3e5-4721-bfba-55c7b7164737",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b3a166cf-6756-469a-a0c9-dddda4d2564e"
        },
        "item": {
          "id": "431b42c0-4113-4e24-b168-a5c08a2155ca",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2794fc72-b7d6-49ec-a204-7c8f9ed735b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8e4844-e7d0-412f-ae1f-07d95432643a",
        "cursor": {
          "ref": "7e69c06d-521b-4a49-b245-64442266abb8",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1c3ef12b-9bfa-48f6-8edc-15c70b06f268"
        },
        "item": {
          "id": "4d8e4844-e7d0-412f-ae1f-07d95432643a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6f48c7e9-ee81-4a79-96ff-c506d4a7ee63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe22a67-fba6-4fea-be76-d2458fbfbd08",
        "cursor": {
          "ref": "41df157a-e7f0-44f9-bc0d-d56f4bc05f61",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cb2fe409-fb92-476a-919a-32cb14a98e81"
        },
        "item": {
          "id": "bbe22a67-fba6-4fea-be76-d2458fbfbd08",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "550709fb-6663-4536-bd75-121c937bb0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0942ab86-b7ec-40e3-af20-26ebc32ddd5d",
        "cursor": {
          "ref": "22884133-c0d5-4a46-ba8f-d21b5e888ed5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9eadbf2c-cfff-4026-886e-1655ed1d2d0c"
        },
        "item": {
          "id": "0942ab86-b7ec-40e3-af20-26ebc32ddd5d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c65385b7-7dfe-448e-bf3b-3a3ec1293e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cacab84-19e6-406a-8e56-a18b1ce14f62",
        "cursor": {
          "ref": "e099f150-65d3-4fea-ab4a-75bfab6ea931",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "11a4f521-fab9-4175-8950-4e5ac71ad188"
        },
        "item": {
          "id": "5cacab84-19e6-406a-8e56-a18b1ce14f62",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "05782552-1277-4d89-987d-5a2964035c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf1bcff-32b0-401f-bf5b-32c9944667d1",
        "cursor": {
          "ref": "ccf5f273-c031-40e1-96bd-2409c1a52aed",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5d4e5128-efb5-4855-af03-09b1e2c069a1"
        },
        "item": {
          "id": "ebf1bcff-32b0-401f-bf5b-32c9944667d1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "fb3a86dd-a31f-4bb1-b60a-b7c92b21a17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8c70f2-b209-45ed-abbf-489c1960aa9c",
        "cursor": {
          "ref": "806326a2-67fe-463e-a2e6-f3a32fde68d8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f1a60b6e-8ddd-4920-9418-0bb3705c9654"
        },
        "item": {
          "id": "4a8c70f2-b209-45ed-abbf-489c1960aa9c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3852de6e-f6ac-42c7-9443-9d2aac88b79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6648d8b5-aa4c-423e-ab22-ff4b2261f751",
        "cursor": {
          "ref": "15d113ac-0a70-4017-a9b5-1f7eade95be0",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6e8d0436-b586-44ad-bddc-0b99c31d4c1c"
        },
        "item": {
          "id": "6648d8b5-aa4c-423e-ab22-ff4b2261f751",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4a7e8742-3c32-4982-ad91-6198686afa0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ec9a6c-820a-4aa8-ab93-72fe200a5110",
        "cursor": {
          "ref": "ead680ce-8aac-4899-a549-6c6a2b7ce0fb",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f75cb2da-89f2-4564-8571-2bab368d5441"
        },
        "item": {
          "id": "b1ec9a6c-820a-4aa8-ab93-72fe200a5110",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9c4c5c46-5f35-4567-bb79-49f6570d6e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57837952-afc4-4b5e-9788-ffe4a0e54a98",
        "cursor": {
          "ref": "2b74f133-e6c3-4190-8707-2419005497a7",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0e02d07a-de5a-4816-b4a4-b1c55bbc86ff"
        },
        "item": {
          "id": "57837952-afc4-4b5e-9788-ffe4a0e54a98",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3b6ebec2-40c2-452e-8698-1c9980540fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a3bc49-de67-476f-95b1-c0e71d6bb708",
        "cursor": {
          "ref": "11f9cb94-42d4-4814-ac2c-a9fa14a2d4e6",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9484c6f6-9fad-4b38-8733-dd536b62e404"
        },
        "item": {
          "id": "28a3bc49-de67-476f-95b1-c0e71d6bb708",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "62a86586-75ee-4214-a2c3-3ca3248f3713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6a7253-478a-4640-8f0e-9f3965c24625",
        "cursor": {
          "ref": "8b3a859f-24be-4b22-a32e-7d0aa734c7e3",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "92eec46c-de32-44a1-b557-6f931b67981f"
        },
        "item": {
          "id": "bc6a7253-478a-4640-8f0e-9f3965c24625",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "58cda651-902b-4675-ad52-89b816e46813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29225fdb-fbad-464b-8b0e-f8b6e162c742",
        "cursor": {
          "ref": "59f9e9c9-92f5-45bb-9066-8d6a37420d97",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5cda51d2-2326-49f0-b804-3d966258c9cd"
        },
        "item": {
          "id": "29225fdb-fbad-464b-8b0e-f8b6e162c742",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "78ef1cc8-e622-4924-999d-8fe3dc8725f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14958d81-05e8-4e90-a180-6ed458194a1b",
        "cursor": {
          "ref": "d46ec6d0-fa5f-401d-949a-109ac0321b29",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ab2a3d6f-a928-4bd5-ad1f-11ff96072566"
        },
        "item": {
          "id": "14958d81-05e8-4e90-a180-6ed458194a1b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "977f62a0-6369-4397-8505-d43bae07d8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74002c42-a46b-4fe3-ab0e-106f345640e1",
        "cursor": {
          "ref": "6482d915-c0f0-4caf-af54-c6814e77f778",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "889df51a-1ba3-488b-b6b0-b6dce27e891b"
        },
        "item": {
          "id": "74002c42-a46b-4fe3-ab0e-106f345640e1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "193f1329-71af-4007-b1ad-c89c0f29a500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d19140-cb67-476d-9c6d-e0a0eba625f1",
        "cursor": {
          "ref": "488bb7ee-4b37-459b-8bb2-a744c091f791",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ff9a5f57-bca1-4240-bc78-64240705c990"
        },
        "item": {
          "id": "56d19140-cb67-476d-9c6d-e0a0eba625f1",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "834f0283-d9b2-41eb-9c7e-40811d8f9a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326d1560-9d27-44fb-9b23-31957ca105b9",
        "cursor": {
          "ref": "e1b97a4f-b245-4fdc-bd22-f165e5c3fa6a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d24a02dd-cf10-4c92-bf31-edc902788c69"
        },
        "item": {
          "id": "326d1560-9d27-44fb-9b23-31957ca105b9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e4c649c7-8e5e-43e2-99cf-8fd1120c4d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd410d04-f4cc-4431-a72e-1766f84bfb42",
        "cursor": {
          "ref": "a035a2ef-5f13-433b-9cd5-3d3455097ada",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c739644d-511b-476a-a303-d388255802bb"
        },
        "item": {
          "id": "dd410d04-f4cc-4431-a72e-1766f84bfb42",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f7cc2af9-d5e5-4e0c-8e3f-6b29dd4fdb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd4c0fd-f719-4eaa-853a-96e1ce7d4454",
        "cursor": {
          "ref": "f7074e32-b196-424f-9dd3-e54dc968e12b",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "345f2a58-f45d-4e6c-bf80-689ec503ed3e"
        },
        "item": {
          "id": "ccd4c0fd-f719-4eaa-853a-96e1ce7d4454",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c37544a7-7162-4d73-85c8-e8e215f304fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e42023d-dd2b-42a5-80f6-e17ae64d3970",
        "cursor": {
          "ref": "379237d9-b68c-4780-85bd-1e91ee7ca42e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "849d2bbe-9eae-46c0-bab3-d21b880b5ebe"
        },
        "item": {
          "id": "2e42023d-dd2b-42a5-80f6-e17ae64d3970",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "77b6a62b-2b1b-4caa-9eb2-2bcfe28b9ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a915a4ab-1ae2-4186-a4f1-62d953cb90fa",
        "cursor": {
          "ref": "c1839ed7-3a23-431c-9150-04e263a19c52",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ab71c7d5-e1a5-4ea5-8a3d-a6fa6d85ff5f"
        },
        "item": {
          "id": "a915a4ab-1ae2-4186-a4f1-62d953cb90fa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4c0cb4d8-ff6a-4e24-976f-fdd44931cd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418b2b73-897f-4275-9053-20fff60b41e1",
        "cursor": {
          "ref": "7c6e03b1-8bc5-4827-bba6-3cf3acc91301",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9fa33a46-aca3-4a1b-ba2e-62968b9338fe"
        },
        "item": {
          "id": "418b2b73-897f-4275-9053-20fff60b41e1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a779f18d-3e12-4cad-89a6-9fc813fc5c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4369b37-56d3-4a96-9f88-eaa93ee9055c",
        "cursor": {
          "ref": "22f80f99-5da7-4aca-b9d3-78aabcbeb9d2",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5c2fe6a2-e205-4f3f-98f9-0ee4932fa8dc"
        },
        "item": {
          "id": "d4369b37-56d3-4a96-9f88-eaa93ee9055c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d639874f-4bfc-4065-8626-dabce3387f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcee73e-18fa-4fde-a16d-aafb20f02790",
        "cursor": {
          "ref": "785f8787-f85d-4c3d-942f-ef2fc5c78a64",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5d1474c3-31b8-4b7f-ab44-fb85617deb4a"
        },
        "item": {
          "id": "fdcee73e-18fa-4fde-a16d-aafb20f02790",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "94ba9ff7-02ce-4e73-ba6a-a0970703072c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bddbd8-bed0-4a28-85cf-9a799d1f63bd",
        "cursor": {
          "ref": "e7cef8b2-5a8f-428d-bcaa-06fff203f185",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "402f4504-eb8a-4ac1-b0d0-8b74d3c53483"
        },
        "item": {
          "id": "d6bddbd8-bed0-4a28-85cf-9a799d1f63bd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b2574fa8-76a4-4d3d-a212-138b92c07c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b54f854-9e33-40cf-9c08-e096c0203aad",
        "cursor": {
          "ref": "179f3b51-4052-4e0b-8b18-fb9cae3ed7e8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ccc54e57-bd0a-4cbb-a525-4813ed64e15b"
        },
        "item": {
          "id": "0b54f854-9e33-40cf-9c08-e096c0203aad",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5fd37a14-7adb-479f-beee-6c6ffcef7936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b929cab-0730-4d30-8ef5-103c90f1870e",
        "cursor": {
          "ref": "1915751f-cc21-4286-948d-83cbebea5c59",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b46cc4d7-ea02-4c4e-bcde-b57130e284a0"
        },
        "item": {
          "id": "9b929cab-0730-4d30-8ef5-103c90f1870e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "71c5f633-e593-4e6a-a946-f73969cd1cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283841e1-041d-433f-81cb-ef4402ced839",
        "cursor": {
          "ref": "d9be1c09-1350-4afb-8532-1bdad4b6ef8d",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "949b3bd1-3043-4883-9ea4-b43e057704f8"
        },
        "item": {
          "id": "283841e1-041d-433f-81cb-ef4402ced839",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "dd0533ba-aa41-4225-bcb3-022f0c0db06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae84e70-39e2-4ddc-9566-ce9216f72a6c",
        "cursor": {
          "ref": "7ef10ab0-c6cc-43ae-a8a0-baad1ff2f31a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dd1450c7-ffaf-4d21-8f02-9dab3bce4d71"
        },
        "item": {
          "id": "bae84e70-39e2-4ddc-9566-ce9216f72a6c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e8c249eb-9693-4b1c-a877-85cb175876cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f068d510-20e7-4fee-843d-b5b3d8dedfe0",
        "cursor": {
          "ref": "45ccc217-a61d-4661-bcef-be0a605393ce",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "33c857ba-8ebb-4ec0-89c9-f3edc657679b"
        },
        "item": {
          "id": "f068d510-20e7-4fee-843d-b5b3d8dedfe0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d506ac00-92bc-4e84-ae28-d2056dcf7c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f216a987-3b23-4a91-9c39-753f531a3621",
        "cursor": {
          "ref": "4ff9ab23-2224-4f64-949f-b99000a869bf",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "93e7f11e-ec57-4819-a461-5f0c32186b41"
        },
        "item": {
          "id": "f216a987-3b23-4a91-9c39-753f531a3621",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e274f77c-efb8-4d2d-a9c0-30aa79be7af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397ddc3a-c300-424c-a80b-76eee5be91b9",
        "cursor": {
          "ref": "514e3dce-28ba-474b-933b-3c759cf9b7bd",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "83ecfbba-5a7b-466f-94cb-a529543336f1"
        },
        "item": {
          "id": "397ddc3a-c300-424c-a80b-76eee5be91b9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "bc553b90-b140-448e-b773-d56cc7ca61f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fca328-2547-4780-8cc3-bf91676abbbf",
        "cursor": {
          "ref": "9fe78d58-98d1-49d1-8c4a-84fa82da1ee4",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7d0b3555-0fcb-4fb5-a082-ef1e2123c2a2"
        },
        "item": {
          "id": "37fca328-2547-4780-8cc3-bf91676abbbf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7cc21140-1163-4bb1-9aca-e3508b4fa5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d78347-6d31-463f-a47d-6371013bf05f",
        "cursor": {
          "ref": "d4b82ce4-9568-4f22-a5ff-3fc5e98738e3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b40b6c0f-b72f-4d7e-acdb-4e8b19097cb7"
        },
        "item": {
          "id": "92d78347-6d31-463f-a47d-6371013bf05f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "bae64c89-974e-4829-8780-dea9200082e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e72990-5112-449e-83cf-c24328fea9ef",
        "cursor": {
          "ref": "0ca6997c-4e5b-46c1-bcba-ebdb7d7d32f0",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c26097f0-d764-495f-a0cd-6920948b591d"
        },
        "item": {
          "id": "a9e72990-5112-449e-83cf-c24328fea9ef",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3bf0671b-bfd8-4800-bd68-61324747ea80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528814e2-10e8-4cfe-8eaa-18abddbd27a4",
        "cursor": {
          "ref": "9f5cda18-fb7c-4f7c-bc92-f0e0accf4bff",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a1b9dbbf-9f02-4e18-8aea-65ab051d9bed"
        },
        "item": {
          "id": "528814e2-10e8-4cfe-8eaa-18abddbd27a4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "300ba200-c075-42b3-89ba-7092d4617806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cb0fe0-6607-487c-bd91-c1d87be71fe1",
        "cursor": {
          "ref": "bcd3fd56-f434-4732-8c00-846f7e7df723",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "76567ac1-bb68-446f-bc0a-cea3bd910ca8"
        },
        "item": {
          "id": "a7cb0fe0-6607-487c-bd91-c1d87be71fe1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "587af984-8563-4889-aa66-6d85e5ef53b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f07d1c9-f968-4052-ab31-81a887e24b13",
        "cursor": {
          "ref": "25e0800e-3115-4f4f-8b2f-134dd7565a0e",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e342931a-e9e8-42f1-94e9-0160b1ff9430"
        },
        "item": {
          "id": "6f07d1c9-f968-4052-ab31-81a887e24b13",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f4d1bc2f-9305-4afa-84d6-a4c3c6b1a4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48eefc98-d25e-49cf-a5fb-5bd24997a428",
        "cursor": {
          "ref": "3f51879e-ec1b-4bd1-94d3-0aa148de48ce",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a3e00669-4f72-462e-9461-bb8bf6fba3db"
        },
        "item": {
          "id": "48eefc98-d25e-49cf-a5fb-5bd24997a428",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0abb3bab-c7f7-4696-b5b4-9d5091175fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b85444-3e12-46bc-bd74-fd767a4051ec",
        "cursor": {
          "ref": "9147ffc3-20b3-440e-8558-014b330fe2cb",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "2abed740-7668-4a94-abf0-c982a8fa697c"
        },
        "item": {
          "id": "36b85444-3e12-46bc-bd74-fd767a4051ec",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a2942980-e6de-42a2-81e4-732bfef96a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca602424-65e9-4524-ad47-e88f4841be2a",
        "cursor": {
          "ref": "498bda6a-2bc1-405c-8fea-1459e48ffebc",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "782446be-f099-4968-aaff-781c0a4a66f6"
        },
        "item": {
          "id": "ca602424-65e9-4524-ad47-e88f4841be2a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "04d61db4-0974-470c-9b8d-0eeb648c017d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e74c4b-ed52-45d0-bee8-19f27aacbddc",
        "cursor": {
          "ref": "636e4d0e-0f7c-4c11-a251-9294aea13d57",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0bc2b5f4-03d3-4471-b710-d014881775a8"
        },
        "item": {
          "id": "a7e74c4b-ed52-45d0-bee8-19f27aacbddc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8b05fd2d-de67-4a32-8a18-903f9da9f380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6df88f-f688-4a09-ac32-51b76d419ff1",
        "cursor": {
          "ref": "a08375f1-404e-49ca-bea9-1f7a5b9018e6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2d92011f-3fc9-45fb-9d32-84b2aa3e7453"
        },
        "item": {
          "id": "df6df88f-f688-4a09-ac32-51b76d419ff1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "576b3b66-76e1-44f9-bd06-6f4ed812d788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433f9d62-3c54-4fd9-aadb-b6250435857a",
        "cursor": {
          "ref": "5afa1602-f3a0-47d3-a1a3-2853c9d5e60f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d08cb801-1a0b-4ef7-a680-573e3ebe6513"
        },
        "item": {
          "id": "433f9d62-3c54-4fd9-aadb-b6250435857a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "025d48d7-88f6-49a3-b11a-903c3cfd1c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c2f2d1-3a5d-475d-8747-5f6371cfe4a6",
        "cursor": {
          "ref": "12ae66c2-ad8d-4349-adab-12e927953c7a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "859d50c0-85f3-4e74-a1ad-c67c592051d7"
        },
        "item": {
          "id": "09c2f2d1-3a5d-475d-8747-5f6371cfe4a6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1711b29a-734c-47e0-a5be-4f6bd5aa8da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2ba6fa-9a21-4d9c-8e72-074ad333f3aa",
        "cursor": {
          "ref": "c2cfb42d-3a27-4e84-8b93-993535f2fa39",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "3cc62ac5-3b4c-4e8a-ba42-cb651627877b"
        },
        "item": {
          "id": "3c2ba6fa-9a21-4d9c-8e72-074ad333f3aa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "64c46c13-5f8e-4fb5-a379-da7524d43f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b606f62-3413-483f-b502-b4c0d0fa1a17",
        "cursor": {
          "ref": "9c6f8e73-8007-487f-98b1-d2c580f1409d",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ef01a5a5-0a8d-420d-a9e5-e66fefacd528"
        },
        "item": {
          "id": "4b606f62-3413-483f-b502-b4c0d0fa1a17",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8adfdf46-753d-423c-a3f3-13f0f9fabbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb992ad-2ba5-4def-99fa-551c03bbd70d",
        "cursor": {
          "ref": "058bf538-ab8f-4258-9b30-aeaf3c6d1804",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b8d520ae-9ccb-4ee8-ac40-8a41b4d05c18"
        },
        "item": {
          "id": "1fb992ad-2ba5-4def-99fa-551c03bbd70d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f013ee21-947a-4d84-9ec6-458a66010481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a90f30-92e7-4ec1-ba57-f8ab011bd8b3",
        "cursor": {
          "ref": "fc5c6d46-40eb-40aa-862e-ebb09219e4ee",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "69203d02-57fa-4912-a43f-13ecc7b4fbe4"
        },
        "item": {
          "id": "86a90f30-92e7-4ec1-ba57-f8ab011bd8b3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2e2f90e0-8a3d-4dd6-8ee2-f06d99a3ddd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda6e557-8baa-4269-8039-94f8887676a9",
        "cursor": {
          "ref": "35c76897-985a-4c9a-b6d2-20e872328b41",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e1cb7f1a-b876-403e-8fc0-3b6dbd0f5aee"
        },
        "item": {
          "id": "eda6e557-8baa-4269-8039-94f8887676a9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3cc75fa2-9dac-4787-b18a-6602cd2aa039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d238447-222d-4263-8f4d-6582d5e7c1dd",
        "cursor": {
          "ref": "a38d0ffe-d2f6-4e79-b091-a6fed9ee4785",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "27a9b789-51d1-4c36-befb-3598faeeefa0"
        },
        "item": {
          "id": "4d238447-222d-4263-8f4d-6582d5e7c1dd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e1e5d5fe-4061-4003-9fdf-ab4e92e22659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f67c133-b7b3-44ec-b0d9-362033a45063",
        "cursor": {
          "ref": "9ce3dab2-3836-4535-ac88-f071b95dd77c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "210ae2f8-7844-4909-bf05-289ec6ef8340"
        },
        "item": {
          "id": "0f67c133-b7b3-44ec-b0d9-362033a45063",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9d994b7a-632a-4498-b39e-ebca800cf8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbb03e0-077f-40de-949d-938565440c86",
        "cursor": {
          "ref": "39d628d5-d8bb-4850-91c2-2e2e9fd309c6",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cf883cc1-5513-47b9-993c-3734412a8252"
        },
        "item": {
          "id": "fcbb03e0-077f-40de-949d-938565440c86",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "39bb7c73-300f-4d75-b5e5-7817db50ce17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a45ede-5a4c-41e1-80e1-a3e596d82d86",
        "cursor": {
          "ref": "0f330755-604c-4dd3-950b-71feac7266da",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a4dc5f76-5344-4f98-b9f1-d40cfdbad080"
        },
        "item": {
          "id": "e6a45ede-5a4c-41e1-80e1-a3e596d82d86",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "11a302db-3235-48c2-9e12-fb163cee81bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c06bb3-87e2-40a8-b461-deaf0f87b4e0",
        "cursor": {
          "ref": "0d1a4e9e-5b3e-427f-ba5a-6cd07f1ca33c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f81da719-ac57-4e48-8f5d-e46baa991b5a"
        },
        "item": {
          "id": "61c06bb3-87e2-40a8-b461-deaf0f87b4e0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "653c27c1-da05-4853-912d-416bfd198ff8",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a1f547-c282-495b-b5d7-567498365b10",
        "cursor": {
          "ref": "a0506d01-932a-4e39-80d0-b4e00e61bb76",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b211eac5-7d7c-46eb-8550-6050b9b277d9"
        },
        "item": {
          "id": "05a1f547-c282-495b-b5d7-567498365b10",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8661f3d2-fe59-49af-a02e-3cf1e4c63f6d",
          "status": "OK",
          "code": 200,
          "responseTime": 1457,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf0239c-3535-402c-8d28-c0f1172c7cd6",
        "cursor": {
          "ref": "d4450521-ca55-4b35-9210-97f716355a51",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "745dd7fe-946f-453c-99da-934073c91c80"
        },
        "item": {
          "id": "abf0239c-3535-402c-8d28-c0f1172c7cd6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "affa2077-84f1-4a19-aafb-6ed4959d70f8",
          "status": "OK",
          "code": 200,
          "responseTime": 2009,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b547831d-2bdb-41c3-8bd6-384b062f26a6",
        "cursor": {
          "ref": "75666170-6d75-484b-aa88-f27f054d8811",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ef56e697-e169-46a2-93c1-fdfcbfd47b21"
        },
        "item": {
          "id": "b547831d-2bdb-41c3-8bd6-384b062f26a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ad1f2d6-db35-4d04-912e-35801bc42fb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b547831d-2bdb-41c3-8bd6-384b062f26a6",
        "cursor": {
          "ref": "75666170-6d75-484b-aa88-f27f054d8811",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ef56e697-e169-46a2-93c1-fdfcbfd47b21"
        },
        "item": {
          "id": "b547831d-2bdb-41c3-8bd6-384b062f26a6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ad1f2d6-db35-4d04-912e-35801bc42fb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a3ef27-9c2e-4a19-a749-c24f85551613",
        "cursor": {
          "ref": "7f18536c-d9b0-4011-ae9e-7643138ff09d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "e3bb4274-bc52-40a6-b819-ba23e9aaaaf4"
        },
        "item": {
          "id": "27a3ef27-9c2e-4a19-a749-c24f85551613",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "48f085e4-404b-4e43-bc50-1d8e0f015211",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94423dd5-b030-436c-85e0-07c398d5f09b",
        "cursor": {
          "ref": "39eff339-08db-43f5-9d32-ef9e18c65b2e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "5267e097-7a64-473f-9438-4ba6a834ee7d"
        },
        "item": {
          "id": "94423dd5-b030-436c-85e0-07c398d5f09b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "09641410-2d2a-4c05-9f93-b1c816de1278",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}