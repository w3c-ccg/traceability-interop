{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e02171d4-82f8-4a12-8d03-b47efcc456ae",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b09d632c-92cb-46ee-bda0-c8250d93e469",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf954350-4c4d-4871-a4a0-d027589cea24",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0a775067-4fa5-46cf-8564-c56eb82d6e5a"
                }
              }
            ]
          },
          {
            "id": "c71b757f-9df3-470a-b7b6-71c52dbf3ff4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce2c3980-65bc-4119-a376-af8aa1b0ebbe",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "47a90bb6-9329-4b8d-8740-2a6117c252bf"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "93e16e0b-0c38-486a-a18e-27eeca898465",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "90bb0d15-7ef3-4e5e-999f-da6cc9f4cec9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eec804e7-3219-4a82-8328-ee16d0a01101",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00363033-13de-408a-afb8-a5094eab3ee3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9602fbd3-adf7-4b09-9a39-9a2d77128bbe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "12200777-5901-4c66-a56b-8546d7b614b9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad6a230d-018c-4d76-8741-6dd65315f0fa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da592a69-7663-41ee-844e-bb2b95bdd43c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d43f5d9-792b-42f5-a933-200254e77e25"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b149a062-c4bd-471e-862e-8448a16c993b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "34171f8c-1f44-4626-9eb0-6ee988c52f08"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "026561c6-2ee6-4ccf-bfe2-d6b517802d78",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "00724f8c-3194-4e2c-891a-f5ae07a9cb46"
            }
          }
        ]
      },
      {
        "id": "9a65abca-5bb0-4da5-b5dc-3f3d8092f1c9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d9908858-1958-4a8a-84e2-bc06c644dee8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d24ea2f1-e871-4e37-baaf-5de1086ab90a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0f626b4-c710-4255-8963-7d2413e68f86",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767a2ed7-6483-47ec-b29d-9ec6e969a206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3788d63f-7693-4a8d-baaa-9ec41e9abedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c248945-96df-42af-b295-9daa4de53cfe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1a363a-ef20-4d8b-804e-7eebf93b7f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa59c2e8-ea20-4b2e-b264-dd62b236772d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e9e36d-6627-4d82-afa8-32e274dc8597",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39b8472-5a98-4c01-8638-1f61778fa9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e132575f-08f5-46e5-bdde-bc055a3d6f0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b3a0a552-5c6a-4cd1-82c7-4f5963e04f10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30618f83-096a-48c3-85b1-154b6fb22c4e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f19e5a-80b0-4eb6-a996-9bfc86387b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec3e76a4-d2c4-427a-a31c-077eee399ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53d4144-d7ec-490d-8bea-883138000935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f64daf-8c38-4bf3-ad79-c1a37c2448a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0b111947-9c23-4769-9eed-e13830046ca3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b1d82fd-4263-4c98-8bab-6a7d82492972",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2de3952b-3387-4af4-8aac-0ea3b9208b62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6122d3c2-066d-4071-bd7f-59b1002c5f9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba33c01c-48c7-4606-9fc2-c55a6f170d0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3b9d3ea0-acae-4a04-bfd0-32e4deeebc0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa3e32fc-d056-47c4-b804-aec56303d2ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd2898a7-744d-48a0-9002-4a9da42bd89c"
            }
          }
        ]
      },
      {
        "id": "29b57dc6-a4b7-4f62-bfb8-2fbe8dfdc303",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2c07b288-6b2f-435e-9f01-416dd35d2cce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63b3b0ad-7ebb-4330-88dd-4a441814af15",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "49958f77-e359-4169-bcf5-0796a77949cc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d72d392-c49b-4b81-9be5-cfeaec9aba01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74ae377-cf50-4760-8b57-965df405849c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2ab287-b66b-4340-b7c8-db497a02df13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ff2d9aa-3aca-4412-a753-bce23f324c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b09115-736a-40bf-8627-4d9bef5a3fcf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345ed4d4-1942-4f23-9db0-da2dfb7dee4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc02355-c71b-4c70-b06e-6df779176069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f8a51d-8c27-4226-9e51-48bdcc0c2f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec6d93da-af00-4164-a8d1-5226a75855ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1261556-f1b5-4b26-a7f3-7e70116a544f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67c2fc1-c026-41ea-9747-5476bda26100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c457010e-6868-4d47-9b7d-35df3bf92c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dd0b09-7fb2-4309-b74b-0e8d02b2f574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceb6a263-121b-47af-8070-0310ca68e7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e954e86-769a-461e-ad7c-95f40ef25329",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2d0abb-81fb-4462-ba8b-fb64e4709db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfd4cf0-494b-49f4-92f0-1e976873f4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed37996-0f80-4142-b49d-cfdedd5e1c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e617a4-ac76-412d-8285-aeae3f5809eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c1dd1e-f1e7-498c-8e9a-34914c424574",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b6df05-97cd-4447-9256-4a5f65b849dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55d3ae4-7617-45d1-b5bf-a74286622a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa3db74-86a5-4fe7-b817-387dddbdc6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cb34940-942b-48b2-afa0-038646ceb1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1e6e2d-6283-45c1-966a-9aefe6377da1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1041ebb5-7f0b-4b90-bbbd-90cba1ea27f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a728fded-4dbd-4138-a017-aca2c8bc6f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b68b096-d592-4252-9824-6008c5a706b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30413365-8ba5-424c-8c3d-76c0625b7f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6687bb5-6c1c-4f32-9dba-50865ee54ee1",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cba0cf-bbd2-4002-b334-6634ea4324e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904afba7-2c4e-4084-a6a9-ee536ac55e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8762b9-8131-4be3-bb28-8104d77c0b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32883496-7c5a-4b70-85b4-41f8ddde264d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea084d8-1033-4470-958f-6db36ea6e5bc",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "689c31a5-a18b-4212-b733-c885057844e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16f9ec1-422e-4e8d-911c-62444496134e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09abc5fc-4cd2-45a5-a710-dc19643bf0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "052508a8-e7b9-4f46-82a1-ea1e1dac838e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1bab24-47dd-4b60-acad-6d057df7a201",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4a0d34-535b-4538-bee4-4d7410f70b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9e114e-6359-4f77-b352-ec55ff59ad5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72a96de-c49f-42e7-8d94-67c26934b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cce9b8e-74f4-4c49-9f29-49e7257ade13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7830eb5-af57-4eda-9747-e0d31889e045",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487417a2-954a-4d5c-b817-1a04327c20fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eab1bbd-0d82-4e98-9218-279226275e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d8d248-93fa-4f67-ac47-f47d6a0ff162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3075b29-735a-4564-a522-a16683921daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd3bd45-0d6c-4ef2-b2a6-bfb57b592bab",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16b7cfe-c951-47ed-9001-3aa760cbe059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c437f280-5a60-41f6-b5b8-f337a05d1fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce809ba4-f7e7-455d-b03c-c72c83f67c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a5d6ed9-68a9-4493-88d9-10d5bea4a7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8305120d-f9e1-417e-a473-e0f475adc991",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eae934c-4325-447f-91ee-90ef2d8288e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f325f4ce-f97a-4258-92bc-fb25c8e82290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae96ac3-b2fd-4f2f-902b-87437a8c63d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3bc9940-2917-433c-8071-ae6b3d2d9a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34471c25-3492-40ce-b34b-dfc6bdeb74d5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8daede39-b458-4c79-821b-b6bf3d757fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32deb21f-3b73-4a7c-9f66-e62ea7d1f28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "067163c4-edeb-4035-bb36-95280ea88dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5be14967-a6e2-4f8f-b0d2-b19d1bf0e8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56719f03-a511-4626-8ee3-f5cc670b08f6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29750e0f-fe43-4e22-a1e5-72909d1a78f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921aa98c-5ee2-4ee2-9a89-997e021814b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef491e03-7c83-44c9-b689-1da895fa2e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44d02c31-f0e5-4155-a68e-f3ad686aaa83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94d197e-675f-442f-b400-f1564a891730",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d99cf8-5bff-4c85-8567-adfb6b4b3d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce74e8c7-1558-46be-988f-8d9a51672733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ed6d25-c307-465c-af35-5d748dd813f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da472eed-9526-4f4b-964d-0feee907ae52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334ff93b-0985-45e4-beeb-4a881fec873b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72db145-11fc-4815-889f-e11d6b3099e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2161f138-6ccd-435c-845b-fe8e8383a765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360ed6ed-f503-429e-9789-b5488471b942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fcf0012-3f6a-4cce-98e1-fb5aacad9825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9e9c90-5b7d-4ba0-87f1-7407993d500e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b82b770-a88e-4250-9885-e2657d66709f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d646af22-16a4-4bd8-bbea-c7bc6fe487d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a7650e-9712-4fde-b763-9d3059c72ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c4c81ec-0284-43ce-a622-7042e51d76b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9706a5-4e88-4ace-a52d-fd3697ab675b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd7341b-85c2-4f7f-a6dd-b524e7e1b4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82054bb9-2977-43e7-a704-72b742d57a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296b3b97-a9da-43d9-b866-21b5152781d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff59bf35-4377-4ec2-a72f-b06e6d19a076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde51525-7fe9-4270-85b5-455352aca3d8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba20166f-892b-4c5b-a322-8f0e4a394b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96715e9d-e74b-4821-9cf9-ec59b67604f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a40e00-77b7-4be3-9748-43a16f27ab15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a3df19-d248-46f5-92b0-751b27501604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b8328e-c4c6-4dfc-9282-d8f9e18891f4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380ee6a4-023d-494e-a821-d432b5614164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5403a16-a536-4639-b946-cdc708a91705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3ace63-145d-471a-9fbd-a2db64f41236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5006b48a-114b-4e1d-9606-86559a2d5243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6be059-9180-4385-ba1e-b409f3bfa7f9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5eda89-45da-44b0-bad4-5e3ff0237eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c4455c0-059a-455c-8436-cbbe1fb3dbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3d44ee-80c6-4bba-a11d-bae799ab52b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b475a2-ab9d-4563-896f-5099f9893482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3980739f-f21d-44b5-a3b0-274e34e6d752",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92eb537-4a50-4b0e-9c82-0bae98d8e115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee475a18-7b6a-40c9-9115-20afd3e03737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed09ec3-823f-45ee-851a-241fd1cc7531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23780bdc-82de-4c87-bc04-b3f42a6da726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690c9e44-f50a-4139-8c41-0385dc4cd392",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d58e51-ec12-49fc-9383-a7955072fa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc34ecb-7e2c-4bd5-8f7b-b75e147fdfcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a059cad-c92f-4303-a03a-5975b420ac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cac44f-702f-433a-bada-fdeaef0bb150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d969c2bb-4fcd-431e-8eb6-eae1c3fbd721",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa046a97-9d23-4526-9453-faed172f91dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53aed8d2-7331-4980-a602-9b4f6738a219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5688bc61-dd04-4e22-ac21-0e11aec9d4a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "32c35654-edf3-4432-815a-ed6a3e92c39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb091ca-fbc9-4145-8468-82d64c05e044",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c5423c-f74b-4568-ab8a-a3f55539bc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7328416c-feeb-446c-a870-a2a942895fb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac1226af-3f0d-478d-918b-018c29104238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07a7b196-8e5e-4e3f-a9f0-c612aa8cd109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d32d89e-c619-4446-a099-aa1ae382228b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c93c849b-fbab-4859-8b82-2b7b88aba24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1995ef-d26d-4521-a028-9c6f6a1ae701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30306ff6-9aa4-423a-aeae-753c140576f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ee06d7-3bd8-4753-ad4e-f469def25645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b44aa1c-9b23-4e4f-8366-129833b4535d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90002003-f73e-4354-9c77-cc4b6788fb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad48edb8-fecf-4d67-b4e7-afbf8f470253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c44ff76-e8fd-4c99-a711-670c3b9ac0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cca37457-0d64-4bee-976d-7c2ca64661fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7b943b-5b65-4724-b2d6-b11a7886e8e7",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaad50ff-9235-4300-a90e-242000dc91f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc20831-ba42-46d6-bc60-dc1e1943736c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e32268-d3cb-487c-a253-b6ee41fcb515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a31108c6-5ac6-4d4c-8192-c2a897c412c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c99017-19b4-467a-98c7-69bb52a165ea",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b771aa52-4d51-4a54-b770-d41904569b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8fae66-0fc7-4726-8ca5-3d3c0750dc71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a64c28b-e420-4f4c-9822-894935718b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d676ead-b8fc-44db-bd3b-38669518f5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ba5e05-c4fc-40e0-ae40-0aeba6d5f987",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2679731e-847b-4e45-8962-1c1370556734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b419df-1b29-4c7b-a840-2bcc208b55e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b43916-49c6-42a3-8c0c-c4c7547ddc32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f04120c5-3d6f-43c9-ad5a-eb343f8b0d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b6e883-d8d5-4ec2-a7e4-9f94fd915983",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcc614f-0d39-4af7-9ea7-892bf183c8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848b4d78-86fa-41c9-a2ec-8496a4f3f5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdc3f1c-a863-4ae6-ad43-c2281d7ef741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2577db1d-52d0-4170-9ef9-c4591bb4aaca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fe6acf-e401-4896-9bd8-8de54638a606",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f1a314-29b5-4edf-afc5-5a2732acf467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "805fb772-d2b1-4e7a-b744-2da4d56eff1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc45019c-695b-4d20-987e-4265dfa1da6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e87371-b07e-4396-9366-77d20f8050d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2ab553-c147-4917-970a-f976b17b871e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09adabf0-9de9-4dfa-93bd-5c6b89662ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d212a70-06c8-4b73-b656-358399c34c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdef66a-9423-4c70-8e2c-bbfa0b7d4d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b143bc3c-c3aa-47a9-a1ae-d31409cff62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb805f31-c44a-412d-9acb-7f682bfe5531",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5184a3b-4793-4978-a462-cd7599f5eadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0fa6821-059e-4eea-bdb3-44c2fd27399c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e30cdd3-a26c-410d-a48d-d1c4beb3ad76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f12846f6-aa37-4c47-83ec-364893febe14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3d384c-b09e-480e-8fc3-278a933ca96f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8a0cef-defc-4df3-af6d-fd5d2769f838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea6b496-1868-40c5-9f2d-7bbcb634294e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f21a177-c2a7-4c10-9d55-66ed65770cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "48368278-dab1-4a76-8b24-e4bf2e19da23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f5816d-4bd5-48d4-b7cb-35fc1b7a724e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87e5fb0-6aab-409e-b124-a28fe5e7f871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99d9d90e-867f-4ec6-9dba-61823bc8c9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590c88e4-97dc-4aac-a72d-f8e854ac4fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eaccdcc6-315e-404a-b475-0f153c9dba83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d41147-e8fa-4461-adb1-2966ba906e43",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbe2ad1-ce7c-4b3c-9052-f2a5e912ad2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f91837-7598-4c03-8438-731baf012090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1143a08-eb94-48f6-b011-f572766feb3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d2b6d8e-4f0e-464c-86e9-101b28142788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e49085-6d64-428a-a3d0-f3509765db45",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba05582a-ba8b-4604-b020-28d2a77c6cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0faf284d-4b0d-497b-874e-845be77a0aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c526dff-55af-4dd1-82cc-66526ec822e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "51863d97-ddab-457c-962c-e6fb64b5c8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b80b7c-0646-4dcc-94d4-3e5dbb1e69bc",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c71670-de0d-465e-b386-d0ee1274685c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73da8a1c-0ccc-44f0-95bb-a50112c4254f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f33509-c877-48e1-88d6-0f40a7282526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "242f1c9b-ed31-41ce-ad10-46e932cbd52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ea2a31-9d2e-426c-97af-42f2154619fc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a166f2dd-3017-4fe8-a0af-6cf896891e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9570b818-b8d8-4605-9b4b-6e2cdeb2ea98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b1f912-f6dc-4659-8be4-6a101249fd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a014da-8d88-4dbe-8edd-d01ef1a4a2bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20a6e3e-cdee-46f5-875f-b53abd418c0f",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56165341-1893-491c-b839-ee677c9599bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d13f06-d612-4d45-8d74-1e326665f1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3352859b-9d32-4d26-9f61-7445a705608b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32888022-3422-4bf3-9d86-f4d16c299c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57eaae4-edb6-4276-be1e-7e3c1175d8ba",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a457e4-dbe3-40d3-820b-a8658e19b341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9385888b-dc05-4363-a4ba-59abdafc6508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96240a0a-de7f-45e7-8c96-32200059a73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5cacf2d6-3235-4686-ac8a-b640770e3a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09319ad7-c09e-4fe8-9658-ab4e9cf798ae",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36448a54-e622-4990-9aac-fe5fbd670326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e01753e-bbda-40d3-bdb3-7c986582d060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f01f905-df84-4726-a090-10fdd4159ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb86244c-483c-466b-8631-ba65cd2c5fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773da218-197b-447c-99e1-e013ce35e58f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7cb6ee-b188-4cf8-9255-7b5886bbf699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb5e0c39-9590-4f23-b54f-286527616912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65409a97-3cd9-499f-8143-24831d2f341d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b9b2af-714f-419c-9a6c-84ebb9a16a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f307c77d-9c21-4954-b3bc-90845f74ef87",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1782251-244f-42ec-9927-70ff3a2541c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53a49f6a-dcaf-468d-8121-5dabd19933ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8ab3c6-58de-4178-957b-b4520146ad2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf80104-b341-4181-9d4e-04cca52148b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3210e829-8523-4125-8bc9-0e47b677d446",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4183c217-5278-43e6-9d94-5318df4add9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51200695-7023-47ee-857e-825810f8e56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a05cf67-17e8-4a13-956f-0f45c813bfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1250f095-8f42-4389-847d-9527443a5888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855f0594-274b-4179-a2cc-e50985edf038",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f3c801-9a84-4e26-86e1-364723ebbde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d46dce2-646a-44eb-a27c-ac95e4a36f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ba4149-1ebc-41b2-9420-72aa692a44c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "faf860e4-dc92-4c24-89b7-5e66ac3bf41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e8e17a-3e45-4686-9075-590bc089e06a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0686ce2c-99de-4a1a-aa6a-a0da860b0c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15e66f1-cbea-4afc-b875-822d60178e59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c2d8a3-f59e-4c94-87ab-b815b5fcfc55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30a9fad6-33b4-45c6-b84d-479e732887d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d180ec-afb6-49e9-b770-414c52f8b00e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9794104c-7b3b-47f2-a330-a2f65b208c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899d3b04-cf3a-4dab-9bdb-44303447bb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b2270d-fb90-4a18-be32-9782e7c8d1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2ab5b2-7859-42b7-9cbe-34022f55d6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab2d83c-bdae-4fa4-9332-4a09935ee811",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b3be45-c82a-4009-93f9-22c888adb31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95301c5-dab6-4db7-a164-623651e2bfa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7ecfa0-165f-410a-b0a6-3bcf8a4e82f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0655c8c5-1ab7-443a-8d44-ca10cd3a960f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6804748d-6d5d-486e-871a-7b0939d57b26",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2127da82-947a-42c4-be90-87628e6ec99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5445c0c9-72e3-4088-8a82-7aee3a19b5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d4a7e7-fcf6-4dde-b696-71f5c22a58b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ce6b8a-8f38-4281-8497-979039115f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bce1e2-361d-40b6-9de6-e7cfa9ccfd06",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4c01b7-e033-419b-8921-2b056a2ba4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62a8946a-a70f-4661-a03b-39e59ea1d571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08630f0c-62bc-449d-8364-92ed20f057c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de047509-a48a-4132-a9ef-8584e3b36a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d86a25c-ffc7-47d4-b596-c2101e28a51e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2350ea-5f16-4e48-a777-e88360b2c738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4a3441-5df8-4e4d-8258-48b31a73a92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a5898b-98b0-432d-acda-4594eaa9f234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1cfbcf-6db6-44f2-9f04-0c11ea2b49f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d473f1b1-0fbf-4ab9-b5dd-67acf802ea1c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f253ad-0d5d-4170-80d0-80c00f0e0bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551dde50-a071-4cc3-945d-e6496f88c88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea34bd0-fa01-434e-ba43-8dedb9356a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7607a2e9-4d5e-408e-aec8-d7081683d145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6603998-ed1e-4b73-be53-326b25c06206",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9b2707-3b05-4298-9547-e6a54a39f2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54660b60-0108-4b3a-8ec9-6989d10deca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d19d377-067f-4728-a447-d74500ff7171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd95e8a-0211-45bc-b6e4-595e830bccef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1233d752-abe8-42e9-8b41-eeda566e3809",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca1e2d3-195d-49b3-9ad6-0c7ecbde15f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b09db1e-ae4f-4833-a69a-0ab6da0689d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9193a7a-06c2-4f1e-8780-2c2a55659a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e77e4c7d-e034-48df-a66f-5d76fb6e5313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad10898-3723-4336-b6a6-22ce4b45aa15",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edda77b7-c190-43a9-a41d-566e0eac1482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4f11fff-c584-49e8-bd16-f877190afc1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd61745-c55f-45b6-8e42-9c25fa29e91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c94fe856-5d4a-4bf5-9c31-48805336cb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b252c1d1-e24e-4367-9249-08a924e49358",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87372f0e-03f4-45c7-9787-ca49a41e70c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2342a490-3722-441d-977a-81d08fa2880b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423bdb6d-764e-4b5c-a7ee-f9092b99fd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cae40de-c9c0-419b-95d4-a328d0380cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b94fab3-7968-4871-85bf-f0e51bd123b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3d4807-5132-46b1-93ed-307048a09523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bb4fbf-96b9-46bd-91bc-a9e26640f86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1557294-5250-40fc-8326-fa61a8ccfbea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e744b1a-3423-455b-bd08-d84e218634dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b70aa0d-a89b-4dc6-ada2-ca3a054fd1d5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c8222c-2dc2-49b4-9348-6eaa98eaea2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97340460-f2a3-4262-a9f3-7b54fa753401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dab166f-3e86-4a9a-84f0-85332fcc2d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "875d9f79-4268-4e62-a7ee-662750d37863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7329940-ed77-4e97-a3d1-edac722acefa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da07862-e6b6-45b5-bd69-4ec053d0ad62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9692b3cd-1ace-4ec2-ba5e-1555cc3c272f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1539322e-89bd-4f79-b6ea-6a05b66f600a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3532bc3-c7ab-43e4-bf3f-06c4b350be28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abb4c16-04d5-4fe2-be92-05bf3d1c27e7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3112c6-f669-44ae-bd65-f28b84237f42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ee1b12-e2ff-4643-89d9-ea5298ba62e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51a8bf2-9dc6-47c3-b745-517d856a1223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a432687e-218e-43b8-b978-454193a136d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dc7a499-92c2-4b84-b46e-071ad65d48e3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e4be3e-f42a-4bd1-8777-7f7f55fb8cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa72565-8cef-44ec-bdb5-08e3bbbdca3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d30868c-58ee-4b8a-8eaa-d9332d791500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "05b52814-e437-43c3-8275-05189c9c75fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f48b146-fc0b-45f1-a8c1-d4f9571ad3da",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc671f2b-69f7-4ff3-bbff-fac69e329c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08f7141-00ba-46b6-9d07-37f6e56b795d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2d69d0-2328-4f95-a103-2c4dd3932c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e0df38-e2e8-41fb-a8f5-3868bc39f84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b462980e-5593-4676-ab40-3b54cfeb874e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173b38c3-4124-4af7-b4f9-5189a729b7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1f002b-52f2-4cdc-bd35-b7efd430b20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc466cdb-2d42-4ee3-9233-333242a09e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7de5d6-4576-4fd7-a19d-1404f1123f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0baa32d4-ce48-42e8-9a97-24de77dc3deb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d515e8-b025-4606-afe4-a6be2aa52606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3922c57a-8258-4a8b-aaf7-76a735edb58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9369ce5f-4ec4-42ae-b943-f268b84d0243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb0cb12-e85b-4d7c-9722-10a472c62a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd25811-8c43-4b67-ad7b-c69a6fdf3ff2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6b5e4e-4010-427f-8dc5-358d300626ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df129a8-bad6-4cda-995b-60c7afe4ab55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4252339b-b44b-4e39-939c-2fc63740e031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4bd21d-9807-4b61-8ae2-a8b6fc2a3abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617d2cc5-2c5d-4e22-bd8c-69d242ff33d2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9c4056-271a-4a60-9fcb-cecaeb410746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e58a04c-b1d1-46af-a3c7-c167456f5be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca79ea3-578f-484d-8a77-b41c433ba5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2192fca-f7b7-4d1b-b259-ff60272a8df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598843ba-ecf2-45b9-8710-f4118b5f83a8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbce595a-6189-4f61-9fe2-c147c8605d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba0912ca-e3d0-494d-866d-6df784d37651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eeddcf2-3d16-4634-9dec-b0c191a0f54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2d08d16-335d-4ca5-92b1-191f3afe4989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d78482c-8bc5-4ca2-bd98-c9edf241bf4d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "529905db-ac16-46ab-b7e5-0bf34d0aee62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adda428c-e07f-4f25-912c-cde209cbb158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9201938e-aca7-4ae7-877d-e63f6f1c6774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60fe2d16-dadb-4c18-9c4d-57a287e1be73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d10c40-93b3-4bf0-8e98-9ae384c47b1d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885e02cc-a784-4a64-baca-6adaf6e00cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5682d714-8e45-4032-84e2-d2e9accd1533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc4fc47-b92b-42a7-a911-6b437aaf16df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ffdab9f-628a-4045-8a20-9767c2e60d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26306e2a-ae3c-428f-adaa-425a375101e6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cddaa9-43b9-4c50-8b60-9875c060b85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14ba717b-32cd-4811-a52b-51da169b94ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393e8c27-24a5-4175-b667-79b984ec0ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f718fec-f897-42e4-888d-50dea826e1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680405b9-5381-4be4-a495-0d959fd3b257",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e0a6e2-1fa4-486e-b253-04f511e5afc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e7e893-795c-44f2-bf0b-4ee61c447177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a0e14a-111d-4731-98af-94cc25e3291c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "90c54c5e-fc4f-4bbd-afd9-df3330865b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8d16bf-6391-494b-8c55-6a7b7f9cd41d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee6eb37-b003-473a-9031-fde78cfd26c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c12491-e095-49a6-8e8b-762ddc17f03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ce6436-2ce5-4a6b-b834-e269bb2b1a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "194f8515-c8e0-4a40-8033-6e774746e2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb4dbeb-d949-4133-979b-6db2fafa5dda",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de96ce21-e954-4350-a249-52e902c1b08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8ba52e-676c-4791-b5f9-c66218b62080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491f1d18-4084-4944-ba69-ddb26d22a667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3358d84e-d097-444d-9d61-22732277ea6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe2b143-b1b0-402e-ae3a-dd215d2ecc68",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf11f53-ca43-44ba-ad32-62c59d26b1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07af115-6cc5-436c-88f9-f0f966fe40fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5bcd80-c725-41cf-ab11-2a09f8e815be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c64da9b-a61a-444c-9980-c71a12c4551a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68ffa94-1352-48d8-9a09-5ddd76c5f8a0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fbccbfc-837c-4780-a611-74ecee93803a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782add97-50a0-4a37-8c9b-c140bbc02ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c277e952-b674-4265-8e55-d2d9870e4728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91f7970c-ef63-4a2d-b2db-08db0f0b6620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c4468a-54bb-4930-a181-1459da2ad533",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841bf208-dbca-497a-aac8-525e25b020f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d099ce5-993e-4342-9ddb-3074da07890b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059ed0e7-9cbe-4dbf-96bb-0ab3643af429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe483717-deaf-414b-9870-c03a0ee0657f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d9978f-3a00-42e6-a849-56850940a67e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7ce4e7-2d10-4a2c-acdc-3e8c4b90d700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368d6c85-8bee-452d-9651-18b268ac005d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f723157-a5a5-49d8-bc4f-f94418ec7b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4f2e7e-414a-4904-a5b1-c246d222c599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ccda98-238b-453c-95ec-57e3fbbed63b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ed7575-73d3-4a10-92a5-d8d3e22544ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14259cc0-b5c8-4fd8-bdd7-54ada389873e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c35807-aff3-4648-87bb-023c6f8816df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a4404059-2885-4cd4-bcb3-aff92c272d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967a213f-967b-4ba8-8545-c5d8250d83c2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77772f30-d329-43cc-9b21-6caec7b01e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcc442d-2b65-47be-a782-94c3e4975b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab89d71c-f236-4d77-8338-0324f1f6a8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2004a10-bbae-4a49-b770-87ee26ce6b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbf81ca-4dfb-41bf-8b90-8bc5fe7cd9e2",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f670d566-eb34-453d-8090-944019bc7d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608ca9af-2551-40d0-b80c-615ac3f83dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e1cf88-c626-4492-9186-e8554c9df235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98326e0b-fcf0-4e69-91e8-7bea45b49a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0492bff-0920-4de8-9357-c36f266522b1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c338b2-114e-43c1-bcb4-45ce2f96b67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541f162c-d48c-41c4-90ea-3a07fc9d6751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49b94ae-5970-4e54-a435-332174a65a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b818b8-a561-4c2e-acb6-0504c17d3d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d574c7-e6ff-411c-90cc-452b3cba6027",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2995a795-5470-4392-9529-d0e1d9e5c985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fddf7d7-2f27-4ede-938b-0c031cf401c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13699f2-f9a3-46c6-bc2f-d8aac42607e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e724ff-b9ce-4759-af05-51813eb9e5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17c900c-155c-4d9c-80e2-07150e04ea32",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f93ed36-a539-4766-90f0-c0b4315cf64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9def2d53-19ed-440b-8273-9698620f0a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a06e4a-6060-4ce7-8b9f-008b3fa7b249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d755d186-13a0-46a1-9c8f-588c15ea351c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0947f689-953e-4020-9900-9983f8aef90b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87746433-b999-464f-9389-22fbcbb38eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1e70e8-f2a4-4a64-97f3-e99973906f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad28ae7-18f9-4b5a-b3ee-e1df86ca29cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c00f8a84-2ada-462d-8183-901beaeb46b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1f7296-0ef9-4e8e-978f-dd0898ff55d7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f68632-412a-4b93-9290-2210664d4914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5595eb8-6619-417c-9a05-d758b90d9e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fda1c99-0898-469f-ac47-766ae1a38e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "47fb7c23-716f-4fb6-9c63-d9827315d351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796fe7dd-064e-4e6c-8fe0-6534a3448e81",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a15a1e-8aaf-4a19-98a2-b4ef57eea8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cf7643b-8b83-4a1a-9855-e6898e60f119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3d2e61-b515-4780-91b8-06265f25d4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0990f2-8ffa-466c-b3a1-0b896a465e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986e7d0b-9978-4022-ac1c-166dc6a5536a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41c9fa1-0435-4f0d-b36a-44a453ba684b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b195cb12-2e66-4bff-be30-41456c78c871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d0dbf9-3920-4577-8591-43cbf50e8b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd3d9b2-b810-4548-8926-16587739f0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bc6b62-3ef3-4793-a0a9-b633ff642cb6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd9ae38-8a67-470e-a9e5-fc5d08899575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa50e29-b757-412a-9bfe-aa5a96cb53b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c7219e-99e4-46c5-9ac3-67b459f91aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "865bb608-5e3e-4a20-b30f-4ef9f81290bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71eb0f2-ef59-4d58-b72e-2361ce026bad",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55af9eb-21fd-49c7-aa71-5729d04150c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf80ab70-f507-4495-ac9e-a2329b63ec2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee22a543-a346-439b-9d05-816e4f248f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b3aac2-b8e8-49d5-b74d-d527bd8e68a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3acc8291-7848-4727-a441-b3204be7c2e9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8f219a-dd28-4147-b4b1-f455f01697ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0edae67b-15ae-40a0-aa09-964e5e2cc921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73e7bfc-6baf-4b39-b0df-697c29d20003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a46e7032-44bb-44ac-9f4e-ae7a18189029"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f254ac1b-ffda-4620-a81e-119e41929bcd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fc1c6df-80f7-4042-a003-7742640ed3ef",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe92c15a-f9e7-4001-aec5-5a84b927cd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1eff0536-a3c9-4a90-b543-fec630b9cd01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d484a326-4714-4fe1-8c3e-cc6c70bb0b90",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0821a7b1-5232-407a-89e2-9995242a4719"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8e3babe-f21f-400b-9534-169fac40b4bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2572749-d7fc-47fa-8078-2d0b0ec12df4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38c769e0-b078-4619-a6ab-901b9f757f5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30b7d649-4b50-4d56-95f9-43ff7ead303a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75043be6-f6d8-4e98-bc49-e76d9d9e55a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ae86fd9-4b08-447a-98cf-dbf24b9baab3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7842db32-2da6-4a97-924d-506a75130bde",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "551f8674-485b-40e7-9e5f-90688f6c033b"
                }
              }
            ]
          },
          {
            "id": "b48ffde3-fced-4e86-80a8-3fd257a4bd29",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2dc4030a-e4d8-47d0-844d-cf9bbedbc17b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "37944c71-dc07-4fbb-a738-0e136ef0e09d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b46ee55-8f61-43c5-b783-c71157f7387e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a836481e-af55-46ec-be3c-bf586f4f2f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9820cd47-3363-4de9-b05e-6074a4a6f969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2964a4-0a7f-4459-8b6e-0b50c30ad79c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad542b5f-ae4c-41fe-a1c0-60e5c635a25b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ff02fd5-759e-4cc3-a5cb-d583cb9f21d6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b816bf27-e464-4945-8745-15b0455a2fc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a437d20d-980a-4634-9d1d-7fdc50c8ad12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9dcf273e-7759-4ff5-a522-e4acb4ec3508"
                    }
                  }
                ]
              },
              {
                "id": "25d704f6-ae34-4662-9ca9-46eeda171580",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da892ffc-8270-413d-98cc-81e6d155dfc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c737b6b4-f2be-4305-ab72-dfe6f6a26efb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "701ca04d-4a5c-4229-971a-c5a0b06c09b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3a1019ee-6b51-497a-9ac2-5197e01ed7ec"
                    }
                  }
                ]
              },
              {
                "id": "7f8b5bc4-e2d7-4515-92f4-acbbcbc930ba",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af775b58-4a4d-4f06-b3eb-366743232ed8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35457cb8-59ea-4af5-b65a-d4c55116dbc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb348b44-8faa-49cf-a023-3b8c490f12f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7ef75d1d-6276-4f04-b7d5-0bad290e878b"
                    }
                  }
                ]
              },
              {
                "id": "c21576b9-0302-467b-abf1-0ee7da6e01e7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b280f0a-701e-4b4a-bfe6-58d9c2b54f8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad03d8ff-3974-4fa6-8223-9893bcfaf750"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbdbe799-b669-4a3d-894c-a237bd425fec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6fb73bda-66a2-41b3-8854-677dd7e32f3c"
                    }
                  }
                ]
              },
              {
                "id": "f81a34f3-0987-4d3b-ad10-113954b08be8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00a99ef7-e424-46e2-ba73-66dedaa58692",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a2780fab-a5cf-4c95-a5c8-f6c6e4ba7e07"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca1c24f2-757b-4da9-b826-9e9438f5f4a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7111876e-5673-42a0-abd5-ae29c6850439"
                    }
                  }
                ]
              },
              {
                "id": "f5c1704a-97be-497f-ad37-14a7f2cb37fa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e83904a-c2de-49cb-a361-37d9e18c0231",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58abacc4-f1d7-4dfc-8ecb-f1eacece37f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "911e1944-3f6f-4ea7-aa1f-3fd861b5924b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9ac3e83-e11d-49e2-8825-e719506ae5d7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bcfd5e58-85a6-4469-b0f0-a58d0b54448f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "786e8386-da40-4965-999f-d1e1670f8afe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9e44a713-2b2d-4e03-9193-a3a4596ce257",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8fa10c6a-d4e4-4bfe-b535-edfeb9494f87"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90af3f5f-1352-483d-86aa-c3b17f648e67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "eda693d9-068c-49ea-a0e9-d2d464d46497"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "424d347a-d08b-445b-8282-1604c09eb02a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d0e7eb2-888c-4b81-9811-9656e4c0304f"
            }
          }
        ]
      },
      {
        "id": "5f712480-7208-4440-83b0-6d5da5ff2f51",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c85d7d25-4349-4b9d-962e-d271867537cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "555921ab-827b-430b-b16b-3f7d55fa2f24",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1572318-f5dc-46fc-94d0-befc5fe268ea",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952d726e-34e0-4f46-9b45-bf43ecf86e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ea94f1-ad1c-4c76-b42a-233291e29c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9db69da5-6a51-4089-b5e1-3bbe2d416225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbb1064-21b2-42c3-9792-0ceefaefec48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd73db2-acaf-4e96-be6a-f0e72676d435",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6009dba4-2ef3-4356-819e-039f81cd3d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9603fd-301d-4936-835a-915c82ed98ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd8c791-81b1-45cd-8097-9e14e076fa69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f974e6-674a-4a73-8920-be5efa968207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1dd764-223a-42fd-84b8-5179de3a32e9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d24e8091-b892-49e3-9180-afe93c1fc3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f15ec87-ee9a-4baf-af35-f3ea16add544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b4e1e8-45ee-4598-911d-9a58813b2d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe603cac-a74b-44ca-8613-31754602f2a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc88936-675f-4736-9f25-edfe1b83dead",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fadb6a9-68c2-4ddc-bf1f-e459a08a420d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8fa6d25-6c21-445f-81f8-c57d0807ae38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c351a9-229c-4e9c-8d2b-540906b4fc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd15e26-ab6a-49d0-a356-721bc00c6b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54b5f58-9cfb-420f-9a24-a4f3b0b2e110",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3ca8dd-3fc8-482d-93dd-01df4e29d114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb15995-9cbf-49aa-ac8c-9c30aa7c4331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee581423-2e81-4bd7-8bd2-f91687db115c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a717fef-730b-4ba1-a7e0-f4a8e41674ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ea7e81-66ce-49bb-b1f6-4d14821429b5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13355e5-e8f4-4910-8c01-180ee79f2921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad00387c-61bb-44fb-b8bf-e88c0454314c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feca80b4-ab43-4860-a14a-2c1911f65818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6aa571-9a3c-4099-8221-26d457a1a6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f471b2-1826-4afb-ae97-3a3887e79098",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fa9c29b-d4c1-4212-a341-cf3e0d4254b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbca2483-2e22-46ef-810f-997690144ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31b9b15-2cf8-447b-a9ad-e782508eb612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5efaa52-6d78-4a0d-b787-e8a552fbf2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee966f2a-f8a8-411d-a697-78960d23179e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a113e07-821c-4055-a627-41e2255d52fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74d2c74-58ca-49e9-a8e6-3547ed8e325f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0154000a-fb82-46fe-834f-f52e8a02cebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ac6fe3-1797-4e57-8fd2-f87f108155e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2647f2-7cb6-4102-87fe-5505c65e7c01",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71db524e-02d2-4715-9246-edc05a2b03e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833c2f32-2711-4869-82b1-4adb967906ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e09180e-b283-4cd3-bdea-3b1b381b9223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "456d6773-6150-4abc-9b02-9b4c31d95da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf9e0ba-efe4-4725-8cef-1b7c5ac4232b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ad3e62-5109-492c-9ed9-cf0fc33e1dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3215ab5-0927-4d63-95e9-f4b89d0436fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701ae68d-b10f-42dd-9d42-617ffc1e5a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08ac29e8-620b-4675-9e7f-aada733016ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341cd441-934a-43a3-815c-d8d2d55bcd2b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18ff832-9868-4b00-a2dd-695148a309de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0063d0b6-d641-4fb7-8619-c8694246e831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff0fa7ca-0a99-42c9-a838-9596224d8b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb0c888-0f96-4dd8-bb26-ef23eee6cd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3280982d-3fba-4781-a365-489d35842db6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07771c44-c7e6-4960-9a39-30d3f9eda7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff163b9-ee01-4659-abc5-5e9e77baa93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ee18d0-8c8a-4e68-8161-d9767c775a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d334f7-7b67-4fae-886e-ff3d1e2af963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356b7c00-8f7c-4017-a09f-3dc6e80458be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55774dd-41b6-4db4-a09b-950e51a362c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9d321e-5f24-48ca-a712-3a9417ebaf8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5396813-bb1f-4a1e-87de-637f7e4439b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f61f123-329f-4aff-89ee-807496fe83ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3dfb8a-b108-48ee-b04f-8b40e51d642a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ca37ba-97aa-4173-94c4-4afa1957d664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05d2169-712f-4a03-8f29-4ed0f0082c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3f63c6-bc28-496b-8726-8f2f26837340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "562d6d03-ba73-47ae-a243-2b83ad3430c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3371053-73a0-472e-878d-11fa8851c63d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b09f685-27ae-4aee-85f5-ca89e46d0808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c402779c-a3a5-4435-9546-5ef7b1c1336c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711d9db2-6c45-4636-8b95-262e59f02228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d48e093-834d-4604-a311-fd060ef02991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2519ce-bb04-4c44-9d6c-76f2d6ec2746",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de5c3a0-6b23-444e-a071-1c02f25618e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81a92df-0b5f-45e1-b423-ee2bf313f979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4387b28c-d98e-48fd-9b43-b5fb92031320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "21ed739e-f458-40b7-a87e-204e46cdf590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a939c06c-903c-4063-9d7b-b0da9b8c425c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707d5516-fc4e-4d64-91bd-5cc4b157cc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "382051c5-580f-4a3b-bb62-b87ad542955b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a055d67-06fd-41d3-a827-cdba4497a194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "caef0ffb-c3c7-4bb0-942c-5aef0bbe5537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc6d60a-20b4-4567-85cd-26ff1421166c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081372a2-3eb5-46c0-a676-7e06cdaf438c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7257caed-c826-4a2b-9a52-7b7fb9495696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144a551d-bc51-4ec4-805a-5b83b7f91e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da4e654-631c-4745-9839-e080937f9cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30e3f92-ac67-429a-a85d-87b0b8ed694c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd478c50-6f47-4ff1-a28f-927b919d4e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f720ce44-da7b-4c66-a39e-f69006a4cfdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed190e5b-9e32-48cb-8dd7-1d163d12911e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71f47f1-7e8d-4b95-b87b-5783b051083a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c80717a-b67a-492b-bf69-50e3da655cae",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b0928d-fb2e-45e5-b5ce-3fa2c726130d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1aaaf76-ae60-4596-8be8-3ece5522560d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c620cce8-7e3b-41a1-b0a4-c33634016f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba29c6a8-4fa0-4665-9427-4f783bffe804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "490c775e-bd0d-46e0-a3fd-9b4c722d3087",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033c6243-13fd-4ab9-ab83-a6b77f55709c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fa5332-0ef0-44e5-8e01-eeacde7160fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8059b25e-070b-44d8-bacd-186be92f9820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "972ec5f5-9ff6-4411-9691-cadaefb42ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ee133f3-3798-48ee-9449-e66fd07b1a0e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35364a46-4a9f-4d10-b7cc-22619a774947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd29ecf4-3279-4a4c-9cee-d72764196926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80de2b39-bae1-4e94-af8d-607e92cbb6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce4bf9b-ae6a-406f-bdac-c3d125e62288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70aeb591-3ce8-4687-8bd7-59d237b07149",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bd05f3-77c4-4fe6-95d4-45d1dce225e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9eb5ccd-f036-4d93-ba7a-1f564d6b161c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004c2244-2623-43e6-a2a7-515d14e64c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63d68b37-feee-4a2e-a816-96c792a43c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b9b3ea-dee9-4e5c-a9a2-66d616179c9b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "632a2493-506a-4983-9fb6-29f8172a2dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636a53b7-ff32-4854-8a4c-5331fe3a3c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49e17b8-d203-431d-bb4a-020e05ad08c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aca224df-abdf-4f19-b913-bacf357a5cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63be6f86-efdd-418d-9326-fb83d6cad694",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1293a2d7-3089-45e3-a48d-5a5ff2a480fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fc5431-f437-4db2-956f-54e76aff5e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d711b174-f249-49a8-99ef-ada424beb8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5991ff9c-1c02-48db-8931-f00eb2438f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b90cabe-4122-4fd9-9ca3-691446e0b78c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb25e26f-5a6a-4275-9775-2f4881f5962b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e634565-ebc3-4d52-8c77-80075a3113cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5dd044-b4b1-49ce-b49b-c6c1a2435181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99f8c322-3d86-4159-bf66-6f4916155cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6c9a18-6ebc-46fc-b01a-022850d979e1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c237d1e0-6204-4132-b19a-95a99cbb267a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af8457a-debe-43a2-a329-ac06e2c3be09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67422bbd-828e-49e7-a131-7192b95f21a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d460ff6e-d1b8-427c-a6aa-822e3fa50f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf6e242-8d8e-4925-abc0-6140b1aee37f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5552aa-71a5-4a76-a3b4-a0aa7af0bdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20d2fca-b132-4367-ab56-82c94724c4b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ef3b7f-f0b9-4667-a5dd-e9003871ddca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52256622-e21c-429e-b335-1ccb182a12b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ab3f6d-381b-458a-b3d8-ae6dc2b9f10c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a60921-8c3d-428c-9dd9-ce43218c39b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d848f6a-30cd-449d-9c6b-d5b4fc39beee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbf08fe-4641-48d7-9beb-6dcd310d2130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57d3a050-5f1d-4e96-8f95-8a0b7f15ec86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a040460-09bf-4c94-8206-bd473c2b838f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02af16a2-c247-4cef-b7ff-8d9b15b282ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e02ae23-eb24-4fd2-9748-448bd13e8e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc872ca3-e844-41a0-9a98-a586d5faa4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0068adbc-bdd9-49c0-a4e5-0532d4a95945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0f14d1-2202-4e5a-b63e-090907bd357b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a070ee8a-8da8-44a1-a167-b12cd829cd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330a8f69-3b23-4ef4-a53b-9bd4668f466a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef95b64-e584-42b8-9790-4e951445931a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a760ec95-fde1-4e44-b702-9a1d5686605b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693d822b-717f-4e69-834a-4fc5089a2b52",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5298cbad-f87c-4c5e-8616-2a95a5c7fdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97b2a2d-a2d8-4c29-a191-b9aae16c12a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4a790a-be3f-491a-b6af-7a7598dca4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e60722a-a99b-49b9-b3c7-031adaa5668b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d4930a42-be5a-4359-9ffd-449bf0505299",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9ec5b11-520c-41b4-90a0-1a4484e5c6bd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cab1ef6-d96e-4378-9c6b-3bbbf99b75cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb21f9d-aca8-4409-b975-16dd3cf13a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3eba46-39d5-4c87-a187-f76e76a362d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ac5bec3-2ee0-4fe1-9f3b-43bfcc7d2fe8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bba9cf7a-85c0-4698-87d4-2d69c87c7dd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92c117f5-890d-446a-a164-f7f42cf5271d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96b0b479-6cb5-4b55-8020-f6a01c3c6f71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02cf04a3-d946-46b7-91f2-897bdae238ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0b5dc8f7-84ef-4213-9a37-8c46c6e90574",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d5211cc-ffed-45f6-9a3b-d9894596f7cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83a2233c-5fc3-43ae-937d-c58e8ae02c85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abb9407c-39a7-40f9-a5df-172d385b4737"
            }
          }
        ]
      },
      {
        "id": "e5f274d3-459d-4a5a-be77-664cb4d5de12",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "32f4e27b-b3d4-4db8-84d9-ea76e6d0b11c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e744a770-6e2b-428e-99c4-067954d8cf46",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "10ea2b20-e118-4eef-a193-c5fed8b9b6b2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a18f94b-b4dd-4dad-ae5b-bac17bc5fd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5791728-274d-40c5-ba7e-22d802d1b088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f44fd48-049d-4900-b1e2-9360aab0f22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d63382-3b6a-40ae-9bb8-c0cceb3cd7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463f645b-5336-49fd-a031-6ed9be205f45",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc8bbb9-f572-4f9a-9a15-6bd789e5f96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5e1fe8-7af1-425d-89c0-79182607fcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c368fc-ac39-4709-bcf6-1f14ba819b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "076e7b13-6218-4e88-8a25-d4acee09511f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0b2272-bd46-47f5-a3b0-d43d20ba9185",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043863d1-d7c8-42a9-b490-2a3ad19b4015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e429751-e04c-43f2-a217-13d9e20f1e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350df4d5-4ecf-4205-8b67-a664b6cc8888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48bb9cd4-1764-48a5-8c06-28a217e28b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fd5a87-fe1b-4bce-a865-677cf970d7fd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61afbdc-5fc6-4fb6-9bbf-2e782fff643f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23758f8f-cd2d-4e2c-860c-ca1900aa9323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ee913b-96db-496b-8208-211819ef489d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a738b3e9-81de-46ca-bded-00f8f15d59fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a283b5ea-fec7-441c-8bf6-d4e2e92d0ebc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7e19f7-c9e8-4be6-a487-ae3a0bf70575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757eb828-cbf2-4bcd-b405-54b104a18d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735fdfa2-2d0f-4dad-84cc-1cd9c91d8ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ca3deb-3d31-4259-aae7-673b2a29adec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500e8b84-e2e1-491b-a17e-c791a4f62d84",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f818f6-894f-4dff-9297-e2fa94480ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5b1c55-9f64-4a07-b2fb-d5a67181160a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c605d7ff-64d0-4c30-a346-d9e4e783f506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "65c4bae7-678e-4db1-a8f3-04473be0ae0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9006b3-7843-4259-bfb3-8ab4932ed094",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b412fe-ba46-4525-92fb-308d24a08099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1961df-5442-4d1b-a2bf-ae59482bc145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b70d350-7bd7-4ff4-a91e-c208a5241a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdafdf4-a351-4d38-8f50-7ad111e7eb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bb732d-1e1c-480a-96b0-a92b0d2fdbef",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f3eb35-e26c-4490-9d67-36c9a7be47b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21f7ba8-59a5-4937-973c-d2044b4b2070"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99234819-b8a7-4891-b532-77b60aa72b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3c68ca-0dd8-4761-81c0-2017ab087c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b474a0-a7a0-419c-8b12-9ea0e8e72857",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5556ff3-5dca-4630-a68e-107125e7c767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d29a2c-5447-4d02-b9f7-3102e8c2a742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8977f3a0-8375-486f-baae-95dd6d7b9d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "110c2eb3-7f97-4b4a-bf88-276248a5f281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aaec19a-c89e-4c9d-8029-afb55728badd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7817bc0d-0062-4524-852e-6443cd7299bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c83f47-8793-4c57-9444-caf1c1ad8369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b18e3ed-1bbc-4c3f-9002-fd234a1e8316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70fbab20-166b-4263-98db-36a4fc5c4d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf58ee6-822f-49c1-9962-05d03ec38e9e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41105395-8eeb-43e6-94d9-c622f5db0ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204c071a-f6ff-417c-93b0-a5a0cc0af8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48f2f24-dabc-4d55-87f6-0503f4ebcad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9259fc-0523-455e-b997-c47dac447444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4914fb-8625-4dfa-9fc1-fd9c60158c2f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a9a1b4-bfcc-406a-975e-8357d98628cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c681a6-941a-40d7-98ef-329358ead1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45051c4b-4bb7-42e1-93c2-db4ba99e7a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8047f5b6-34e2-4ef6-b4b2-8d887e3b4021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3956257-ff6a-4a3f-93ef-24ea06d9d824",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82638973-f65f-4051-a9e6-ba869a439272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d76dd1f-0750-403b-b001-e7ed811c808b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642a6d29-d0e6-4bbc-99cd-a5022452e993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cac86836-f12d-4e56-8e42-63a8a029377c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114fb56f-da1c-4b17-9a83-4383f920ad7d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19b476d-5490-48d1-90dd-524030c38a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6176a43e-5715-47b7-ad1b-9e6d2c0df305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581047d2-6a71-436c-b873-7bb82d85b637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f98193-522c-43d4-9fbc-92428fe8e6f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcb75c1-cf5a-4dae-b117-8e27ca022820",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7aa9b54-998b-4604-88df-a7a67ef5ffd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbfc2be1-7a42-421b-9aad-e15c3c21eb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cc037c-6ee5-4b56-8a3e-705787430961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecccf2cd-30dd-460d-a702-934c9b127517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af67a63a-5a42-48d9-a2c7-665a69fbf590",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4420d43c-0866-4555-aad1-a7731df9f95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99da3ad1-1ef2-490c-b3b0-138a36cbc96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d652d7-64e3-402e-b7b7-cd00fef29934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f75c4a79-845e-4c39-bf64-83c647dad972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e897d76-44e3-420b-afb1-1408f0c3b47d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9885621-e030-4e81-a7e1-9c62b6f5d7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd3c9a1-b7e7-4058-868e-a52c1eccb080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e345bf53-1846-4de2-9d88-b326fcd27bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd2a79c-d79e-4578-897a-72d99d056e3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769351c3-364d-4328-bf87-1c6321c767c5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04486a03-01bb-4db6-bb2e-78a3fc719afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf59355-9c5a-4564-a217-77a10049a12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942e7ade-892c-4631-b80a-3d847a69f0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd8a909-80a6-40c8-94ef-d4e6d18c8790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f322112-a1a2-491b-8a1d-d2d3dcea47d5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c518de-5b35-4d33-8389-5c8c0fa2335b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "196bc653-91f9-4e50-996e-33af0f7310c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1570a4c5-1a8e-4080-bacf-bef8be34df0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f57f50-0b3c-415f-966d-f02e58a86981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d064ee6-eb18-451d-b163-aaf49bf04cbc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be547ae-d874-43d3-af14-97c4ba4b7b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626637a1-b163-48a8-b649-b951821cfecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2162d6b9-8958-47f2-b417-7e05c58b7b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "caf83fe7-b621-4dae-a6f2-5a804553fe3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed38ee0-34b0-43ab-b227-8033a04666f4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98988801-cc23-4319-8850-16b858f98cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a083278-8ad5-4f47-8992-e61ec604d964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cdfd7a-1e3d-4a08-9af4-1c93f6825040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d57233f5-5f97-484f-ad45-27d3590b9b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f6f070-45db-43c6-b473-65d4513a2638",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d104c86-2f4d-40ae-acfe-106f358e294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b27d6c7d-ef82-4ed8-9480-52cfb74f1fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa57b95f-66ba-4b31-a40f-32109e586550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aee0c774-de31-4d8a-b08b-fd96b8d68974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273d09d5-79ff-4de7-adc6-174cf67d47bc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "012a5121-b731-4a33-a060-31f399a718a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9258eb07-fef9-4201-bbbd-5c758e09ddff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07812fc3-d366-4d1d-9e8a-2e1d077cda9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46bdab3c-b369-41b9-8c19-4aac582c701b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf8799a-d1c9-44ce-b8e4-c369ac916fd4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28459796-43a7-4a18-86ea-c99394dbfe31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8001a234-e5fe-4910-ba7c-fcd88cbb3f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34ae79a-a12c-450b-8303-6fc29430630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b515cd7-f5f7-44fd-bf11-b73b430c141d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f5b796-7ee8-4120-a89f-114ae1fff5b8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c88563-25f1-4b8f-bf5f-8817b99ad8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33482b4e-4eee-43d1-85b3-7ef1a65701af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc87290-1c25-46e0-bd63-09fb742a7c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85ec9085-aa15-47fe-a122-4da8784a11b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51649c2f-a26c-42e3-a512-d9d3c5216731",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837cab87-a86a-4df8-8c26-bcebc767ca13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b5faa5b-fa87-4143-90f7-d8ebb5fe88a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b43414-4cf2-4c8c-8289-47cd3d6c0efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cce6d5e2-c55c-4026-9a34-51d9255ee97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624584fd-3a51-442d-a445-65b4f0de9f62",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3eabea-8089-4d11-b1fb-aa380c862344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a61f6864-7641-497e-896d-9a7c6574803a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae970b7-a63c-4670-80a0-0c4410ea145a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0cbcefe-f2eb-4e90-ad29-d1635d97d123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357a5f3e-8ef1-4921-9aaa-3bc789c735e5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1268a2b-c041-4bc9-b7ff-ec2cf0c890c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e78e1e4-25fc-40a3-8086-9f948c41f2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9495eea-e073-4105-9b84-43a4e3bc14e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c67df869-8738-4fef-b0a2-f460267c65b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51f73ca-7887-4b68-a392-ab67473193f8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b180ae-2e45-4f2a-884a-3fd69c0523a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c03e9ae-9b1d-4784-84ec-e55c0ed2e71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23df8b41-5969-444a-bb4c-a359709a7162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c4716c7-4bf8-4109-b9d0-24deee5391d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded00b32-60a2-46f5-9cbf-5f3c900ce99e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbc3404-d701-4b7c-8b16-9b29012baa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dd18c2d-a44c-4069-8177-091c171d9440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5297d8-b4e7-488f-a69e-975e9edc76b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edb92c2e-c8cd-431d-8d54-a42eba7ace8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b1a3f7-87b0-489d-9fe9-196b8b0efd64",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91d5af8-467d-48bc-b68b-36a275707b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bcdf11a-0aa9-4ca1-9653-1126a9a2b073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51785f48-4fa0-402c-8e73-95f378c07ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5806f880-c6a6-41bb-8f13-2b9a118dd242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0aeeec5-a870-478c-9492-9d1c2b832dfa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afee7a4c-6cf3-450a-8a77-a9ec098468b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e456fe1-2755-4421-b9cb-a29dbba70752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce4d0f8-d29e-4cea-973e-2d2a525c72c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a428f9c-e6de-4452-a118-f02a705e8ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106dd451-ed1b-4c88-bec2-12c08784aeeb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2612246e-73a7-4e3c-8408-3f914b7f4ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2feaef8f-c071-4b6a-95a9-3c35c50753d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d9a5fb-c95a-4230-9988-19833fff7629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b4361c-bdf0-4616-b4ee-6ef315540256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d945010-2149-4d21-8cfd-8957de52c4b5",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76613850-69d0-4642-868c-2103bffd605b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c40e56ce-ab68-4c42-a6f7-faa1aa036f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14c7428-4d10-4d0a-93ec-2c4ce86b96de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25987596-cd52-46a6-bf20-dea5451a4bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a82c9a-3a36-4daf-8691-b0e77049718f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e50ed7a-150a-4a1c-84ce-4f482f3cd512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626eda6f-7f21-4f0c-abf2-4cd04050658b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e640dd67-7c60-4414-a971-61e4749b0687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf76c175-ac3e-4798-b280-6e2888d400b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b539bf20-ebda-4156-9dc3-b7627ca8acba",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427f58b1-6281-4f7e-89ef-bdb1798df925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "042a00e4-24d7-4272-a64e-84b0ebd21c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160622a8-8f42-416d-a3be-31d909b14643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6fcd35-9a29-40a0-b93a-fed8e79f1d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753f5b87-d838-4034-83dc-8e5fb3175988",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2bcf36-c6a2-470b-be3d-0f17f16018fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214d0fa9-5510-4a95-8c6c-34c505961f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd6c4ae-a7a2-4b7c-a963-5af5323341ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff811a69-0e97-4d23-8a6f-024e3a85fda4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a7ecb66-9180-4d6b-9fff-9eace23ac753",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56a31982-2d2b-4ff5-b91e-73a413d9f634",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97066c2-cc54-4d64-8b49-2ebcdb38cba8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "127af7ff-9799-4888-a992-2359b2304885"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e35e61-4d53-42bf-b754-8f0a71697ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dd6b4de-4e77-4ca1-93cc-7ed2ed9987f5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f7f10fd-b3f7-4ba4-b276-6f33fcd5fc1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "852436c7-4952-421b-97ec-f6a18fde7ed2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb2d608c-df48-40ea-b5e4-e2b6b05972fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4223ea8b-9a1b-48cd-a0ac-a3fc79e77db0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3629535a-ca9f-4c5d-b1de-4970eea866de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e3b3db4-5d45-47e6-b0af-657458abfd84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6988e443-fb9a-4c99-9d99-441c2f9efa71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45268d3f-8867-4bcd-971d-b689ed2a15a4"
            }
          }
        ]
      },
      {
        "id": "47ae4348-0d89-4a20-9be9-2017f1283954",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4ec479cc-4b89-4b37-8cea-bb649b276cd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "601a61c6-1dbd-4b45-9ddd-5af55f8e1297",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c422a435-f584-4e3f-8e47-3cae260fb6fa",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1d5753-70ea-4707-b7e9-c573b109358b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d4f198-97b5-4555-8de2-ca27af5e051e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8d6042-083c-4bd6-8e33-7f88b5430fe3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc625906-b41d-4bf2-83b9-30f6d333d8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e881bf-4729-4cea-94f6-536decb36af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec230239-6e09-4705-81a1-2c2a80fd740d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab2608a-e3ea-447d-abfc-3d6a8f594534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71fb79d-dbc8-4ecb-8e8b-59c40210956a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60425e7-91e3-40f4-bcd2-17add10bfe3a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118326e9-b8d0-46cd-a7ce-bc89e94620e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59138bb-958e-4c58-ab56-94733a12512c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84a91ba-9737-4779-bd03-fc711530c329",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2d2ce6-9207-463a-a4ea-7d3bcbacf422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77f1a250-b358-480e-bd2f-cb72eb521b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814f6abc-7e35-40dc-91b0-1724fbc29d37",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d6e091-2786-4c45-a575-dc35468092ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991236aa-ce54-407d-9ea7-e093e599a170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d729b1cc-0839-4f97-ae51-6b1486bb5368",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e7e267-729d-46f9-a069-41a3200550ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d86541-30a7-40eb-8506-a2710f7c8fc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21cd8d6-a34e-4dc2-964c-fccb748595d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ac5dd6-04d3-4325-ba68-f607f4ccff4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec28137-2f53-4302-ab98-5c4cc04ee0bb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ced220-b60a-46e3-80e4-4129d995276a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a99901bd-73d7-45c9-b660-b6b1f561e1e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5c1fbb-afa4-4af3-a2d3-5f5d71908fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a01bf65-ae5a-4061-a5ff-baaf63ac054b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbee54db-a7f6-4beb-9e95-ccd627591498",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97001ecf-6463-42cb-88b2-7851497aa7d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "135fb53a-ebc4-4a34-a72b-55cda9d1bf64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a0ee56-bb15-4e69-ad92-84dbc7624fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "473c2591-f619-42d5-ad34-7a4c6818063f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35a364d-d2d3-4bad-84be-25485f734b05",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5153f7f9-5bb9-46f2-b0a8-1a34c6cf2596",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b55aa286-86cf-4779-8157-a9af0aaff6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019a0056-dbef-446d-b2df-211af06141f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fee2e77e-0fde-4dfc-9ce9-56a8b4bd356e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c821898e-f66a-4e0e-a9c1-5d3813c2fe21",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e032ef-6838-451c-b360-0600f8818171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7c88a1-ad71-4413-9f91-6ae81419c56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c56d9d5-6ad0-4561-86c4-bd6bfa39d13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20527987-8d14-4160-bbe8-3529e81d523b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2504441-4d66-4b63-8436-66f5065c1da9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c80841-bdc8-498a-b212-374a8b22dc27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3207980-d5fd-4dec-bf91-e5389a96efce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27639df8-fc52-41b8-8ce8-45f631325c14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f130e20-8002-495b-a6ef-7c9be06f1dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ea4a59-51ee-42f8-b280-4e10b97e7358",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff32f13-ae72-472d-afa8-de30339b8648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092ce3d4-7713-4c37-a7b9-0a2202244877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ab11a7-c241-41a1-9c20-1e21b1e04eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b58179d-0a48-4e38-87e7-8d6e72449567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e20cc8-e6d3-410f-a625-d61bcf2dcf2e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dbd457-824c-4712-b782-55cde84c06e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13692fdf-cc02-47f1-af6c-fe0b8824f81a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac34724-7b60-4bcb-acd0-87f22ba1f372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1e42d6-7baf-4a50-9701-51dd0a758570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f91000d-d57e-43f4-8e94-e0e23e6b403e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c17c916-085f-421b-928a-fb8112453340",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e8c0e8-cb41-4fa3-afbd-457ffdfe6c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4650a26-8684-4ea2-8b66-1fceccd03f62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1ac7cd-1c3d-4e7c-958e-d5dd3745708c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d7b3ce-8c49-4d5a-a4fe-2f7e1f0995d2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36b8c39-b9be-4a2c-be62-7165909543df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac00b873-1f5f-433c-8e60-712aca9c172b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6653d9d4-740b-48fb-9692-e59b0b1b59cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df43000-69c5-4f78-b9fe-4e9239def15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfba937c-34ab-4c8f-9d8d-a8d8444ad1e4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f239133-dbb1-4aa1-af44-793727a3b4ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0079704-c621-4e2d-a1bc-e6ca86e031bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4770ef-3185-41e6-94b2-6aac72dea5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3604f20b-9250-4f3d-8817-cff758a6d4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710aa024-b153-49ff-8a9c-8f0e298de01a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc73cf1-9ff3-4a77-8791-0bf4f0c78f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41c4bae-65ce-4072-abf2-28215996fb00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e7c18d-7b9b-4a21-8de2-1add664ab638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73934d8-b599-4d61-b94c-4ea7fd216cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3f98ab-5415-44da-b5b1-456aeebd03d8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a60fb61-a9c8-40ff-95a1-0eb9585bc6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5931d19f-5b27-41a2-a3c0-705bc02747e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fde966-6ebc-4b3c-aa4c-564d06c93a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ba9f3d-4fd4-4004-bb41-630f3ee5622e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f523d8-ad37-4876-9d77-a658840bdb2b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22c104a-5109-4c78-94b2-0f084ea8bd3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0af5586-6f6f-42c6-b86b-732d9910f5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5950fbf3-f1af-45a1-9ea5-1bb47e32c75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b6dd55-7300-4d70-ab1f-f84822eb75a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af87eb64-df40-45df-a29b-8431a52913d2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea96ec3-30cc-4479-8592-8a1ae3dd72c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2330aa55-5fef-47e0-8a11-5960af0590d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc438b7-e0b3-4ec4-a050-786147936cf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe42d72-afaf-4eb4-80f1-f0688f0d0f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0a2f9c-e9b0-474c-8ce3-960b69dcb032",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90936eca-d741-4019-a469-4d313afd3fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483b0fac-fdac-4dc2-a9d5-c45d433e5e20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ef1f8e-0d24-45da-a34a-9e295afd842a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "899818c8-7574-4f06-86e2-029ac64078f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc35459e-61c8-41b0-b863-f3be19ba3dad",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf3e8d6-457f-4a9b-b88e-e68fb759b282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3710797b-7a68-4b97-9d09-92772666fc9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16534d2-99e8-42be-97cb-d15eee1a5edc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e44ebf-8ca5-4e4c-90aa-94f7eda2d794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f4bbde-2f6e-4605-bfa4-297a4a4889c8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7914acf4-015e-4503-a10c-320fc9aad450",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1abf069-1456-4d02-ae24-ba6693b8b621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f5afe6-a2e4-4a1f-9007-679362ca5c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13b37e34-6272-4267-b8c7-7a0f4e6953d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c13830-59bb-4a7e-aae4-d7024ff8f317",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb821e0-f022-4b24-80a3-57eaf38a3d13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44e3fe08-3e62-4e14-ab48-285943d8d398"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7553f4fd-bd1d-445d-9e89-3631625652b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2819742e-7c03-49ab-aba9-afb2d26aaad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48e5638-511e-47e8-8b9d-0260d658a30d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552f4e14-9894-469f-9695-779d73bf37ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "292dc458-a128-4ec5-a19b-13e664d9c5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb79c90-9ee6-4d50-83d2-aeec5909ccaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1d28c7-880b-4810-a860-a6773df96109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7ab140-5638-4d2c-be84-60e66fb6f37a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9ce2af-41a2-4c26-b6c7-237a53e9b951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282d3aa2-b027-48af-a8b2-cef582279f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc21a50-ea8d-4135-9178-b9138adcd19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f900ec-ab12-4ab6-8b73-bab041ce7d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d700093-a0b9-4caa-84a2-0fbcbfb36731",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13fffd0-e59e-43f0-b61e-e16ba677b66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ba39be-67cf-43ae-bd9e-d614871c57f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45470f3-96f3-411d-a0f4-c9690e242559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f823a2e-8030-4dcc-baae-258d8594d633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42abb36a-4382-46cf-b410-a6f32033d1f4",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3be859-5e10-4603-962e-56da2b2cc7dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ff97d8-ab79-4541-84fd-78b6872c412a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d93bf6-fc7e-4985-8b62-28fbbee5a2aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2884d232-9d3f-4627-b130-9ba9116a8b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ead94a3-17e0-4048-ae76-54f944976659",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90413c5-323c-4bc5-b624-f3fbd0893417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faa039c8-baed-409b-8a46-04a62879807d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c4b04e-d97b-4c39-be22-572809ec3e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fdf755-d300-4a3d-b70a-fa1e48fc26fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d0ddce-5b38-4c31-92e4-f7ba822856ff",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5637f0-7929-475b-a564-d9b00b6c51c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2037a558-3d54-4404-b567-be41b1c0a8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cd597e-9127-46a2-957c-be1326d15efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efbe1cf0-66b3-482a-bdd6-f065cb82160b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f37ab3e-a682-4e39-a293-bf3354d698c0",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e986c2-c38c-49e6-83b1-aa5844b0ed82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be456ae9-4fdf-4341-8507-5ff3119d4d83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "090ef40b-bd50-4c82-9578-d274a32764db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a71f76-1fab-46de-ae39-590f28ee500f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83c4015-332f-453f-b8d5-07f9c0c15722",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18704ae1-7356-44ef-9737-3c5dee49a062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d1935ac-f5c8-4093-97f0-b589d5c542ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cada28-49db-4901-84fb-0f83d84908f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce415aaa-b7fd-4d90-8486-6721470d873c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33018074-2c48-44c7-9a37-1db050386c97",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d74c17-e9bb-4e7d-917f-f49a6bd2b946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a67dec26-19cd-410f-8ca7-cb55fd05b2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016a5a39-cf44-4d36-90cd-663f31d415ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ba75a6-85ff-4df7-b99d-ee76217e2cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b18101-f2cf-4e22-8c24-62b7f1864bca",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33478d0c-eef3-4ac8-80cc-f73217c8a36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f41fb2-df3a-4e3c-a15d-0245bb23978f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a402b0-aa2a-48a8-8564-eb1e6ceb5ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856e6701-fcae-4d8b-a7e3-46cb7532cfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63617215-f99f-4b27-a8d8-7ed91ff80a13",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558d4243-0512-463b-823d-680ad42fcb6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc95fe3-ef62-45b6-960b-b6312c6ac2af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea085e0d-7ecd-4817-b33c-cfa27e29f9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae0a4c8a-775a-4d05-9d8e-a9428192e9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f80f5f7-eb94-4f2b-a0d3-2a3a7910454c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70297c9c-e0cb-4e64-852b-e9b392b9c693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95ece59-d99a-4ad0-8e24-0e2034f6d6ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ecd096-11a7-4845-a5a0-2e3e3104de0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc981bf-199c-4290-ad4e-9386bf63bb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448261d4-0a06-4b5e-bd14-6842d25749e5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1b4287-8672-4d19-8658-92fcd31b4d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eba34ea-482c-4d1a-a1d7-146311eb543a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d12c29-ecc6-4bd3-9db3-872526eb1a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cfda6b8-0e29-4012-ae88-8a99f9baae3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed1319f-4840-4408-b347-87a9722ae188",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd51a6b-3ca6-4848-8320-42063796c60e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dc3493-279f-4d4a-a95c-9e258e9b8ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0370c79-cf32-415e-8bd5-fc8538d9b23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42350357-eb19-4d7e-bdb1-84e434a515ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42e931a-4778-4ca6-9a8f-5275ab7e176a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffee2770-0e77-483c-8450-ffa8e48dfeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6993029d-0ff6-4f30-a6f2-bc476a663f8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2aa9e7-602f-44b6-8b17-93c3aa836608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f8fd6a-a7af-4746-851d-65b0328aa646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46573bb-0417-4c73-8bda-54e1fd57bd55",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03129b6b-ddf4-4d2f-a660-caa3bb76e780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9a2f51-a336-4db4-bdbe-5161e92f19a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb660cc-2922-4657-b408-b92207b88ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ed4447-9eee-44fb-b02e-b25c69ff8597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ca84c1-9286-4bd1-86f6-16a0ddf9c3ba",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b62736-fbea-4df9-a57e-8b55b48fa72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cce65f1-73a3-4089-94cb-3aac050fb781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a514c62-d02c-494b-a341-1a328777c993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf29de4f-00c5-417f-a065-6b78e1af541a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c505682-737f-470b-b151-818e27d3cb85",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cee50d-acfe-494d-9f86-a7834841cc27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a85de03-348f-4e50-87ec-9833671f4beb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72f279b-ae46-4484-b52f-7f82c56e9dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c03c8e-8017-4530-bda9-bc43ce62e224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def64b60-66bf-48e9-9221-ecaaaf3d3d03",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8152fd63-4dc1-4707-9c14-9f89e55dde82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7284382f-0f5a-4ae3-9eca-9a1596e59c12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f337c2b-aa96-4000-adc4-08894259844e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd938d5-41a4-4d2b-8495-0f6a2b97b295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1caa0f-6fcb-499e-8765-96ad3f8cc6df",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c5ad8d-d879-4dcf-a500-9749eb30555f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b375a85-155b-4105-87a1-4447cb8f02d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d8fd53-e390-4f6c-b49b-f4f312f5abb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92f55094-72ea-4cd4-869e-3010ffb40c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f59f03-8918-4aa5-b5fc-2229703d8318",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e00c2b-9dab-433a-b67f-07c1cd6fdada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ce3572-897c-4621-92a7-ef4a5607057a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5351d7-b29f-404a-943b-5778751b21b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994f27cd-de5c-4aa9-8f28-d24fafcaf869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36852ab2-44b7-47c2-9635-f196c3891871",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba10e78a-d530-43e1-8cf9-82af4c7d26b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36067e3d-f616-4b99-ab10-f04f3a51cc9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0a47c4-cfbd-41eb-bdda-24eea20fa546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168057b8-366f-40fb-a3df-bb93ac22a9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe8d5da-9643-48d4-856a-7f3218c7ce1d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea04f12-df8d-4693-a4f9-6e67590be465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c869bce4-156f-456b-abd0-6b32095fa5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36007ee-6cbc-4375-88c4-3bebbc71268c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3925ba8b-5382-4a6c-a97a-57f776927886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1577cee9-0998-4e57-81ea-797215b51aa0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5772b51-b494-4a82-8cda-c0659f330506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ea862f-7989-455f-8f93-fcd5e657330f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64cc4f9-4bc1-47fe-aabd-0e0f9064a688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815dca01-496a-4086-975b-641276726ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9616967-cc64-402d-bdfe-1c94f422c8f8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a2c856-20ec-4f18-a0a8-5bd3ee26079d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe29791-c01e-4234-a167-c560e331606f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d93586-a56f-4987-a6e9-187e9d327b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57399170-02bf-443c-ad63-dc347cebe381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd7c03c-0854-4bb5-8c13-8011db786b45",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba374d74-1785-497d-9b9d-0b3a87f6f066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf0a038-3909-40d9-b751-91217a255ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df91fc1-830f-4173-9e49-39019f19609e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c4c849-06d0-43c8-8dc7-e46111d2cac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f54307e4-7d3c-468c-8ad8-6d642b3a86fa",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d25141-d0e8-4e8b-aa30-debde197c137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cfc2bf-ed49-4f63-a4ad-fc7b16daf454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73b7c6a-a722-49cc-bcb4-c5bfb60d0b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f607ba0b-9979-4591-8305-e21c0dc4405c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1656548d-07d3-46e3-bfb2-1cf272f66ce7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acde3b08-a207-4d4c-8373-e5b10f253886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba9cccb-07ff-4f6c-9300-9ab3e66ab28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d11fcf70-64f7-4606-9420-a0d0a276e39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c5d317b-ddb6-47fd-abfe-919615b5366d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd54544-c088-4355-99a5-8b105f6a6059",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd85247d-f8d0-408c-a75e-43ad3f6b0f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a4c1d47-e6fa-47a3-981f-2c144d948dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "064c8cc5-b0d2-49b4-850b-59e796f286e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c70233d-779f-4768-b95e-5fc299b1de79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e42d243-74b9-40c9-8ace-f2fb5a11e13f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e46c896-7e91-47ac-a057-c4c08cf4c41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89741d86-27d5-44f6-950f-77504356ff04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292f43e8-e537-4204-b4f2-689484dfedb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e3a252-2818-4054-9000-1a97c427598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14ac327-95fc-4a00-91d2-7e72ffa6b204",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ce134c-677d-4daa-bba7-45ecd7113f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2403a4-3a3e-4be5-b0cb-950e3e0f9086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006d7eee-02da-49bc-b3fc-001141d9e5d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddad9418-a2f9-4e55-a563-99e4483e9133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71b4fa6-b26a-4450-93f2-d099c81d03b2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c2a0e0-f358-444d-b2cb-90138a10ff44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9d6239-45e4-494f-9b70-b3e2abf6927d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de84d23-f4b4-422e-8d82-dfd1887e18b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b3760e-984b-4a6e-bc1c-0925ecad9c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b28e6d2a-a3aa-41ee-9ae3-4c8316ad71bc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db639c8-4c29-48f6-9efd-0fb14968d1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2468b6-a753-40ea-89ef-30e7bc821adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec1373a-ef93-43f1-91ed-13ba5391d108",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b30cf41-c846-470b-add9-e75ca2cf3c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cd2373-485c-42be-a448-b0bd19a08ccc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2366df79-ac21-48e3-8a5a-ce6e4ab0a8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f1c217-aa13-400a-b2ec-d5262ea6f33d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34dfb4c6-39f9-400a-a021-89710f2ad4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78896e9-060e-42b6-847b-1814dd9e7997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7324bd2-8bcf-48d0-aaf3-f1106a5a82df",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8eb7c7-1180-4405-90a2-670a2afa8c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad0176c-5b8e-4133-8f15-e2deb8ef66ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27187b99-68c4-4c95-a834-5b5124c87a7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e1c1f3-2b99-4dc8-a6fd-0a30f73531f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ddee2a-f289-4c4c-b440-0ea4fac9051f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26990386-457e-4e6d-9160-6de84a3a9685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225c72a2-5228-4595-adab-b2f0cf6579b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "617b5b6b-e15c-41ca-9270-898f77bef0e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f332f33-f435-4945-a9af-7601d7994fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af6f244-9c3b-47e4-a40e-a518f15e80c0",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a91303d-56dc-4290-b8cd-49914b922f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6437e7-9a49-4a8d-9867-eef5c12b1e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12d2ce8-6e1f-46db-98a7-19c9a3bd87e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2032e977-43bf-4a8c-bb16-cbc887f3b3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a776e650-933c-422c-8414-eb9d55fe53d9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acfebdf-a6ca-4655-a694-7ef04c9e96fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54fa5f3-4f5f-46d6-8880-f86b8129e5c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960a52ba-4f4b-429b-b6a4-694567b2dfaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf934944-c5ab-460b-b2f8-2624e0bdd2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f89fe2-81b1-4467-b60d-cb7705c1d665",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ab1660-a74a-442d-bafe-d4034a936105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f007e2ad-9c24-45c4-9fd9-55f5c701342e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb730d2-411c-43f4-ad4a-27f3fbf4e6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511387bd-fc37-49b0-8a67-64e300fd6944"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6ee148-528f-4bff-aadf-a7f7663e67d2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82eb3220-3caf-413e-a6fc-fcb70a88f16e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5c8294-70d7-425d-ab20-264a1d91bd72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcba31e8-07de-4de0-bf84-0f59cbbdf22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4f788b-c8e7-48f6-8922-ca91f4a6638d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea243e0-a79a-41cb-b604-90303a349052",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3a756a-5e92-48e2-921b-7ccd381afbd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97b96648-98a7-4ef0-8ae1-ded4dd8ec036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f397b1-4bed-41c7-be62-45b1f48646de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5c9f9b-980c-4162-b086-31033a063427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "105c8c0d-ca8d-44e2-8093-828a8aa68cc4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0521f2-c2c4-45cf-86a9-e1bafc4eafe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eab2981a-62e7-496b-9276-1af70d70cea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b273fab6-480f-433c-9013-bb8d27b9cb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24ab868-896d-44d5-aeb5-406c725f8fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcddb869-a479-4c05-8361-8efbec424a10",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2185d795-db7f-49ae-83a6-71731b836fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eca9b6d-b84a-42b0-a74a-56ed8d44e19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe569958-ee1d-4acf-9078-44bb38a1a41e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368cb03c-4cf9-49fd-a7f1-0317f44e0622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7173d6-b3b7-4d37-bd15-78845198e7c6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6013da-05a1-4507-97d9-2e13960ab00d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b7df5e9-06aa-4870-8bc7-c8e52af79662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bb9491-bf43-4607-95a8-0295fb9d581b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af098a3-1ea8-4ac2-a459-7e8af717b106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc9e882-c3ec-490b-a322-fab8a1c32784",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec73cb4-2091-49a8-97d2-171ddd8fe5a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "876904b3-09eb-4dee-b787-7bd298240aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b4a681-6b38-4b21-9fad-6ddd34a00724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c6b8a1-3d62-471e-b74f-0b889d1497db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1de83a8-d9a8-43ca-bffa-d82f3df9efcf",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd395ac-ac70-4215-b7e2-0cc688f419b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93289872-f8cb-4696-8c97-772a4495562d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7656f4c6-b154-4e53-ae30-013724db00be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306a7ebd-8f4a-49c2-8e86-c10867f1d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f46e0cd-028e-4859-9eca-6034f8a1fdc2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987735c6-ff48-423a-b6b8-502eb6573af6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f965f3d2-78f9-4103-8026-a00b189ef3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb35fe0-239e-4692-96de-229529330a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d76b0e-5180-45c9-b87b-f924dd7a8e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb40f02e-8f62-4034-b50c-f8917d948e91",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cc7c26-ee58-4b21-bee4-2390771ba6f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b546d69d-5218-4a64-abd4-a6d20b294ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e8e2d2-bf03-42e4-ba5c-a767af373c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0b7e5a-c4a5-4c76-a5b8-30db1a9fb92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e17d00-29af-4463-9472-46643ab1a68d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda08aca-3878-4015-8810-10d088dad8a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b48bc05-c624-4c21-92b1-b2ef75d94e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eb059ba-b46c-4daf-9a6b-b051859364ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6122779-f4f8-4e28-ac30-322937ba202b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166a63fa-bc15-4006-a2a6-e4d1e387f7a2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cfeea0-40fe-4066-8cc0-8260424450ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbf6939d-8729-4581-9672-d2f96e29df9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4949342-e575-41ee-960a-48a53a7c303b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e8a099-594c-4774-8b4c-86dc5715c3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6e0e1b-85c6-447c-b7fb-1631255bec56",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b7e031-bfc7-481d-9f96-8f5e6b9fb0f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bab5b20-7ac3-4ca2-8870-7ce0250fc6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209f4ec3-532e-4938-9e79-0434c4a2ecdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e737365-ee6c-44e4-b519-121292c93fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be7c0d4-b3e2-422f-bef5-3942adf6889c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfb9199-4e04-4da3-895d-db108841ffe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf26320d-50a6-413f-a4bd-aea3dd4d12e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b694254-b2aa-4dcf-91a9-5dae4f5fd1af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ca2fb7-c959-46f6-ada3-d872d5e4e6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e2cca1-f914-4ca2-9a6b-75a3e983af2d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbce740-89c8-4afd-ac4f-b576969bd14f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5a4aa8-6787-4cb2-8d40-0b3ffb9633f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd15342b-8cfa-4a94-9948-466e7494a138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b18f98-d99d-4ae4-99e6-e58f1ed20233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c5a00f0-4a88-476b-a4d0-c83fbe3505f7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf223058-5026-4ff1-be87-8ab6f5d1f165",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf72af6-1014-4200-be3d-89849682bbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b29a163-bf88-41d3-8ac3-10a5bae499ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d8a585-83b5-4637-b89d-7ab968e8480b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaa9bca-edfd-4e10-b97d-3f2ceebbf989",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4efbd40-1c58-4155-97df-a999917d1dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c59689d-5d4a-403f-9539-4f06b0dabc36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bb7ba7-322d-4262-92bc-edbcc88a49d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d05547b-f5a7-4c9d-bf24-30571265c540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ff91a7-ef50-4e38-ad52-0a2f72f2acb4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28dd667-0237-4db6-a719-be55094da62e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52d36de7-79eb-4832-a0c8-53cc5a383de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59228f7-4242-4f65-8dc5-96f35a4ff123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9287ab38-8747-4e50-b07f-c3d9267014c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17544e13-cffc-445e-b293-af3b162f2856",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26779a28-ae24-4f9b-8e08-a864c7a491f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b6da3d0-c604-4e63-94db-71e415b03e38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5aead8-f99d-41c5-aadd-aa061ec1bcfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ce6b1d-dd58-450e-80fb-b1e7ad204bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae70f4c7-f357-42e6-bd50-0196518103d3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622bf3f1-409d-48b7-ab38-1dd33d1e1823",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "517ea15d-2fda-4c33-87eb-5bd863dad2ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0e014d-dce5-4088-b935-f7ed9efc7abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa97c6fc-be49-45ea-be85-8bae68500523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52f4c99-6e13-4516-b52c-997254fd318d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98262492-296e-4959-9ee0-e3e33a842060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58033329-6a50-4375-8797-f39c73722f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c083c7-6f59-4967-9110-f87b818e04f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cabae63d-d61a-449d-9040-2dfca62bcea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8a638e-faf6-4f6e-8a39-5867aa3b86f6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdf6ddf-525e-4deb-b8e4-cd26b3d0cdbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae4c375a-5a1a-4e4d-a043-0277c075d065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d094e38-7413-4aca-8cfb-6ed00aa8a0aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387fcf95-7534-4230-9320-0d8d3fb35166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4ea90e-6376-4961-943e-1319fd3f2eac",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464f39da-0c62-47ad-bec7-6ad69fec10c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe7a514-9698-4048-b20d-f3532612f553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e101b80-181d-49a5-a193-135533ada9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a55a48-7feb-4e64-8614-cc08660d625c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e368e74-efa0-4a01-bb7e-176f4bc953fd",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe69368-5ac6-4033-a8fb-9dad02de8470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36b5077e-a566-4434-b658-d52b3e63632c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c198267a-743c-465d-b097-8e0ba95d9f6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f6636c-5ffc-4992-bbc5-9cad320ee6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f623c83-a612-43ee-af13-07ac8c25a2d9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa40e47-b186-4acf-b834-85c64b706919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a800cc66-5538-4de3-bdd1-d6d39d5c9f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9390985a-2008-4766-922d-4880e2caaf1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f97c46d1-2fbc-4543-9596-9a56ba1c9974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ee4ec5-2fe0-4c4b-85d4-80fbdc4d6437",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53b32bd-b772-43c4-8d19-6a801d89f65e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73cc1ddc-11ff-4087-81c8-cd4e404668b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1273c2fe-793f-4728-84c3-aacabd7d87a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8e4e68-41c0-4b10-bf0e-cd702333d0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3eb114d-c51e-482f-9608-36a49e2140ec",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c69764-abd2-4fc8-9750-af45ff76314a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6550fc82-c646-4e94-854f-efb80d4311fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfea5cc-5262-4208-b363-ec366b7460f5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb1acd97-e054-4eae-bfd0-204ccd0dea22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd58868-161b-4af8-8849-176c48fc2fac",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbef0472-6c17-49a4-933a-241a7e28edbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6f75613-495d-4c91-ba2e-a1c942ee442f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b204ff-0813-491b-8912-5c9472d4e482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11743848-8d18-49ea-b628-516a5aed927a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5021977f-d09e-4b31-aad0-5290587e80a6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d9bfcb-1155-4ec5-a8f8-fca815033014",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9469f5d8-ac43-4cc3-9ecc-9933f9ecbc85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "063e100e-fd3f-4e51-9b39-f43dc38eb285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623f6648-ec84-4682-ac9f-ae4630d00882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277bc514-bd23-48c7-b251-fb3ad6a7819a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80e8f00-fad0-4545-ab65-c7664eaf1471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0babb8a-56a0-4090-9d55-9e87df14db60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7fa707-5945-4847-8f75-0b818bbd5e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117e6daa-db78-4e55-912e-483a923dc94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc91373-9a55-4d86-b73d-0f465357e75d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebe3420-d3bb-4c33-a401-cb9dcd28e8a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e943350-d533-4545-8403-70060f6869b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6bdb37-6b51-4908-aa11-c3059f126f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7455b9f-57a7-4d86-aecb-d0fecc75f208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75fb35f-8168-41a4-bbb0-b26960967fe5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c606348-51ac-4c89-9016-79207f07d301",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e5fdf7-9f79-45a5-9c53-67d10b129edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a784f3b7-34a1-42d9-b890-e61520fa7bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e608f9-8703-43f3-83b2-98a7c8e103ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0f2ce8-c243-4e48-ba25-5193b51af028",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cd625d-22c2-4837-bb2b-52340dbae3c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f0eaf8-76c2-41ba-8eb6-ee6b4a790dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56ef940-dcea-41a6-8052-3f9ae5f1bad7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542bce50-30f4-4d42-abf5-b71fd02fc1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403bf4f1-1040-4c06-bdea-3bf25055ed4d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b15d3a-717e-43d0-95f7-8a009157606a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13554924-890b-48af-9377-cad7b413943c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a237938a-2851-497b-80fe-1e069af6a4ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010d96e1-c380-4b09-9992-0ec70237ffae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34886393-7f17-4dd3-a7b4-e01226de13eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "75b56a8b-dc80-4c9f-9616-c5fd00d5cc45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ceadfbb6-0d90-4431-b7c6-095df90d317c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7583b7f-f9e0-4f32-96f7-15c288c25900"
                    }
                  }
                ]
              },
              {
                "id": "433f10ef-17f2-429d-8cfb-4b99d629217e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b827f1f9-e8c8-4323-9491-2cacda2c120b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3854b23-cf86-4e1d-a117-36924a5f9051",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4c1f5e85-c910-4c88-8b38-922b0410dd50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d06a9c9-1f12-4eda-8888-bc5263130fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca4f666a-6af4-42ff-a876-1302fe5028c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c1c8bde-0aa6-4e44-89ad-72a196e417f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a39e5db7-ba9d-4fb0-bcf2-477fae07116d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84de716e-efb6-4cf0-8c16-2c4d98cb404d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21d4aa0c-24a8-4333-853e-1ae09fb17f1d"
                    }
                  }
                ]
              },
              {
                "id": "e2e81e7d-1534-4f4f-a5ef-ad377d542b03",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e64aa7d9-4238-4a94-8254-700a685e7cb1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb25259-b0d4-4332-845a-1a4461dfb368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ae2db904-f3f8-4067-b8a0-2ad4e073f05e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f17b049-6f76-4bdf-be15-23a49f279352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24a9157-1340-4d05-beba-fe75c61e263b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "559d66ff-4cc0-47ea-a2be-42bc20b810a5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34ceeb36-342e-4562-a90d-0d9ba852312f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7694b5d8-7615-4d84-8ef9-4edad47edec2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b166e146-bb93-44f5-a098-8a3bf85c3b59"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0f83ec3-412e-4318-a015-711bf979b758",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c263cfbc-ac52-4a6e-97ed-ebf25abd29cb"
                    }
                  }
                ]
              },
              {
                "id": "bad82550-ac2b-45bd-b58a-6cde0b3ddb3f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "661e3e63-0414-4a70-a14c-243db42e94f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "44af3f89-fe29-4837-97a8-b626aa2e8485"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b90d17f-68da-44d5-b0df-8ac00979e2cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6119003-0852-44a7-a0fa-ec1395de2755"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4c4820e-2bd1-4bef-b63a-8fd7037f8cca",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "97fc4d13-36a3-42b8-a9ea-343cdd6cbc74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ebc16cc-86b5-4472-be44-814ff62cdfe9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aca16d0a-50d2-4e28-86a2-d3a0bed232a5"
            }
          }
        ]
      },
      {
        "id": "ebab7624-3243-4f9e-972c-c861b64dd4eb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fea86b65-2753-4b6d-a626-50d4443e26bc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15883d45-6b48-474a-8bc3-9f42664b6139",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca788e01-d461-4a17-b812-53e155757a48",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f92e056-bfe4-430b-a133-e7923b269986",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5f3f0b11-2089-4ffa-ac67-ce125f09b0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f704f41d-2483-4d2a-ac6f-802c18170ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd08def2-2596-4f83-b82c-63e5fce49d00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dba4f6a0-9235-4fe3-95c9-da5cef8d3e50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2badfa1e-0e6f-465e-8e17-edc7bd174af4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63b2faa4-2afb-4a25-8618-ef62bc53dd70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "748e6b40-7e58-4672-bb15-b2fb64a5d404"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9e0aec0-5bdd-4746-a1a4-84a8d7c9e199",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "feb2ba6f-d9b2-4e62-921e-8f4413da03e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e658d0e5-824f-4f98-ae1a-4ca6f8b1e132",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e96f9b6-3628-4101-b747-81ad152c17fa"
            }
          }
        ]
      },
      {
        "id": "ef838595-0214-415c-b775-a1914f8b498f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "15f6e42b-16b8-4031-82f7-52b340a93bd9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d092a290-cf33-4ca0-a449-d391699b50ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f996cc4-6bda-4e83-b963-2dac25e9d9d0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df8d4aa-c41a-4e62-af2f-e8c1a8eebb22",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f934810b-00ef-484f-a609-59d38ddce0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd764ff-d146-4c2c-b58e-2d00c212e39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "045f6521-34ec-4b4c-82ca-3ddf0e2e79dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56b75924-cfc0-4aa8-9a13-62e4937fca63",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95420444-dec2-4bcd-a8e8-f8ecc4681b60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "def33d16-a337-4992-ab14-4ad21d88ff7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f959d87c-b838-417b-b5a6-2ef419257c73"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4f62ca5-5f01-4eb4-840b-890458b2eb98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68f0092d-d7d5-4297-a4cd-9299b994e440"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "085c52d7-9afd-47f3-840e-9376353f9055",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78e180e5-29aa-4cfe-b94a-24e4d5726e0c"
            }
          }
        ]
      },
      {
        "id": "6837d83b-3d8d-4016-af6b-36a14f9f02cd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "37834947-0b25-4fda-be44-9bce0e264c79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20007ff8-3c71-4acc-92e1-00049c541865",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd9af360-1178-45b4-be4c-aba4e62e2d3e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea37436-844b-4b84-a0bf-98aa1f8a55d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5044c43-5f20-427e-a201-45ee0fa8290c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e999e60-84e5-4aa9-9bfb-ac5a5d507498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a50a226-48da-45fc-b4e6-907c16ac17f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98cd6c78-338e-4c7c-9a94-59bca05eb2a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0471518-df4e-45dd-af18-9aa7466cbff1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0479107f-59c3-4e98-ac46-d699bcac777a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08051c3f-9707-4fa2-8dcc-f9ff91453aa7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e42618a-c9c8-46b3-bb9f-4476ba6c6e52",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee23d1c8-67f6-4c51-9284-54dbd19c381e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "320e8e70-abac-42b6-9a05-f211ab52ede8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "971bae79-2abd-4f56-b668-851871ee0daa"
            }
          }
        ]
      },
      {
        "id": "fb4fc596-f639-4adb-9db9-492070a00e1f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b542f981-6cb0-46ab-888d-700a8e371e92",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "764d372e-01e6-4b34-b89e-c22b39f9bf0d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "80078a72-3961-4ee0-8ae7-a548b027b38b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce4582fc-b369-4bca-93c1-7a3ebda22dd1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "800460b3-e19c-4304-80ef-792b2f019deb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.382456140350882,
      "responseMin": 2,
      "responseMax": 288,
      "responseSd": 26.360477611991133,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700008504284,
      "completed": 1700008515380
    },
    "executions": [
      {
        "id": "b09d632c-92cb-46ee-bda0-c8250d93e469",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "290ad1ec-16b0-432c-a496-e9fbc9da57d9",
          "httpRequestId": "43084702-a809-4462-b574-6b9af93f60e9"
        },
        "item": {
          "id": "b09d632c-92cb-46ee-bda0-c8250d93e469",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1f23c6e2-6bd6-4e66-9c23-7ae9fb6dc579",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "c71b757f-9df3-470a-b7b6-71c52dbf3ff4",
        "cursor": {
          "ref": "bbc27a41-2595-4120-a630-19bc95a81f8f",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d0d74229-2135-44d2-a2d3-b629161fc7f0"
        },
        "item": {
          "id": "c71b757f-9df3-470a-b7b6-71c52dbf3ff4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4c8d7101-598a-4e6f-8c2a-43ab0cc5a15a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "eec804e7-3219-4a82-8328-ee16d0a01101",
        "cursor": {
          "ref": "a8884f0e-2465-471b-94d6-5267030bf707",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5dfd74b5-d85e-422c-ab30-7a0004f3e1e2"
        },
        "item": {
          "id": "eec804e7-3219-4a82-8328-ee16d0a01101",
          "name": "did_json"
        },
        "response": {
          "id": "d0f99ecc-9161-4147-9029-178ce718eeb4",
          "status": "OK",
          "code": 200,
          "responseTime": 141,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f626b4-c710-4255-8963-7d2413e68f86",
        "cursor": {
          "ref": "7a3ad2f3-dfba-4cb5-9103-cda158397cf6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "255c7271-e874-446f-9502-57092b895e3b"
        },
        "item": {
          "id": "b0f626b4-c710-4255-8963-7d2413e68f86",
          "name": "did:invalid"
        },
        "response": {
          "id": "c641a383-ad60-4443-a71e-6bedf6ac2904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f626b4-c710-4255-8963-7d2413e68f86",
        "cursor": {
          "ref": "7a3ad2f3-dfba-4cb5-9103-cda158397cf6",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "255c7271-e874-446f-9502-57092b895e3b"
        },
        "item": {
          "id": "b0f626b4-c710-4255-8963-7d2413e68f86",
          "name": "did:invalid"
        },
        "response": {
          "id": "c641a383-ad60-4443-a71e-6bedf6ac2904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c248945-96df-42af-b295-9daa4de53cfe",
        "cursor": {
          "ref": "bacb0bb9-9c65-4e4d-80a5-c370106d013d",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "73dd75fc-efe0-472c-b09e-5a904fbcc4ac"
        },
        "item": {
          "id": "8c248945-96df-42af-b295-9daa4de53cfe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c63298e0-1735-4c13-ba11-97e67c8fbaf4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e9e36d-6627-4d82-afa8-32e274dc8597",
        "cursor": {
          "ref": "68b399d5-fe2e-4dc2-bcdd-00d2ea7fd492",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "beb435f9-bc81-4d2d-ba49-e8209cc5ba40"
        },
        "item": {
          "id": "c6e9e36d-6627-4d82-afa8-32e274dc8597",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "abfb699a-1a91-4ce1-8205-f606f3cebd1e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30618f83-096a-48c3-85b1-154b6fb22c4e",
        "cursor": {
          "ref": "a1b3761f-e7b5-402a-b7db-a29e40a8fc70",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "66be83dd-843e-4397-9a35-3960d2243430"
        },
        "item": {
          "id": "30618f83-096a-48c3-85b1-154b6fb22c4e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "984889b6-360a-4dd0-8650-2634a386d582",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1d82fd-4263-4c98-8bab-6a7d82492972",
        "cursor": {
          "ref": "829a3563-38d2-42e1-a570-0661381cf514",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4ad91198-4fb3-4fb0-af2d-e6296bf0653d"
        },
        "item": {
          "id": "8b1d82fd-4263-4c98-8bab-6a7d82492972",
          "name": "identifiers"
        },
        "response": {
          "id": "49a1e88e-21d4-4f8a-a6fc-b3f6dc62dd4f",
          "status": "OK",
          "code": 200,
          "responseTime": 158,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49958f77-e359-4169-bcf5-0796a77949cc",
        "cursor": {
          "ref": "58f4b469-6ef4-4c26-8d42-086706fb0038",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f1191b74-bd48-452f-af47-8c971c799685"
        },
        "item": {
          "id": "49958f77-e359-4169-bcf5-0796a77949cc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8dbb6cc6-c5d8-48c9-a606-b9586fe99ecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b09115-736a-40bf-8627-4d9bef5a3fcf",
        "cursor": {
          "ref": "1c654f82-7c48-4b1c-af0c-14d620394253",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cd68e773-9089-40b9-8094-672afcabc547"
        },
        "item": {
          "id": "02b09115-736a-40bf-8627-4d9bef5a3fcf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "66b9cf91-2f71-439c-a120-d29feedf5015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1261556-f1b5-4b26-a7f3-7e70116a544f",
        "cursor": {
          "ref": "a2d313bf-bc31-429e-9946-a87551529ae3",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d4dcffe8-d57e-4af0-b8bd-0d5ee5d28491"
        },
        "item": {
          "id": "d1261556-f1b5-4b26-a7f3-7e70116a544f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a88cdc26-f270-4c16-8f01-2ce2e552c139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e954e86-769a-461e-ad7c-95f40ef25329",
        "cursor": {
          "ref": "c07b0b69-853a-46b9-9558-8aa68a25f199",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8f9461de-c30c-4977-a9ea-fbc51366b8b6"
        },
        "item": {
          "id": "7e954e86-769a-461e-ad7c-95f40ef25329",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3870978d-5eac-40bd-bdee-7eda8508a781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c1dd1e-f1e7-498c-8e9a-34914c424574",
        "cursor": {
          "ref": "daaab942-e12d-4b5e-a28b-47fbc3a9c8ab",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b4591721-c68c-4db5-bae2-dbd396f4e592"
        },
        "item": {
          "id": "b2c1dd1e-f1e7-498c-8e9a-34914c424574",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1a18a6ad-8c53-4680-927d-ca41b9919b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1e6e2d-6283-45c1-966a-9aefe6377da1",
        "cursor": {
          "ref": "942a66c7-6331-46f2-a5a3-994e3b3e17be",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "80c6e26a-8346-420c-851f-4cf070ff75ff"
        },
        "item": {
          "id": "db1e6e2d-6283-45c1-966a-9aefe6377da1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "51dfe492-670d-483c-9f2a-46ad2a4315b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6687bb5-6c1c-4f32-9dba-50865ee54ee1",
        "cursor": {
          "ref": "15f5a47b-28a8-4f3f-ab63-49e856d1cdc5",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4210ac4c-0f84-4f71-bbb8-31744b4a3ac3"
        },
        "item": {
          "id": "b6687bb5-6c1c-4f32-9dba-50865ee54ee1",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "35b38917-c0be-4b7e-9189-9e9dd9d56728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea084d8-1033-4470-958f-6db36ea6e5bc",
        "cursor": {
          "ref": "ed79ecf5-2b30-4ce0-a274-0c323101abc5",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c0ccbee0-f475-4b09-9231-f38086050283"
        },
        "item": {
          "id": "2ea084d8-1033-4470-958f-6db36ea6e5bc",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0a7065cd-4e38-478d-aa00-bc52c67afcdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1bab24-47dd-4b60-acad-6d057df7a201",
        "cursor": {
          "ref": "e05302fd-2320-4bfa-a861-358170747efe",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6f4e8911-500c-4130-b7d1-7f03378844bc"
        },
        "item": {
          "id": "1b1bab24-47dd-4b60-acad-6d057df7a201",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ac751d69-b813-4291-9340-4871b1e72d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7830eb5-af57-4eda-9747-e0d31889e045",
        "cursor": {
          "ref": "14eca813-7d49-4fe2-9caf-213e9e40e401",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e84ddf5f-7b42-48e0-9cb9-f6f01b7a6fa9"
        },
        "item": {
          "id": "c7830eb5-af57-4eda-9747-e0d31889e045",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3880aa1e-2e5c-45ab-8195-cebd28b6a383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd3bd45-0d6c-4ef2-b2a6-bfb57b592bab",
        "cursor": {
          "ref": "def6d89a-ee32-4ac1-9fb1-cc81d494ba8b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e32bd3cd-2095-43cf-b255-061af23dd734"
        },
        "item": {
          "id": "7dd3bd45-0d6c-4ef2-b2a6-bfb57b592bab",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "357b4e0d-9589-4c3d-9247-f0d1f4aa587a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8305120d-f9e1-417e-a473-e0f475adc991",
        "cursor": {
          "ref": "b8988bc7-3807-42a3-b253-b790c75bd13e",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c8037bec-a06d-4646-a349-50bea7ec274a"
        },
        "item": {
          "id": "8305120d-f9e1-417e-a473-e0f475adc991",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b78a9729-4fa4-40e0-a64d-9b4782273a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34471c25-3492-40ce-b34b-dfc6bdeb74d5",
        "cursor": {
          "ref": "ba7a50f2-c838-48e8-a010-cfccd0c5b9cd",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "749ee9f3-08ab-46ed-9758-f8eea8bf3864"
        },
        "item": {
          "id": "34471c25-3492-40ce-b34b-dfc6bdeb74d5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "39bdbcfe-eca6-40d5-80cf-e3665fda6600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56719f03-a511-4626-8ee3-f5cc670b08f6",
        "cursor": {
          "ref": "ff86605d-7bec-4873-bb97-f13ba65fa68a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0db63d5f-27f3-4d4b-819e-7ee74ed8ecea"
        },
        "item": {
          "id": "56719f03-a511-4626-8ee3-f5cc670b08f6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9ade42ee-2885-4c00-92e3-f4eeb47a1ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94d197e-675f-442f-b400-f1564a891730",
        "cursor": {
          "ref": "8b600088-ab35-4d25-80ab-47cb2d81aa07",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0e465ad7-6f5e-4f24-a18f-974b079bedff"
        },
        "item": {
          "id": "c94d197e-675f-442f-b400-f1564a891730",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "afa4faee-b016-4719-8269-5310afa214c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334ff93b-0985-45e4-beeb-4a881fec873b",
        "cursor": {
          "ref": "5fe5f5e7-49ba-42ba-b0e1-f5d0adfdf345",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0b01de44-1b82-41dc-9565-63e618e3fe7f"
        },
        "item": {
          "id": "334ff93b-0985-45e4-beeb-4a881fec873b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5065f762-f2b9-4f1d-b341-121055ca4824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9e9c90-5b7d-4ba0-87f1-7407993d500e",
        "cursor": {
          "ref": "e95c2eee-b34e-42da-8fbe-b61ba9e4b719",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8e655366-7e7d-4053-a0ce-0c00ff8b16e0"
        },
        "item": {
          "id": "6f9e9c90-5b7d-4ba0-87f1-7407993d500e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "0d68ddb8-e9c9-442a-bf69-76d9ae146d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9706a5-4e88-4ace-a52d-fd3697ab675b",
        "cursor": {
          "ref": "1b1d0f65-4a9d-45cd-8049-e68afa114879",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bb5c13fe-a0ff-41c9-8dd4-64fc9ad51faf"
        },
        "item": {
          "id": "8d9706a5-4e88-4ace-a52d-fd3697ab675b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "050377b8-40a2-4adb-877f-3c1ff6106f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde51525-7fe9-4270-85b5-455352aca3d8",
        "cursor": {
          "ref": "7845e4e8-d8e5-4cb1-8ee3-5af93a1d6763",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "44d7030e-e3b9-4893-91d7-09ab8151b2a9"
        },
        "item": {
          "id": "dde51525-7fe9-4270-85b5-455352aca3d8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b6371c0a-3c28-405e-a6ee-ae97b83935c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b8328e-c4c6-4dfc-9282-d8f9e18891f4",
        "cursor": {
          "ref": "5686d8ed-abac-4b24-9ce2-c2e031958c62",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "43a37c4d-3c22-4c41-a86e-87a8a5163779"
        },
        "item": {
          "id": "09b8328e-c4c6-4dfc-9282-d8f9e18891f4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5bc4f4c8-4628-421e-8499-b4b2ec62f3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6be059-9180-4385-ba1e-b409f3bfa7f9",
        "cursor": {
          "ref": "f1cb5e39-0606-4837-99fd-b93ac187ef31",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "828c2d7a-0ba1-42ca-a94a-a7b21fa6072f"
        },
        "item": {
          "id": "2d6be059-9180-4385-ba1e-b409f3bfa7f9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "717c16ad-6b5a-4736-b2f0-6f70e7e460cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3980739f-f21d-44b5-a3b0-274e34e6d752",
        "cursor": {
          "ref": "a9ece3da-2c98-48d5-9a8d-1e7d54bba726",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7fd781a3-6a45-42b8-a64a-397126eebf29"
        },
        "item": {
          "id": "3980739f-f21d-44b5-a3b0-274e34e6d752",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "59503cc3-e896-4995-b77c-c65fe87015a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690c9e44-f50a-4139-8c41-0385dc4cd392",
        "cursor": {
          "ref": "95e5c5d2-06e4-4485-ad6d-2bccbc326331",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1797ef06-958c-4c51-97f3-c7fec979a64b"
        },
        "item": {
          "id": "690c9e44-f50a-4139-8c41-0385dc4cd392",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "de0f7d39-3d96-4442-a06d-580f2cdeeeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d969c2bb-4fcd-431e-8eb6-eae1c3fbd721",
        "cursor": {
          "ref": "bde4faf5-7e48-4411-b257-abd0a7a75f9f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "392390bb-491c-44d5-b3c9-37dd58dbed9e"
        },
        "item": {
          "id": "d969c2bb-4fcd-431e-8eb6-eae1c3fbd721",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cebb8379-4d37-4e4f-abf3-d2e8f6ad3889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb091ca-fbc9-4145-8468-82d64c05e044",
        "cursor": {
          "ref": "628b2455-cd21-427d-b417-46ea340136f6",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "31423715-d3bb-4c97-94a7-ab6668d2334f"
        },
        "item": {
          "id": "5fb091ca-fbc9-4145-8468-82d64c05e044",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "445d76bf-eaad-4461-b770-0cba7a0e6ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d32d89e-c619-4446-a099-aa1ae382228b",
        "cursor": {
          "ref": "482ea256-bef5-4494-82e2-bf203282c8cc",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0be2b523-50e9-439f-9ab5-de6b9940429e"
        },
        "item": {
          "id": "6d32d89e-c619-4446-a099-aa1ae382228b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "70c666d9-2dfb-4f1c-93a8-e17d48d102be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b44aa1c-9b23-4e4f-8366-129833b4535d",
        "cursor": {
          "ref": "ab397dbf-e3a6-474e-80aa-23afce4d4e73",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "19de97d5-7b35-45f7-b4e0-b60f3be8ec83"
        },
        "item": {
          "id": "1b44aa1c-9b23-4e4f-8366-129833b4535d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fceafde0-99d3-4894-adac-d8bdf5cb1834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7b943b-5b65-4724-b2d6-b11a7886e8e7",
        "cursor": {
          "ref": "1553240f-0068-4f54-b511-28af38ac06da",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "59565eba-b4e1-445a-9f20-d5bcc2504402"
        },
        "item": {
          "id": "3f7b943b-5b65-4724-b2d6-b11a7886e8e7",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6d7ea558-ce39-4fc7-a59f-ef77840acbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c99017-19b4-467a-98c7-69bb52a165ea",
        "cursor": {
          "ref": "3b41d4a9-6d76-44ba-add4-122d667dfd2a",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c1161e69-d55f-4ca1-8ab3-46ce480065a7"
        },
        "item": {
          "id": "d0c99017-19b4-467a-98c7-69bb52a165ea",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aaceea01-1b9f-417c-bfae-cc6341502f73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ba5e05-c4fc-40e0-ae40-0aeba6d5f987",
        "cursor": {
          "ref": "0eabd7ea-a05c-46ee-a2df-ab1896bf0949",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "09572c33-8d8f-4830-8fe6-936af0686e2f"
        },
        "item": {
          "id": "98ba5e05-c4fc-40e0-ae40-0aeba6d5f987",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "672e1d6e-cdc5-4a3c-aaed-0a91ffc966df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b6e883-d8d5-4ec2-a7e4-9f94fd915983",
        "cursor": {
          "ref": "74f205f4-516f-4df5-84df-9e547813e73b",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "df6a9249-a860-4fcb-a7ef-0c3334c37208"
        },
        "item": {
          "id": "66b6e883-d8d5-4ec2-a7e4-9f94fd915983",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f020c0d9-f9d3-475c-a2cc-18e7709c2f2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fe6acf-e401-4896-9bd8-8de54638a606",
        "cursor": {
          "ref": "0b7494f7-a02e-40b1-a789-35020053cfdf",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5ef16f24-0d86-4a3d-899a-a6e56fa8ec09"
        },
        "item": {
          "id": "47fe6acf-e401-4896-9bd8-8de54638a606",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "77ab2e28-92be-45a4-861e-cdcffc6047d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2ab553-c147-4917-970a-f976b17b871e",
        "cursor": {
          "ref": "702a491c-c91e-460c-8e46-15991baaeb1c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4d83e7e6-6a79-411a-a8cf-638751a6ebf1"
        },
        "item": {
          "id": "0e2ab553-c147-4917-970a-f976b17b871e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e536f3e3-0a70-43c7-a9d3-1dbcef71901e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb805f31-c44a-412d-9acb-7f682bfe5531",
        "cursor": {
          "ref": "96a6d134-fb4c-409a-8fc9-ef25bdf325ef",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "51e0d69e-ced2-49e0-8051-fb7a7d64817e"
        },
        "item": {
          "id": "eb805f31-c44a-412d-9acb-7f682bfe5531",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "85edc003-f5c1-43df-b556-6b9cb15c376d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3d384c-b09e-480e-8fc3-278a933ca96f",
        "cursor": {
          "ref": "1770713b-6dd5-4be9-9934-7d798f38c2a1",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1f0c0ea4-f645-46ac-a7cc-a466280c3f0c"
        },
        "item": {
          "id": "6e3d384c-b09e-480e-8fc3-278a933ca96f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dcd15187-e581-43a4-b673-be124ba6a8c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f5816d-4bd5-48d4-b7cb-35fc1b7a724e",
        "cursor": {
          "ref": "1a8dcc74-5296-47ed-b699-331ff27c5d81",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6ed17b87-82dc-40a9-b9eb-0f7919d42b1a"
        },
        "item": {
          "id": "c9f5816d-4bd5-48d4-b7cb-35fc1b7a724e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4089a843-1572-404c-807e-62be34c60240",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d41147-e8fa-4461-adb1-2966ba906e43",
        "cursor": {
          "ref": "d23610f7-6bb9-49de-bad3-7234d466b1fd",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "95d79e04-4f36-461c-b807-845e6bcec128"
        },
        "item": {
          "id": "19d41147-e8fa-4461-adb1-2966ba906e43",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9c430e8f-4a99-4b1e-b99a-7781b5e85fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e49085-6d64-428a-a3d0-f3509765db45",
        "cursor": {
          "ref": "0b695f66-ee4d-4159-899e-77db95747f14",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "85c40140-d6e7-4ade-bd05-f853ac7ad0fc"
        },
        "item": {
          "id": "c4e49085-6d64-428a-a3d0-f3509765db45",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9fec26e6-d796-4ae6-8467-26b3bcfdd900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b80b7c-0646-4dcc-94d4-3e5dbb1e69bc",
        "cursor": {
          "ref": "66d06739-f7b7-4ac1-8525-e811cc511bbc",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2a9b4ddb-624b-4126-8f8d-5d9f98650817"
        },
        "item": {
          "id": "68b80b7c-0646-4dcc-94d4-3e5dbb1e69bc",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "69c3782c-ffc7-45a7-8830-f8279ecbde59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ea2a31-9d2e-426c-97af-42f2154619fc",
        "cursor": {
          "ref": "7a60d668-1c20-4200-a510-e652b315d37a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "99d2670f-92d4-4db2-a175-163225523087"
        },
        "item": {
          "id": "d1ea2a31-9d2e-426c-97af-42f2154619fc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5a1768cd-9732-4343-bdaa-11fb6622a430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20a6e3e-cdee-46f5-875f-b53abd418c0f",
        "cursor": {
          "ref": "96891f2f-36e5-420f-bd32-969fe1a8f6be",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "33481e1b-73a2-4f95-8a89-1923318e66e6"
        },
        "item": {
          "id": "f20a6e3e-cdee-46f5-875f-b53abd418c0f",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7bb6b2c5-a8d8-49d0-ab25-b509f46df415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57eaae4-edb6-4276-be1e-7e3c1175d8ba",
        "cursor": {
          "ref": "c31c5965-1fe3-4f3b-b684-cac7782b5b80",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6fb9f43e-82a2-4ab9-8695-2470cfc0208a"
        },
        "item": {
          "id": "f57eaae4-edb6-4276-be1e-7e3c1175d8ba",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e5e08012-351b-4afb-ba2e-ffd0e944b03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09319ad7-c09e-4fe8-9658-ab4e9cf798ae",
        "cursor": {
          "ref": "6c9d6c24-7b83-41aa-975e-189add259b48",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56edec18-c6ab-4e25-be30-0dea0f618c02"
        },
        "item": {
          "id": "09319ad7-c09e-4fe8-9658-ab4e9cf798ae",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6e85e10a-6efd-497a-8857-7cafb80a06f0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773da218-197b-447c-99e1-e013ce35e58f",
        "cursor": {
          "ref": "9fda2700-579f-4400-a8ea-10c87800ecdd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "93c75d93-ed32-45d9-951e-9f831bc7a9ba"
        },
        "item": {
          "id": "773da218-197b-447c-99e1-e013ce35e58f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "98b24f75-1e69-44c7-a469-e593bd2bda90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f307c77d-9c21-4954-b3bc-90845f74ef87",
        "cursor": {
          "ref": "e37bbeb2-6269-4615-8b03-591849d5ca39",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3fa15dfa-f007-4419-aaa5-ec97188bda7a"
        },
        "item": {
          "id": "f307c77d-9c21-4954-b3bc-90845f74ef87",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "31d38b26-baf8-4d6f-a897-437b6c254af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3210e829-8523-4125-8bc9-0e47b677d446",
        "cursor": {
          "ref": "ee980c83-f29f-4787-b7e9-feb305a7384f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2faf63af-58c0-45c7-9cf0-730ec905578f"
        },
        "item": {
          "id": "3210e829-8523-4125-8bc9-0e47b677d446",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d6499c5d-56f8-4852-9203-26a1349eae8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855f0594-274b-4179-a2cc-e50985edf038",
        "cursor": {
          "ref": "6c9c8ec9-aa67-4df6-bccf-a7648aeff576",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "720c43f8-7688-42fd-9cf1-38c52f976dd9"
        },
        "item": {
          "id": "855f0594-274b-4179-a2cc-e50985edf038",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "73e7ffef-05d1-4a07-8fb6-768889057dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e8e17a-3e45-4686-9075-590bc089e06a",
        "cursor": {
          "ref": "c09afc99-a7bb-4196-9022-2228d0b9f921",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9e07a146-b5c1-4254-8379-105d0e5eeef2"
        },
        "item": {
          "id": "f6e8e17a-3e45-4686-9075-590bc089e06a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7e956357-7d95-4c8e-9d49-e6a6fbec2e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d180ec-afb6-49e9-b770-414c52f8b00e",
        "cursor": {
          "ref": "cbeb69de-df9d-4099-afae-8e00ba6e8bc4",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d91a8d89-0b3c-4056-87b4-db6846905ea8"
        },
        "item": {
          "id": "39d180ec-afb6-49e9-b770-414c52f8b00e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3bdb1d92-1935-4cfc-bef2-5990d28ce3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab2d83c-bdae-4fa4-9332-4a09935ee811",
        "cursor": {
          "ref": "4cd89803-4dcb-4d7e-8466-5be7b4db7427",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "57290be6-8938-4c5a-9850-aabadaf606d2"
        },
        "item": {
          "id": "0ab2d83c-bdae-4fa4-9332-4a09935ee811",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bfd787a9-b755-44ac-987c-45ca89b6bc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6804748d-6d5d-486e-871a-7b0939d57b26",
        "cursor": {
          "ref": "e9ffab8f-0a27-4047-8610-1cd2e317fa9d",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e5f0030f-712d-4885-94e3-3ec79ae5a85e"
        },
        "item": {
          "id": "6804748d-6d5d-486e-871a-7b0939d57b26",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5dda68e0-da50-4fc6-923f-ada34e56d95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bce1e2-361d-40b6-9de6-e7cfa9ccfd06",
        "cursor": {
          "ref": "3bdba38e-8917-4f05-9474-0049e32eeeab",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9179067b-a798-4038-8a1c-4ef6d4d88385"
        },
        "item": {
          "id": "75bce1e2-361d-40b6-9de6-e7cfa9ccfd06",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "656c20e6-a3ae-4acb-969b-36cc0bdc9904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d86a25c-ffc7-47d4-b596-c2101e28a51e",
        "cursor": {
          "ref": "6da7ae60-b255-418e-ba0a-a09cb2e369ac",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3430e2de-d91c-42da-ad49-1242f8e44011"
        },
        "item": {
          "id": "8d86a25c-ffc7-47d4-b596-c2101e28a51e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "466b58ca-7672-420b-b6d9-a3d63e342730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d473f1b1-0fbf-4ab9-b5dd-67acf802ea1c",
        "cursor": {
          "ref": "185b8025-1a1e-44a2-bd1e-d13c493cc53b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "eed61b8a-7fd2-463a-b693-589ddc8b26fc"
        },
        "item": {
          "id": "d473f1b1-0fbf-4ab9-b5dd-67acf802ea1c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "43baa77d-686e-4bf6-bbaa-44c7c3a2fcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6603998-ed1e-4b73-be53-326b25c06206",
        "cursor": {
          "ref": "8a07d868-c623-49da-bca5-22b21905d70d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a573885d-6874-4b93-8784-baf58603135c"
        },
        "item": {
          "id": "c6603998-ed1e-4b73-be53-326b25c06206",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e7db372a-f936-46e3-ad49-ae8b7ee940ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1233d752-abe8-42e9-8b41-eeda566e3809",
        "cursor": {
          "ref": "27f6e372-3c70-48ee-941e-f3847a65e797",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "10f55065-4c5e-4f15-b401-7307cfef7a59"
        },
        "item": {
          "id": "1233d752-abe8-42e9-8b41-eeda566e3809",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a2a7244c-4f1a-457b-9174-ce2b8328b180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad10898-3723-4336-b6a6-22ce4b45aa15",
        "cursor": {
          "ref": "4995bf84-9087-49ea-875d-314535aef762",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f4f4b48b-7752-46da-9219-060250011904"
        },
        "item": {
          "id": "dad10898-3723-4336-b6a6-22ce4b45aa15",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3f1c0916-473d-43ae-b3d2-faad290dc78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b252c1d1-e24e-4367-9249-08a924e49358",
        "cursor": {
          "ref": "5053d281-525d-43eb-9879-0f21222ca71f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8f112a98-f8b9-43b0-9e7a-f0691dd8f28f"
        },
        "item": {
          "id": "b252c1d1-e24e-4367-9249-08a924e49358",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7dd80462-5622-48c0-b5de-e9c137bfb3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b94fab3-7968-4871-85bf-f0e51bd123b9",
        "cursor": {
          "ref": "623e70f6-116a-4aa7-8387-097a2dec15e4",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8aee3890-4ba6-45af-8ec7-b355c1e9a3c4"
        },
        "item": {
          "id": "4b94fab3-7968-4871-85bf-f0e51bd123b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f961e78e-c65e-4620-8ea0-1aeec42a3a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b70aa0d-a89b-4dc6-ada2-ca3a054fd1d5",
        "cursor": {
          "ref": "eb0948b9-02d3-4740-8493-b90db943eec3",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "758b75fb-671e-41e4-89c1-6a0efef2f08b"
        },
        "item": {
          "id": "8b70aa0d-a89b-4dc6-ada2-ca3a054fd1d5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "442db112-3bf1-42e8-8130-2c63fb04db82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7329940-ed77-4e97-a3d1-edac722acefa",
        "cursor": {
          "ref": "ab5084c9-9362-4d16-9c67-abd13935e283",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "341ad806-9fef-4161-90d5-6950669cc242"
        },
        "item": {
          "id": "e7329940-ed77-4e97-a3d1-edac722acefa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e0fe720c-9232-4e25-b98e-7868c957cf94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abb4c16-04d5-4fe2-be92-05bf3d1c27e7",
        "cursor": {
          "ref": "42c323da-713a-46df-bf34-72a1694e1aa5",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "79662eaf-845c-4336-b7b5-5822a2a2f274"
        },
        "item": {
          "id": "8abb4c16-04d5-4fe2-be92-05bf3d1c27e7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5bb95852-419f-4c68-9fb7-a71a3d1b0693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dc7a499-92c2-4b84-b46e-071ad65d48e3",
        "cursor": {
          "ref": "a5efe826-b434-4b00-8efa-420e7bed4f4f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "18f98a98-8809-4a6a-be98-617d7664cfa5"
        },
        "item": {
          "id": "4dc7a499-92c2-4b84-b46e-071ad65d48e3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ab77a985-f8d0-4cba-ae55-a89c4c33564f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f48b146-fc0b-45f1-a8c1-d4f9571ad3da",
        "cursor": {
          "ref": "88804280-fbea-40f5-a30e-61e5556b09ab",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e65393be-28ce-437a-983c-93d12cc289d7"
        },
        "item": {
          "id": "2f48b146-fc0b-45f1-a8c1-d4f9571ad3da",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cded0e51-34a9-4393-a8e0-94db9c830eb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b462980e-5593-4676-ab40-3b54cfeb874e",
        "cursor": {
          "ref": "5c5b1cf1-eebb-49e6-9c43-6b627f1f8ac0",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a740be90-2eb9-4fdc-a1a8-7069c38dc4db"
        },
        "item": {
          "id": "b462980e-5593-4676-ab40-3b54cfeb874e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d75e1fda-e6b4-41a8-8cd9-d4aedc11bc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0baa32d4-ce48-42e8-9a97-24de77dc3deb",
        "cursor": {
          "ref": "95697d12-fc56-4ac8-bcb1-eb1b0d6b9a0f",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d8cac88b-2064-41ac-a472-9654d8667806"
        },
        "item": {
          "id": "0baa32d4-ce48-42e8-9a97-24de77dc3deb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fffcf6b9-fa3b-49e7-a1ed-df999120311b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd25811-8c43-4b67-ad7b-c69a6fdf3ff2",
        "cursor": {
          "ref": "90643ae0-79ad-4490-a19b-ad29ca0d3918",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "666c37ef-420f-430e-92eb-718d33af5739"
        },
        "item": {
          "id": "ccd25811-8c43-4b67-ad7b-c69a6fdf3ff2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3689efbb-d494-4d44-bdca-8e319fe2211f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617d2cc5-2c5d-4e22-bd8c-69d242ff33d2",
        "cursor": {
          "ref": "82ea8dc1-467f-4665-9860-8cc4170737ba",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f68c42d0-7fe5-4c58-9c21-0a8a70ce202d"
        },
        "item": {
          "id": "617d2cc5-2c5d-4e22-bd8c-69d242ff33d2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c44a364e-1e7f-4320-80c1-fa6fb9f8213d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598843ba-ecf2-45b9-8710-f4118b5f83a8",
        "cursor": {
          "ref": "c8c5ef3d-d878-4a33-9d87-210c0efedce3",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d996f6c6-19c7-447d-8950-979ce42e7450"
        },
        "item": {
          "id": "598843ba-ecf2-45b9-8710-f4118b5f83a8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5702565d-0ff4-4370-9f32-1c4bc51b7376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d78482c-8bc5-4ca2-bd98-c9edf241bf4d",
        "cursor": {
          "ref": "9985aab7-7ae0-4e80-9c0e-6d8e5444c2be",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "56aa5c84-a1e0-4bdb-a960-02459c331820"
        },
        "item": {
          "id": "8d78482c-8bc5-4ca2-bd98-c9edf241bf4d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d91f042e-83dc-4950-a583-720874630d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d10c40-93b3-4bf0-8e98-9ae384c47b1d",
        "cursor": {
          "ref": "728b3159-baee-4fa0-9fd4-f9f7844bd42f",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c0028cdb-9d31-4815-874c-99b843e4a998"
        },
        "item": {
          "id": "b7d10c40-93b3-4bf0-8e98-9ae384c47b1d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e432073b-1f5b-4aa6-ac3b-4306fe0d0cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26306e2a-ae3c-428f-adaa-425a375101e6",
        "cursor": {
          "ref": "617b9e21-8616-4f86-a370-15d94072e7e4",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dcebd015-322d-4f49-9a95-9de0e3e87b20"
        },
        "item": {
          "id": "26306e2a-ae3c-428f-adaa-425a375101e6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bb87a410-e8ff-436c-9096-3622f5927b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680405b9-5381-4be4-a495-0d959fd3b257",
        "cursor": {
          "ref": "6669ad4a-8b9c-4a3a-8820-b7d41c30b8af",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dbf593f1-a206-4e38-bdf1-50c5494da7c2"
        },
        "item": {
          "id": "680405b9-5381-4be4-a495-0d959fd3b257",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e3f2f3c9-1216-4c5b-b6a3-3a85fc0ed9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8d16bf-6391-494b-8c55-6a7b7f9cd41d",
        "cursor": {
          "ref": "3b73854b-a77e-43ad-bda1-77020175cd87",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2c446fe6-f245-4c15-8894-95b18db41550"
        },
        "item": {
          "id": "8c8d16bf-6391-494b-8c55-6a7b7f9cd41d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fc0a1223-4f71-46db-a8c8-85d2fcfae29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb4dbeb-d949-4133-979b-6db2fafa5dda",
        "cursor": {
          "ref": "81a95e68-9ed9-4906-8ee5-61511c003ee5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "69789e08-08b4-4c44-8897-07fc84d5c502"
        },
        "item": {
          "id": "bfb4dbeb-d949-4133-979b-6db2fafa5dda",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "9c44ed66-f497-4dcd-a7f5-dcc5da259880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe2b143-b1b0-402e-ae3a-dd215d2ecc68",
        "cursor": {
          "ref": "6ca07281-9416-4588-a9c4-208588dc3bbe",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1d5bb5e2-c423-48ce-9bf8-1d1d50a3fa83"
        },
        "item": {
          "id": "dfe2b143-b1b0-402e-ae3a-dd215d2ecc68",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e6deaa25-e82b-4a59-8888-08215c1decdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68ffa94-1352-48d8-9a09-5ddd76c5f8a0",
        "cursor": {
          "ref": "9c269481-1dd1-4c0c-9c48-5a75ece8ca5d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "117c782c-2635-44a9-9a74-efdb0f5e323c"
        },
        "item": {
          "id": "d68ffa94-1352-48d8-9a09-5ddd76c5f8a0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1b1b67bf-fe0d-4927-8728-1c398147a4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c4468a-54bb-4930-a181-1459da2ad533",
        "cursor": {
          "ref": "d27d3b38-3d61-4824-8097-d50fa456e6f1",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8469179b-b142-4116-8f3c-31e3b8879036"
        },
        "item": {
          "id": "72c4468a-54bb-4930-a181-1459da2ad533",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3196095b-0484-47fb-8368-da0ec882ad67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d9978f-3a00-42e6-a849-56850940a67e",
        "cursor": {
          "ref": "a0ad6228-6f1f-4423-b6a3-e5f6d3faef84",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "121114a6-3daa-44d7-9ac5-63be7a4a302a"
        },
        "item": {
          "id": "e1d9978f-3a00-42e6-a849-56850940a67e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "64b8c6fb-4a20-41ff-a1d3-c1da4da46e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ccda98-238b-453c-95ec-57e3fbbed63b",
        "cursor": {
          "ref": "9e40f7cb-6f46-47f5-ad12-9e79696eb524",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4ba1ab2a-1973-4a73-8a65-26cdacaadbf6"
        },
        "item": {
          "id": "c6ccda98-238b-453c-95ec-57e3fbbed63b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7426c98c-8b22-4a2d-af1a-644dede58509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967a213f-967b-4ba8-8545-c5d8250d83c2",
        "cursor": {
          "ref": "0fec3fad-c141-4a86-8019-791410132f24",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a65d8052-583e-4017-89c2-3da4fa9b027e"
        },
        "item": {
          "id": "967a213f-967b-4ba8-8545-c5d8250d83c2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e01ad4ee-f6cf-4835-a7e5-1b800eff9a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbf81ca-4dfb-41bf-8b90-8bc5fe7cd9e2",
        "cursor": {
          "ref": "81adbf1b-178b-4ffb-a472-dafe0e42bef9",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "24c90765-b1a5-4858-ab35-d752e7cf29cd"
        },
        "item": {
          "id": "abbf81ca-4dfb-41bf-8b90-8bc5fe7cd9e2",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a94fc42a-3605-4ae8-afcc-07011baa0296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0492bff-0920-4de8-9357-c36f266522b1",
        "cursor": {
          "ref": "c46e952a-cbe8-41a8-ac4d-127f3e9bf27d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9be68586-9826-448b-8c4f-3b9a40ef098e"
        },
        "item": {
          "id": "d0492bff-0920-4de8-9357-c36f266522b1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d9cd77ef-ab27-4232-9ac0-aac070124552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d574c7-e6ff-411c-90cc-452b3cba6027",
        "cursor": {
          "ref": "82651847-e68c-40a3-aa96-5e8565b0bf75",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "47dd82dd-13ac-4968-9044-baf6fa13b702"
        },
        "item": {
          "id": "a2d574c7-e6ff-411c-90cc-452b3cba6027",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "582c3a06-f3b7-4185-ac3f-ea5927c5e96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17c900c-155c-4d9c-80e2-07150e04ea32",
        "cursor": {
          "ref": "5749326d-931a-4132-8f81-59d0a73e38eb",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "71f5b9fc-30d1-4ad5-ad45-1e14a8e4a3ad"
        },
        "item": {
          "id": "d17c900c-155c-4d9c-80e2-07150e04ea32",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0a24515e-71f9-4821-b4f5-ac349b8bb482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0947f689-953e-4020-9900-9983f8aef90b",
        "cursor": {
          "ref": "be43cde1-cca0-443e-94bc-902547571f8b",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "83148fcb-4b12-43a2-971a-ecb526e7d86f"
        },
        "item": {
          "id": "0947f689-953e-4020-9900-9983f8aef90b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f19576ce-7fb5-4d37-80ad-dd764475cf92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1f7296-0ef9-4e8e-978f-dd0898ff55d7",
        "cursor": {
          "ref": "bc8e9da2-ad28-4115-8ffb-fe419ff87612",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "971ef512-f274-4aee-816a-c876696d1478"
        },
        "item": {
          "id": "ef1f7296-0ef9-4e8e-978f-dd0898ff55d7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6cd19c60-ecbb-4318-87b0-00a9a69accf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796fe7dd-064e-4e6c-8fe0-6534a3448e81",
        "cursor": {
          "ref": "d35801ff-ab08-4500-ab84-04d6b8eb0da2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "599fdae1-ac77-4cea-9726-e3d4887c5251"
        },
        "item": {
          "id": "796fe7dd-064e-4e6c-8fe0-6534a3448e81",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c280441a-4217-4a73-a043-04ed2b30bb7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986e7d0b-9978-4022-ac1c-166dc6a5536a",
        "cursor": {
          "ref": "c9ff5a8e-7ef4-401a-a3ec-ccf72f497bd1",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e67094d7-f8ad-4be6-87e4-36fbaa2a48d5"
        },
        "item": {
          "id": "986e7d0b-9978-4022-ac1c-166dc6a5536a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8cb219d5-34b0-41b7-a285-5efeeb1e3e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bc6b62-3ef3-4793-a0a9-b633ff642cb6",
        "cursor": {
          "ref": "1fbe3bd3-95d5-4a59-bdec-391e181dfe61",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "debe7c63-da46-460f-af72-a043be4657e9"
        },
        "item": {
          "id": "94bc6b62-3ef3-4793-a0a9-b633ff642cb6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1a0805fb-acfc-47df-9c92-8bcbb966b98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71eb0f2-ef59-4d58-b72e-2361ce026bad",
        "cursor": {
          "ref": "f63ed02a-a608-434b-a4c4-2772345fbbdf",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d967981b-f103-4b33-8177-814db5c94cc5"
        },
        "item": {
          "id": "f71eb0f2-ef59-4d58-b72e-2361ce026bad",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c562d428-3a0b-4ac0-b255-eb638125d2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3acc8291-7848-4727-a441-b3204be7c2e9",
        "cursor": {
          "ref": "ba488783-8fae-4de3-b394-69c463680d08",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "307dedd7-5487-460d-bf66-4c5820fc1c32"
        },
        "item": {
          "id": "3acc8291-7848-4727-a441-b3204be7c2e9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "344eed7f-1d72-4dbe-98bf-e6dfa837138a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc1c6df-80f7-4042-a003-7742640ed3ef",
        "cursor": {
          "ref": "d4ef9558-600b-4ca0-85f2-35d4430ce393",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "075c66df-58df-4871-9e6e-2392e1606697"
        },
        "item": {
          "id": "9fc1c6df-80f7-4042-a003-7742640ed3ef",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "21b7a6ec-ade5-47d3-8399-342023970506",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37944c71-dc07-4fbb-a738-0e136ef0e09d",
        "cursor": {
          "ref": "c24d35e3-cb7a-43a1-841e-b99b6b51f172",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "12701e45-62f0-4b8a-b82f-edaf5f1b18c9"
        },
        "item": {
          "id": "37944c71-dc07-4fbb-a738-0e136ef0e09d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8acc8ddf-14c0-4d91-8502-70b69ad5aaa7",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad542b5f-ae4c-41fe-a1c0-60e5c635a25b",
        "cursor": {
          "ref": "9f6b047c-a904-46f3-997b-f0002dc7568f",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "63b56be7-cd23-4336-8556-847788347c3b"
        },
        "item": {
          "id": "ad542b5f-ae4c-41fe-a1c0-60e5c635a25b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c8537f65-4609-4d0d-b1cf-47d24a8ae3a9",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d704f6-ae34-4662-9ca9-46eeda171580",
        "cursor": {
          "ref": "7ee56b53-752c-4fc8-8475-1b63e9b84928",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "398a105f-c5a9-422a-a8f6-00e49fb5d6b2"
        },
        "item": {
          "id": "25d704f6-ae34-4662-9ca9-46eeda171580",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1a0963ec-ce77-41cb-aede-3a1d80d96245",
          "status": "Created",
          "code": 201,
          "responseTime": 239,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8b5bc4-e2d7-4515-92f4-acbbcbc930ba",
        "cursor": {
          "ref": "e9466330-fd94-41de-b393-66a46e7ae83e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d16cfefd-e369-4ea2-931b-7231fa8caa8b"
        },
        "item": {
          "id": "7f8b5bc4-e2d7-4515-92f4-acbbcbc930ba",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d7c8ab7e-49fd-422b-b7a7-62a4e3b2a449",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21576b9-0302-467b-abf1-0ee7da6e01e7",
        "cursor": {
          "ref": "7c05d527-ba94-40ff-8b33-14d245e283a5",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "50748f9c-1aea-428f-8551-0e4711ea26a9"
        },
        "item": {
          "id": "c21576b9-0302-467b-abf1-0ee7da6e01e7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2f98ed03-7b0e-402f-9d0e-d3218c941d0a",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f81a34f3-0987-4d3b-ad10-113954b08be8",
        "cursor": {
          "ref": "b36b93aa-65ba-4c02-a689-ea08b36e85e5",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "18e3bbed-33d9-4473-b16c-1b35ec343b4b"
        },
        "item": {
          "id": "f81a34f3-0987-4d3b-ad10-113954b08be8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6a29f8a0-7bb3-4d78-b52e-0d9d8021bc79",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c1704a-97be-497f-ad37-14a7f2cb37fa",
        "cursor": {
          "ref": "466a94a0-6bd6-4b73-af1a-8a5096e049ad",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e31c8f27-2536-46af-ac00-686738f66480"
        },
        "item": {
          "id": "f5c1704a-97be-497f-ad37-14a7f2cb37fa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d1226434-7be3-482e-9f0a-3cf742be4380",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1572318-f5dc-46fc-94d0-befc5fe268ea",
        "cursor": {
          "ref": "3f134399-e663-4ede-a6cc-91b7600a6fb4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d62addd2-5f88-4864-8840-6ab28bf81558"
        },
        "item": {
          "id": "b1572318-f5dc-46fc-94d0-befc5fe268ea",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b98b6d7d-818a-42eb-bfe3-7443529d913e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd73db2-acaf-4e96-be6a-f0e72676d435",
        "cursor": {
          "ref": "09b1c87b-ecbd-40d9-9130-40108497f0e1",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "de00dd2a-4dab-4157-9451-e2c285a17c1e"
        },
        "item": {
          "id": "ccd73db2-acaf-4e96-be6a-f0e72676d435",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "717292ca-bf00-426f-b840-a149386489db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1dd764-223a-42fd-84b8-5179de3a32e9",
        "cursor": {
          "ref": "dc5fc3d4-f35b-4d86-8b65-95006f043ed6",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "ef016a7d-5a4d-46e6-82ba-9048c4000efe"
        },
        "item": {
          "id": "1c1dd764-223a-42fd-84b8-5179de3a32e9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ed5c8543-b87e-4f7b-8c05-2aea969d32f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc88936-675f-4736-9f25-edfe1b83dead",
        "cursor": {
          "ref": "1b585634-725a-465e-94bf-b503d81e50b8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "97191d1f-1362-48d5-b3e8-286780ef8033"
        },
        "item": {
          "id": "1dc88936-675f-4736-9f25-edfe1b83dead",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c33d825d-36f1-4f72-b014-c20581be8d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54b5f58-9cfb-420f-9a24-a4f3b0b2e110",
        "cursor": {
          "ref": "9f346c01-8b05-4e23-92dd-613cb2064d3d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3da9400e-55bf-41a5-ad35-bde510ccb078"
        },
        "item": {
          "id": "e54b5f58-9cfb-420f-9a24-a4f3b0b2e110",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "60735f6f-aa98-4910-99c3-963c777cbbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ea7e81-66ce-49bb-b1f6-4d14821429b5",
        "cursor": {
          "ref": "9427cbdf-c494-472f-adcf-beaee12717f4",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6f3e8005-2843-4191-97e4-9730b498140b"
        },
        "item": {
          "id": "c3ea7e81-66ce-49bb-b1f6-4d14821429b5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b971329c-f05c-4d42-b50c-6f559e0fcec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f471b2-1826-4afb-ae97-3a3887e79098",
        "cursor": {
          "ref": "d05e9b11-1edb-4507-9669-a92c21325354",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0530227f-4912-4e0b-a570-b9d52bc40a30"
        },
        "item": {
          "id": "f1f471b2-1826-4afb-ae97-3a3887e79098",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "706a778d-c52a-493a-ada9-dbaa070cc7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee966f2a-f8a8-411d-a697-78960d23179e",
        "cursor": {
          "ref": "2fce3075-4584-47e9-8740-55042f5075ae",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "318c0819-7111-4937-b106-b4532ef73fca"
        },
        "item": {
          "id": "ee966f2a-f8a8-411d-a697-78960d23179e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "60d6fbab-d11e-415f-ac13-f3f26325a3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2647f2-7cb6-4102-87fe-5505c65e7c01",
        "cursor": {
          "ref": "066e2c2b-9742-42d4-9246-eb3c1a15df41",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "26fb6ff0-b0e1-44ba-94e3-19bdf3aa97e9"
        },
        "item": {
          "id": "df2647f2-7cb6-4102-87fe-5505c65e7c01",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ee84cb3e-4065-4c41-ac06-804a2310aa15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf9e0ba-efe4-4725-8cef-1b7c5ac4232b",
        "cursor": {
          "ref": "cf6d9a73-a49b-4b1a-ac6d-d2c8b5adda64",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bea8dce2-d296-4bf0-bdb3-3b030bbad6ae"
        },
        "item": {
          "id": "eaf9e0ba-efe4-4725-8cef-1b7c5ac4232b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b6523a2b-9411-4321-9779-b86d9850578f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341cd441-934a-43a3-815c-d8d2d55bcd2b",
        "cursor": {
          "ref": "70e2a631-6c4c-4717-88fd-9ad060f18301",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "52fcde50-31dc-4367-8285-9e6e98e9fc43"
        },
        "item": {
          "id": "341cd441-934a-43a3-815c-d8d2d55bcd2b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c31cc988-a8cd-4c36-823a-d7800e32625c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3280982d-3fba-4781-a365-489d35842db6",
        "cursor": {
          "ref": "b6c0d88d-8628-410c-8911-0ee4470af56e",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0fa247e8-c213-4a11-829e-5d6f0fc1077d"
        },
        "item": {
          "id": "3280982d-3fba-4781-a365-489d35842db6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "62e506be-1801-46f6-a740-5eebadfa730d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356b7c00-8f7c-4017-a09f-3dc6e80458be",
        "cursor": {
          "ref": "15af21b1-5993-4358-a438-b4aa37f79001",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "68ebeff6-1b3d-4d44-8098-1e4ed28f2c93"
        },
        "item": {
          "id": "356b7c00-8f7c-4017-a09f-3dc6e80458be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b8d4b597-9fea-427b-87eb-3e5c95069776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3dfb8a-b108-48ee-b04f-8b40e51d642a",
        "cursor": {
          "ref": "1a3eccbd-ed4c-4fca-b070-7fcff2bc2367",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "381690e0-a11d-4c97-980d-87323ac416b3"
        },
        "item": {
          "id": "7c3dfb8a-b108-48ee-b04f-8b40e51d642a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "328d6537-68a4-4efc-a685-77f170b2b102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3371053-73a0-472e-878d-11fa8851c63d",
        "cursor": {
          "ref": "4c012356-e1ac-4c0b-808f-233f029aaafe",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bb2000b8-1f35-4c22-ade2-a81543f8ea62"
        },
        "item": {
          "id": "b3371053-73a0-472e-878d-11fa8851c63d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "102d7b78-36b7-4275-b23d-561bc8e29f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2519ce-bb04-4c44-9d6c-76f2d6ec2746",
        "cursor": {
          "ref": "d65c5b7c-c143-4968-9584-86d44af644df",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2d49788b-0d02-4cb8-806e-2da80f7621fc"
        },
        "item": {
          "id": "bd2519ce-bb04-4c44-9d6c-76f2d6ec2746",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ccf71b28-d0d6-4578-8964-8235264416d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a939c06c-903c-4063-9d7b-b0da9b8c425c",
        "cursor": {
          "ref": "d8fb9e6c-d8a6-45bf-9461-97f1819c580a",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "494ef83b-a66a-48b3-bafb-4323b4f873e1"
        },
        "item": {
          "id": "a939c06c-903c-4063-9d7b-b0da9b8c425c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "21cb8f3a-e441-4cf2-85ca-cfead07f7a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc6d60a-20b4-4567-85cd-26ff1421166c",
        "cursor": {
          "ref": "59926c95-d680-4401-9a79-274d6d9fe257",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "37eae849-99df-4b75-919e-184076c01e84"
        },
        "item": {
          "id": "8dc6d60a-20b4-4567-85cd-26ff1421166c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1740a616-7910-4658-bc67-964474b7dace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30e3f92-ac67-429a-a85d-87b0b8ed694c",
        "cursor": {
          "ref": "963316dc-6218-43cc-a6e9-56a3740c09c3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7ba0c4bf-92c6-49a7-98f0-067b968a17a9"
        },
        "item": {
          "id": "e30e3f92-ac67-429a-a85d-87b0b8ed694c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8a3dd9b7-3d46-42a0-a571-a90a661de827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c80717a-b67a-492b-bf69-50e3da655cae",
        "cursor": {
          "ref": "30aa8e53-d89e-4bb6-9900-4d939c28054b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "24c5515d-bd1d-49f2-b8bf-03a63ed594a7"
        },
        "item": {
          "id": "0c80717a-b67a-492b-bf69-50e3da655cae",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b82e91e0-dc79-4ebd-8ba5-ae2b57e5935e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "490c775e-bd0d-46e0-a3fd-9b4c722d3087",
        "cursor": {
          "ref": "8b9fec02-3586-4127-862d-af9616981ba2",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "456511d3-b720-48e4-9052-41263d42a757"
        },
        "item": {
          "id": "490c775e-bd0d-46e0-a3fd-9b4c722d3087",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b2639246-4437-4bf1-83fe-ff0715c4d491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ee133f3-3798-48ee-9449-e66fd07b1a0e",
        "cursor": {
          "ref": "b9f08262-4799-4c68-811e-21b703daee54",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "40767f81-53a1-44b4-b7f5-b7c326238126"
        },
        "item": {
          "id": "0ee133f3-3798-48ee-9449-e66fd07b1a0e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2b2d3864-ef2d-466b-a529-61dd22baf975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70aeb591-3ce8-4687-8bd7-59d237b07149",
        "cursor": {
          "ref": "3d4ac5d5-0172-441d-83ad-8ae1d57da9fa",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9ddce717-8312-475b-8ea0-99b52b16d981"
        },
        "item": {
          "id": "70aeb591-3ce8-4687-8bd7-59d237b07149",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2a886d9e-50dc-436e-b55c-9e84e89ee0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b9b3ea-dee9-4e5c-a9a2-66d616179c9b",
        "cursor": {
          "ref": "a53d59a6-619f-4df4-909d-863a6bc37d13",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c98f12aa-6a59-4c08-aa1d-e7fd302cb25c"
        },
        "item": {
          "id": "93b9b3ea-dee9-4e5c-a9a2-66d616179c9b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "15734425-0093-4d82-b13a-b1f262bd3a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63be6f86-efdd-418d-9326-fb83d6cad694",
        "cursor": {
          "ref": "73faf055-0328-491e-93a7-509db78064a5",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1d69636d-8af9-4dce-bdb5-8bea0562d0de"
        },
        "item": {
          "id": "63be6f86-efdd-418d-9326-fb83d6cad694",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "82393ba3-e84e-4a4f-ac0f-099780788a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b90cabe-4122-4fd9-9ca3-691446e0b78c",
        "cursor": {
          "ref": "edd53dc0-d047-4d33-bbe5-1e57fe6b3de4",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "603b9a31-1af6-4fe0-bc2e-3802fd3f1eff"
        },
        "item": {
          "id": "0b90cabe-4122-4fd9-9ca3-691446e0b78c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "500bc57f-00d3-4ec2-920f-60958fc89b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6c9a18-6ebc-46fc-b01a-022850d979e1",
        "cursor": {
          "ref": "d4bb2738-aea5-4870-b0fe-91ed249862ab",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9c2b76fb-1db3-4c7e-be5f-dc971b65b56c"
        },
        "item": {
          "id": "3c6c9a18-6ebc-46fc-b01a-022850d979e1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f55e0acc-c61b-4664-a64c-5f99045edf3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf6e242-8d8e-4925-abc0-6140b1aee37f",
        "cursor": {
          "ref": "ca7f4c14-a97b-42f6-90fd-123dc00f9b9d",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "13963924-7947-4cf1-a42b-6626d4b56870"
        },
        "item": {
          "id": "adf6e242-8d8e-4925-abc0-6140b1aee37f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "73ee586e-fdd5-485f-8630-ffce99c99703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ab3f6d-381b-458a-b3d8-ae6dc2b9f10c",
        "cursor": {
          "ref": "c1d197e4-08e9-4647-a0e2-c3708768375c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7e733e81-6c83-4cc9-9789-8ca100d01beb"
        },
        "item": {
          "id": "16ab3f6d-381b-458a-b3d8-ae6dc2b9f10c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7a66d4c0-87e4-4cc7-b6ce-8c2b474e6e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a040460-09bf-4c94-8206-bd473c2b838f",
        "cursor": {
          "ref": "04ccef8f-9df9-41db-995b-f0daf4435c28",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c571655f-dcdf-4e3a-8834-15b28b2c1091"
        },
        "item": {
          "id": "8a040460-09bf-4c94-8206-bd473c2b838f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7e5cdea3-b332-43a5-b279-3918560aab3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0f14d1-2202-4e5a-b63e-090907bd357b",
        "cursor": {
          "ref": "ef227660-9697-4719-a655-69153fc6d8f3",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "991c9866-2552-47dd-88aa-852485bd382a"
        },
        "item": {
          "id": "9b0f14d1-2202-4e5a-b63e-090907bd357b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "066b8b08-0ecc-408c-a3ae-17b427becd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693d822b-717f-4e69-834a-4fc5089a2b52",
        "cursor": {
          "ref": "97ce97dc-dc03-4a14-892a-eb062e920062",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "19506488-3ae9-4917-b1ae-7bc268d1b4de"
        },
        "item": {
          "id": "693d822b-717f-4e69-834a-4fc5089a2b52",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9b8acbf3-04f0-44a6-9c29-2f7a852e689b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ec5b11-520c-41b4-90a0-1a4484e5c6bd",
        "cursor": {
          "ref": "27085920-282c-4e94-aacd-4210649f2718",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "21440761-e455-4e71-b0f3-737af906e8d8"
        },
        "item": {
          "id": "d9ec5b11-520c-41b4-90a0-1a4484e5c6bd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e84c1f35-3b45-451d-9e59-16f3b7cf2e80",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ea2b20-e118-4eef-a193-c5fed8b9b6b2",
        "cursor": {
          "ref": "61d86d8f-baf3-4f69-858d-bfb5e0cdca29",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6be0834f-008b-4ff5-bf94-30cd0e5520f8"
        },
        "item": {
          "id": "10ea2b20-e118-4eef-a193-c5fed8b9b6b2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "64eff6d1-c0f4-4bfd-bd35-140b9f441c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463f645b-5336-49fd-a031-6ed9be205f45",
        "cursor": {
          "ref": "042152a6-9baa-4ee0-84e4-1fba19fa2a88",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "469e7e2b-d91c-45d4-9b45-37bee10b8fd8"
        },
        "item": {
          "id": "463f645b-5336-49fd-a031-6ed9be205f45",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "81e2780e-f4c9-4c19-9630-d989d26de8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0b2272-bd46-47f5-a3b0-d43d20ba9185",
        "cursor": {
          "ref": "1834e0f7-4e94-478d-ba96-3b871e5322d2",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5a5bdd05-84bc-45e1-8e5f-ab58ca2133ec"
        },
        "item": {
          "id": "1c0b2272-bd46-47f5-a3b0-d43d20ba9185",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "475bf115-5488-4481-a55e-ba1fc0261501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fd5a87-fe1b-4bce-a865-677cf970d7fd",
        "cursor": {
          "ref": "d8b53a48-37fa-481d-90d1-a7925f11a64f",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "43a93ab2-0e5f-4fee-9a2b-c9e8eec2f022"
        },
        "item": {
          "id": "92fd5a87-fe1b-4bce-a865-677cf970d7fd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "389d7e8d-4ad0-4a9e-9c83-7e0b238338b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a283b5ea-fec7-441c-8bf6-d4e2e92d0ebc",
        "cursor": {
          "ref": "06a0c9c8-3cbb-4f1d-b4ef-09eb6dd2064f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "48e8eb73-4b21-4da0-9c29-c92dfe93885d"
        },
        "item": {
          "id": "a283b5ea-fec7-441c-8bf6-d4e2e92d0ebc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f6da59ab-c052-4d5d-93de-a2cb918ac28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500e8b84-e2e1-491b-a17e-c791a4f62d84",
        "cursor": {
          "ref": "5f3861f7-1beb-4f4a-a294-ca16b1fa75b0",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4139cffb-0b8f-4a5f-886f-7a19f2458e74"
        },
        "item": {
          "id": "500e8b84-e2e1-491b-a17e-c791a4f62d84",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0b47b0ab-fda9-44b7-abe0-052db98f0687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9006b3-7843-4259-bfb3-8ab4932ed094",
        "cursor": {
          "ref": "d3db9373-6d8b-4dfc-a3ac-8ea51938dcd3",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "099a24c7-7f07-464d-bb20-d3aa17c41fc6"
        },
        "item": {
          "id": "de9006b3-7843-4259-bfb3-8ab4932ed094",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ca873567-4abe-4f0d-be7d-c21459c96a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bb732d-1e1c-480a-96b0-a92b0d2fdbef",
        "cursor": {
          "ref": "fabfd39b-7b0c-471f-95c6-ab1d0779bcbd",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "af7c0668-99b8-453d-b89d-052e7230ab2f"
        },
        "item": {
          "id": "84bb732d-1e1c-480a-96b0-a92b0d2fdbef",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "70a1ab6c-7028-42cd-9842-7e936726ee7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b474a0-a7a0-419c-8b12-9ea0e8e72857",
        "cursor": {
          "ref": "d63c765e-93da-479c-b83a-0cdb1e22d9fb",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f51b5a4f-0104-4437-a8cd-c38f8758273b"
        },
        "item": {
          "id": "18b474a0-a7a0-419c-8b12-9ea0e8e72857",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a59b2e4c-ac6a-47d9-a890-6fa1220613db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aaec19a-c89e-4c9d-8029-afb55728badd",
        "cursor": {
          "ref": "abd46e76-be4b-4a38-b15c-4c9da290f26c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "96c389e9-1391-4c8b-9f9f-21f060cb3a66"
        },
        "item": {
          "id": "3aaec19a-c89e-4c9d-8029-afb55728badd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "813d7783-915d-4108-b598-9d52727a5171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf58ee6-822f-49c1-9962-05d03ec38e9e",
        "cursor": {
          "ref": "82ab4aeb-0ec8-4248-ad8a-c03a29d8cb98",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ac849ce2-2cb7-445b-b4ce-64acf18edc51"
        },
        "item": {
          "id": "1bf58ee6-822f-49c1-9962-05d03ec38e9e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2d6dfef6-198b-4a81-a412-7d59d5265583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4914fb-8625-4dfa-9fc1-fd9c60158c2f",
        "cursor": {
          "ref": "9edd3457-148c-4e9d-a140-ab1c87e6c67b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0da37f69-30a3-47d3-bb5b-2213c5521c41"
        },
        "item": {
          "id": "5d4914fb-8625-4dfa-9fc1-fd9c60158c2f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8a9f77bc-940b-46b2-8fa6-b2ec8a08c572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3956257-ff6a-4a3f-93ef-24ea06d9d824",
        "cursor": {
          "ref": "380bb043-e441-4b12-b479-7bf3e812882f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f83ddaf7-aaab-4705-a118-658b227ddfd8"
        },
        "item": {
          "id": "a3956257-ff6a-4a3f-93ef-24ea06d9d824",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f370a9f0-2c43-4638-a2fa-e6f955c4e7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114fb56f-da1c-4b17-9a83-4383f920ad7d",
        "cursor": {
          "ref": "0e1bacca-83f5-4f75-b175-ea6c27625920",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d84971b6-b9fc-4e14-bedc-a68a7cfcaed6"
        },
        "item": {
          "id": "114fb56f-da1c-4b17-9a83-4383f920ad7d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8b181a14-4480-4c6e-84df-5188ee9a0284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcb75c1-cf5a-4dae-b117-8e27ca022820",
        "cursor": {
          "ref": "b982b05e-eb41-427e-b803-df4cdfdbce3f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4d216282-d2ce-4ac8-bd40-be907bf0f472"
        },
        "item": {
          "id": "adcb75c1-cf5a-4dae-b117-8e27ca022820",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8bdf6623-2f26-4234-aab6-009baa0136fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af67a63a-5a42-48d9-a2c7-665a69fbf590",
        "cursor": {
          "ref": "5a0b93d8-aa90-4359-a463-7367e03b95b9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8971259d-d841-4bd7-84c6-f8f836807f8e"
        },
        "item": {
          "id": "af67a63a-5a42-48d9-a2c7-665a69fbf590",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d5e07f5a-62dd-442c-a5f9-fc99bf4790ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e897d76-44e3-420b-afb1-1408f0c3b47d",
        "cursor": {
          "ref": "0a802bfe-a693-4098-b97f-8e971f54ffe7",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "84447fad-6e9c-475a-9f22-408ca8a15e66"
        },
        "item": {
          "id": "7e897d76-44e3-420b-afb1-1408f0c3b47d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ac52044b-b6a4-4d09-8fd9-3e2e834e83fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769351c3-364d-4328-bf87-1c6321c767c5",
        "cursor": {
          "ref": "0d895a1f-8924-4ac8-8cad-d0a1953e1243",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a7c1ffdd-70a7-4f26-8610-e28112a82249"
        },
        "item": {
          "id": "769351c3-364d-4328-bf87-1c6321c767c5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "73a1bbcc-e641-408b-a474-61f56d833419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f322112-a1a2-491b-8a1d-d2d3dcea47d5",
        "cursor": {
          "ref": "e5fdedca-7584-48b4-8353-b1bb913e981b",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "18d2ab5a-e93e-44b0-826d-3465a15a9a6b"
        },
        "item": {
          "id": "2f322112-a1a2-491b-8a1d-d2d3dcea47d5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c14ffc3a-9dda-4253-b15b-bb6ca79b2544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d064ee6-eb18-451d-b163-aaf49bf04cbc",
        "cursor": {
          "ref": "3e721fee-1f14-4a37-8c6b-2d74cf77ce0a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f8410cb9-a15b-4d3b-9029-fd05b914c518"
        },
        "item": {
          "id": "9d064ee6-eb18-451d-b163-aaf49bf04cbc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a2ab87ed-4485-4c52-adda-32a109a0ce5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed38ee0-34b0-43ab-b227-8033a04666f4",
        "cursor": {
          "ref": "7e5edd65-f0ea-489c-8fab-b80bfbdd9cb3",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "05377516-a06d-47ea-a553-f764fd1daacf"
        },
        "item": {
          "id": "8ed38ee0-34b0-43ab-b227-8033a04666f4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "19dd688d-4cdf-4f8f-83f7-18bcddf99c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f6f070-45db-43c6-b473-65d4513a2638",
        "cursor": {
          "ref": "d26f6d01-3ec9-4a5b-989f-c60cc8ea0f9b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "23c28939-c17b-432b-8d15-5cdac7c1dc06"
        },
        "item": {
          "id": "70f6f070-45db-43c6-b473-65d4513a2638",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ed8a5b32-3447-488f-be52-e5bad8de7e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273d09d5-79ff-4de7-adc6-174cf67d47bc",
        "cursor": {
          "ref": "cf23a5d6-b385-45de-887a-33e445b56c16",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "97c46516-6a0f-4cc3-8590-f9462ba95d50"
        },
        "item": {
          "id": "273d09d5-79ff-4de7-adc6-174cf67d47bc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1eeb5b49-294e-4326-adeb-c1faeae7cb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf8799a-d1c9-44ce-b8e4-c369ac916fd4",
        "cursor": {
          "ref": "117c6b08-8af0-455d-8f59-3e134b84afe0",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0f35765a-b46a-4f20-b875-089a8d191afc"
        },
        "item": {
          "id": "2cf8799a-d1c9-44ce-b8e4-c369ac916fd4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "95bd2fe1-ac22-4fde-a3ce-e46ef88dcc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f5b796-7ee8-4120-a89f-114ae1fff5b8",
        "cursor": {
          "ref": "4f64ee00-d8f9-4141-bf67-d004bfaa5a67",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c23ba30b-aea3-4535-aa08-a4ca511e2086"
        },
        "item": {
          "id": "93f5b796-7ee8-4120-a89f-114ae1fff5b8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4af3ef07-c08b-4b8d-b784-6fb2bf8a4485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51649c2f-a26c-42e3-a512-d9d3c5216731",
        "cursor": {
          "ref": "ef352c20-74ae-4352-9b1b-dec0c3793b27",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "da3b4049-2c57-46ee-8acb-d33ecf80f3d5"
        },
        "item": {
          "id": "51649c2f-a26c-42e3-a512-d9d3c5216731",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8033fd91-9177-4b48-bf98-798286cb6ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624584fd-3a51-442d-a445-65b4f0de9f62",
        "cursor": {
          "ref": "8c3ce735-3e85-4b50-9ee6-345859c36280",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8054f49a-b7d0-4eae-8189-24bff684f13f"
        },
        "item": {
          "id": "624584fd-3a51-442d-a445-65b4f0de9f62",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c3e58f46-6a69-435b-8371-4204d0d6398c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357a5f3e-8ef1-4921-9aaa-3bc789c735e5",
        "cursor": {
          "ref": "52ef8f96-5d21-4ec0-b03e-432ce6b4e239",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "286451c7-da71-4c11-a41c-1978b850ef2c"
        },
        "item": {
          "id": "357a5f3e-8ef1-4921-9aaa-3bc789c735e5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "61774023-1872-4106-bd13-576730469213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51f73ca-7887-4b68-a392-ab67473193f8",
        "cursor": {
          "ref": "4ae6d260-f07c-4d26-9398-720868f9170a",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4cebe4de-7455-497e-ad9d-09a50179d910"
        },
        "item": {
          "id": "b51f73ca-7887-4b68-a392-ab67473193f8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c0bb21ef-70dc-47bb-a748-7bd9ebe6b064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded00b32-60a2-46f5-9cbf-5f3c900ce99e",
        "cursor": {
          "ref": "b5bf2304-133c-4c09-8229-b894a1ba2e90",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a29ccd82-6cce-40f5-8e39-c74321bf2415"
        },
        "item": {
          "id": "ded00b32-60a2-46f5-9cbf-5f3c900ce99e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3e5f3e07-35ee-4990-871d-e2bf36d26ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b1a3f7-87b0-489d-9fe9-196b8b0efd64",
        "cursor": {
          "ref": "184ac96d-7414-490a-86b8-436b8c191d8c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "99dc8fa4-8c75-4f51-8005-2449be886776"
        },
        "item": {
          "id": "b0b1a3f7-87b0-489d-9fe9-196b8b0efd64",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d9a38975-dbfe-4525-b9ca-2d609472a820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0aeeec5-a870-478c-9492-9d1c2b832dfa",
        "cursor": {
          "ref": "65282aa6-272a-43a4-9aaf-7dd2b7370701",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f86fb4b-ba62-4cd1-828f-aa2016ee70a8"
        },
        "item": {
          "id": "b0aeeec5-a870-478c-9492-9d1c2b832dfa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dcd62e99-b814-4a3e-b90b-39ab3377413f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106dd451-ed1b-4c88-bec2-12c08784aeeb",
        "cursor": {
          "ref": "82187dbf-1710-40bf-a23c-88328248369d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f14593f3-2fbc-468e-9f0d-88c067f5069b"
        },
        "item": {
          "id": "106dd451-ed1b-4c88-bec2-12c08784aeeb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "004e89cc-d96c-4784-9564-c2624ceb8f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d945010-2149-4d21-8cfd-8957de52c4b5",
        "cursor": {
          "ref": "a5ecef39-fdd6-4cf4-a23d-5054d490c58e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c8721a63-ad0c-4de2-87af-df32b44585a0"
        },
        "item": {
          "id": "1d945010-2149-4d21-8cfd-8957de52c4b5",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b70483e7-5d72-4ca6-9dfd-247e3b205821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a82c9a-3a36-4daf-8691-b0e77049718f",
        "cursor": {
          "ref": "9cac8746-3e8e-4795-acd9-94535c4debfe",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "89e7600f-cdfa-456f-a526-b81c422fe98e"
        },
        "item": {
          "id": "c2a82c9a-3a36-4daf-8691-b0e77049718f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b6a1a4c8-ac67-4314-9361-2ef92e41f48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b539bf20-ebda-4156-9dc3-b7627ca8acba",
        "cursor": {
          "ref": "07cee112-c3db-410f-ae61-fc38ff60b967",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a327a308-f3c4-4a59-b033-4d762e5d7ef3"
        },
        "item": {
          "id": "b539bf20-ebda-4156-9dc3-b7627ca8acba",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ddaa9bdd-fbad-48d0-ad63-15cb1a50e4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753f5b87-d838-4034-83dc-8e5fb3175988",
        "cursor": {
          "ref": "47416886-7141-4248-a169-cfcb161ad9d6",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "791565ac-932e-45d8-880d-d01359b470ab"
        },
        "item": {
          "id": "753f5b87-d838-4034-83dc-8e5fb3175988",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cf811213-ddff-451f-b261-614abfa21171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a31982-2d2b-4ff5-b91e-73a413d9f634",
        "cursor": {
          "ref": "f9344cfc-3824-46ea-9564-124142cadd93",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "66a0a309-18aa-4d55-9eda-89773c873fbb"
        },
        "item": {
          "id": "56a31982-2d2b-4ff5-b91e-73a413d9f634",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4a9d7048-e43e-4157-b090-db45cfe2bd12",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c422a435-f584-4e3f-8e47-3cae260fb6fa",
        "cursor": {
          "ref": "1abf71df-c3a2-475e-bd0a-aa63fa2bfece",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6157430f-3072-4c19-8a3e-0bdd0c9a484a"
        },
        "item": {
          "id": "c422a435-f584-4e3f-8e47-3cae260fb6fa",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c82f8974-297b-4ed8-939e-88ed742c7958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8d6042-083c-4bd6-8e33-7f88b5430fe3",
        "cursor": {
          "ref": "0f4c7657-4654-4854-9a07-b462ece820ec",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8e237acb-7a5d-47cf-9b5b-fdd2a5e1c079"
        },
        "item": {
          "id": "4b8d6042-083c-4bd6-8e33-7f88b5430fe3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7b9cbd58-9cef-4ceb-bd7f-eb8f512d888e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec230239-6e09-4705-81a1-2c2a80fd740d",
        "cursor": {
          "ref": "aef0fee1-f2a7-466c-9d3e-2d2571999501",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "70a1bb85-cbc2-4cfc-925a-f88e02588467"
        },
        "item": {
          "id": "ec230239-6e09-4705-81a1-2c2a80fd740d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "42433775-a149-4d14-a0c7-f06efae632f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60425e7-91e3-40f4-bcd2-17add10bfe3a",
        "cursor": {
          "ref": "75061841-7244-41e9-bd58-84cc4e7b5aa8",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "eb0a0670-0ec1-4928-8cd0-323ff8bcbba4"
        },
        "item": {
          "id": "b60425e7-91e3-40f4-bcd2-17add10bfe3a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "819565fb-1927-43b0-8a88-5fc417eec13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84a91ba-9737-4779-bd03-fc711530c329",
        "cursor": {
          "ref": "1ce78e33-7a32-43d5-b62c-eb9d5a533dbf",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c41cf63f-bbd1-45e1-ba3a-14c888640fbc"
        },
        "item": {
          "id": "d84a91ba-9737-4779-bd03-fc711530c329",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1b7b1ccc-14ad-4173-ba1e-b679b408d8fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814f6abc-7e35-40dc-91b0-1724fbc29d37",
        "cursor": {
          "ref": "a643a8d4-4a29-414b-b02e-71117a94a277",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "de8c546a-017d-4814-bdc1-fc396e26d2d4"
        },
        "item": {
          "id": "814f6abc-7e35-40dc-91b0-1724fbc29d37",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c15eab8c-cc31-4843-8879-fa781c4befb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d729b1cc-0839-4f97-ae51-6b1486bb5368",
        "cursor": {
          "ref": "c804f220-1398-477c-9d2d-ace9a7555319",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "56bef52e-5c29-40a6-a16d-ee934c0e1089"
        },
        "item": {
          "id": "d729b1cc-0839-4f97-ae51-6b1486bb5368",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1c025aec-f802-4c0e-ab37-159dd2440459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec28137-2f53-4302-ab98-5c4cc04ee0bb",
        "cursor": {
          "ref": "2516a031-4d74-47bb-9085-e18bde23bee9",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "20f8e46a-6164-4c36-b555-98bc7ec95018"
        },
        "item": {
          "id": "dec28137-2f53-4302-ab98-5c4cc04ee0bb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f2f8d525-158e-436f-b122-db88679b3799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbee54db-a7f6-4beb-9e95-ccd627591498",
        "cursor": {
          "ref": "67365f96-560c-4122-ab37-65132a7081dc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a7595e17-d064-42a1-a093-0aa8c896eb87"
        },
        "item": {
          "id": "cbee54db-a7f6-4beb-9e95-ccd627591498",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b061f6a7-6a29-4ca4-aedf-3408a54b3512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35a364d-d2d3-4bad-84be-25485f734b05",
        "cursor": {
          "ref": "95930be6-cf66-4727-9fad-6779703de05b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9829160f-95ea-4c69-b484-4f6908b28398"
        },
        "item": {
          "id": "f35a364d-d2d3-4bad-84be-25485f734b05",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c6e68bf8-a75e-4732-9fff-951966f8d4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c821898e-f66a-4e0e-a9c1-5d3813c2fe21",
        "cursor": {
          "ref": "1b0a17aa-b675-4ba6-8a37-ba2ea9f6281c",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d0055aae-9dde-40c2-aff2-f6f93a66a5d7"
        },
        "item": {
          "id": "c821898e-f66a-4e0e-a9c1-5d3813c2fe21",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "568bcabd-44fc-4577-944d-714ca738d510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2504441-4d66-4b63-8436-66f5065c1da9",
        "cursor": {
          "ref": "7277785c-8f2e-4871-bbc3-e434f71addef",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2b06e647-b70a-486a-b0d3-a761cee9b262"
        },
        "item": {
          "id": "c2504441-4d66-4b63-8436-66f5065c1da9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "06c71029-8441-4417-a900-e0d1b9e60bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ea4a59-51ee-42f8-b280-4e10b97e7358",
        "cursor": {
          "ref": "5daf260b-2e79-44f3-8924-b0400cb5d905",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8df65cf4-4deb-46be-93a7-8cf8d07a9826"
        },
        "item": {
          "id": "b2ea4a59-51ee-42f8-b280-4e10b97e7358",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "82c32eb2-e092-49f6-83fe-2bf34b98eda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e20cc8-e6d3-410f-a625-d61bcf2dcf2e",
        "cursor": {
          "ref": "b74bb445-d914-4770-bfbc-0f4c2193d833",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d88ce54c-d504-467a-8acb-c995b92c37ef"
        },
        "item": {
          "id": "a2e20cc8-e6d3-410f-a625-d61bcf2dcf2e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a1348082-0dfe-4c2f-94a6-b046dcad00f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f91000d-d57e-43f4-8e94-e0e23e6b403e",
        "cursor": {
          "ref": "852771c9-fa34-4146-8bed-f8d7fb62e8a1",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ab099efd-b6d3-4eb0-b2cc-2e2f60f9c04d"
        },
        "item": {
          "id": "9f91000d-d57e-43f4-8e94-e0e23e6b403e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6914a9a1-e52e-4441-87b4-4b582b5ad8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d7b3ce-8c49-4d5a-a4fe-2f7e1f0995d2",
        "cursor": {
          "ref": "e63779f1-1403-4d3b-aa4d-7c1c4d1163ac",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "534851e5-b111-4036-ba18-01e1eb194968"
        },
        "item": {
          "id": "31d7b3ce-8c49-4d5a-a4fe-2f7e1f0995d2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "24a6e7a6-1d7d-449a-bf1a-27df8a911909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfba937c-34ab-4c8f-9d8d-a8d8444ad1e4",
        "cursor": {
          "ref": "4f827045-b3e3-4f19-aad1-3beb808396d9",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bacb4085-5a86-4747-9416-be11a1042f81"
        },
        "item": {
          "id": "cfba937c-34ab-4c8f-9d8d-a8d8444ad1e4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2f5865ca-c0db-45f4-9775-237edc526821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710aa024-b153-49ff-8a9c-8f0e298de01a",
        "cursor": {
          "ref": "cfb6d367-1f72-4329-bc17-17b869bc269c",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "830667cb-b58f-4c48-b365-1312333a4aaf"
        },
        "item": {
          "id": "710aa024-b153-49ff-8a9c-8f0e298de01a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0c85b1d8-8ae6-457b-9ce4-2c4f94567a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3f98ab-5415-44da-b5b1-456aeebd03d8",
        "cursor": {
          "ref": "b91de33a-3bba-4c81-8880-b518d042c337",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "55f740d6-7c75-4302-bb99-7f040d0b6966"
        },
        "item": {
          "id": "8c3f98ab-5415-44da-b5b1-456aeebd03d8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8253ac87-42fc-43eb-818b-cebf4596fc41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f523d8-ad37-4876-9d77-a658840bdb2b",
        "cursor": {
          "ref": "43b8a4ef-6e52-4e5e-bc5c-833d1e9ee072",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "f4d605c0-4498-43f1-8f98-808f3272e7f8"
        },
        "item": {
          "id": "d6f523d8-ad37-4876-9d77-a658840bdb2b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7015e8a3-ced9-44d7-b9fb-51a7a8f17841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af87eb64-df40-45df-a29b-8431a52913d2",
        "cursor": {
          "ref": "d453f102-e8dd-4936-a33f-c73c3d6ae1eb",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a4f10c00-1ece-441b-b25f-e4c8a97116a2"
        },
        "item": {
          "id": "af87eb64-df40-45df-a29b-8431a52913d2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d360c5c0-4603-4747-8e3d-698abae35abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0a2f9c-e9b0-474c-8ce3-960b69dcb032",
        "cursor": {
          "ref": "206629fd-bb35-4f5f-a3aa-c6e91a7d9721",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "04e6dab4-a023-4c34-95e0-41b263af4c73"
        },
        "item": {
          "id": "8a0a2f9c-e9b0-474c-8ce3-960b69dcb032",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0252db75-8321-4244-86ae-b8540ff4ee9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc35459e-61c8-41b0-b863-f3be19ba3dad",
        "cursor": {
          "ref": "5420e4e6-ad9f-4720-8415-185708b74579",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2570b9e0-444e-4c99-89e6-c066e42db659"
        },
        "item": {
          "id": "fc35459e-61c8-41b0-b863-f3be19ba3dad",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "51931525-faf7-48d8-a127-8e451fecba83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f4bbde-2f6e-4605-bfa4-297a4a4889c8",
        "cursor": {
          "ref": "1126e6bf-a63f-4199-bbe2-4fd255f6c71e",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "94743c00-349e-4c16-8c87-d6c528eb8991"
        },
        "item": {
          "id": "67f4bbde-2f6e-4605-bfa4-297a4a4889c8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "caf557c6-d04d-4559-8e8e-7b06fe391e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c13830-59bb-4a7e-aae4-d7024ff8f317",
        "cursor": {
          "ref": "6c68a9df-5998-4b3d-aecb-71258d9cd8b6",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d3637ed3-d0ef-4d91-9ab1-a3d9623fb70e"
        },
        "item": {
          "id": "e3c13830-59bb-4a7e-aae4-d7024ff8f317",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "42879ec3-4309-4103-aea3-a7e89b5bf791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48e5638-511e-47e8-8b9d-0260d658a30d",
        "cursor": {
          "ref": "91aa7d64-6d0b-4672-8d4b-e785a30e3c1b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7ab82c37-926b-449f-8511-2e24452c4d48"
        },
        "item": {
          "id": "b48e5638-511e-47e8-8b9d-0260d658a30d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ce5ba11c-ad6b-45a4-98e8-bf9a1a28a387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7ab140-5638-4d2c-be84-60e66fb6f37a",
        "cursor": {
          "ref": "b06b6469-9317-4b63-b013-a487eed089b4",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6362a4fa-2fe9-4889-b4d7-b7831fdcbf19"
        },
        "item": {
          "id": "7c7ab140-5638-4d2c-be84-60e66fb6f37a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5a61ee76-b1c2-424b-aa5d-f30857e35fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d700093-a0b9-4caa-84a2-0fbcbfb36731",
        "cursor": {
          "ref": "36e2a69d-c23e-4106-9467-bf35351d138b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "88f7c339-6fcc-45e5-a20f-1955d02643da"
        },
        "item": {
          "id": "2d700093-a0b9-4caa-84a2-0fbcbfb36731",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9a34d383-f8cf-4b28-858a-f7572c3059b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42abb36a-4382-46cf-b410-a6f32033d1f4",
        "cursor": {
          "ref": "2c37b9a9-1175-49a2-8407-7f0f980e7788",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "49cfa29a-c8d0-4021-9c65-5e24f9a528d2"
        },
        "item": {
          "id": "42abb36a-4382-46cf-b410-a6f32033d1f4",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6ae17c63-eb25-4235-8cdb-d9b570e58fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ead94a3-17e0-4048-ae76-54f944976659",
        "cursor": {
          "ref": "81c320ba-f4d1-4301-95bd-bb029a79c452",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b9acbd78-17d0-4320-a8c2-1f4cbacb467c"
        },
        "item": {
          "id": "6ead94a3-17e0-4048-ae76-54f944976659",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "26ae2a6e-1b78-4a7f-b6c1-9e6cbefc612e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d0ddce-5b38-4c31-92e4-f7ba822856ff",
        "cursor": {
          "ref": "2503dcb0-d252-452e-b951-352e18e4c939",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "83284cbc-a898-4137-aad4-4742572749f1"
        },
        "item": {
          "id": "a0d0ddce-5b38-4c31-92e4-f7ba822856ff",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f2b8b5f6-a4ab-4206-8d2d-949e1a29d1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f37ab3e-a682-4e39-a293-bf3354d698c0",
        "cursor": {
          "ref": "537a04ec-5656-4360-b99e-96375a2e63bf",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "bbe8e4a6-04c8-402c-88dd-b63915c56dbc"
        },
        "item": {
          "id": "7f37ab3e-a682-4e39-a293-bf3354d698c0",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "01917858-05f8-492c-9cd5-029d5f0f35c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83c4015-332f-453f-b8d5-07f9c0c15722",
        "cursor": {
          "ref": "06c0b5bc-5fc6-4a74-a537-700cec845cc0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "86bdfc29-c889-4cd3-953c-91b6b7a64d36"
        },
        "item": {
          "id": "a83c4015-332f-453f-b8d5-07f9c0c15722",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "08ad2d43-2ea6-49cf-b38d-d17a1a274c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33018074-2c48-44c7-9a37-1db050386c97",
        "cursor": {
          "ref": "d81e6f35-20c4-4753-a9ab-fafce771d204",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "25b6ac60-1ba3-4b55-b404-e0ac0e9068da"
        },
        "item": {
          "id": "33018074-2c48-44c7-9a37-1db050386c97",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c7e753e6-54c2-4a60-9c31-ca6017f0717b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b18101-f2cf-4e22-8c24-62b7f1864bca",
        "cursor": {
          "ref": "e3a189ed-44a0-49d4-b017-5ce4eb1a2a8e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "900ce691-84ef-483b-9e4c-5f99da3d2284"
        },
        "item": {
          "id": "39b18101-f2cf-4e22-8c24-62b7f1864bca",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f3a78d90-7fc9-46aa-8c11-681c21d172a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63617215-f99f-4b27-a8d8-7ed91ff80a13",
        "cursor": {
          "ref": "07838480-9469-4732-904e-40cca86d0f3d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1ebcc90a-102c-414f-9c82-9ed5116deb7b"
        },
        "item": {
          "id": "63617215-f99f-4b27-a8d8-7ed91ff80a13",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b4fa34df-ef9f-44a5-97fe-4d544f3a08ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f80f5f7-eb94-4f2b-a0d3-2a3a7910454c",
        "cursor": {
          "ref": "2162036d-fb4e-4174-aae0-3f8a8296ef6a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "74c1b8fd-13dc-408b-a730-f54834b27ca5"
        },
        "item": {
          "id": "2f80f5f7-eb94-4f2b-a0d3-2a3a7910454c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "001b415f-ca01-4fe7-be89-337b0d4ca623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448261d4-0a06-4b5e-bd14-6842d25749e5",
        "cursor": {
          "ref": "268f690a-dc1a-4c01-90ca-a5380168167c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "14569504-0b46-4010-92d3-493baa758f7b"
        },
        "item": {
          "id": "448261d4-0a06-4b5e-bd14-6842d25749e5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9f72d1a4-8244-4d45-b8b5-f9c6cfa7f3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed1319f-4840-4408-b347-87a9722ae188",
        "cursor": {
          "ref": "a5845539-2106-4ad2-997f-f65af97fad19",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "0e01e677-5941-4516-99d4-4770dfeae868"
        },
        "item": {
          "id": "6ed1319f-4840-4408-b347-87a9722ae188",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7e1cb7cb-9f4d-4bde-8a2d-347409ffbf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42e931a-4778-4ca6-9a8f-5275ab7e176a",
        "cursor": {
          "ref": "0d76fc41-5f40-4adb-8493-d8d95bffa2ea",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0762e4c5-addb-43cc-b9e8-cf38f6ee09f0"
        },
        "item": {
          "id": "a42e931a-4778-4ca6-9a8f-5275ab7e176a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "dab246d7-e07c-441d-874b-eff90b62e08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46573bb-0417-4c73-8bda-54e1fd57bd55",
        "cursor": {
          "ref": "5a0408d8-2730-43cd-a3be-2db06ed33638",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "95a9adf6-8f25-424d-87c9-6e84b7128cfb"
        },
        "item": {
          "id": "f46573bb-0417-4c73-8bda-54e1fd57bd55",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0cc74fca-d187-43c3-9848-e17ca27073ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ca84c1-9286-4bd1-86f6-16a0ddf9c3ba",
        "cursor": {
          "ref": "800009b9-7c4f-490a-8f02-80d4da9b1aca",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "33d6bcd3-2ecb-475a-9db3-984b7eb3f178"
        },
        "item": {
          "id": "c6ca84c1-9286-4bd1-86f6-16a0ddf9c3ba",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cf3ea64e-1ce7-491e-88d8-1a1d30f02e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c505682-737f-470b-b151-818e27d3cb85",
        "cursor": {
          "ref": "da72ba67-f1f7-4088-b820-b6edd4fa185a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "330ab5d3-47d4-4d8e-a8a0-05284d4b3463"
        },
        "item": {
          "id": "4c505682-737f-470b-b151-818e27d3cb85",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4e0cf7fc-ac03-4dc8-857d-03b869eac9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def64b60-66bf-48e9-9221-ecaaaf3d3d03",
        "cursor": {
          "ref": "91db4794-7a23-4a4a-90b1-4bd958838a7d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "58c5eb66-b31a-4b91-b647-4a54132a6223"
        },
        "item": {
          "id": "def64b60-66bf-48e9-9221-ecaaaf3d3d03",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5c6ab3da-83c9-428b-8786-50ef8f6f1ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1caa0f-6fcb-499e-8765-96ad3f8cc6df",
        "cursor": {
          "ref": "e0bb8353-73f9-4fd2-a546-ed1e140442dc",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e6e9b11f-a84f-44c0-9f6d-9356d84a4cfb"
        },
        "item": {
          "id": "ff1caa0f-6fcb-499e-8765-96ad3f8cc6df",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b7d995d3-80ed-47f4-9ffa-3f3aa7a47870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f59f03-8918-4aa5-b5fc-2229703d8318",
        "cursor": {
          "ref": "fde572cd-31d6-4a99-afb9-3899acd9d6d0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "aa80fcee-7e1a-4ec3-914c-2b40f5838a51"
        },
        "item": {
          "id": "c3f59f03-8918-4aa5-b5fc-2229703d8318",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a6ccad3b-5246-4ac9-a8eb-ad04b2f31ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36852ab2-44b7-47c2-9635-f196c3891871",
        "cursor": {
          "ref": "c1098ad4-d802-44a1-8ef1-d02120319732",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3ac7b8f7-0760-4e88-9fa8-89a0ff9bb2cf"
        },
        "item": {
          "id": "36852ab2-44b7-47c2-9635-f196c3891871",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "705b9d52-9fcb-4784-a93f-9611af023169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe8d5da-9643-48d4-856a-7f3218c7ce1d",
        "cursor": {
          "ref": "3f1b8894-b6d7-47e7-9550-27f0c8c46d82",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "98b70779-ef91-4210-8b11-ca5d88c3fbd8"
        },
        "item": {
          "id": "ebe8d5da-9643-48d4-856a-7f3218c7ce1d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "70b82ca3-3271-46e9-823f-f2b06e80b60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1577cee9-0998-4e57-81ea-797215b51aa0",
        "cursor": {
          "ref": "b4cddb7f-dfa6-45af-8771-a9f6b1d86ebe",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "964fcac8-2596-4e71-bbb8-5253ea765107"
        },
        "item": {
          "id": "1577cee9-0998-4e57-81ea-797215b51aa0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "96abe3de-6673-4076-8512-ad66ba4ae94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9616967-cc64-402d-bdfe-1c94f422c8f8",
        "cursor": {
          "ref": "e8bd7eac-d759-4dbf-851c-df122d746776",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0c06fe2b-e604-428d-be60-5c31947eea00"
        },
        "item": {
          "id": "b9616967-cc64-402d-bdfe-1c94f422c8f8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "583a6623-ec17-44f6-ab9b-143b52f3c0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd7c03c-0854-4bb5-8c13-8011db786b45",
        "cursor": {
          "ref": "378e29a7-b57f-4cb7-8afe-fddc3fad7420",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1117c0ad-cb90-43d6-a9ec-344eecb3f8d7"
        },
        "item": {
          "id": "6dd7c03c-0854-4bb5-8c13-8011db786b45",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fb1b92b7-2fbb-49d4-b8c8-1d7f7ea71dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f54307e4-7d3c-468c-8ad8-6d642b3a86fa",
        "cursor": {
          "ref": "d3101c0d-8d80-4c5e-83f9-5e3ab05776e6",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "09aed9f1-f56b-4033-a72d-abf271c25e9a"
        },
        "item": {
          "id": "f54307e4-7d3c-468c-8ad8-6d642b3a86fa",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9e94f5b6-cc0d-4203-8124-b1360953a7e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1656548d-07d3-46e3-bfb2-1cf272f66ce7",
        "cursor": {
          "ref": "8a4fc201-0492-46b1-80a1-774891966ae8",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f2b5b907-25e6-4dd4-98e8-da344e360f84"
        },
        "item": {
          "id": "1656548d-07d3-46e3-bfb2-1cf272f66ce7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e657aaf8-4dcb-46ec-81ad-b997ea1f94b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd54544-c088-4355-99a5-8b105f6a6059",
        "cursor": {
          "ref": "42b011a3-534f-4d72-ba4c-bde5b0d26138",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "649f287a-1f96-4055-8d92-88bf7c81f2b8"
        },
        "item": {
          "id": "ccd54544-c088-4355-99a5-8b105f6a6059",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1efc7897-7abe-4a0d-9a4d-bee88a06b4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e42d243-74b9-40c9-8ace-f2fb5a11e13f",
        "cursor": {
          "ref": "53603741-eb37-4ad2-9ab2-b097012ddfd9",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fc3a5d43-33d8-4045-881a-729d8b70590f"
        },
        "item": {
          "id": "8e42d243-74b9-40c9-8ace-f2fb5a11e13f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "388434d1-59fe-4b47-aa7a-18e8d672e42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14ac327-95fc-4a00-91d2-7e72ffa6b204",
        "cursor": {
          "ref": "febec8f5-a553-4482-a90b-cca38609b0b3",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "37a773a7-c359-4aa4-bc29-9911eeeb50cb"
        },
        "item": {
          "id": "c14ac327-95fc-4a00-91d2-7e72ffa6b204",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dc85538f-e078-4c16-8f17-147da57b6964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71b4fa6-b26a-4450-93f2-d099c81d03b2",
        "cursor": {
          "ref": "df14e22c-8841-4896-94f7-402b17d0bc81",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c9735174-0517-48ae-a334-d921e6112ef0"
        },
        "item": {
          "id": "a71b4fa6-b26a-4450-93f2-d099c81d03b2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "79d02573-4962-49b2-938b-ab1af9785fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b28e6d2a-a3aa-41ee-9ae3-4c8316ad71bc",
        "cursor": {
          "ref": "ebd4d174-bcf9-4b80-a22e-c71bf872ad24",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c76024b5-6b8c-4ecd-8906-8f817b1a561c"
        },
        "item": {
          "id": "b28e6d2a-a3aa-41ee-9ae3-4c8316ad71bc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "af7dc118-2fc0-48bf-98a5-619de6dabdcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cd2373-485c-42be-a448-b0bd19a08ccc",
        "cursor": {
          "ref": "cac7b997-1466-4580-8922-cc8e215080a0",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f6621c80-e2df-476b-8369-77316fd6d4c1"
        },
        "item": {
          "id": "e2cd2373-485c-42be-a448-b0bd19a08ccc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "de6d8b17-199f-4e2d-b4ca-10a79daa9c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7324bd2-8bcf-48d0-aaf3-f1106a5a82df",
        "cursor": {
          "ref": "3d1f26bb-78e2-48a9-a7cb-5e05c42d09ae",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "49661b9d-20ac-4af0-9f43-c4a900eb7bcf"
        },
        "item": {
          "id": "c7324bd2-8bcf-48d0-aaf3-f1106a5a82df",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3f0d6b65-c980-4b39-94ee-7fff39fac29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ddee2a-f289-4c4c-b440-0ea4fac9051f",
        "cursor": {
          "ref": "85371598-26aa-4bb6-944e-6a8e7d14bbd6",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "909aaad5-1298-40db-be7a-eed5e811451d"
        },
        "item": {
          "id": "e8ddee2a-f289-4c4c-b440-0ea4fac9051f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "633bceb0-4e6c-44c9-8b84-5dc23fc11c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af6f244-9c3b-47e4-a40e-a518f15e80c0",
        "cursor": {
          "ref": "fb454fc9-ec0a-4fe3-b974-025e3fdd3d26",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5338af14-1fd6-4fa7-8142-c4a3dc747b10"
        },
        "item": {
          "id": "1af6f244-9c3b-47e4-a40e-a518f15e80c0",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2646f1fd-0b6f-4957-9bd6-6d38a8a31c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a776e650-933c-422c-8414-eb9d55fe53d9",
        "cursor": {
          "ref": "6aaa62b8-a58c-4519-911a-915f6297cfd4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e6068d28-5662-461a-af6c-1be562d4aafc"
        },
        "item": {
          "id": "a776e650-933c-422c-8414-eb9d55fe53d9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9eb142b4-1600-4eea-b831-2ef95d4e0dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f89fe2-81b1-4467-b60d-cb7705c1d665",
        "cursor": {
          "ref": "3c480300-9b23-4f8e-a740-f4ac715d05d9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c8b20264-3165-4e26-8f24-79a9c41c0d59"
        },
        "item": {
          "id": "21f89fe2-81b1-4467-b60d-cb7705c1d665",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bb863620-d155-4bbb-89f6-5e3dd58fc0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6ee148-528f-4bff-aadf-a7f7663e67d2",
        "cursor": {
          "ref": "8728ebf3-56c8-4288-a8a8-74f6b4e85a88",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4e9d1757-9f9d-4d7a-a905-9683d4a98b85"
        },
        "item": {
          "id": "ec6ee148-528f-4bff-aadf-a7f7663e67d2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "752734ec-ba0a-4046-90c0-58219cc6e7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea243e0-a79a-41cb-b604-90303a349052",
        "cursor": {
          "ref": "bcf29a57-3366-49c7-9467-6d65969b1e1b",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2b6e0cd5-d6d8-4833-988a-8d0857bbb424"
        },
        "item": {
          "id": "1ea243e0-a79a-41cb-b604-90303a349052",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2fb98dab-4962-4389-a90f-e0ded73b6d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "105c8c0d-ca8d-44e2-8093-828a8aa68cc4",
        "cursor": {
          "ref": "a4f9d05a-386d-4259-8c8a-890c05d78cb0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f12af6fe-65b8-45aa-80c2-49eb0edfe884"
        },
        "item": {
          "id": "105c8c0d-ca8d-44e2-8093-828a8aa68cc4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1b6c6df6-9c31-42da-87c2-8d16f4b24078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcddb869-a479-4c05-8361-8efbec424a10",
        "cursor": {
          "ref": "568b425a-f915-4534-9dd5-c503b59b16f4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d1f16c8d-66f8-4371-a421-873fd00d1b8d"
        },
        "item": {
          "id": "dcddb869-a479-4c05-8361-8efbec424a10",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4c44d9a0-7928-40d9-b8b2-76567c70a6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7173d6-b3b7-4d37-bd15-78845198e7c6",
        "cursor": {
          "ref": "7808a6cd-bc49-42c2-baf4-cab361d3ba67",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "987e1d4c-4a13-4724-b3c7-ff81ac9eccac"
        },
        "item": {
          "id": "fa7173d6-b3b7-4d37-bd15-78845198e7c6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4650bafc-f3b3-4d43-bf28-e39037ac1c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc9e882-c3ec-490b-a322-fab8a1c32784",
        "cursor": {
          "ref": "a122aff7-da0f-48a6-a537-fe4a7d55c2ff",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1e6df230-b51d-436f-8060-bb49680a0003"
        },
        "item": {
          "id": "6bc9e882-c3ec-490b-a322-fab8a1c32784",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "43b97b66-8b8b-42a4-9569-c7754f69bd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1de83a8-d9a8-43ca-bffa-d82f3df9efcf",
        "cursor": {
          "ref": "808c14ca-59ad-4463-af78-0a55193f3260",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "99d268a1-2ae0-4dcc-a9b4-24a87963ca34"
        },
        "item": {
          "id": "c1de83a8-d9a8-43ca-bffa-d82f3df9efcf",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "146ced21-2e9b-4161-b962-cd94d538ca84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f46e0cd-028e-4859-9eca-6034f8a1fdc2",
        "cursor": {
          "ref": "9f2f31fe-045d-44e7-9288-a9af45f185b4",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b18fd5c8-71a4-4acd-90c7-5dddedcbde17"
        },
        "item": {
          "id": "2f46e0cd-028e-4859-9eca-6034f8a1fdc2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0d02cead-4203-4242-8103-a67565ccc4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb40f02e-8f62-4034-b50c-f8917d948e91",
        "cursor": {
          "ref": "ef3cbe72-bf4a-4aab-8956-c75fbd006b66",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2b2bcb5f-c381-4f70-8c94-479e845dbb5c"
        },
        "item": {
          "id": "bb40f02e-8f62-4034-b50c-f8917d948e91",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f81dad1a-66f2-4e1d-837d-62a9f5f8898e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e17d00-29af-4463-9472-46643ab1a68d",
        "cursor": {
          "ref": "0745fea5-efd2-4c1c-8537-8909c716e8b9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a623a21b-cfa6-4c3e-b37b-058ea53c63cc"
        },
        "item": {
          "id": "c0e17d00-29af-4463-9472-46643ab1a68d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9011478a-7dca-48d7-89a2-c057b7565c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166a63fa-bc15-4006-a2a6-e4d1e387f7a2",
        "cursor": {
          "ref": "2fdbb1c7-bca1-40f9-afd9-e606af2d077c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a19bcc3d-515b-44c3-8305-ddd392b2f91c"
        },
        "item": {
          "id": "166a63fa-bc15-4006-a2a6-e4d1e387f7a2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f908d9b9-444d-4c60-aead-89cdbc54fc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6e0e1b-85c6-447c-b7fb-1631255bec56",
        "cursor": {
          "ref": "29aaf31c-4366-4a25-a052-5256eaa3ec35",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "6b7528d3-8f27-413d-842b-43e4ae8e27c5"
        },
        "item": {
          "id": "dd6e0e1b-85c6-447c-b7fb-1631255bec56",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3b3f44ff-969c-44b6-a433-dc61da414648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be7c0d4-b3e2-422f-bef5-3942adf6889c",
        "cursor": {
          "ref": "49dd90bb-5064-4bbe-92ed-d6aa4f937367",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2ddf449a-468a-4a8a-a4d0-b17098c6e919"
        },
        "item": {
          "id": "6be7c0d4-b3e2-422f-bef5-3942adf6889c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fd09ef5a-0894-4b90-b1a1-86e19c5c997c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e2cca1-f914-4ca2-9a6b-75a3e983af2d",
        "cursor": {
          "ref": "1e7569fb-05d9-4983-a7d2-8fe50053b1f8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "467b2346-db4f-4dea-8780-4f31490e9ca5"
        },
        "item": {
          "id": "86e2cca1-f914-4ca2-9a6b-75a3e983af2d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "29469652-77a0-4000-9c9a-b76e9cbb150c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5a00f0-4a88-476b-a4d0-c83fbe3505f7",
        "cursor": {
          "ref": "8becf165-2472-493b-9c15-532457bd5cd4",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "41fd85e2-aa68-4f67-a2bc-c5236c1d12de"
        },
        "item": {
          "id": "5c5a00f0-4a88-476b-a4d0-c83fbe3505f7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9c7345e6-fca2-41a7-9267-c8a321306141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaa9bca-edfd-4e10-b97d-3f2ceebbf989",
        "cursor": {
          "ref": "29820e4a-dd2b-4957-afad-f6a53a41e791",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ecbbd594-4a1b-4cce-a121-3a3680e70ee8"
        },
        "item": {
          "id": "ddaa9bca-edfd-4e10-b97d-3f2ceebbf989",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "240e4e53-24da-4d8c-8cbf-f608cfa25b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ff91a7-ef50-4e38-ad52-0a2f72f2acb4",
        "cursor": {
          "ref": "657077d9-c510-4289-b4ce-9862da9a9b39",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "56c10e81-7497-4c2a-b6e8-20fa3903d8ea"
        },
        "item": {
          "id": "b1ff91a7-ef50-4e38-ad52-0a2f72f2acb4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "02dd43d0-dc4a-4ba3-b5b6-3b3df15d49d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17544e13-cffc-445e-b293-af3b162f2856",
        "cursor": {
          "ref": "2aafacf9-c9fa-4794-aa32-98c3bf6936aa",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "00dd65b9-4132-403f-9e79-c94970bc5edb"
        },
        "item": {
          "id": "17544e13-cffc-445e-b293-af3b162f2856",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f89c41f1-1c41-4092-92ea-e6a7a370cbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae70f4c7-f357-42e6-bd50-0196518103d3",
        "cursor": {
          "ref": "ecbad1e9-b0df-491a-b438-48761ea186ac",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d21169bd-872e-4e12-bcdc-d95291085efa"
        },
        "item": {
          "id": "ae70f4c7-f357-42e6-bd50-0196518103d3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3037c6cf-2296-40a1-99a0-d302c4f14baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52f4c99-6e13-4516-b52c-997254fd318d",
        "cursor": {
          "ref": "7fc35950-2445-4233-a314-849996f46cb2",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "24cafd78-2b2c-43a4-80fc-11c12c2241b0"
        },
        "item": {
          "id": "f52f4c99-6e13-4516-b52c-997254fd318d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "65de137e-2dc1-43df-baa7-364609abb90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8a638e-faf6-4f6e-8a39-5867aa3b86f6",
        "cursor": {
          "ref": "20982c04-e3a0-4616-9058-f9ae88c14b46",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fc2e3590-1a21-4402-a246-5442762c7bec"
        },
        "item": {
          "id": "0d8a638e-faf6-4f6e-8a39-5867aa3b86f6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "61dd3f3c-e31d-4235-b3e4-4ebe6b1f2b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4ea90e-6376-4961-943e-1319fd3f2eac",
        "cursor": {
          "ref": "416537d8-a5b3-423d-b5cc-a6014c536579",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "04e880fd-9d19-42c6-8fb2-9ea4c79f8498"
        },
        "item": {
          "id": "cd4ea90e-6376-4961-943e-1319fd3f2eac",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d2898607-0f08-4496-85be-6e4a7c148fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e368e74-efa0-4a01-bb7e-176f4bc953fd",
        "cursor": {
          "ref": "1ef748d9-c36f-4d7f-8918-44eb69de56b6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "dede958b-595b-4f9d-9fe1-1ddc0481f8c4"
        },
        "item": {
          "id": "2e368e74-efa0-4a01-bb7e-176f4bc953fd",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f674543d-26e2-4a0b-8879-2bdff328cc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f623c83-a612-43ee-af13-07ac8c25a2d9",
        "cursor": {
          "ref": "d1d2f09b-4508-4a26-b9c7-8dfb0df504fe",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "699a0f7c-7ac0-44fe-adc7-06e571f91545"
        },
        "item": {
          "id": "5f623c83-a612-43ee-af13-07ac8c25a2d9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c86cc63f-c106-413b-a0ca-66c8b9a19aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ee4ec5-2fe0-4c4b-85d4-80fbdc4d6437",
        "cursor": {
          "ref": "1f7f13f4-aaf4-479d-a161-051648c16d5f",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9b1bc6d7-db77-4093-a701-77419263052d"
        },
        "item": {
          "id": "43ee4ec5-2fe0-4c4b-85d4-80fbdc4d6437",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "75424532-747b-4d1e-b6e9-155c5cc6b5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3eb114d-c51e-482f-9608-36a49e2140ec",
        "cursor": {
          "ref": "dcc2dade-a0f8-4f98-b206-c12a4f2d3807",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d3e9f2f4-bd21-4ac9-8c63-3fd9fd7cb06f"
        },
        "item": {
          "id": "b3eb114d-c51e-482f-9608-36a49e2140ec",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3b8218f6-69dd-46ed-bbce-1d806ec714d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd58868-161b-4af8-8849-176c48fc2fac",
        "cursor": {
          "ref": "ec838b67-90a2-4afe-be53-efe4dc2d5697",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1070d31c-0c97-47d6-a74f-36107ce426f7"
        },
        "item": {
          "id": "0fd58868-161b-4af8-8849-176c48fc2fac",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fc49b6dd-2902-4e17-aed6-92f1e2f9f275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5021977f-d09e-4b31-aad0-5290587e80a6",
        "cursor": {
          "ref": "c76b991f-b83d-405a-b1f2-3b7e6ebf5117",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5a917112-000e-4ee5-91c8-840f34c11e9b"
        },
        "item": {
          "id": "5021977f-d09e-4b31-aad0-5290587e80a6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3277f274-3245-4b46-b7bf-6441776f3dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277bc514-bd23-48c7-b251-fb3ad6a7819a",
        "cursor": {
          "ref": "f0c74ade-3396-4e5f-86bf-223c2f7b7b73",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5c3864cb-bff4-40af-ad35-df9c70f8eba0"
        },
        "item": {
          "id": "277bc514-bd23-48c7-b251-fb3ad6a7819a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "80d0b307-a65e-4ae2-a758-3d86b18d39c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc91373-9a55-4d86-b73d-0f465357e75d",
        "cursor": {
          "ref": "17641dcc-af74-4750-a652-d4c813c0f7df",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "93a62e14-50e9-465b-b9cc-1575e4a0b99c"
        },
        "item": {
          "id": "9bc91373-9a55-4d86-b73d-0f465357e75d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8cc4eb1a-b88e-49a0-808e-2ce8e7e399fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75fb35f-8168-41a4-bbb0-b26960967fe5",
        "cursor": {
          "ref": "cfe150e8-0e5b-449b-8ab7-6c460aff7c58",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1a8c64a3-3b10-4466-8dba-42e9c238ae0b"
        },
        "item": {
          "id": "f75fb35f-8168-41a4-bbb0-b26960967fe5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "8ea3726f-0c78-498a-8bee-b6427b747638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0f2ce8-c243-4e48-ba25-5193b51af028",
        "cursor": {
          "ref": "cd9da82b-a419-4d4b-afd8-32f3322487dd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1fa40fec-d0fc-495f-9869-fe4fae0c0262"
        },
        "item": {
          "id": "3f0f2ce8-c243-4e48-ba25-5193b51af028",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9c40b921-5069-4767-ad10-00d7b75af869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403bf4f1-1040-4c06-bdea-3bf25055ed4d",
        "cursor": {
          "ref": "1e9e822b-6b79-4845-92bd-fe088cdcb039",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "05bb942f-2526-4460-a6c8-93c5cc34d9a9"
        },
        "item": {
          "id": "403bf4f1-1040-4c06-bdea-3bf25055ed4d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3f7585dd-e739-4f5d-ac24-079fbe1c5790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b827f1f9-e8c8-4323-9491-2cacda2c120b",
        "cursor": {
          "ref": "fe4ce444-ef01-4c6f-963f-2324163f6b14",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "fb1729e7-c9d0-4e90-bc0b-ab9cfb44e850"
        },
        "item": {
          "id": "b827f1f9-e8c8-4323-9491-2cacda2c120b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "c7a31490-6f60-4b49-baf6-a779240e76ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64aa7d9-4238-4a94-8254-700a685e7cb1",
        "cursor": {
          "ref": "142d078f-e0f9-47fc-b630-38e77bb9b72d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "be42c25c-1302-45ab-8ff1-4f13023647b4"
        },
        "item": {
          "id": "e64aa7d9-4238-4a94-8254-700a685e7cb1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d3aa8231-c1f0-45d2-b784-93ce3357234d",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ceeb36-342e-4562-a90d-0d9ba852312f",
        "cursor": {
          "ref": "3cbc99b6-cbbd-4cc9-8d36-97d70962868b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a89cceb6-4e43-4f32-9692-b4d9ab397885"
        },
        "item": {
          "id": "34ceeb36-342e-4562-a90d-0d9ba852312f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "99308803-c73d-4c0e-874b-c9d7357afd83",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad82550-ac2b-45bd-b58a-6cde0b3ddb3f",
        "cursor": {
          "ref": "7b08638b-9af0-4a5e-a9c2-143a764fdd16",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2a5937ed-082a-4790-a98f-b003febcf90c"
        },
        "item": {
          "id": "bad82550-ac2b-45bd-b58a-6cde0b3ddb3f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "44c2501c-0805-478c-8740-a6cd0061cbb3",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca788e01-d461-4a17-b812-53e155757a48",
        "cursor": {
          "ref": "a9274331-e6a0-425c-a408-30a200efcb48",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0f434594-a53f-4c63-915d-12b12eb9c1a0"
        },
        "item": {
          "id": "ca788e01-d461-4a17-b812-53e155757a48",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6dca1fb1-3f9f-4fbe-8b9a-f598f0fa69d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca788e01-d461-4a17-b812-53e155757a48",
        "cursor": {
          "ref": "a9274331-e6a0-425c-a408-30a200efcb48",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0f434594-a53f-4c63-915d-12b12eb9c1a0"
        },
        "item": {
          "id": "ca788e01-d461-4a17-b812-53e155757a48",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6dca1fb1-3f9f-4fbe-8b9a-f598f0fa69d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f996cc4-6bda-4e83-b963-2dac25e9d9d0",
        "cursor": {
          "ref": "2e395629-5768-4cba-815e-fcf8d0fc6ce4",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ee5cd1c6-0e64-4886-930c-afa136b978cf"
        },
        "item": {
          "id": "9f996cc4-6bda-4e83-b963-2dac25e9d9d0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "715e1389-c2dd-431a-91fa-8b8018bdc4ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9af360-1178-45b4-be4c-aba4e62e2d3e",
        "cursor": {
          "ref": "b397f392-7c73-439e-bae6-8342b1973efa",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "41144160-a1fb-49dd-a5ec-507d94a02b5d"
        },
        "item": {
          "id": "fd9af360-1178-45b4-be4c-aba4e62e2d3e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "86133467-9bbc-4c6a-ab42-9b99b5b0c45b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}