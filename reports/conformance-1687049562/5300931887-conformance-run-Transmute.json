{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8fba0806-9c69-41be-81c8-53b4c187dee3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "daea537d-81d6-481e-bf94-cd280fdf5f94",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6bb28755-c3a5-4b61-8c14-a5147ec579a0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3ad00a40-8be3-4340-975a-25e66d8ab9a4"
                }
              }
            ]
          },
          {
            "id": "86f2b37a-c02e-46c4-8a01-68a2cb622f00",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0de126c0-ee11-48f3-b1fb-380fd970bc57",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d12e22a1-173e-4dce-b6f6-9e4670f56c56"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e749d636-de18-4746-90a8-c3ed8aa20ec4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "319027d8-b79a-47ec-8268-fd60f881b4e7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04ce1b4c-deb5-4c08-8f17-1d38b77bc4df",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cd6a610-225f-4692-80d3-794f22239e5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78f7eacb-70a5-494a-853c-f1b1b7d427b3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "458d103a-58a7-4e0f-84aa-ea60c1d6838b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0cb6cbc-1129-4777-9779-c25695538adc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b5e3dd3-1a8d-4ffb-ad9e-bdc294525bc0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f699613-fc9a-4ec3-bd99-e32a2a51ec65"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a99381a9-f6b4-44d8-8729-f3fb021327e9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fe2f3ef5-eb58-4c20-a741-d08d7dfeb986"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ca6dbcd-3c10-4d49-99ec-8aad06bfedd4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0760a858-9153-4997-a63e-f1a812a90029"
            }
          }
        ]
      },
      {
        "id": "30c31ea5-1245-48b4-b5b1-7b9e17b0d826",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a224ccb7-8b60-4579-a121-b4c3e723367d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ff9b927-b8c2-4d6c-bc19-4022ae5bc1e0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "71697ade-fd0e-4680-a4de-f2a87de35a26",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f17f354-3a40-4f12-8943-35793635eb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cfb5690-3f36-4260-98cf-950dc13e64ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2b64c9-004a-441c-a199-e98fe3b029db",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bd9b26-ab5a-456c-9c68-41b5528b5879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74393087-dc44-4a01-b66f-250ccbcc2ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10eab13c-2199-4dc0-92c4-b7ef94592de6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f0b305-d584-43d1-8942-a3873a001092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3991ae0-2c6f-4598-895e-d26daaf66d92"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21f2c540-0d39-4216-8877-f799d1c2bf0b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8060b93-590d-4511-aaba-68dd812ae8db",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b55aff-c097-47f0-8135-02849e63ddf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3723c206-960c-4402-a1bf-2d5af83b9e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5ecb09-dad7-4b12-a204-f3a1a27c706a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d8c888-818a-4ada-b577-ff2322288d30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1421410a-cfeb-4f5f-b9e4-3c0607fc2376",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d01a2a9d-e5ef-41df-9115-48651d8aae8a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "601496e6-bb1a-47f0-82a3-196a542d01f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2a0806bc-7195-42a6-856a-dce53610c184"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2f28d2bb-dbe5-4e66-9fb7-509dd37d4a5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "13d212eb-df54-4843-bc53-6ee85f32822e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a71c333-5311-4874-ad98-2b27e823804b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "caa50fd2-347d-4621-8daa-2c0b4a6d1044"
            }
          }
        ]
      },
      {
        "id": "67519a50-afcf-47fc-aa7f-18181a4d65cb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d7f46335-5d5a-4e05-b9db-8b6061e92ea6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf30c2c1-6dfc-4233-a866-c9afbb4b4b93",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3141c654-21a6-4e6f-8a28-663844b690b9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11575c86-a60e-4dc8-bf34-7687632e67bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cd79bc-b4de-4c10-94d6-cc71d1b5d439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b946b6-6449-4d8a-b81f-a1fe38d5dc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da566e49-d246-46e9-b44a-613b6f90fb78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3eb76f3-72e8-42a0-97c8-b6da57f6ba3d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b018e4-85ef-441c-88b6-9c656f704820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321d96e1-2a0c-4af5-85a8-582cf2891e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a505db5-8118-4d5a-a86b-ca1457178370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "810940ee-9836-41f3-a922-de972b4a0393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5713d2-a620-41c8-88b9-82a7d5712971",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbd1650-4b04-4d50-b16d-c9bf92726b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffcf35f-6adc-4413-ac39-be0e494c18c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b2d39f-fa13-4b38-a185-c8f6ba015f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0a7d661-8d30-430e-b26f-61fc42c95682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8affbf65-2a52-48d6-a504-516c09300eed",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe30b8d-719d-47d2-ab1b-29f903f16b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e962b36-a8ad-4421-bccd-bde01719a7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6e7d80-1672-40d2-a4af-bcb3ff0ed607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa160ee7-87a3-4b21-8ab4-c90e8f0850b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8972589-d2f1-4c23-9bc2-a8be720b1d30",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc12705-eeeb-4006-bd4d-6394e597f985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953efa30-c0c2-4680-9d59-9bc2fd9f6cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc2e488-7583-492d-94fa-86406e816718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d85ba5d-9ee2-4738-958e-6d767a96fe73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654876ec-dcd3-4856-a57d-1658ba8ad43e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73576cd-6494-43e4-810c-cd99aa41bf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5bde74-2ef8-4961-a5b3-2d4eaba443e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e929726-eaf3-4fe9-8898-4d5108f0e62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f1740f4-b8f8-41d3-8652-9408bcc5deb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba19b07-cfdb-452a-91b2-9952968e0edd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7634ea-b99d-4f2e-832e-5bef1cf84d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f25544-e47e-4f44-a281-150f3669bc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944ed95d-e5ac-4331-a6ec-28dc377e7eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17caaddf-c4f9-4d03-a54b-1f1f8f67849e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b95f56c-387d-4ace-9ce2-194708e28b22",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6877056-0cdf-4a1f-aed9-afc5fbcc8294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "047e3bc9-4158-48fd-a785-71b02ec8efc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948146c6-dcb7-4d7d-a543-4a45d198a268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f64d4306-9995-42ff-ae76-f11ae45e259c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf64608-b230-441a-97ff-4f022d351959",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02d3793-4057-4f48-b08f-4d7b5596dc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fdbe0c-5b04-4ac6-8d97-c6ad9387499f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e42d2f2-e903-43b7-83c4-d893d93a9ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b4d5350-19f7-4b4c-aa33-6141283d2539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9dffbb-2d22-4cd3-9aef-dc15e17eb41a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf071da-0e14-41c6-ac2a-1f864857c90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e02d1e-b92c-48c8-8798-c53b14270c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13792a0-9213-4eda-ab4d-9b61e4b45d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d550709-e665-48af-a3df-9bb863ca0f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71baf7d5-b038-47b5-b559-b36b639a5c6f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a8672b-ce8c-4865-a4ce-4faa9a8d7e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "924e12ea-f229-492f-81cf-610ee82a9cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7c9268-b59f-4e64-9350-452a8bd69f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6f8032f-9e81-420f-979d-437922870ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2c0705-95e4-4250-9045-747c8f7188c0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caff181-d362-47de-839e-2b19da6ddf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25dec71-dfaf-478c-bbc7-dc83183e27d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6d5be6-e99a-46ec-81a9-45ca521da456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "782824ef-a279-4bb7-86b7-d21ac1ab0550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc91526-0d00-4982-9fd0-6c08bc374342",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc14b5c-96d6-480b-a1df-9e5cd91c6dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2732360f-d067-4a16-8916-2520a6ab0085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd9a2c5-20c5-4992-a36f-7ce83bf5d8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93321d69-f0e4-41af-8788-ccbbbaa4e320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "620fa884-6952-4e4b-9e3b-1f103c42ec6f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5d4a07-ae3b-4087-a0f8-cc2c6cf841d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cd698e-660c-421f-a5a8-ea7b65242d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64231e23-7f3e-4511-9e36-4abc9b67b409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1884a564-34b7-47cc-b8d8-eb97de5d900e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0cbafd-2068-47d6-b360-93079ffa618e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec9f093-9b13-487f-be0c-4e5a7440a07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd893ebd-969f-4ed7-a61f-83ba661fdc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b524a9-6c6b-4953-88b2-764bb21e35b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56c157e8-22a0-4606-b6c4-5b996b47160b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c88cab-8ab1-41b5-888e-3e3603dd7458",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e5fad4-4c65-4b36-b235-172d8a01193d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837f7d5b-195e-4607-a5d6-4a9f4a783c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a9b6a5-da80-417e-a4cb-768b9f171ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72983b6a-2e93-47c8-a239-f203bd6e7a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c47516-51d5-40f2-b156-3181323dc773",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94575595-8a9b-4c5a-8717-d6f920e0058f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01323daa-2d31-4d1d-8f9a-e03bd0763e53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ed547f-3966-4caf-9747-3f646abf9ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c660713d-e569-48aa-85c0-bdb4b5536ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8b9345-53c6-46e9-8621-b4745185717a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536fced0-7556-43dc-a63e-dc4030aa5e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37f7b0e-15e0-4673-81b7-f92e968a3dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4056c953-39cf-40c7-9c09-b678526b281b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "311cd55a-f23f-49f5-8490-9e83c3e92081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a5df58-09b3-48a2-bcda-c468524b1100",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fdd8d8-59c9-42de-9cf3-c1cfb57b9bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d7dad9-6d53-45a9-ae19-5d91cde9c4ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159011bc-a79f-400c-96f0-3d7c34f5e3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9fb743-dc6b-49fc-a073-f03719d3b418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469d0165-f560-444c-83c5-f611ff4deaa1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cf3b61-c440-476b-91a9-21964e8fdb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ddf76c-1e59-4afe-9c13-48a6624580ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbf4583-13ce-42ec-82a8-d799ae99da43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72451c8-7d57-407a-bdd4-00ca408d5877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9163ac-921f-47b1-860b-8e805a10c677",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "271c1220-39d4-431a-8e68-e9a4aa9ff145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f186ca6-f3ca-4a58-b7a5-17a501b718b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97d9eda-8b7e-4a81-95b1-b9ec0fe32c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f191453f-fec4-4acc-ab41-01137bd20d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de40c1e2-186f-45f4-a32d-c6e17ddc58e2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d90a391-8f44-447b-8ee7-514e2c36e21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c4c7cb-22a4-4f07-b8c3-9a611980716b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f2ee626-a6ad-47d8-b129-7923c33a45ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f63e63da-b64a-400a-a2de-0f596a7502ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d044a65d-3d6d-424f-af1d-61c70c1d9513",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f206993-2331-4d87-bac5-5737bcd83a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27987219-6de5-417b-888b-d2b391d8f930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87133deb-a4ba-4aab-950d-1c31f60a4c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b98aed29-785f-44d2-9b8b-a287b42762da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bb3a91-7e2b-405e-ac5b-7d619353785e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b6c63d-6cfc-4279-a9c7-fd49f883bfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1bc2f90-76c0-4d4d-a591-12d237c9720d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83747ae7-ed1d-42d7-b63d-63d69b8c9be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c475d00-f5c4-46aa-aa2a-710fe6c15a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9dacb4-34da-432c-931c-12caf4ecb1c3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b52c6b5-61c4-4191-ba0a-f5d7666ef6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5734f52-b745-422a-aaec-89306c4a7303"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4c4e48-6aaf-4fa9-bf4a-34bb315f2dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f282121-e4e6-48a6-a819-af9c2aaae5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5766c190-4190-46bd-81b0-b61e2976398a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "706369ed-3a2b-4c35-96d3-62d00ae0e804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb96325f-cdd7-49b7-9640-fbdfebf0b9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4c7d69-c38a-4b1c-b269-50fb6ec956ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "81f7c311-4ed3-45ae-9c41-0d5d76e800a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8056a3f-7d3a-4f7b-bcca-979a7c0e9b4d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80db6e9e-fe87-46c0-aebc-f4089468c9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38781f58-f681-4eef-a6fe-6aae921cfea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cbf3ed-b2f4-4dcb-b15c-9fe518350ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77239489-42c5-48f0-92d3-cc854b46ea6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab4beb4-9862-4e36-9a23-1ff9cb780d42",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6acde0-ab92-40a9-a3cc-3a434148d0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f8eb94-b2ed-4bbc-9190-3542fa68ae8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb1620d-bd8c-461b-94bc-7f08c410dd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aef2506-700a-468a-ae3c-a140b645ed9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16caeeb4-930a-413f-8790-2a1516fce052",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f65db19-ad1e-4d45-b7ec-cd9e1d979135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60179e5f-af89-42e1-9c90-6fefaf3790ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34fb548e-7f96-4b01-848e-b360abfd59fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0497b953-8ea4-4256-9d46-e11759943980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a1c5e3-e87c-4fbf-adf4-b3e7ba0b7448",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed275e7-eaca-41c4-9281-7b968014bd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b2856c-37c7-4a07-840e-ac9cbb362617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cc3b7c-d27c-42b3-b703-1381b2ce6ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf99e481-5e16-40e5-92d1-dc6fea63a6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db8bcad5-a706-4cd1-a2aa-e05c0d377205",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71310de7-ad20-4aa6-8649-c48ad3ea9410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f400f21-6f60-48f5-a369-b75e0f455403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7941fc32-6a02-4546-be56-4c72ea77a972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3370f7-8bee-48a9-9d20-bacc0048dffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd37615-a4f6-4bb3-9e83-9ff0e6529a8c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88fc850-6b2d-49b2-9cff-086988fcf723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21535fca-357b-42eb-9b31-249c465e4408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d78734-d55e-4717-84cc-acef068ccb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1afd439d-2ddc-41ab-a273-abfe1660573e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1aca357-e39d-441b-baa8-081a4aeead4a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83be84c-ce8a-4596-bf20-6f9f4f05a848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8876df5d-e63f-41fc-8730-126268d84ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cee1728-95ad-401e-985e-9a33ec2a9932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "605b7caf-1c04-4ba6-9ba1-b7dfc1b82111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c606861-286d-4790-a5e0-d210248def85",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc874d46-3bd7-466f-80cb-d9a7ff8d52b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "280bf30d-ecf2-4000-b6e9-8e42dbb18574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed7d76a-0861-419e-944f-650a0163f8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "781dd10b-f816-4f7b-a1f9-4710cb66a474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32b2112-34db-4e20-a833-35a7cda0c087",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaaffa1-3fc5-4dfa-9662-8aba533d4ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24df1f9-a0dc-4dda-8a5c-576a14e4e2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6fd713-a4d2-455e-90b2-836b40b494cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8242ef60-6eae-4555-b240-7691ddb07ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bc81b3-bcbd-4e97-9be5-a974a44b250b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a308c124-1723-402c-8ceb-241dd910a87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51067a99-9d21-4c84-b0c6-485b1a77e030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae87780-a2ce-4afd-b474-65d40231a363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff33b171-8e6c-46f3-a7a1-266e73953218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0cf1cb-d8b1-419d-a48b-8069335787a8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42238465-bc5d-4c21-aee9-8515db866a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a70d7ba0-7ba9-45b6-9dba-7799acc4ebbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bfe64c-cf8e-4ded-bd0c-2ac64ec1743d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7abbb02d-1d12-428a-800d-db4605490568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc07bda5-055e-4e6a-a11c-5e128f7cfc42",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ee5496-0be2-4c00-80fe-4fa5f13102ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee59f77-1690-40f3-8ea7-add973f6bf05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ece1eed-c0a2-4a39-ab43-3b4733f22f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "73c107dd-9db3-4dc4-85d7-7918aa93b960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c91ab4c-933c-47d0-a3b6-d682ad94fcd3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f107660-9af9-4d96-b2b4-73d6247958de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac4b147-1672-49e6-800b-c111a11e619f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ea3819-665e-4f33-9cd8-e271972a6220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8df00f-a4fe-4033-bda6-796c66e75f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4130d340-c51c-4414-b6ee-e43f29573b01",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3d6df7-7304-4deb-971f-744162e92489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cd8916-6924-40f7-b70f-b801eb327545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa31c392-1c52-4c27-9e27-9ea6cbab2015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b100ba30-18f0-4573-820a-473405886685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "846db85d-bcda-4a1d-a3b0-6372926ec4df",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7878b0ce-c46c-485a-a983-560826cb749e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec70cac4-d87a-4e3e-9085-9e8b54f23b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fc14c0-9b3a-401a-b7a1-81ce88c1ec84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "39a22e2e-b3d0-4012-92fe-35bf961176b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1629f25b-9a7b-452c-a96e-ce03d8935428",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc55aeb-8bd6-43be-9fd0-106f69374b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0142d5-7fd4-4b88-8ab3-2842131116cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae6a66c2-0b4e-4580-8f34-07cadf5cf033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "b22559f2-8abc-4ba4-98bb-8359b57811f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4558ab49-5743-48ca-9ec6-645f4c42121a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b6d32d-4ba6-4ab2-b594-766ab8dc02b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe35d7a-5d80-41e2-8586-b1acc129e4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d2cfde-1abd-4dac-ab06-cf252bb36db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "45097bee-a585-4312-886e-8c0199f7058c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbec8bd4-c1b3-4527-b7b6-0a999882ef72",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59dba0b-abf8-4621-8b6d-2bbc52954301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab938ab-7198-4f7f-99f5-01183e753306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfae458d-d094-42b2-b1d5-d3c4dbc741e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb6d9fb-0e33-4720-b26b-2ab596ba5dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17298252-9fc2-4faf-b264-e0f00ac20ed7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fcfbc7-579e-4c4a-bb57-31f5b1badc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb7ec36-5948-4e1d-8b8c-86d401ad8cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f95497c-7b6f-41dd-b47a-4437da6fbffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf48a1a-74ab-49c9-9eba-ff1054b3e638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e16c820-1863-42bb-9c9a-82cd4aa32643",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6e1360-c6e9-45c1-8972-6a7693c91832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d29598-37ed-45d1-a5d8-3a411728d06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61cb78c-b578-40e2-9241-b7f3b046f189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1de5115f-f0f3-4650-ad96-a094ebc97904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ac0370-7eb1-4df0-9376-1cf0bdb4872c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79011c9-5b71-4052-9b8c-e7013bb24cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc32c85f-84bf-47c9-990e-b2684296e9ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4214a73-48dc-4bc9-aded-f4911f37407c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "538be11a-4bd8-4ee8-9267-6446add926fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae95f60-eb2b-4991-b1ab-499d380903b8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb07462-2eb3-4e6a-9d34-3976f4b92170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed38871-9e9b-47ad-9725-315fd34922be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ef3b3a-cdf5-4d7c-9a5a-58e5f8cbfc9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7308e57c-3782-4a48-b439-e17051accc58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8e7255-dfa6-4521-9a4c-fecc3d32663f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10e3774-029e-46f6-9f8a-987ad75690b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f78186-214c-461b-9839-5343e332160c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ea45f1-54c9-4a59-a479-260a816541b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef3de7c-fa53-4b26-a10f-7144c5a25d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d434e32-2103-4505-b7d3-59d8903a006d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "918e143e-74b6-4a68-ab11-4a5d194116e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3288f2e9-2ccb-47d5-a39b-eb0242cd0ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea69b874-37b7-43e3-8af5-4ba07ec89975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3b1ca2-ff48-41fd-bb91-8b76c9081a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23ac4c0-c890-49fa-ae34-1041ad123a3d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06830d7d-a4a8-47f0-9cfc-1eaa7a9a3701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73173e87-3849-4b23-a86f-2384361f2e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5e8211-cf71-45ec-9daf-7b96aba60ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86e33a3-3d50-4734-bebe-d7584d3d3695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08bd91c-8e1d-42ad-8265-657c495b3cad",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf7edb0-940e-4409-ac7b-236d7fa099c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2df2887-3024-4e90-9123-b8cd2bbe034e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cca76e-3b31-47aa-a0c4-e9540b88d73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f864868-6417-4b3a-b13c-13fd92dca44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011aebfb-78c1-4af2-9512-2443ba6747c6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488e0594-bcdc-479a-a9ed-7b3102b27f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719fa1f5-9fa7-4c74-9d62-3e6d336e2398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17083c5e-4590-447b-8f3c-94c30a2f6f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1519c31-dabc-4651-beae-a61c430b239a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f350fef5-a039-4795-b7c3-772fd3f93e7d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda91d80-9d82-43d7-92c7-b52f692601eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee9e9ee-0b93-4ca1-93eb-7296e8be31b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2730405-d79c-4526-9c64-e091b08e3e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0562860d-f6e5-44fa-8398-97b11288a628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323dcf46-0c2f-4d9c-a6bb-66275d6170d1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b0ee6e-4c58-4200-9fac-0f127f6fb120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53d9adf-6a76-4e58-aaf2-e91de4275704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f0bec6-0ec6-44d0-8eb6-735d0e36600e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4596300e-f5dd-4896-93c4-89700134e4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9f3188-25ee-4a85-b886-efcd7cc47f70",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e72454b-8065-4175-8ea4-e85e64d77630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f73f71e-5eb8-4726-8ae5-37eab43d1b2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43086b8d-0101-4813-9f79-168e4b8bf94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "44002d6e-1c38-43fa-8568-2c8cc2e8aad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208748a7-e495-4de2-8e35-9c2a6eaaa888",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d84876-3165-4a20-812c-c0d4e4294c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfde4d8a-36fe-4b2b-b7bf-a0562d9be5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2521a9df-3c64-4851-8276-c78bff6f552c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2841f6-d2e6-4f7a-bfa4-7eb530b0e3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b09d875-4d6b-4d87-8b50-01e8e0786e03",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b51bd9-69f8-4d3a-a791-222caf3cc5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb64da2-bfde-4e2a-900c-3cfd60c4168c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f70db5-bf84-43a0-bf7d-2bfc21996c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95336ecd-7948-4f30-a466-be89e5b399ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f33559-067f-4562-96c9-a2e1b289908e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e7c607-4695-49ae-becc-d72e6e8cb796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d065701-74cd-4dad-b45f-50fae1e0c2c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7fb55a6-3641-4fc5-80a8-55206f0acc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68af9f38-b0a7-4176-920e-a6fbd1053683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39c32dd-36ed-4b88-8eef-371dcfc27a84",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d4772d-e991-47ef-9596-565a32a51476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9c770e-ca45-43b9-918b-a77243f45e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92386f97-e4a3-4017-a340-4c83bbb3ec46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad58d085-ea17-4f67-b2bb-01674df2daa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba0c327-489e-4fa0-b9a1-c34a3ead00de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "798c4569-f6b1-4d48-a982-19f1b5addac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d405e33-ade0-4095-81e4-6855c72054dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b62b85-19a6-4f0b-a8ca-65579b157bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6796e029-8c75-4c6e-8b4d-5461227b5e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466c3ccf-5f09-4034-8059-efbd906b6ae7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d1eb72-96a6-4caa-bbaa-1e0a46bbae52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e84c5b-268f-4746-994d-bf078d45e148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880b6d30-11a2-4b8a-ab14-68c63dad0ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea24abdf-b878-4b1b-8eae-9912f2146d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdee8aa4-2f80-4bc5-b723-173a31c59abc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b0740d-33a5-441a-a12c-693ad49e7c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf837b14-baaa-48ed-8fd8-7e4cf52fff89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3774f13-33ec-42af-9e4c-4604f09b0242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "73197394-9d6d-44d7-9e8b-2d4364006738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c347eb05-80a8-4804-b36d-ce698d57c37b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3308dadf-0a54-44fd-8ebe-ea884e38cc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6935e11f-e650-468a-a4b0-70e193044ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce41612-64a0-4521-8c00-713da0e4836e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "71308645-82aa-4123-a913-0146cfe28a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ed3f82-79e2-4398-ab8a-fbca48e27d79",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7851c95f-23f4-4c54-ac5c-e950f3e3b623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb7bd3e-c4d2-439b-84f6-1357ce9a7f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81e7a78-51a6-4a49-ba7e-b565a79ac226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "759299f5-2ec9-49d6-b824-ad261c674c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0dab02-3218-4eab-b966-b3da108143af",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d86495-9a19-4037-bf5d-d3079067d2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7189b7ae-914a-454d-903e-cc8ad48fc2e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e23a4f-4ece-4565-98b4-181a6c71eed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "060252fc-39f5-455a-9328-4f5ad3df4d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8442c0f2-025e-44bf-a457-e408d6a10e37",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbc01c2-357c-405f-b6c9-c9e9783e557d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961b25d4-24ae-4515-af89-5fec097ca3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e08bdc-9a62-49ac-aa84-8c2c100e02bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "041565a6-b137-4d3b-bbce-9b407c0cc5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc96185-801b-44d5-852d-19052704b317",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e478a20-f1dd-4c9a-b2c8-4956354c69f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb31453-1b17-4f60-851f-fe3a849d8617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a94eb0d-af42-4473-9ad5-a4a0435ce837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9af8ab-1676-4efd-9bdc-e36316368a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e129b527-9102-4d6b-8677-9b88d7a1e388",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05f8069-4864-4714-a7db-0ff83a383eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e19464d-e7e5-42e8-b24d-4beb5d3e95ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e70e56-9e07-421f-a6b3-58d45caa4985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd57aac-e7ce-4275-af76-1b9d5bd2cfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a65c56-9fca-4344-a735-a382edd1f033",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d539695a-313b-4126-bac8-3d86dfbafe79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6088b02c-aa83-4c6b-91a3-afe331088661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aac07b-1ada-4681-8f4a-d9da309d4943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "953807d0-6afb-4ae3-bc53-f2e869e89535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af94c90e-e060-417f-a22c-c514dd628f08",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befa8d7d-26f5-4b8e-850e-29c07862b0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f3efdc-83f4-4ec0-b50a-9207f53d67a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d2a45e7-fd8f-4331-b911-66aca5eeeb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1c7ac9-80db-4acc-a7b9-ccf4faefd803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25356e43-95ff-46bd-836b-5ab8283bb94b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366b4238-6f6e-4eda-9e4a-732f621c69d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092dbf13-a86e-4f5b-aebe-0ff45ca736bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02d2eca-006c-491d-a36c-aa85fe90d7cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e65e11-51da-4849-a6d8-e29071a26903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6311aaca-e385-4a8c-9f30-8849f6d6b139",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa409660-3d0e-4cbf-b30f-c449c933990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d450d52-8209-4129-99c8-3672d9b91330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88416b40-aa74-43ad-ad0a-1ff7b23f01a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52d868a0-4a03-40ad-a43a-20553c16bf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399c304e-10cf-43cd-82ab-e05a97693d36",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00ae0c7-87b8-4f6c-9d33-e14d1142b7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b04a6e4-fe37-46c6-8859-00a4b5f20e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ee1784-9ce4-4082-b615-085b2598ac6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41895ae0-7838-406d-b55b-5f784dfb25aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa0a0de-0a13-4841-8c07-0dce8a083cc9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b19f60-ad9f-410e-adc8-1f648cd5221e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cf2232-f5db-4346-9b2e-90ac62f3ca50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2cc942-be60-4ef3-bc70-37e1d0fc6cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99a32ef-38c7-4716-8530-4129ef55d8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9272cd0c-6635-4849-a25c-9c2772535936",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493e047f-ac91-434e-8b21-c806c1850aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ecd732-5c1a-42de-ab8e-6bd1e96bbb43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae905dbc-54b9-4a59-87b8-495c52641687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2327277-7fac-47e5-91a5-30f9e9501712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98efce21-da78-4d44-a88e-737ed7913159",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998237aa-0817-4fcd-8a36-5b9ce8607325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc7a4fa-17e6-4a1d-aec7-1d7e854f7d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f83a04-62d3-489f-9400-608a65249951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4e99ad-ed6e-4d0a-b2a5-f76d8246c554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21415946-d2eb-4a93-964b-8ee913073004",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95de58f-6e7a-46fb-bb45-4a5eab7425a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a746f259-ab43-4bae-aca8-7cc4cc65d528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e635c208-8410-467a-ab50-8a2cb4241695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7adce64-1a4e-4368-ab23-f81e6a1fea40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f47834-92af-439c-b5a0-04f91b3b8199",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08427b09-387b-4210-bd3c-b277c26ef93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db32d46d-b3a9-4125-94b6-a3ad4028bc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c076abf4-fa44-4f7d-b917-c79e4e42d1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9f5797-211a-41e2-a97c-88ed64fb7a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3bdbf4d-1f35-4139-9573-ff4d06f57df3",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56f4a06-8a70-45bf-814d-569413b36af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c19372-f735-4ac7-9adc-f7a6fe64181b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacf2061-211f-485d-a628-1e4961d64af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a14bc27-7348-40d9-81ee-63eca6d100b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef98fcd8-78c5-4eba-a563-204ef6def0b1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0d3706-14ec-475c-9203-bcaeeeeddb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd3617d-02fd-4c32-8e75-502611fe9386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cad7f8-28ff-4f5d-8d27-0ac698e1ef6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "361cef13-e54c-4b57-aca5-d0b4a6b1c64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d42e061-7f55-4641-bc7b-821e84f954b5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aae45df-4bea-4b9f-bbdd-cec43ec81b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69074b8-fa4b-47bb-ad60-3d846cfa396e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97ddc81-c1b8-480b-9aaf-877ee9128a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fdc17b2-3f83-411a-952c-163890930be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12367939-2e1f-4bf5-ba46-c07f60db4247",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605a6930-ada9-4c08-a0a6-ec6260817c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9708d3f-1dc4-4efc-9403-c4f3b54271d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f23543-658f-467f-b35b-6ad6fff6651c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be763f6f-96f3-4b99-a916-35e041c8dc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4d95cd-060d-4aa6-940f-33e206cf166c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db971b4f-9ef0-4345-9de0-d570f86ceab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6538bc1-1cf2-4943-965e-998765353812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998eb901-1557-460b-b30c-638dda9bc7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc089b1d-ab00-4eec-91b9-4c82a8d0c779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191dc982-beb3-4ed6-a7dd-2671a0927e1d",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc55f5d-43ab-4383-ba54-9e804c5fc476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92dab13-88f3-4bb5-9ba3-e2a5ece926bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450b3334-5c15-4fd8-b323-b99e8eb3e8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2139f3c7-0f6f-42a7-9ae1-b735977d7cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c1a9f3-074a-4e06-a974-26b942bedb9a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc4d198-e4a7-432b-a755-d99bb25b1dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ecaac2-87a1-4da5-8611-821c41d0ff36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4af6c66-30f9-4ea0-a1e2-ac832bed1828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97534f8c-7acd-41a9-abfc-a1c9d2b57b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68026257-15ac-4e20-a19b-f3dc121601f9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08cb297-645c-439a-8bb9-66ed8afecdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a391506e-d124-496f-97dc-9a3bafecdc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56002096-f7e7-406e-9a3a-1f4a7dd5e1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "288c4c1f-b703-41ee-9b4d-dfac3b81920a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293555a7-8db0-42c4-af11-b3148fd51710",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894a3904-c775-4e41-a883-3222499735e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d9dd87-6dd1-418c-aef6-f0ef61e302b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4984ba67-cfbe-4d33-a083-0f401a1c786b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "53c81950-2cdf-4d8c-a0da-e1549b8bb8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02248b22-a75d-42f7-919b-e8b6ef6b0b9f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91215842-e08e-41c8-abef-fa397a14d447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9d6f0b7-8d17-4b0c-b17c-4b1b7dacd492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2bac52-8548-4a7f-a513-5ee545eb4bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0226aa1-841a-43e0-a827-ec263ba56462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7403e883-0eb5-4e51-bdb2-d4a3b3a5cdda",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526ee809-b766-47a2-87b5-4a0bd1bf9cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d63980f-473d-4680-a3c8-e4d3557cc87e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08eb4779-89bc-4e35-8402-23d575a98bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "079e1a3a-2282-4572-8a21-f8958d1cb0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0e70c3-222b-434b-9a6b-dab46188af00",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42704620-bc91-4c07-9360-8b110389148a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b60022a-bfa1-4828-abe7-a4c2e8491684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd70eb56-974a-4f59-a4e0-78fc69a363ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b02a55c2-8b34-43b7-8778-d9aff89669e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb36054-85e5-483b-a5a1-4e70f7bd318c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc790ad6-23fd-4264-81fe-e0f69dcd2c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "19415b7a-8251-4ba5-8838-dd8b9a517bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42194fc5-87e0-44d6-a4dc-4200b5ee4327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a040aa-9a92-48ea-98af-e9346f883c74"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5d3f1999-a137-4258-b89d-44674d44ea93",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "038f0905-ef4e-4394-9fb3-8e7942db4d46",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddeef31-1cb5-4a19-ad71-0b86055d91b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e4973ad-0bec-4f3b-b3a7-beef9bdb4d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9787e48e-6ff2-4113-b2bf-19859ddcd6c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb8ff760-4b3d-45a5-aca5-0e5e4400af84"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38444091-eaa7-40b0-99c8-37151eeff5d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49425713-e55e-4bc6-994f-be3baea343a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d376c344-7c0e-4c7f-851c-23f381e67938",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "471cd726-f7cf-4f8a-a14e-5190f86ce5cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5485e768-5155-4b9f-bfa4-7ffa67086301",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b63e65a-ca46-400e-ad99-ae688b130200"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "632e1fc9-9911-4805-9c2c-364edfa611c4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b429cce6-c388-4bcf-8f4a-953994af7656"
                }
              }
            ]
          },
          {
            "id": "be3ca5cd-7d62-4f15-aeab-b2ec049eefe6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cb21d7bf-13ae-4039-85b8-ce0982866e7f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "566e3a87-c106-48c5-9c13-92cdbb4eaeaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5be7793c-5c21-443c-8577-d24d61f72e02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62684bb7-4329-4e86-bd6b-97a6ae35c827",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a28e4ed7-cc5a-491a-8695-99dc6231ee8a"
                    }
                  }
                ]
              },
              {
                "id": "46a5220f-eeac-47d6-8ce1-3ce391583e12",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7f51dfa-b5ed-4a30-aba1-eb63c441ca15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e79365e3-54aa-4613-ae68-f73f28b67841"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77fc0347-9d36-4727-9ffd-56df3133bc95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b84772df-30d8-4f9c-b0c6-9cbaf0ec8496"
                    }
                  }
                ]
              },
              {
                "id": "4fce3346-6405-40d2-965d-32b93602fee1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f00e3288-a953-4f67-b811-92beb8180d5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b003bb38-7196-4760-90af-9e8350e35fe6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4d2e402-68ad-4ba3-b31a-16df48494ca2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "67e3378c-62c9-412a-ab6f-b255cf6ae66d"
                    }
                  }
                ]
              },
              {
                "id": "e82125dc-72f9-4b0c-b0d2-a0be611ab5c6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58bcf1e4-11e6-468e-aedf-4579be702160",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a3c288d-006c-4083-8851-deff2c79bd58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5671c169-ea42-447d-a6c8-3c8ce59178e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "afb6adf5-10ca-4c54-9524-e321ad3baa84"
                    }
                  }
                ]
              },
              {
                "id": "ef012cb2-150d-4a99-bfb6-b15f7de681cc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddbcc189-2221-4c5e-a8fb-7e67658318a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3ff1b6d-2d13-4854-9cf0-e1e91f536476"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36dfcd9f-3531-48a0-9b9c-768bb17d8ffe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1dcf2646-092c-4f73-ab61-4fc39b967ef2"
                    }
                  }
                ]
              },
              {
                "id": "e60918d1-32cd-442b-8a65-dd0a72fb4f86",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bdaf6eb-5675-42d6-a0fe-6460a7cfe632",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "512ae527-59e4-4093-aa6f-2d66f0ac79ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "231cfd6d-69e2-44b7-a9d0-ce34bca31f0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ccf676f7-c2e1-4266-acf6-43e99accb439"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7fb90903-cc88-42db-88f3-8e7abdb93dd9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40b7508b-b800-476d-8d61-443bac614d7b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46ddce4a-2d06-49f3-9199-320eb0880203",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18c2a7fd-20fc-4d21-bca7-3d009300ffcc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7378fff8-cd15-4b8b-a427-30b03509cc69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c667b631-8a5b-4b46-ac39-e69208bf5bfd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d86d553-d81b-4f6e-894d-f6646cfaebbd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b2e413a-0ed0-4019-9e22-574a137c1746"
            }
          }
        ]
      },
      {
        "id": "ce57c7ca-fee4-4e19-ada3-15c306e53053",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dbcf5caf-50b5-4f54-bb1c-a6a02a319cce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a80dddb-24e0-4b16-9547-468a716cd7ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4def8a1b-598c-45df-99fc-2ee60a461f08",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171359b1-6daa-4475-8dc7-bccd88df7b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abf1a395-8b04-4c1e-a843-fd1001c59b6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f808e9-4363-44c5-bcb5-a594c4db6ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "16704608-dc65-445b-9359-b50435f00aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db034f0-a6a4-44ff-aad2-07419a6b17e2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a57c91-d816-46bf-906c-5773fca2f085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68be5e13-ac93-4aa2-af0f-2e319b3929df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca59fed-2a60-4b03-a7cb-cee9d0ddaefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0962d02c-54c5-4eaa-9d1d-0e01147272c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc892ed-a1c1-480d-ac99-f30c4d4481e4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecd8c55-8a2e-44b0-b689-0bc368fce5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f116eb-5867-469c-bcd3-6ebe33b5b818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7bad4d-fa6c-4038-8b94-aa0093c43086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f266cab-5ab8-4186-9a7d-b3fa76b736d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb829cc-467c-43d3-8688-8ac794f2ff79",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb33e500-31f6-4bb7-a092-d00ee87275a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "312bbb9c-9127-4c38-aced-9a80511376f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161118d3-2aa3-47e6-aa7c-890368616b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48daf6d5-07e0-4651-b99d-17ab19a09d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f802314c-2a97-45c3-9885-0696d7a83ad1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881bd85c-b90a-44d2-ac4b-be5e0cd36ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a468f9-5127-43c3-bc52-5529be62b89c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f802f7ee-ded4-4733-b8cf-5e45aff7779e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1b8d153-f180-4f8b-aa58-52e4c092189c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103d9db9-ec75-46fe-84f6-e20b10f30691",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9095301-070b-40eb-8360-b265d58402cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e38b33-7b86-44c2-bb23-112e22ec32bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cfe834-56d6-4569-b4da-9bfc54b18add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b79a2fe6-07b8-452b-bc65-854bbeb54350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d9ced1-4652-4dbf-9702-dd9e1bbf7e59",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60630ca-b318-4cce-a222-02f473ddf2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27bc5700-d846-4792-afe4-4959375644fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53915e6-2a72-4607-9059-cd1f3376c3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "721f8fbe-ce59-4503-96b1-7a649c28cee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c80d0f-fe8e-4ac2-9a91-5ef4f18ce23c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc14dbd3-f101-4677-a9bf-74fdc6f6bb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdec3a9-e32e-4ceb-880f-ee082f7bb251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b44515-d6c9-407d-ac28-7d5838bfba8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c639fdc-8ae1-4671-99c0-d2aca5d767b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a77b6f9-9473-4af1-a132-4ec343b317e6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b6e140-cabb-499f-89fc-388c7a8c0b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a39fa3f-bdca-46f6-a717-81b3361a09b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b1288e-a5f8-4850-b19e-d7b953b1c67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8129e6-369f-422e-a379-709720a2e0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52f322e-65df-4353-9aa9-a854326ac048",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00438f90-c221-48af-94f8-45ec3702b528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada5258f-dd34-47e6-9dc4-923c36d15226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b89acfb-04eb-4bd4-973d-61c6e8f56a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96d7654a-831a-495a-a461-b1ff7729ddac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905ad277-109b-491d-a284-863588c9568b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ecaeb41-123c-4fe6-bc27-980276ce13b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3556ddf4-d3ce-4e9b-b48c-bb37254a28f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ab83bc-d223-4d8f-a539-1ee7c7080d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7db64e95-ff62-4e65-8dcf-f3323dd57e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53411e1d-5a28-44ed-9b91-d34193218bf4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c496de-3089-4bbd-b4e6-aae1f57c46e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4759c525-e55c-46a7-8f34-02dccebc03e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd583ca-2923-46ca-95d4-a843b2ee5263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3489822-e8bc-4337-8966-c4c7261d5076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdec3f0c-f540-4431-8ec6-7547c2b85880",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0251ee4-1648-4957-a638-bc60244c964a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c643892-79d9-40fc-ab40-4095edc073f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1064f606-a5cc-48fe-a206-a23a28ccf73e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af1a2a8d-9164-487e-b82f-0b16fdbfb465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d378711c-d859-474c-922c-96766f82a9eb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2703e1-cf5a-4d30-bb80-d8a9f9c1a895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac36e14-1853-4aec-8542-c3a77b969107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b315f9c-3a61-42b6-adbe-ec9e0e2f1c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43648a7-ab92-471f-a49d-1210f9792252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedf8f14-b224-4554-b4c5-999565a7e968",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d2e2b6-669b-4ee4-9132-d52ec9e864c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4720b030-a37d-44e9-b446-43a389efd753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f77134e-d8df-43f7-9346-c85a9785b074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc304d9-1174-4ed1-a0a0-2c8358c47231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8292e328-ac95-4853-87d4-09d28ea4cb3a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb29e9b1-cbec-4543-8ae8-54469ac797e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17427b30-c875-4b7f-8a0d-34f043cf61e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5412b51c-110f-4da6-b001-c9dedb46ce13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6b939c-c117-4f93-b3ba-a5a4dac6dad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b0c8d8-478b-48a4-869f-f3e3b36b9f7a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be327587-fec3-454d-9365-edfbbf8df34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc639db1-6f0b-42d3-9c30-81464a34918d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97357bd-cbc9-4c8d-a847-f7522b879786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5160d5-042b-41d5-ab67-3b2ccd257de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9bb7f0-3829-45ce-bde6-794068fc6c85",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "decd6850-1299-4fbb-9988-3f23793622fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52051de3-ccfe-4865-9f8e-d2c93a238c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfa318d-cc55-41a7-ac36-be358c48fa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e51c606-6fc3-43e4-842c-b0bc89d30927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21028858-2200-4bc8-bf87-2cd390b440c9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ad5ade-e48a-4050-8b2b-d2a2bd87a0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29cee20-b4a1-48ea-a579-3298790bfcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d45868-0097-4063-92b2-d0a904c3c898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52a32c18-05a9-4e4c-9c83-1dc4ed3ea00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058a43c7-ed43-4afe-8c5d-71941d880346",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42dea40-d29b-43fa-9753-1b5e75ecc381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7fa7ea-f226-403e-b9f8-1301b9a3ef16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee99360-211f-4d04-80e4-d439fecff06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccd9df1-4ffc-4d45-ba94-3013ca08854b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231938ad-d57b-49a8-bb58-0ebb6fa44288",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382a5696-db83-430e-9fd0-78314b21a90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a28f08-85d2-4721-ba0e-d13caecde865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67381b25-2aa8-4080-ab89-4b1631d8eb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f362fb8-c64b-4281-9a48-eb30d19f68e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5757a56-bd05-4a2c-9320-dbe479dd8009",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04b0501-90f6-4d87-b001-c9a2631518ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a663b5c-073c-46b9-932a-7689e7dd1ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee90f48-0c64-4d71-b736-b687de51ed2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19cae12b-1c2e-4814-9f67-da9d143e8356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171739b7-47ae-4ca1-8400-1e92b9e3c3de",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6eb11d-900b-4283-9d82-e1b5bd04e8e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f690a6-8c9e-423d-a308-93f94e5b6a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97ab27e-49c5-403f-9274-f7a0e566632c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea551d3c-4f81-42db-a172-cb40bb602568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35afcf73-8b34-47f5-a312-6f310cd4b633",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c69892-8ef3-4c44-93f0-5c695e19879c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edbfab40-1be6-46ca-b3e0-eb31a57da883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a8e51a-47e6-49b0-8344-269c6b63725a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4014a4d-03d9-4447-8b5e-968fe6a3428b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c374ed-c723-4871-9f9b-0b724388944e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2411bb81-1413-4fac-a7be-f8d09f4d886f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fc695b-d412-45f4-b965-d7c8040b996f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce39c5c0-0e82-4de5-8f18-befad021adcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f0ef17-3f99-4c47-8743-558e22319527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e10c63-d7b1-44f7-8dc3-97c11da0c77a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9bf119-d7a3-4679-b2e9-69989649843c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35d58da-b8b3-4a6c-a094-43730b6106c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15382129-c388-4f79-bdcc-f25802004183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1b4b0f-fd9e-49ba-b38c-5f3e677a7fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9b9d05e-d1cf-4036-923a-ad33b38f047c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e29f2e9-fadb-47d5-8593-7ec171657b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273b079e-4c61-4467-bf41-0c2355ee3dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02cbd6ee-c357-410e-b18e-85a2a58588eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71a6bc32-7666-47d5-bc1a-7e7e9e02cca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958d910e-039f-4321-9904-d98883c81625",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a13fa3-0eab-4200-a05e-db4c77557d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e30e488-d272-4063-a3c4-bc1d63687de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9b54aa-1215-4d92-8048-0c0a07e0436e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41abf950-d0c9-44ed-8985-a77b53ac55f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45c3a45-355e-4440-a4c1-86ca7df033a6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c39af5-8ed3-477c-96f3-1aeec107edca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9802586-ae81-4323-bd4e-635d484ebeec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b914c2cd-0099-4ee5-87f4-dadb4dc6d3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47cfc8ff-cd00-417f-9b09-2feac599371f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51111e50-a80d-44fd-8ae4-29b3da9ba3a6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce9122c-8965-40c3-aaea-ae054c0532ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00325596-6be2-49ca-8945-b3abddaa3a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17fefe5-a137-4ea4-a8e8-29790135435e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6745a7b3-9f3f-4c44-8568-3f649b376373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4619da13-4a7a-4a2a-a8c0-ca2bc158d641",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11667c63-0616-4852-b930-34a02348975a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecec1e3b-1551-4da2-89fd-ffc72f8f9885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565702aa-26d3-48e1-900e-8f1e7a89bea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df683028-5711-4c73-a1be-807d5257cbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe42ec80-25ec-41c2-a7f4-203d968fe629",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9305b2d2-30a8-4aab-9e15-4eeaafd1bfcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064113dd-d55d-4db9-b1d4-d76841404f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37593da3-7931-452a-ad3c-8816a0b68840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "784f28d8-d554-4958-986e-f93cde4defa3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "393f365e-e6e0-4cef-ad25-727d5be1d0f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f324e92f-bb07-43e7-aa3c-22dedf775cf3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56bbee5-ef34-4236-8dac-2d914b9dd3a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1f861a6c-2b81-4fcc-9460-10ba6629dea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334a1e12-64b6-443f-b94f-e44faf7daed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb42a925-95d1-4b92-83ef-c3f5143ec290"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ee4abb7-9332-4a8a-bde0-7e7579879a3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a88cc738-7c93-41d8-9609-7b7b4d0e524c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d18e238-cab0-4ab3-9afc-8b44645d3f1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14ef44d1-658a-4818-8baf-c3186ed39b76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d4c876b-d360-4ce9-b8fe-69e92d4f4464",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4a990c31-b3b6-44d4-9682-a87d79dd6fbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa84da69-3c21-4c48-8976-a4f65a0510a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "353a9963-739e-4b28-a405-9e2c9238caa2"
            }
          }
        ]
      },
      {
        "id": "ee8f36fb-6fc5-447b-b8ad-3f2e8c4fd73c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2e48a658-7495-48d2-9882-e1f94e78bb7a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96e7f8ff-27b4-483c-b3e8-4b40d36d0ba8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6dd54bf9-ea9d-4eba-bd89-94385c25b44b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737d2167-0711-4510-a609-074af1aa9768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07504c7f-d888-41a6-b1ec-a3552da68fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f98e47e-3419-4e1c-8251-29e0283429e8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61454205-11dd-42d3-886d-e63ec77204c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b88d17-2751-426b-983f-da8432d980a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419e09d5-5d4f-4db7-89c7-0bbd8bc78723",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7075665-8599-4e4d-9ed7-41d64b859094",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e15274-c8dd-4985-8931-dcd720f08cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b876ce-8129-4e86-8196-1dce273ae25d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fd61a5-f6d4-40f2-aa65-4df1226bff98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3adfe4dc-d294-4b49-a1ea-a6e28886489e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4421fd4d-f736-4914-93bd-627c68049f42",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01ed126-8156-4b41-bdc2-9d2ea3cf02b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c062aed-731b-4b2f-9e15-afd89d2ae1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3730be34-dbe7-4376-a475-9d50bbc197cd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c0e049-7914-4d8f-9247-8720cd1b2b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11913740-cce4-457d-87c8-5a56e6f391e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48844580-e2bf-4ae5-ad1c-a34f7f4e5902",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9301a8b-674b-4dbf-ac4a-d64464c2cddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db73061-f0f1-47a7-a83c-4123b6a37c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24400485-14f1-4139-aac1-967edb13e52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b6d2ee-fd5a-4489-8553-795caec23fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac54628-acb7-414b-80ee-24711eb40a62",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2989eb-3083-4e42-adf6-f8ff97aa8289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca3e6dd9-471a-461c-9d72-11c45258d4da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc8d3a6-b143-4a29-98d9-1b8dfe171457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86ce5772-d03a-4681-9350-97dec30e43b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0381cae1-4bce-4f29-afa0-4e84ef5c44dc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac4f6cb-b8fc-4174-a12f-c0d30f540067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06ce3478-78e2-44de-929d-cb667e20d79f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70087663-aa2c-4e8b-a106-ac75a309391d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b74e898b-efb1-4c84-bb87-2f924eff59dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3acb90-47a3-4483-afca-1b5d848c8850",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba9381d-86c8-4347-a6c3-2c055c8ac894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd1463c-f6ab-4dcd-af14-33d9491372bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba0e2a5-6e9e-49c6-8e5c-839b8ea0c7c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf5944d-0538-489e-ab81-fcd44d01728c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e354af8d-d6a1-489b-b108-87f479ccb012",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f89a601-f0c5-42ef-8e76-d5405f4bb9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39f144c-398b-4ac7-97a7-fbe753bee71f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41809593-7f77-4f46-9602-dd8a17a787aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d548e54-6ab9-4f68-8950-26e6cbf688d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5f6381-44d3-4392-a1a1-7fe502114d22",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a4944a-53ec-4bbe-bc2c-0f8e35f65045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfe5853-ee27-4c7b-ac8d-ef2e1c9a4412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "610c7dcd-e06e-4f30-808e-f7bfa5bdfe74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9a2f26-edce-4544-8457-e3f02052ee80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1056b560-679b-4b67-ba39-6416baec9145",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bef6379-6d5e-443e-bfa3-5868a37ae239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5aa37f2-ade0-4e58-815b-546e764e6f7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e264cf69-6929-43d2-b20c-45ff7ac3a313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8e67b3-0e5c-46c1-be61-eef6718bd0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc3e4e6e-87ac-4016-b7ce-de0ebb6956ab",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9456e277-cd3a-444c-b875-d9d40f597624",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "611d50c0-949e-4a7e-ae56-24e11f6dcc0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f589c85d-b928-465f-ab36-23beca1eee48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea129a9-b5ba-43a9-9728-1f9937fce3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710f8660-7a1b-4d81-a2c1-450e64112a25",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7601aa-354d-4afa-a6ab-472a9d5b85db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daba318c-be2e-4f72-a9b2-ea6ef6be81cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71dc7380-d37a-4e38-8ca3-3883962db1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d20a07-23b4-4df9-b371-3856e060ae2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f307283-d3d3-46e8-8793-deca0ee14329",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d515ec4-be31-4d67-90e2-46f30202e33f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac081301-25e5-4e2d-8e31-202bf82149a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1512bbf-821e-45d0-9e41-5c7e45763be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06f5d18-c6d8-4981-a800-a40868e396d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5051904-ab64-43aa-aac9-f41aedff3456",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb3768d-250d-4e14-8a9d-1501bbf1cc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb116d4-69a9-4951-a19e-19a560ae949f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "954f4dd1-20c8-4fc1-9c6a-be0a7b9fdd9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c7ef72-222c-41b7-9ba6-e83b01a046ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be947827-f24b-4605-ac47-c7cfe2b81bb4",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fffb12b-5edb-4efc-a089-ffdd9ad4d635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5626c3c5-a044-49d2-8f35-91aec89a0774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf09562-e79e-4f43-a157-e0db6a24622b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c35d98b-292c-467b-8a70-7b472659ec78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9b415d-eb66-4a42-8005-7ffd74917dc4",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d00827-e2f3-42bd-84e4-7c72d4ad2018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e28bd3-094c-4d86-b48a-9723cd8f3f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56d425c-7601-4a15-91dc-88cc6fe52d1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e13bc22c-9116-47ec-a41c-b00cde7e7308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e180515-8517-4d97-b35d-a1bfd2b1dd41",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6623c8e-1379-4bbe-b088-ccb3cf8295d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01b9999-1f44-4098-98ed-d9c51d9cc735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b670eb0e-14d1-483f-9b7e-967caead43ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d86c55c-a186-4734-9b79-41216f390280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40eb0857-23af-4f15-8aa3-feb5fe098096",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc83005-e2da-4444-86d0-f9b0c0b186a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e20dfa7-98a5-42e0-973c-81f476a19d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61561dc-4edf-4164-a88a-203fadbcf43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64a51b9-c448-4fdc-b550-cc223435dc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e492b824-2b6d-4f2e-aec3-4f50c9d7fbb1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c179fa-3e3b-4d18-9006-241ff1bc66ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f71a38f-23e5-4362-bc08-6f2c01703553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45117f4-84ce-44e5-a7cc-317aea1ed2f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6b3843-96fb-4184-a08e-45fe0b9a6277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f91c4b-6518-4557-8e5d-910b3db9de21",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f32db84-eafc-4d67-b2cc-27dd3577b87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1dfcb1-934d-453d-92ba-cff6c7f4f389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf109f0-1f92-4550-9013-19256c5b81a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d070d4c-a941-4f3f-aad9-975b984bbcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ba3cf3-de19-49bb-99e6-08977606d39b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8820bc9f-fb53-4623-a9f6-38ac03a05743",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5484bb0e-ad82-4768-a374-cb678a05a48c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bd1d0e-b193-4e63-b798-1ce8795d0c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f5cdf54-8bf9-4c5d-836c-f1b881a2671b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bb722f-349a-405c-9dde-6bc0e896807a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bd96ed-e916-48a7-8bff-d4e91071751b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f76248b-07bf-4778-ade9-39aebd6cbfcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48849ca-60df-452a-9b91-90d52d17d836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9659957-9cac-44f3-889b-6a96443a0095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33057cf-a45e-4c61-9d6e-dc825424a822",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efaf9b4a-c0cd-4d34-b80e-0081b48287e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5779a9b-9bb0-4134-8c3d-8a677f874119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddc5460-41f2-496d-b873-20446bec1e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf9c00d-445a-4a16-8179-c1c6380e7353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1743c8ba-7606-472d-b965-6f04ac253bb6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09bc591-5002-4f5e-be47-cc1f2d1ee188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d21b5b99-4640-4298-af1c-a77fd77fc7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424b91bd-ce48-4e65-8b3d-8d1e125b746d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a85049-4dfe-4723-9919-e130181c64f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17f72ef-f9d3-40d1-8319-b20a41a4d760",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bb9a38-fab8-4b50-a3ca-f081dca9d4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398d3887-ff16-4c36-9e05-cfb5c7af6e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83546a30-4018-43f2-a632-0f4d62eea39c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd4ecb1d-cfe6-44e3-81cb-c46727cd2202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08589659-91d3-41be-99c7-ea51fefbed68",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28afa03c-698f-4756-8750-a86124c39f48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eba3193-389c-4363-86e5-a7d6c3c0f412"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa3fa7c-fd64-450a-ad63-80c24f99b3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a914f915-2020-4ae4-94e3-467c72ca8b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4177c957-4a1a-4cb8-941d-b8509ee0be7a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1241a3a4-01b8-4313-91c3-c2fb734a68a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfffa084-31a1-4ad9-9978-b5fad052596b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb2f4c1-136e-4eaa-b677-189b95584e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e2624a-b89a-4b88-873c-dc4f9d511f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f99b8af-4b07-4e5c-a963-8576341ca09a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d1dc6d-c867-4559-9b5d-3f282c40b6df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8987631-d03a-4b04-95ad-36a52d6cc2e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc2e827-ae6f-4efc-8bcb-28b780e44e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5328f80b-57e9-4489-b0ce-582b521dcc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9704f8d3-5d8c-41f4-a79a-5bfbf1a9ad59",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a08cdb2-5463-41c3-a8b0-380642f7d219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b96a90-97ac-46f8-be2f-f6ad5c2d2aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2243c1d-0f3e-42a6-b675-64484e19f9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a70b36-a40f-4e2d-acdf-bfb6297a001a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2abb75e-062e-4f4e-a503-53a80cf44c7d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f7e9cc-5960-4fc2-acf2-c0936ef92f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ed51f61-ddbf-41f5-b3d3-341e21328021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767140df-9428-4e5f-aad4-69e994ebcb9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7b79a3-6441-49a2-9284-e5f72a1198bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6868ce9d-07ef-4e71-843b-feec2f98efdb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa87b4bc-a2a3-4283-9c2a-e94b7119ced7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4eab97-1461-4737-9ffe-772b20dadbba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b48cd8a-927b-4edc-8bca-6298b046676c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86aaa779-03cf-4b64-acd6-12c82437796e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbb6296-0713-4cd7-9d18-584fbc4bb0e2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532a410a-2427-4526-805f-814fd8afa601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2011248d-41d3-48bb-a7cf-d98d9e3699dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74102281-73be-4eaf-96c7-a9504e2ed3e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "410fee31-05e2-49bd-a9c2-9fea4777f1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0145f60-7142-4f01-a8df-266551775064",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad691c4-b1a5-4b67-bdab-07deea4630e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fd5d9ee-77f6-4b81-aa2a-0bd504c0622a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23976c71-e2dc-4c35-9fae-2e74c02a6891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde6b912-6168-4443-997a-0e7f2651630a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c718b10-1749-4e70-b459-aa841c685a72",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be1fc7a-7806-469f-b008-0aae088dff15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87e1152-06f1-49c8-8917-29f1ee9f6361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0941799b-5f7e-4bff-b44a-d6f07ebdd95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adaff16-5cc6-4596-ae7e-7d412acea065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc43cd44-94a2-4022-9d00-ea33ebec4ea1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2577b16b-e70a-482d-99f6-a0a419ad9261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3518dc0-02e3-4aed-9037-16186186cddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b165d1db-01b8-42f4-b95a-caacbe1ab42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e114fb-d94d-4737-b85e-3675179903d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa71c7cc-f14c-45c6-a841-881cd70e04d5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84b4946-cc5b-4d78-9f24-8df9826dab7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f977ede0-b715-4acd-9224-452075385c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a48a957-057b-4405-b6e1-486e4fcbb28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3d2d38-0739-4aaf-aa3f-0ed5f85e8020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccbcdf0-9de7-44fa-835f-d34e706d3699",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0177b1a5-4953-4098-b054-8354130252b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0917a61e-7355-4fce-a648-d9012125e7b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbd975d-3dd8-414b-97d9-f7920949d088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efae7a3-151e-41f5-ae70-4c5d2f0947a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ebcad3-5441-4f4a-b181-96a2afed472a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ada6c10-147f-4f15-9a5a-9bb88d0af10c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52328aa-920a-4af4-8a72-c1efa1a71287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a345f7-2d0d-4fa0-aa23-e0f4bdebabae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49510c2-ade4-40e0-aea0-1c9ba8ca9d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5a921a-3fca-48c2-8454-38ea1412add5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d9fc48-0f51-4ee1-9d03-85193536b3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd628a3d-fa2e-4706-adad-373a7fab1225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8815f0-07b0-4265-964d-c3f286d16153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52cdc88-5087-443b-8608-ee7edcc18266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b3bd90-41dc-4ad5-9c49-5e9db2374921",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e54f12a-6f45-4c1c-ae78-28964da6e7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d48f42-5751-4179-b524-e7c00f73d895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce330bb9-8e67-4c0a-b285-70fab8fa5dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e139a309-110b-46ad-b661-8526cf949bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813bce6b-9395-4980-8bf9-b5a93fe49c6c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc7db41-94e9-4e7e-8b1b-e0cc74ff2b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d4a45e-cdd5-4bda-aa17-d47b95bc9180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb8ad62-1542-438b-b218-f46e604af723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b22f205-eacf-43fe-a8e2-c5d6e043339c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d444e397-d7b5-4465-8c14-b82bd90c663b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6669c1b-4df1-4c82-9fe9-a2bbda77408b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d93a82-bec9-4486-bbae-afb9d2d66d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ed8df8-449e-4d49-8485-878f79642802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b158585d-b31a-46a2-9d06-16934326b46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601a0258-c3bf-4951-bf6a-5208951c1435",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc481192-f15d-4cc3-93b7-2d9819e2a8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52ee2ed-02da-42db-b67f-57fa2558909d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22a56bc-6f1d-498e-aec1-0d180dd6a22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c504f7dd-853e-4515-a18c-2f90f8e7f024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e99b547-e956-4697-993f-caf7ebf08640",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deba1c05-bb23-4be1-8b0c-431601fa4d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a394d376-d5a5-45c5-8ca5-67588f2ab7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d025c59-4be9-4763-92e4-babb3fd1fdf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14799a4-a1fb-4438-ba94-5efb9239df0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cd2eb7-0659-411f-8f4d-b5e0d5546ceb",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa401aa3-1914-4df6-bfa5-23d708bdeae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e826911-8054-4beb-bdf5-f86e5975d6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582872f7-3314-48fc-a45c-de48256673ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0924595f-f183-4dfd-a379-015c04e08987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7940bb9b-dc46-4152-a18e-6f1698a28406",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10455a8c-fbe6-47c0-a120-cc0f7291d95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202900b7-c5b7-40c6-97fd-3a98ccddb619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7743f60-8727-441c-a269-ec6ad150c152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bc17ef-3090-4cc6-9456-ff466c28a00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae076df-d08d-4ba0-a60f-e5e16caf13c0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8591f9c-91ec-4bf6-92fe-80bad84f41d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe54535-5d56-4f6c-83af-7bb9f626c5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "725a6c35-5796-4d4f-8a53-1795521a2f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff0cc31-e7ae-47d8-8d47-ae6f394434ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbb8cf4-e3ba-413a-afe0-24782b9825d0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3007c79b-b668-4816-97e8-b09e99911ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ffae506-3fb1-4122-90fa-7088e84f9300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ef674-f58e-4be2-a1e2-b7aec3b80e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073e6a4f-afc7-490d-ad03-4f60b75c1a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48351386-2d0a-4126-ab37-ac38b0a29151",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5af60ca-c4c2-416e-8a04-ff9d85b4c0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf89cab-9b91-41d1-bae9-0a92ab1d37d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0976b551-e7be-43b8-993e-7c824ed710d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7d40b5-9ffe-4fda-8063-f17a3ea9fbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3220ed7-c309-4325-a817-76ffbfe776fa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b047e55c-a63a-47ad-b7d7-20393fcc56a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c3f6ef-6408-429f-9d4d-0289f472f6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac28bc22-19b6-4776-8930-04a884b0aaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087391e6-4fe4-4e84-a848-d402e9fabbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f468c0fe-a944-40b0-95ce-20b7ee5f36fb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0ede87-d85d-460c-b805-915f4f5e767c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "357840e4-615e-463f-bc1c-61b96edf2915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d57f8b3-ec90-4992-ac51-001d0e365e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "282490ae-50aa-470b-9d02-fe19df302ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b662c32-870b-486b-9aa2-ee70c59a7a77",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0db92d-4981-49af-b2e1-d3f19b5840b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac620d22-efc3-4332-b314-0b83ee5011e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7b6548-1fe7-49b4-a4a5-c345bc736197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f82a2e-db96-4a56-9301-e2cdfca87174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a49cda-48e1-4a62-8549-5a6827bbd8a2",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8c3eb8b-9734-4ca5-b3fb-405c948688d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17499c9d-85c4-49b5-9cf6-48c560ba86d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542677b7-a0de-466a-95b0-9f788e9438bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc1e1cf-7d5a-4905-921e-a312862c9ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c9c6c9-4247-4c32-a104-164bb973864e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8bd887e-75cc-477b-8109-4c9387752a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb8a251-a311-4292-aaf6-51bbe7a64b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c03561c-8747-4b7b-99fd-fdef2ef9ed9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab676c8d-131e-405d-8905-0ca6c6e0a814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56718350-4c1b-4fc0-8a6d-8249e68c4d6e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f55b95ac-3558-4f7c-aef3-3f5a1a1ac9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b61b1c-8a29-41f9-af58-578f65bb3987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ced4369-10b2-4fa5-ae93-dcecad4547a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0eb6844-32e6-451e-8e80-cd615cbbe75d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b7a25a-8bf3-4b13-aed2-3fbee763c0f5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2c2329-b327-4205-b0bb-6c568377f98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6f69fb-ab4d-4766-871f-1d557e9ac1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3434dbb-4de8-4898-b3a8-c4a84121fe0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958eda9d-0e13-43d9-add8-45979a9fad31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6189a4c3-a268-4cc8-a3b8-c327b7f74183",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281ebc11-8d15-407a-9768-8cd7b9162a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5cbb4a-9f76-4cb1-a319-1e025ba20576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6607ee36-e430-4a63-a29e-75b82e8fc188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb79cd15-c726-4d4b-8b86-119feafda770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedd1be8-8523-4163-a44e-eeb165665326",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110eaf4d-f141-4b13-8f9d-071588d1f24e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee22661-a75a-4576-b162-4885daf47481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc70007b-d86d-4adc-bf44-c0730b868d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3928d908-475e-49bc-bf18-ad7fc4a9833b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3466b0c9-f8ef-4d3d-a215-242acf072b24",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbe45e9-2bfc-478b-8d66-b904bacb2466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1572ab-628f-4467-8c8a-e0aed085369f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21300b2-057e-4949-a2a1-9d89f9f55edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bb1af6-cdb8-4c47-823c-f39ab16bd694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b9e3ac3-c964-4c78-bae1-30a4c20d1569",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3967209a-423f-4439-8bbe-511bde651138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5de6b1fd-0496-4777-a6e3-7585a5e8ddc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a4715f-e17f-4b49-996c-71de381c2eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85360e8-3e8d-4620-9064-2aa1addf92d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd91b6b-0acd-44de-90b4-24bbc0e13095",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d8c9fc-77fe-4da9-92ef-9d0b347ae952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "709b10d8-1ebd-439d-a72b-adb436d11f14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02253f8-7ed2-4404-beb3-c23436a52111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd5d4ac-e07f-4b4c-8a71-e6fae23f7afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3017ed2f-a92a-4de9-9cdc-120d67a986a6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bedb11-6047-403d-b97c-2f80c5c27a9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "755a3bf6-9690-41a1-8c1b-0e9cf5b58759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4975c15a-3ae0-49eb-99d4-793a6a6ba6aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89823249-359b-4ed9-a670-12021dbf9ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49568c8f-b0e5-4fbb-a8d1-30c4f8d6e53e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bfd41c-9eaf-4fc8-bae6-b5e89f36fe7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6747a45e-6aff-421e-aeef-9fb72fd0f4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733c2be3-8e06-4914-be70-b81e71748d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b5bbc1-329f-4459-ac83-42dcc964c50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd32d45-a315-47e6-969e-c1b4a24b4393",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc9bbc6-60a8-4b68-9e59-a633c307af77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b443aaae-4202-4302-b18b-e7377ca7e3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19bd771-f0f8-421d-8111-e85441dc7a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21c07b2-d5f5-4409-8da0-2fc0e519233e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c171638-0f48-4855-bcb8-0381c82a70ca",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70915df5-3a7a-42bd-9d6a-527f508dd50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "957535dd-2a23-426a-a80c-b4bb394b9503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf0ed23-ebba-428b-b334-08b979c508c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef42aaf8-aca4-4f5c-af47-85269652b7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e9ed02-d414-4e24-9344-2de0a72ed0a3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbfe59b-3ac8-4d04-90b9-9ddab305bb21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b709b8e1-8d1b-42be-a9df-62c4cd13405e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73875fff-7272-4dd0-95d0-f0fd8080cfe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7b4b11-22d2-4c23-9baa-3a09bab35fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3207e9b6-31cd-434f-abee-b23567e44e2d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc61e3d3-7a90-4b22-a4a5-996ad94cd079",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "021dc71e-6d94-4304-a90a-de4bf5691244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaf3893-58af-480c-84b5-e8ff9303742d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eace4fa-4359-4934-93fe-ee0b0a95b429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7f0574-7cf5-4b40-8c47-f84ed706502e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35333b8e-88a2-48a5-9fb4-50903bc6edde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7160145b-99b0-4e49-96c2-99be1481c030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c001c9c4-c950-434f-993a-70d7c7be5182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20db5b10-d663-4bc5-b6cd-0007b4c08a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b586c676-c236-40d1-943e-747c2bf7d5b8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c92e59-8c81-4ec2-a320-71b390956e02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147256f1-0d4c-4aea-bd35-b1319a7ed5c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ca7b86-6351-4cf5-9a3e-27378533e30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1463bef7-a849-4c9b-bd2b-cd2ea09fa8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32816d4e-7ab5-47ea-9fbc-37aa2046fcfb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d9a3d4-fdab-43fc-8f16-796c8dc38304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b675bfba-730c-47f0-a9b1-543fd635cb0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2570897-505f-4680-bbaf-1cb8abe239cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f41f9898-9400-42e3-bb3d-6d140722770b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98270698-ad81-4776-9c94-9f85b4a334d5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb338abf-a0f0-4baa-aa9f-0478e74b365b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b6ed13b-2b55-4063-a284-c5466a8d027b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a785322-d7d1-4845-b4fc-4b16835e2efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e908f1b-4b90-49b6-beed-948f193aeec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b05772d-fa0b-4097-b670-013a3312bb06",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b634ce-9a95-46e0-b321-07de18b985e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbb78c23-c400-4f3a-9879-5bdabf85de43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d2b1eb-7ac4-49d6-a300-b6a26df72a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d311a5-9a51-4199-96dd-e86743fb2638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "374f94a1-2a7f-407d-8a99-de0f9151e561",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3152c5f-f0bc-44d1-ab34-7e35c9a3229b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db01baf1-c143-440b-bb22-0cb6af206936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91526bcf-4493-4106-a495-59c4060dfec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a1fb89-ea17-4520-ae1f-76d4f8675536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b36db7c9-47e2-4e30-9ee1-c312f84c1817",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad897a0-17de-4e01-84d9-daf400660882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9ca8fd-540a-4e5a-94b6-18fd70fe07eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b64b03-265a-42f4-bd35-e7f2d2096026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e77a2ceb-1ce5-4ce7-bb5e-71570c9291f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f626b8c-1289-46de-bcbe-e90457621d25",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd78191-d2fe-4a8f-afaa-02835db7bb22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ca248cd-a8d2-4da3-a8e0-dd4ac6691685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c122ede4-8725-4fdd-a043-fc9c0152ee3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c630db-d22b-435a-b7ab-189b1135df62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef60e67-6f0d-4616-89c7-45a1a36b37c2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9a08f6-c4d5-46fe-afb8-f90101705736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef0b8fd1-4af5-449f-aa1c-10c1858e792e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55a0824-0811-41f7-af3a-a155fd5cf989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d11a0bf6-0f2e-42e4-9339-7b30bb049655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5985667e-725e-4057-9ca1-b594e1a0acb0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4e7a27-47bf-4fac-b57a-fc88591c4288",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377b55b1-e074-4e32-8580-07d94f560441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17468da8-8e36-447f-8f07-e6f1b03e6e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d444a5-1d4c-446b-a7cb-e7a3039e5a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e129ed6-d8a5-4133-967b-10acbc49d598",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f6a6ac-f7be-43ac-81ae-b2fe19460ab5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b166d5-581b-4524-9893-a2b798ee0bae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47023db-d87c-44d4-9422-31231b6740be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba6ba35-514d-4e45-8d22-d306d78c1e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2beff7-1c6b-40cb-840f-e4dca3fcd11b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdcd4d7-e36c-4e70-ac76-cd5869dd6f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3514dae7-7ec6-4e00-8b9c-bfb2a4b5643c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4452f547-953b-4802-b6da-9bc10e5df8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0026a5e-71fc-4a63-8bdf-01c7c9b75164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ff4b4b-0be2-41a5-8b37-4d82023b8525",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0dd4650-3f6c-41ac-92d7-61c88c1210e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d02cd1ba-1856-4f31-97a3-b829150f4f9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86808c9-2c3f-409b-84c2-39e4b52cbd7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "630ba850-0d76-494e-a0ca-58854f1f9041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad4f03d-8790-4f08-8bec-d58a0a25bf91",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62cd9ad-7a3a-414d-a90a-732409e49898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8dd5e3c-3ad1-43cb-b38c-c1287b70006d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366f9439-f3ed-48f2-ad02-b52146d8b850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66d41aa-626c-4a11-be69-0ca460617221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e58a6cd-cbab-44fe-882c-7f17c732edf1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c75446a-81d3-499d-9732-271d39d7625a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3369254c-b851-4f39-8f9d-0079376ef35a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47c1657-5a1b-4be1-a692-6d574c1f3fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14a1e69-5ba6-4546-aa8c-a764ab2be54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5b8f97-c5ac-4406-9604-56f5ea5997b0",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716d9358-a439-4b2c-bcda-f7952fc15d1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33fa004b-9149-42f9-9f26-fcc60006ce26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f8c37e-2299-4eaf-aafe-65845e2e5679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb0d566-8adb-4f6e-aadc-41a5a33d2a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e011484-b1a5-4b2e-881b-2362390a7e64",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2451824-8de3-4edb-8d99-3e49d63ab8bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc2fd033-da2f-49f9-8d01-5b0ca1489c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5de372a-d661-4b6f-9d00-dd0afdb7a51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a36e6b6-699e-40ab-9c18-b4170c89cb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a43992-321d-42d2-b59d-26e73549c26a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b94d49-913a-45cf-8b48-809ec2385eac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00a1e44d-9226-4622-8640-5a6999fd365b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fa51f3-e752-4971-9f33-8a8a4a23bb72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd056938-5fc9-4682-b9f3-3a2ad9dd882d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe63affb-4c02-4e87-aed8-cc0d8d95b1e1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ae6049-b7e9-4eed-94b7-ba9f3574d2e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15fe3abc-414e-476d-bc9a-c1ead134f889"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a32c078-d0bb-4c2e-9946-5f055689a86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595d21fb-a516-4f41-805b-c537d866c039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002e3f6a-0347-4220-a2a6-2c23de38833c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a669374-3163-4c89-a0be-ebd2fe147a47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6180dbee-7cdf-41a3-b715-a49cc7c9d1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbabe73-dedc-4a8d-8427-8974fec17672",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fb7a4a-a387-48e9-b9f0-42bedcf45a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38badad-943d-400d-8726-1da1c3bbe815",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9895da-eed6-4a5d-a8b3-af51bad25cb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0da331ae-fd89-4b6e-ae4a-36efe20331c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1e68c4-9026-4d6f-9e93-eab8c6c3261c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38050e19-cc9d-449a-a350-d518df5ff41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247d9982-b69d-4af9-a912-8aa3b1ec6b79",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68a712b-36a1-43d7-834b-891e8c58f038",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40e27d85-2d7f-4e33-9fbf-b55b45921570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7c7b38-86bb-4579-94e2-49f3a5222c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac82d6d2-fc45-448c-861c-b306098af605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ab6c4b-7bae-4c50-869f-c58e172a4d68",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7446fd4-031a-4821-b932-f8734d91d637",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89d6b1d1-8772-4fb2-a267-2138863d121e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed0e0be-7ca4-4484-b54c-b4542bddb554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d4b98dd-a59a-4b62-9c3e-72a6f491b54d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a8cd6c-6a63-49b0-b173-62d6deeb8697",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2160775-a4fe-46e8-a378-d4279ed44b5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4d4c79-a598-4e88-bd1c-5f8eefa73420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c21bd98-1dbf-443b-81a1-55697e458aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d68f7f0-bbfe-455a-bfae-6b79f5df40cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986e7d29-0f3f-48d5-a729-d164a7b22b6d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc058763-36f7-4916-b315-fcf2a29a14d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cad92c-d027-4c75-88eb-637aa03e1834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97af4a8-29ec-4b35-b334-a592d23ccfc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7a83cd-b32b-4e26-bdf0-fad388177112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e8a1da-f7c7-48cf-8fc8-4eeefcdb15b7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac56170-0781-424d-bd61-33235dd1197c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3f28919-2d65-43d0-a206-c4e1e90d1904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b68d7ba-7489-42ea-9eb9-1d4699df1452",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1432b8c3-cc11-4a7f-a079-c6fe8006a7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ea4526-4b66-46ce-9dbe-76f085eacc7d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0cb328-4e18-49a3-ab60-cbd17706d757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "299d5056-7770-497d-a109-b52adcc15b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedfed43-80af-4b24-ab22-7c23996e4a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c47396-f0ad-4fbe-9790-a069320509de"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f559224f-71c1-4062-ba76-8be2cc1c9a0a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a20e6910-e6c5-4539-98c3-ca22dbaf4449"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aeb6ee4-05aa-4e9c-a1cf-5d175ddbbd2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "300c534c-10b7-4ef9-ae52-e9a1c52cba06"
                    }
                  }
                ]
              },
              {
                "id": "31529d71-f62f-4076-9b4e-3486128e20bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26461705-2d01-4cc6-bf42-14d417c1c495",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0513fd5d-703e-42c5-9738-a3d53a1f2fb3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7994de75-36c9-4dad-8972-88593c207dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb66f0a-c277-499f-9dd6-0127066d19e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af3accf0-56f3-42bb-b3ec-accf5b507e24"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f026fff-8d0b-4fed-bfd2-3f6c83c10431",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7811f92-d1a3-48a5-917c-480e4fd70934"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b4d248e-7ac6-47a1-afc0-28f55c3a63d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b5485ad-e839-4ce2-a828-3ca41b238909"
                    }
                  }
                ]
              },
              {
                "id": "59e3571f-d1f3-4018-ab32-eb51855e5140",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "74d0c846-a81d-4149-9709-8d7f9d2c5b54",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a06631-9599-41f4-8b45-91756d42047e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "af60b6be-2111-4a7d-b3b4-2d68b4f86223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b168852e-bd7a-4acf-bc77-018e4666287f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29bec2f-fe33-47eb-8ed0-7c4e30f3ebd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d2785f12-0bf8-489a-8b29-62b94c74f307",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b9a9e00-298a-491a-9106-5aeb52bf82ec",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6dd46c34-f463-4294-98bb-ea84f638af5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b7f5c2c0-8c99-47fb-b2f0-54fb2ea8e927"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b575a467-cf9a-428d-985c-8aac0efe6d3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "921637e9-5239-4809-acb7-fe6d92988783"
                    }
                  }
                ]
              },
              {
                "id": "ddae32fa-80d2-40dd-ba50-72f356101e2d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96b8131b-623e-4529-8746-cb4ec3e0be07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6889d414-cc92-481a-81ef-f968e8f66b25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "197008fa-52fb-42be-961e-ca0c7ab8eedc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdd9c279-c37d-4d24-8b5c-60fddd2fd26c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "986fd527-ae67-43fe-8636-e30924b574d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "09181833-2691-42d2-a1c6-04c8111ca193"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de2a4c4c-b382-4095-9819-a0f850c400d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa0bf0c2-667b-4ae1-af49-0e783e9ea309"
            }
          }
        ]
      },
      {
        "id": "bd2fd98b-5590-4bd4-9c9e-f669f8f24e18",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "36198f50-0ac5-4cf5-881f-127a7c8c1739",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27892ec4-173f-4735-9526-e9c8906b14e2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6170934a-62bd-49f2-94f5-9b324998b16c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fd044f-da45-442e-89a4-9dfd0e24dad5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "fa348889-d35e-4fcc-8ddf-73d3f7955e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c308d8-7ba0-4ff0-a414-d1afcd2bf5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2439477-1cb5-4904-b89a-018de059f26f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "888660ca-862d-4caf-9433-617de0fb96c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4b2632c-9b17-4986-9e6a-dc19d81a3126"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "225bea82-9a99-4ddf-8888-da1f4d2318ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2185bd7f-40b5-4d47-be49-23ab6e37f5fa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60742c69-7e46-4251-9a9b-30ac249b5b6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fc22d790-cb95-460c-8fa0-017da2d67dcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2d06d19-fbbc-4361-80f6-ea17d73e5cc8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26338a3a-4c6d-43b9-a0ef-fd306cddac76"
            }
          }
        ]
      },
      {
        "id": "06c4dd2a-e6db-46ff-a5cd-a8b8edd6ff48",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c6b31168-d6db-466d-8b48-1cb60d099496",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc040d5c-5d1e-4567-abbc-f2ee492f682f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24d7229e-00d6-4541-aeda-a3395d6bb319",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f79a7f-4722-42f0-a31b-142ac4a8589e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "270a940b-176b-4abd-830a-3a2b50bed0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3398650d-c67d-4419-9f1b-dc70e3ff9384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84a45a8d-2245-4a4e-ab43-d0b43ffef052"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be5739c5-d709-477c-b9eb-bee9ff89145e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "55409891-cc00-4ca6-8fe8-dc1a434e38a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88c49be7-2041-4cc7-8cf3-552de9cfa3d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfa37bb2-165d-4696-9656-749283f77e28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "260486d7-f8cd-4c56-bdab-d8f299253bcc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa19ff81-bf95-4403-96b3-aebc04b8b283"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9585fd24-4956-4e00-804b-f9353dfab7f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9bbea4f-0b4e-4e4c-962e-dccd594ff0dc"
            }
          }
        ]
      },
      {
        "id": "ee3913d6-623f-4602-b758-a2cadd4753a9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ab3d5088-fa6e-40b5-bd3d-935b234e2db5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e305ac52-6270-4096-b923-2a6623b48c42",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50c7c795-3dba-4956-aa45-9c39ebfb8a97",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646c28b2-50fb-46a8-803d-a9de9033f745",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fa01075-be1e-4803-a95e-69c8097ea15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5025bf3-b541-4c4c-8984-c52236ef7a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2a62c1d-6c0e-40e0-8085-375f73d51583"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32919425-75f7-4288-b63b-6911c0c2a2d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "953ea062-b405-4307-8ab0-0c7be1049667"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "febcc3ba-a20d-481b-9229-eacde4e34c33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a32eb9ee-c92d-481e-a276-55523558158c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05c18040-cb9b-49e2-bdbd-e5b8b1087a4e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42e22059-0050-4261-86ca-908f75c12e5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5b1ae3f-5e63-49a5-91b9-ee8a611289b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7de1912b-cd51-434d-9505-5a5cc1f3abc6"
            }
          }
        ]
      },
      {
        "id": "d943b220-ae31-4282-80f3-882e98e044fa",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f65abca-8937-4711-a2fa-cadeafdb0419",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "849bcfcd-5442-4cc8-ad23-071bf4d1aea3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "855a8b1d-29cb-48da-8424-8d4399ae0629",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec2b87bf-3ecc-4aed-a50a-9e88ffe72525",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9cfca425-dd2e-44f9-9e97-100b85673edd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 760.2682926829268,
      "responseMin": 16,
      "responseMax": 7813,
      "responseSd": 955.2829621505526,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687049198504,
      "completed": 1687049396794
    },
    "executions": [
      {
        "id": "daea537d-81d6-481e-bf94-cd280fdf5f94",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0234adec-d942-48e8-8190-6b51c3ec025d",
          "httpRequestId": "1367e06f-0b28-4163-a108-24726de2f30e"
        },
        "item": {
          "id": "daea537d-81d6-481e-bf94-cd280fdf5f94",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d491487d-dece-46e8-9cad-aa9cc4dbd3ed",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 0
        }
      },
      {
        "id": "86f2b37a-c02e-46c4-8a01-68a2cb622f00",
        "cursor": {
          "ref": "418f9e89-a284-40a0-a23b-7cb32b7f0bf5",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2ef08411-fdec-4a85-abe7-e25742f6e82a"
        },
        "item": {
          "id": "86f2b37a-c02e-46c4-8a01-68a2cb622f00",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b971bc2c-b3f2-41c8-b19f-406142a0e263",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "04ce1b4c-deb5-4c08-8f17-1d38b77bc4df",
        "cursor": {
          "ref": "267cbf7a-5010-41ab-a02c-f6adcc9b60d4",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7b0cc976-c245-4b54-bb5d-2ebb125301be"
        },
        "item": {
          "id": "04ce1b4c-deb5-4c08-8f17-1d38b77bc4df",
          "name": "did_json"
        },
        "response": {
          "id": "97e157bb-0e24-4dfb-90e9-05170874faaf",
          "status": "OK",
          "code": 200,
          "responseTime": 963,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71697ade-fd0e-4680-a4de-f2a87de35a26",
        "cursor": {
          "ref": "f5b3fc08-056a-4b5f-b118-6e1265c692b7",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6c548a87-9801-4fa6-aa81-9384a34b9256"
        },
        "item": {
          "id": "71697ade-fd0e-4680-a4de-f2a87de35a26",
          "name": "did:invalid"
        },
        "response": {
          "id": "378283e3-1219-46dc-8128-4aafb66fb90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71697ade-fd0e-4680-a4de-f2a87de35a26",
        "cursor": {
          "ref": "f5b3fc08-056a-4b5f-b118-6e1265c692b7",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6c548a87-9801-4fa6-aa81-9384a34b9256"
        },
        "item": {
          "id": "71697ade-fd0e-4680-a4de-f2a87de35a26",
          "name": "did:invalid"
        },
        "response": {
          "id": "378283e3-1219-46dc-8128-4aafb66fb90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 692,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2b64c9-004a-441c-a199-e98fe3b029db",
        "cursor": {
          "ref": "09fc04cd-4214-408b-b98e-35e1a0c2fac7",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "85a00490-aa27-4fac-b04d-dfb3b7038b13"
        },
        "item": {
          "id": "2b2b64c9-004a-441c-a199-e98fe3b029db",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "676a179e-b2f2-4532-b2c5-0c36e0ee6692",
          "status": "Not Found",
          "code": 404,
          "responseTime": 757,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10eab13c-2199-4dc0-92c4-b7ef94592de6",
        "cursor": {
          "ref": "92bcf72d-88f6-473d-83e0-9135b245e4dc",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a65fd95b-bd9d-47ff-b1c4-f25ae0add09b"
        },
        "item": {
          "id": "10eab13c-2199-4dc0-92c4-b7ef94592de6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f967f1e1-80ed-4833-883f-f7ea84d04a20",
          "status": "Not Found",
          "code": 404,
          "responseTime": 621,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8060b93-590d-4511-aaba-68dd812ae8db",
        "cursor": {
          "ref": "6ce7cff8-2ef6-4318-b176-befd014f0cdd",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9c5252d9-c3f2-4636-9740-9b4095c6d9e9"
        },
        "item": {
          "id": "e8060b93-590d-4511-aaba-68dd812ae8db",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "af61beda-9805-4503-8661-9518dd6a036b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d01a2a9d-e5ef-41df-9115-48651d8aae8a",
        "cursor": {
          "ref": "5a961db1-0264-430d-95af-233a8d414a52",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "2890faab-0016-48f1-9fe9-d3aeff174ece"
        },
        "item": {
          "id": "d01a2a9d-e5ef-41df-9115-48651d8aae8a",
          "name": "identifiers"
        },
        "response": {
          "id": "2c5ca4e3-c325-49f1-96a2-40b12c540356",
          "status": "OK",
          "code": 200,
          "responseTime": 1248,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3141c654-21a6-4e6f-8a28-663844b690b9",
        "cursor": {
          "ref": "74446d3a-5f88-45e5-9918-d8d5dffc287a",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "33e48eca-abdc-4845-821c-6d491a718678"
        },
        "item": {
          "id": "3141c654-21a6-4e6f-8a28-663844b690b9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f044108f-a889-4f37-8db5-6b1792772678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eb76f3-72e8-42a0-97c8-b6da57f6ba3d",
        "cursor": {
          "ref": "23c32808-58b2-4121-b148-1c6171c46fcb",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "449e1c2a-a51e-4370-bd32-4ba1de89869d"
        },
        "item": {
          "id": "f3eb76f3-72e8-42a0-97c8-b6da57f6ba3d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f212afd0-fbdc-4e9e-8b71-a9c3f9047f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 500
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5713d2-a620-41c8-88b9-82a7d5712971",
        "cursor": {
          "ref": "ffebd572-4fad-43e9-8958-df96e5b0adac",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1db1e194-dfc0-46d0-ad3d-824a88a01534"
        },
        "item": {
          "id": "da5713d2-a620-41c8-88b9-82a7d5712971",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1e0f0c77-6434-4d91-9de8-5621553faa84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8affbf65-2a52-48d6-a504-516c09300eed",
        "cursor": {
          "ref": "e023b73d-6d38-45ac-9884-42f6ac5a17cd",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "61ccf22a-8e23-4794-b194-b1bb8a8e14b1"
        },
        "item": {
          "id": "8affbf65-2a52-48d6-a504-516c09300eed",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "948fc15f-89dd-4306-b772-7428e82d4057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8972589-d2f1-4c23-9bc2-a8be720b1d30",
        "cursor": {
          "ref": "20029a50-dd9e-4832-8768-60c620fa6c96",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "892a8e7d-3cab-41ca-982a-6930f0962153"
        },
        "item": {
          "id": "f8972589-d2f1-4c23-9bc2-a8be720b1d30",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e52a5e7a-5a9b-45f5-ac9f-e86265d84299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 635,
          "responseSize": 507
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654876ec-dcd3-4856-a57d-1658ba8ad43e",
        "cursor": {
          "ref": "771be203-2e5b-427e-b7ea-da98404dc0df",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8f6d3e20-98d4-4b8e-9d34-39ce486fa025"
        },
        "item": {
          "id": "654876ec-dcd3-4856-a57d-1658ba8ad43e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d5320eb6-a633-443d-9e03-73580089f90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba19b07-cfdb-452a-91b2-9952968e0edd",
        "cursor": {
          "ref": "a92f8159-807b-4d14-b9a6-8b5b40d182df",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2c1f24ef-6b1b-4b74-96c5-933fe7fbda17"
        },
        "item": {
          "id": "bba19b07-cfdb-452a-91b2-9952968e0edd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "423b4f0b-c49c-4c33-ad80-7262730fa8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b95f56c-387d-4ace-9ce2-194708e28b22",
        "cursor": {
          "ref": "98fedbb2-c5e9-43f6-93de-5332174e5567",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "95dea1c3-10a6-4feb-800e-9d282bbb58ea"
        },
        "item": {
          "id": "0b95f56c-387d-4ace-9ce2-194708e28b22",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "859179ce-6c39-4d61-aa3f-011aab3bd287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 592
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf64608-b230-441a-97ff-4f022d351959",
        "cursor": {
          "ref": "9fc6abd7-81fb-4b2b-b647-819cf9d94ae8",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c6378505-0de0-465a-a0e9-07b98dc7a7db"
        },
        "item": {
          "id": "fcf64608-b230-441a-97ff-4f022d351959",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "23ad1ac5-9e72-4797-b676-f839f9760d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9dffbb-2d22-4cd3-9aef-dc15e17eb41a",
        "cursor": {
          "ref": "00c24635-ea62-459e-9772-48a9e19c1a71",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "18f507cf-cda6-42de-8881-6a11a5d134b1"
        },
        "item": {
          "id": "9e9dffbb-2d22-4cd3-9aef-dc15e17eb41a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1d9deabf-c13a-4f2a-bd32-de18ef696bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 558
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71baf7d5-b038-47b5-b559-b36b639a5c6f",
        "cursor": {
          "ref": "b12243cb-b4df-4e2a-9eaf-0cd86b8e33c5",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2cf5449c-e670-45a6-a657-c940d6c9efba"
        },
        "item": {
          "id": "71baf7d5-b038-47b5-b559-b36b639a5c6f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "18ce8c05-cc80-4e1c-8e34-9a9bf2d4b12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2c0705-95e4-4250-9045-747c8f7188c0",
        "cursor": {
          "ref": "3a413235-4c38-42fe-a23c-498e743e75e9",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bda96596-93a3-4da9-a68a-33a750710107"
        },
        "item": {
          "id": "5b2c0705-95e4-4250-9045-747c8f7188c0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a29f5328-cc6a-4bdf-978d-99ba5a12f4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 601
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc91526-0d00-4982-9fd0-6c08bc374342",
        "cursor": {
          "ref": "01b48f73-e7fe-4663-9506-520fd8be6098",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f3b96f9c-4b14-4df2-8d93-44930ea1bbf8"
        },
        "item": {
          "id": "0fc91526-0d00-4982-9fd0-6c08bc374342",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d956a13a-c030-4580-9572-a74fc926d336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "620fa884-6952-4e4b-9e3b-1f103c42ec6f",
        "cursor": {
          "ref": "3ad043e1-57ed-4d82-a951-286060f7f14f",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bb941aaf-3cf3-42b7-a79b-c6642fe6566c"
        },
        "item": {
          "id": "620fa884-6952-4e4b-9e3b-1f103c42ec6f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b484cdf5-1555-434e-aa89-d249970cd369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0cbafd-2068-47d6-b360-93079ffa618e",
        "cursor": {
          "ref": "f0b541ee-e5e7-41b9-a02c-0b6e4f3f87d2",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "821c8dfb-514c-4d81-9685-c883c7f91259"
        },
        "item": {
          "id": "ad0cbafd-2068-47d6-b360-93079ffa618e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a0f4d097-1240-497a-889f-4deeaa0ddff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c88cab-8ab1-41b5-888e-3e3603dd7458",
        "cursor": {
          "ref": "b56b3ec8-8584-4110-a76d-30e61ea0e94d",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "392398d9-588a-4f4e-80eb-14c1fcd2b648"
        },
        "item": {
          "id": "99c88cab-8ab1-41b5-888e-3e3603dd7458",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "98a6ccbc-3837-4799-95a8-c27386f78880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c47516-51d5-40f2-b156-3181323dc773",
        "cursor": {
          "ref": "65840e53-b7ca-45ec-9784-7f1ff59f0143",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a3699fd4-c9a8-4bb5-92ba-3e79ce3f0593"
        },
        "item": {
          "id": "19c47516-51d5-40f2-b156-3181323dc773",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f4e172b8-261b-4175-b1e8-07a71f474789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8b9345-53c6-46e9-8621-b4745185717a",
        "cursor": {
          "ref": "1001db97-6165-4845-a85a-ac6ded03b35e",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d32ee626-3ce7-4edf-9104-9bf5159473b3"
        },
        "item": {
          "id": "af8b9345-53c6-46e9-8621-b4745185717a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6f3bad69-6836-490e-b017-006c2982a39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 626,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a5df58-09b3-48a2-bcda-c468524b1100",
        "cursor": {
          "ref": "40c78191-e7ce-45c8-8af7-f0907371e3c0",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3592c177-c995-44d2-9164-5c3614915bfc"
        },
        "item": {
          "id": "60a5df58-09b3-48a2-bcda-c468524b1100",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "59ac24c0-6ee5-4226-975a-7a45ad6bf3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 544
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469d0165-f560-444c-83c5-f611ff4deaa1",
        "cursor": {
          "ref": "25e5ee18-8e63-4b78-9fa2-fe3cc83f793b",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d35e1664-80f4-4b54-85a1-8f35a9ebc3c0"
        },
        "item": {
          "id": "469d0165-f560-444c-83c5-f611ff4deaa1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2e8c32dc-f031-45d8-b414-db59378c1b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9163ac-921f-47b1-860b-8e805a10c677",
        "cursor": {
          "ref": "43832f94-4e25-4e7d-be16-d2b8a64d5270",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "30e9107b-ec98-4798-bf56-e11d2ec261ea"
        },
        "item": {
          "id": "2e9163ac-921f-47b1-860b-8e805a10c677",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "124485d0-6a4d-4255-bbf0-6c64be41c8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 543
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de40c1e2-186f-45f4-a32d-c6e17ddc58e2",
        "cursor": {
          "ref": "45156c46-f774-460f-aefa-55a73447ec77",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bcd89261-1b25-4951-856b-c3dc3c16b851"
        },
        "item": {
          "id": "de40c1e2-186f-45f4-a32d-c6e17ddc58e2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7c2204fa-fd30-4832-9396-8707f3521df6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 541
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d044a65d-3d6d-424f-af1d-61c70c1d9513",
        "cursor": {
          "ref": "49231947-45f8-4bfa-9125-2e20d94f8f67",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fba3a80b-56b3-4191-be06-a3dd9a039550"
        },
        "item": {
          "id": "d044a65d-3d6d-424f-af1d-61c70c1d9513",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3c01fd06-f1d3-4b29-ac9c-15ea90497d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bb3a91-7e2b-405e-ac5b-7d619353785e",
        "cursor": {
          "ref": "a51b618e-137c-4d2f-845f-d9426593e847",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "75092c94-5777-4f1b-bab0-a9be38bc9e0b"
        },
        "item": {
          "id": "53bb3a91-7e2b-405e-ac5b-7d619353785e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c8a7fd7b-b241-415e-bf5a-fc0a2fc495a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9dacb4-34da-432c-931c-12caf4ecb1c3",
        "cursor": {
          "ref": "e2e68133-adbc-4c07-bbe2-eab90b49ff60",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "81cbd2ba-a6b4-488c-a9dd-3866b5866d59"
        },
        "item": {
          "id": "ab9dacb4-34da-432c-931c-12caf4ecb1c3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c48c663d-fe10-4c52-9954-8512fa691084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5766c190-4190-46bd-81b0-b61e2976398a",
        "cursor": {
          "ref": "b392206c-6501-4ce7-b984-d42c980a352f",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5a058ad6-19df-4e06-97bd-58a4408b9c05"
        },
        "item": {
          "id": "5766c190-4190-46bd-81b0-b61e2976398a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5551c1d4-bf88-4e0f-a029-bf63c95e075a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8056a3f-7d3a-4f7b-bcca-979a7c0e9b4d",
        "cursor": {
          "ref": "aa9b223a-1159-4161-bcdc-9ec72231d59b",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "56fffe75-3382-44d3-9da9-fbbd2aa86a78"
        },
        "item": {
          "id": "f8056a3f-7d3a-4f7b-bcca-979a7c0e9b4d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "594f7f8a-9bbd-44fd-aa01-f97a8a8b73af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab4beb4-9862-4e36-9a23-1ff9cb780d42",
        "cursor": {
          "ref": "8b3e42db-21d2-461a-be8d-0f4ded082b68",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "deba22ed-c438-45c3-9cf3-0fc6c0b309c5"
        },
        "item": {
          "id": "2ab4beb4-9862-4e36-9a23-1ff9cb780d42",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "350c5aa5-bc96-448f-86fe-a5c1808422ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 633,
          "responseSize": 578
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16caeeb4-930a-413f-8790-2a1516fce052",
        "cursor": {
          "ref": "44740533-3d40-4c62-903c-8a3e004f8bb9",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9799d462-069a-4fb0-9651-a4c38c978c90"
        },
        "item": {
          "id": "16caeeb4-930a-413f-8790-2a1516fce052",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c7ab3068-b4f4-43f5-b53c-4f857f96f66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a1c5e3-e87c-4fbf-adf4-b3e7ba0b7448",
        "cursor": {
          "ref": "701a2760-79c8-4aaf-80e3-75092ffe6031",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2498dd6d-8997-4238-b10e-5fa99785db25"
        },
        "item": {
          "id": "67a1c5e3-e87c-4fbf-adf4-b3e7ba0b7448",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "340ddbde-b380-4482-b71e-c6857ad46968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db8bcad5-a706-4cd1-a2aa-e05c0d377205",
        "cursor": {
          "ref": "d9d37806-fe73-4216-9ce0-a59085549e37",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "91a9973d-5e8c-43ae-8427-a7a20fd9cf60"
        },
        "item": {
          "id": "db8bcad5-a706-4cd1-a2aa-e05c0d377205",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "80076aad-0547-4da1-9a93-53580d2fbbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1001
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd37615-a4f6-4bb3-9e83-9ff0e6529a8c",
        "cursor": {
          "ref": "ea2e0699-80d6-427c-90ba-0cae34c27b27",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "212129c0-ea5a-4054-a849-0c7a58d6d482"
        },
        "item": {
          "id": "ccd37615-a4f6-4bb3-9e83-9ff0e6529a8c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ab689a6a-ef80-48f2-9f5b-b3fb379d1dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1aca357-e39d-441b-baa8-081a4aeead4a",
        "cursor": {
          "ref": "26d60448-99e2-49af-96bc-bf6603c6d892",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5f548514-6bb7-44e4-8547-3a943d935838"
        },
        "item": {
          "id": "f1aca357-e39d-441b-baa8-081a4aeead4a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e1e28ce5-af12-4afb-86b3-c89d350d3372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c606861-286d-4790-a5e0-d210248def85",
        "cursor": {
          "ref": "928857a1-7f6b-4919-9713-792038c1e3e4",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c771e506-d7d0-46a1-9503-e22916f1c46c"
        },
        "item": {
          "id": "1c606861-286d-4790-a5e0-d210248def85",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1f920e74-a30b-4e6f-8f9b-9bfc2cea3ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32b2112-34db-4e20-a833-35a7cda0c087",
        "cursor": {
          "ref": "a300a16e-a219-4be7-8f66-702bb4bfd2b0",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "0096fb38-6cd1-4e6e-8e09-cd2270e9a39d"
        },
        "item": {
          "id": "a32b2112-34db-4e20-a833-35a7cda0c087",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "023a8081-d0f6-4107-9f65-0f4eae40f3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 1332
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bc81b3-bcbd-4e97-9be5-a974a44b250b",
        "cursor": {
          "ref": "19ef2f28-a342-4c69-b437-cc6658e7840a",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7a458def-5a8d-4c2b-a673-9baa5bcfb463"
        },
        "item": {
          "id": "69bc81b3-bcbd-4e97-9be5-a974a44b250b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9386d47d-3dbe-41eb-b5c5-69285cebfcb0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 838,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0cf1cb-d8b1-419d-a48b-8069335787a8",
        "cursor": {
          "ref": "8aa64aa6-24f2-48a8-94db-5d316ab7134f",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b08fb46c-a487-4fc9-8eb6-3b219e6ee457"
        },
        "item": {
          "id": "5e0cf1cb-d8b1-419d-a48b-8069335787a8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f59d279d-9577-4271-b91f-e647ffdcf6b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc07bda5-055e-4e6a-a11c-5e128f7cfc42",
        "cursor": {
          "ref": "45e47bc0-8b81-4293-b507-0729bb991666",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "eadc35ed-f82b-4f49-a56e-929e3d3ef9c7"
        },
        "item": {
          "id": "fc07bda5-055e-4e6a-a11c-5e128f7cfc42",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "4f238666-bc95-41d9-a98f-6c1c2c87c066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c91ab4c-933c-47d0-a3b6-d682ad94fcd3",
        "cursor": {
          "ref": "6c761531-042c-48ca-8f8e-ecf8e34afcd9",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8fbde811-12b3-41b5-968d-c4283c4d1a9c"
        },
        "item": {
          "id": "0c91ab4c-933c-47d0-a3b6-d682ad94fcd3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "35bc82c2-5000-4092-9738-d3e572f8d583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1149,
          "responseSize": 1269
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4130d340-c51c-4414-b6ee-e43f29573b01",
        "cursor": {
          "ref": "7c6895fa-36aa-49b4-b469-3ca74aad9aa3",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2796db39-6305-4208-85b1-2a556f624af2"
        },
        "item": {
          "id": "4130d340-c51c-4414-b6ee-e43f29573b01",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "952faef8-800b-432b-a4ee-0139698ecc20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "846db85d-bcda-4a1d-a3b0-6372926ec4df",
        "cursor": {
          "ref": "ffa6d240-6d7c-41a1-afdf-714a024ef8e3",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7d15ad8c-f777-4384-a5fe-1e0add82f3c0"
        },
        "item": {
          "id": "846db85d-bcda-4a1d-a3b0-6372926ec4df",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ee68894e-4c34-4a9e-aeea-d8bf08933c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 669,
          "responseSize": 1268
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1629f25b-9a7b-452c-a96e-ce03d8935428",
        "cursor": {
          "ref": "5266d1c9-374e-4240-a499-e8436035cf36",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "98b44f85-90bd-426a-ba92-359b41b51107"
        },
        "item": {
          "id": "1629f25b-9a7b-452c-a96e-ce03d8935428",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ca25bd5a-0026-4134-85e2-331d8dc9e403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4558ab49-5743-48ca-9ec6-645f4c42121a",
        "cursor": {
          "ref": "62c636ba-2e04-4087-aac8-c32d0702d630",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8318f486-2019-4e89-abdd-89e9ce17079e"
        },
        "item": {
          "id": "4558ab49-5743-48ca-9ec6-645f4c42121a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1e34098a-45cf-43e1-a57b-c9829849bd4c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 790,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbec8bd4-c1b3-4527-b7b6-0a999882ef72",
        "cursor": {
          "ref": "c558cbf8-57d9-4804-ba80-058e76a6f629",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "84e4c551-10e5-4ec2-830e-d278d5e35c02"
        },
        "item": {
          "id": "bbec8bd4-c1b3-4527-b7b6-0a999882ef72",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "20bd17c2-7e5b-4c84-a1b7-cedc9ae942c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17298252-9fc2-4faf-b264-e0f00ac20ed7",
        "cursor": {
          "ref": "c68ee9fc-544e-4a61-b89a-45ef16a56494",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d4e6390d-c28c-49c9-989f-c7649ddda682"
        },
        "item": {
          "id": "17298252-9fc2-4faf-b264-e0f00ac20ed7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "198800c6-cfd7-4067-b6b9-1f75bea5b80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e16c820-1863-42bb-9c9a-82cd4aa32643",
        "cursor": {
          "ref": "863f139e-206c-40f6-957c-9fef7172cf99",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4b1187d2-82e9-4240-acd3-f9cd2d0fdaf0"
        },
        "item": {
          "id": "8e16c820-1863-42bb-9c9a-82cd4aa32643",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1ddac50d-6246-4189-9a4a-4882413866cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 564
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ac0370-7eb1-4df0-9376-1cf0bdb4872c",
        "cursor": {
          "ref": "e8adad2a-ccb9-424f-affd-5d5ea3190161",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4b5b258a-1306-47c3-bff2-a27b93782188"
        },
        "item": {
          "id": "48ac0370-7eb1-4df0-9376-1cf0bdb4872c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0806957d-a361-449e-a1b3-780875923d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae95f60-eb2b-4991-b1ab-499d380903b8",
        "cursor": {
          "ref": "5e995b70-ae25-4dc0-a70e-eb818d829a30",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6823a487-a23a-443b-bcb0-21ae16971779"
        },
        "item": {
          "id": "0ae95f60-eb2b-4991-b1ab-499d380903b8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "217a1782-c6ab-4a92-a9c0-be4f1c118282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 563
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8e7255-dfa6-4521-9a4c-fecc3d32663f",
        "cursor": {
          "ref": "12f16ee1-6e05-44aa-a1bb-ae5bfbb06d6d",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cb77f740-fcb4-421a-b8f9-c254a6ede73b"
        },
        "item": {
          "id": "bd8e7255-dfa6-4521-9a4c-fecc3d32663f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a3806619-98d4-4044-b061-2076383fb8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 561
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d434e32-2103-4505-b7d3-59d8903a006d",
        "cursor": {
          "ref": "47eadd65-6899-4e4f-98c9-b838f9ef55e5",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3afad4f2-ef4d-4a49-b5cd-b655e89b4d49"
        },
        "item": {
          "id": "1d434e32-2103-4505-b7d3-59d8903a006d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b5502315-c1f9-4d94-a49f-e8a5cbc26c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23ac4c0-c890-49fa-ae34-1041ad123a3d",
        "cursor": {
          "ref": "7768ccf0-d6f7-45cf-b84e-0784bd6fd447",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3f7f1974-0a79-4a93-a5b8-ba5046b9db5e"
        },
        "item": {
          "id": "a23ac4c0-c890-49fa-ae34-1041ad123a3d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "07b18dcc-f686-48fa-a40e-ecb0b51861bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08bd91c-8e1d-42ad-8265-657c495b3cad",
        "cursor": {
          "ref": "939d75b5-4827-4a7f-8a31-ca518b658fef",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cd38be18-5295-418e-b4d9-fce53716d08b"
        },
        "item": {
          "id": "c08bd91c-8e1d-42ad-8265-657c495b3cad",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6c95a38e-b73e-45ea-ad3b-e91c07152ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011aebfb-78c1-4af2-9512-2443ba6747c6",
        "cursor": {
          "ref": "7feccf8e-313e-4530-b916-4b1b8af1063f",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "56393d56-e1df-4e91-ac01-c945d28c0eec"
        },
        "item": {
          "id": "011aebfb-78c1-4af2-9512-2443ba6747c6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5b5ecb7c-df80-4d9b-a043-c7d26a78628e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f350fef5-a039-4795-b7c3-772fd3f93e7d",
        "cursor": {
          "ref": "2ffc380c-33f1-4cca-9300-b2fd9aeba104",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e571fd17-40b3-4d25-8afe-f5914200ec70"
        },
        "item": {
          "id": "f350fef5-a039-4795-b7c3-772fd3f93e7d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2c7a00b1-5aab-4fc9-ac14-2703c0590b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323dcf46-0c2f-4d9c-a6bb-66275d6170d1",
        "cursor": {
          "ref": "0d5f7dbb-b6d4-4099-9e77-c70a3ea3a16b",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d5b965d1-f3bc-4035-ab73-55a50b8263af"
        },
        "item": {
          "id": "323dcf46-0c2f-4d9c-a6bb-66275d6170d1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f926601f-a13b-4009-9c43-980b2ecae852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 650,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9f3188-25ee-4a85-b886-efcd7cc47f70",
        "cursor": {
          "ref": "c774d044-d603-49e4-9b44-a3044c1d542f",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bdba83d1-a19c-4066-a756-7033e9c2048c"
        },
        "item": {
          "id": "ee9f3188-25ee-4a85-b886-efcd7cc47f70",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8e7995e3-b9e0-4f19-991e-bd256b8a76a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208748a7-e495-4de2-8e35-9c2a6eaaa888",
        "cursor": {
          "ref": "c6f511bb-20ec-45ec-9c3e-79e29157a003",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3f91cb33-283d-42d5-a816-cf2cf64f3d36"
        },
        "item": {
          "id": "208748a7-e495-4de2-8e35-9c2a6eaaa888",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2fe8f379-312f-4b72-9401-7f6c466bcbd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b09d875-4d6b-4d87-8b50-01e8e0786e03",
        "cursor": {
          "ref": "e6927ed1-f01d-402a-9df5-7ebf3d09fe4f",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e6640d54-9cbf-483e-a27e-2855f75444ff"
        },
        "item": {
          "id": "5b09d875-4d6b-4d87-8b50-01e8e0786e03",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ed055709-6048-435c-ba66-df29a28fbf0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f33559-067f-4562-96c9-a2e1b289908e",
        "cursor": {
          "ref": "274bc5e1-bffa-48b0-94d0-2c79498cf9fd",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3e734c04-6bdd-4f96-8fa4-8f24730f27fc"
        },
        "item": {
          "id": "81f33559-067f-4562-96c9-a2e1b289908e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d1141535-1930-4730-aa08-a76612e8ae17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39c32dd-36ed-4b88-8eef-371dcfc27a84",
        "cursor": {
          "ref": "52916f54-9180-48f2-8e6e-4565c9cd31ae",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6bc1da8d-e39c-499e-83bb-5c63568cc52b"
        },
        "item": {
          "id": "c39c32dd-36ed-4b88-8eef-371dcfc27a84",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "54d2cd10-08e3-4957-a9f9-52811fa986c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba0c327-489e-4fa0-b9a1-c34a3ead00de",
        "cursor": {
          "ref": "618eb706-849f-41d9-ab4b-85269c707192",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b86a8a83-e154-45c4-91c2-69557434a405"
        },
        "item": {
          "id": "7ba0c327-489e-4fa0-b9a1-c34a3ead00de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "42f44f2b-6b98-4fa9-bb9e-d9366c586a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466c3ccf-5f09-4034-8059-efbd906b6ae7",
        "cursor": {
          "ref": "4c274ad1-9be5-41c6-ba62-d3917a034d88",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2e068090-c2da-44b0-b534-bde03b7686f2"
        },
        "item": {
          "id": "466c3ccf-5f09-4034-8059-efbd906b6ae7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7775ed71-ab09-421a-98b4-ed5cb21d44c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdee8aa4-2f80-4bc5-b723-173a31c59abc",
        "cursor": {
          "ref": "cc80632d-7cbe-4c77-af9a-76d6acc4e1da",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c6c439cb-1372-46bf-952c-32e7a17254c1"
        },
        "item": {
          "id": "cdee8aa4-2f80-4bc5-b723-173a31c59abc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a9581ea5-9477-486c-880b-fc5e4ccf6e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c347eb05-80a8-4804-b36d-ce698d57c37b",
        "cursor": {
          "ref": "2c3af63b-07f7-4c90-a7d1-4086ece59383",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "db0633f9-e3ef-4bad-9975-242b6b75d2f6"
        },
        "item": {
          "id": "c347eb05-80a8-4804-b36d-ce698d57c37b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f1b0f183-ba19-45e8-ab3c-99925f19f5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ed3f82-79e2-4398-ab8a-fbca48e27d79",
        "cursor": {
          "ref": "0ab0d2d8-2c06-4cba-a354-57ecfd11cfc7",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a3d37e32-35c5-467b-949c-d151de1fdcf7"
        },
        "item": {
          "id": "63ed3f82-79e2-4398-ab8a-fbca48e27d79",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9374d9ca-2629-4df6-82e8-c1ec2080c342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0dab02-3218-4eab-b966-b3da108143af",
        "cursor": {
          "ref": "f709c39f-1bbe-4dca-9976-ab462a1b5fd4",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4752fa39-5d47-41e1-b868-f1c6a600765e"
        },
        "item": {
          "id": "af0dab02-3218-4eab-b966-b3da108143af",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ef3bac61-9ee4-4196-98dd-cd5df3842446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8442c0f2-025e-44bf-a457-e408d6a10e37",
        "cursor": {
          "ref": "2179a1e0-1191-40b4-9d56-b51d434bdcce",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fa934a28-2524-4e42-b6eb-744c49554db6"
        },
        "item": {
          "id": "8442c0f2-025e-44bf-a457-e408d6a10e37",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "246176d3-dd6c-4205-8308-ed14972c20e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc96185-801b-44d5-852d-19052704b317",
        "cursor": {
          "ref": "8f18bd6a-276f-4168-ad27-b50766a2ebe5",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "939769f8-8e76-4e26-a7dc-7988b9a12bd8"
        },
        "item": {
          "id": "dbc96185-801b-44d5-852d-19052704b317",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "84c817b0-d23a-46e7-890f-567e90f07d29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 549
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e129b527-9102-4d6b-8677-9b88d7a1e388",
        "cursor": {
          "ref": "7fcb78a1-3c38-437c-8f1d-82929b46d3cc",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1549809c-7f7b-4ec3-99cb-f5beb12a04c4"
        },
        "item": {
          "id": "e129b527-9102-4d6b-8677-9b88d7a1e388",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "28326a72-1652-43b3-bcc1-1377a9532efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a65c56-9fca-4344-a735-a382edd1f033",
        "cursor": {
          "ref": "d205d7f4-3cd7-4ed4-99f1-c177f96cc468",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0f41f5bd-ca5a-4c9c-8778-93d64ccfd56c"
        },
        "item": {
          "id": "46a65c56-9fca-4344-a735-a382edd1f033",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "34b0d890-ac5b-4afe-bf5c-72caee720d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af94c90e-e060-417f-a22c-c514dd628f08",
        "cursor": {
          "ref": "99244318-84c5-4652-808a-6a49001a484e",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ae060513-6c35-428b-a06d-9feb0afce0b2"
        },
        "item": {
          "id": "af94c90e-e060-417f-a22c-c514dd628f08",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ef11912f-0df6-45d4-9422-dbe05f2a7710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25356e43-95ff-46bd-836b-5ab8283bb94b",
        "cursor": {
          "ref": "4dd70703-00e5-453b-a5d7-254dd62cd095",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ef00433f-0423-4613-a1bb-edf575b53b17"
        },
        "item": {
          "id": "25356e43-95ff-46bd-836b-5ab8283bb94b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a96b8eae-66a8-4151-b4e4-aea0bb9b0a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6311aaca-e385-4a8c-9f30-8849f6d6b139",
        "cursor": {
          "ref": "a77cc3d6-d291-41e1-9766-aa98cd6e0ef7",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9d07f615-4af9-4c88-8e6e-72d976c56bb4"
        },
        "item": {
          "id": "6311aaca-e385-4a8c-9f30-8849f6d6b139",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0043cb9f-5b40-4ab8-ab25-b201e218ad64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 624,
          "responseSize": 769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399c304e-10cf-43cd-82ab-e05a97693d36",
        "cursor": {
          "ref": "0c905309-b3ae-43c1-8c99-88e5bafc276b",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1ac9ac76-464b-438f-bc1c-ef79d03c8ba6"
        },
        "item": {
          "id": "399c304e-10cf-43cd-82ab-e05a97693d36",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "942b19d9-be25-44c9-9404-72b6897d951b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa0a0de-0a13-4841-8c07-0dce8a083cc9",
        "cursor": {
          "ref": "0723103e-0f9a-43af-b7f6-ca727f9036d2",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "89a3c0e3-3e59-491a-b468-77068fadf2fd"
        },
        "item": {
          "id": "9aa0a0de-0a13-4841-8c07-0dce8a083cc9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1244a3e5-6af2-4e07-b8d1-f1c69db64e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9272cd0c-6635-4849-a25c-9c2772535936",
        "cursor": {
          "ref": "fc66a6c6-2cca-4b30-b32f-47ea2a3419d0",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ffd5f770-a742-48dd-87e0-5167f5c3874e"
        },
        "item": {
          "id": "9272cd0c-6635-4849-a25c-9c2772535936",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "25e72961-b9c8-4bd5-b613-232249232dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98efce21-da78-4d44-a88e-737ed7913159",
        "cursor": {
          "ref": "1f54150c-75be-425c-9801-a2f0e8968ca8",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c49cff1b-0f93-4a6c-b11e-defceed0cc6e"
        },
        "item": {
          "id": "98efce21-da78-4d44-a88e-737ed7913159",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fd2841d0-88fe-4836-ac7d-2098797eeeed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21415946-d2eb-4a93-964b-8ee913073004",
        "cursor": {
          "ref": "13472007-a8f1-4a9c-afac-d1c018bcd0ed",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4d6d5d80-3416-4fec-8a07-491496da57e2"
        },
        "item": {
          "id": "21415946-d2eb-4a93-964b-8ee913073004",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "70e1eec4-97f4-4a92-beec-fa62b81c426d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f47834-92af-439c-b5a0-04f91b3b8199",
        "cursor": {
          "ref": "77d428c1-54ab-43b9-aeb4-442376f19120",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "00475f3c-e674-4e87-b88b-179ea92e8bd1"
        },
        "item": {
          "id": "38f47834-92af-439c-b5a0-04f91b3b8199",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bb22fc54-953e-4d8d-8d06-0d9f7cdcdb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3bdbf4d-1f35-4139-9573-ff4d06f57df3",
        "cursor": {
          "ref": "dc62c3e5-ebcc-4bc5-aa2f-95794a45f7ca",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "21878936-74ae-4a2e-b23b-85b0d8b89636"
        },
        "item": {
          "id": "b3bdbf4d-1f35-4139-9573-ff4d06f57df3",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a4ad4531-50cc-446f-aad1-7f268975c193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef98fcd8-78c5-4eba-a563-204ef6def0b1",
        "cursor": {
          "ref": "3bb4a56f-ce46-4fed-a1bd-d0703022168e",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ab7988d3-4383-4a62-b281-40a07f31ee81"
        },
        "item": {
          "id": "ef98fcd8-78c5-4eba-a563-204ef6def0b1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2f76485e-23f8-4ba2-aefd-e35983308b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d42e061-7f55-4641-bc7b-821e84f954b5",
        "cursor": {
          "ref": "514a4bb8-6052-4c13-80a9-69dddc5cae3e",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0c333f94-5db1-4a74-ae55-b673f5b3a8ce"
        },
        "item": {
          "id": "2d42e061-7f55-4641-bc7b-821e84f954b5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "822b7d28-04eb-40b0-a408-35ac7f9806bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 611
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12367939-2e1f-4bf5-ba46-c07f60db4247",
        "cursor": {
          "ref": "61984e14-476f-4369-93e3-ae6bd2a8ec69",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c30a0d21-931a-4bf9-a3b2-ee41aef54c15"
        },
        "item": {
          "id": "12367939-2e1f-4bf5-ba46-c07f60db4247",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a87103ac-acff-416a-b1ab-aa075c8c147a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4d95cd-060d-4aa6-940f-33e206cf166c",
        "cursor": {
          "ref": "044ca334-6a8a-4755-a031-98d51d8f7254",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "a1aeb377-2c5f-4a75-bfd2-121056357e7c"
        },
        "item": {
          "id": "ef4d95cd-060d-4aa6-940f-33e206cf166c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ed8d5d0c-3eb4-4e9a-9625-583184e351b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191dc982-beb3-4ed6-a7dd-2671a0927e1d",
        "cursor": {
          "ref": "e1ee2af8-ff39-47d2-9830-b9bee8f6be4c",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7662a34a-85e8-45cc-b217-f2550c7f4adc"
        },
        "item": {
          "id": "191dc982-beb3-4ed6-a7dd-2671a0927e1d",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3bcaaa9d-7920-4642-a5ca-02f9262478b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c1a9f3-074a-4e06-a974-26b942bedb9a",
        "cursor": {
          "ref": "260ae789-6b4f-4121-9b50-4b953d234193",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9118ac7f-18e0-4509-9eee-8dc13ca57745"
        },
        "item": {
          "id": "e7c1a9f3-074a-4e06-a974-26b942bedb9a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f0049b27-e222-42d5-abf3-80b32aedb905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68026257-15ac-4e20-a19b-f3dc121601f9",
        "cursor": {
          "ref": "52764710-0a20-4269-aad3-8e99ed2fab43",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c10f56b2-2ea7-4dc7-80d2-2480c774339a"
        },
        "item": {
          "id": "68026257-15ac-4e20-a19b-f3dc121601f9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "45c68f9e-ed76-4667-8959-6ecdd5c231e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293555a7-8db0-42c4-af11-b3148fd51710",
        "cursor": {
          "ref": "00c922c0-afc7-45be-8b58-59ee25fc4b50",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "73a3be9a-56a0-49d9-a464-e92cad0e4b65"
        },
        "item": {
          "id": "293555a7-8db0-42c4-af11-b3148fd51710",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "da1681b2-f7e1-4a5a-abe9-a124c454b015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02248b22-a75d-42f7-919b-e8b6ef6b0b9f",
        "cursor": {
          "ref": "450610ef-6d74-4c50-85c3-c72d0d8f69e7",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bdcb62a4-e129-41c1-a4b2-7a0eca28e273"
        },
        "item": {
          "id": "02248b22-a75d-42f7-919b-e8b6ef6b0b9f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "6a46bceb-c25a-43f4-a997-efdf206f2dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7403e883-0eb5-4e51-bdb2-d4a3b3a5cdda",
        "cursor": {
          "ref": "4a5cfbb5-2942-4a88-b4dd-959e313d6d5d",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ce393b0c-fb66-44cc-bbb7-eca753656ce1"
        },
        "item": {
          "id": "7403e883-0eb5-4e51-bdb2-d4a3b3a5cdda",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "920d5ecf-53e1-40ee-8820-fe701a18a631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 884
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0e70c3-222b-434b-9a6b-dab46188af00",
        "cursor": {
          "ref": "fa58f3e3-7b93-4dec-b28d-4515409dbff3",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e371cc83-c900-40ab-8d1f-e132bbff6eb0"
        },
        "item": {
          "id": "fd0e70c3-222b-434b-9a6b-dab46188af00",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b1020dbe-dedc-44ce-8bfa-083c175bf66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 882
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb36054-85e5-483b-a5a1-4e70f7bd318c",
        "cursor": {
          "ref": "1e2723c1-1f6f-4192-8f16-eab514773bb6",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "641ba0db-860c-43bb-ae27-a1403eb0bf79"
        },
        "item": {
          "id": "efb36054-85e5-483b-a5a1-4e70f7bd318c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c5ea6652-48ea-44fc-93ca-d3603b96b597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038f0905-ef4e-4394-9fb3-8e7942db4d46",
        "cursor": {
          "ref": "caa3392b-62c1-43cb-87ac-3bb21a742dae",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "00d33373-42a6-49bd-8839-f81eee55e8e8"
        },
        "item": {
          "id": "038f0905-ef4e-4394-9fb3-8e7942db4d46",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a02b49eb-e6eb-4c9a-9669-b7f745759c3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb21d7bf-13ae-4039-85b8-ce0982866e7f",
        "cursor": {
          "ref": "ffb391ab-d08e-4ada-9df0-aae63a3fc1b0",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ede1dc34-d7fc-4a83-a93c-5760558c53fe"
        },
        "item": {
          "id": "cb21d7bf-13ae-4039-85b8-ce0982866e7f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d477a7bb-896e-4de1-8acd-fc5109b89f7f",
          "status": "Created",
          "code": 201,
          "responseTime": 6098,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a5220f-eeac-47d6-8ce1-3ce391583e12",
        "cursor": {
          "ref": "d550a077-4655-448f-9d58-ff415b707b59",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4d9f1ffa-4173-4ba2-bd64-ca012f007cdb"
        },
        "item": {
          "id": "46a5220f-eeac-47d6-8ce1-3ce391583e12",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1665f8a4-9229-4d91-b14f-2dfed513fe16",
          "status": "Created",
          "code": 201,
          "responseTime": 6314,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fce3346-6405-40d2-965d-32b93602fee1",
        "cursor": {
          "ref": "c229bba6-c5a7-4238-b69e-c1dbc29cd5fc",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "97acf1cb-09a2-4b0c-81d2-69dd6ab26505"
        },
        "item": {
          "id": "4fce3346-6405-40d2-965d-32b93602fee1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e0e8b45f-4ba8-40eb-8f01-02a0bd0e494d",
          "status": "Created",
          "code": 201,
          "responseTime": 6856,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82125dc-72f9-4b0c-b0d2-a0be611ab5c6",
        "cursor": {
          "ref": "4b6dc485-a86d-495f-a92c-8d54abc75b45",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a149397f-d535-4eb1-b510-9d62e33d6ca9"
        },
        "item": {
          "id": "e82125dc-72f9-4b0c-b0d2-a0be611ab5c6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1bd079de-e12b-42d6-83fb-091e82b7d7a6",
          "status": "Created",
          "code": 201,
          "responseTime": 6502,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef012cb2-150d-4a99-bfb6-b15f7de681cc",
        "cursor": {
          "ref": "21d565a9-73e8-49d4-bf38-66d4bbe002c0",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "be06077d-402e-4299-bcc2-5eabb7d956f4"
        },
        "item": {
          "id": "ef012cb2-150d-4a99-bfb6-b15f7de681cc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5155840c-01c2-4514-b23b-e8b70024d5d8",
          "status": "Created",
          "code": 201,
          "responseTime": 6459,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60918d1-32cd-442b-8a65-dd0a72fb4f86",
        "cursor": {
          "ref": "0772b6a1-9b86-4853-8103-68baab76c072",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a2afbe48-385b-4100-846c-10ebf74bf950"
        },
        "item": {
          "id": "e60918d1-32cd-442b-8a65-dd0a72fb4f86",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c6b07ad8-c4bd-48d0-b5ef-cae9ff7cec1f",
          "status": "Created",
          "code": 201,
          "responseTime": 7813,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4def8a1b-598c-45df-99fc-2ee60a461f08",
        "cursor": {
          "ref": "d6efd6b7-d966-43a8-8450-cdade2b56e5c",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "338e6231-2317-411c-993c-e69297bba227"
        },
        "item": {
          "id": "4def8a1b-598c-45df-99fc-2ee60a461f08",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "14e3daf6-1470-4971-beb2-464eb854bb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db034f0-a6a4-44ff-aad2-07419a6b17e2",
        "cursor": {
          "ref": "880a5629-2ab0-49ca-8688-6ab035a63532",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "80795385-521c-4740-9e1b-ad56037c7b8d"
        },
        "item": {
          "id": "4db034f0-a6a4-44ff-aad2-07419a6b17e2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e37d04ac-01ce-4b4e-bf51-a50bda40c1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc892ed-a1c1-480d-ac99-f30c4d4481e4",
        "cursor": {
          "ref": "531d4577-8c6c-447b-86bc-418238c4d5ef",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "03623356-1e99-4263-bff6-ed0ec810e274"
        },
        "item": {
          "id": "8cc892ed-a1c1-480d-ac99-f30c4d4481e4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a42793f3-c19a-441c-b625-78b09302dc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb829cc-467c-43d3-8688-8ac794f2ff79",
        "cursor": {
          "ref": "662f2727-18a5-4984-869c-1859f99fd085",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1daa502a-325b-4e7a-8eb9-15209f78fbec"
        },
        "item": {
          "id": "ebb829cc-467c-43d3-8688-8ac794f2ff79",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "025b5c13-8d5f-4586-a034-a95f52a92b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f802314c-2a97-45c3-9885-0696d7a83ad1",
        "cursor": {
          "ref": "b8618d6c-3003-477e-af8e-6a4d3197fddd",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3ef7a6a8-2d76-4d86-9481-b0fac5829901"
        },
        "item": {
          "id": "f802314c-2a97-45c3-9885-0696d7a83ad1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5caf566a-066b-43a1-8d29-9b3ef26690fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103d9db9-ec75-46fe-84f6-e20b10f30691",
        "cursor": {
          "ref": "8f64d404-c88e-4a1a-b600-e41b016f6841",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "10b06fe2-a93f-48d0-9acb-0f1d564a48f0"
        },
        "item": {
          "id": "103d9db9-ec75-46fe-84f6-e20b10f30691",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e9c332a4-d29e-43cc-b72b-cddb9e626a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d9ced1-4652-4dbf-9702-dd9e1bbf7e59",
        "cursor": {
          "ref": "dd6494c8-0413-4979-b5e1-121630eef9e5",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b1969edb-de7d-4bd3-9f18-9e4e8cf1c31b"
        },
        "item": {
          "id": "c3d9ced1-4652-4dbf-9702-dd9e1bbf7e59",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "525220ad-8c42-4495-ad3f-f44acf379f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c80d0f-fe8e-4ac2-9a91-5ef4f18ce23c",
        "cursor": {
          "ref": "63e1aa28-a7fd-4110-9c13-5d943f09a1e5",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d25fb162-208e-4d1a-bdf7-b60c5a92cc3f"
        },
        "item": {
          "id": "a0c80d0f-fe8e-4ac2-9a91-5ef4f18ce23c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "924a14f3-0220-45dd-bb43-dda79c9ddf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a77b6f9-9473-4af1-a132-4ec343b317e6",
        "cursor": {
          "ref": "4627d5a6-9c48-41bb-ad5a-5dd1ec7c189d",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "12d1241b-b573-4962-9089-dbc0b2ed6eaf"
        },
        "item": {
          "id": "9a77b6f9-9473-4af1-a132-4ec343b317e6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "638478f8-735e-488a-b321-9eeaf8db11a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52f322e-65df-4353-9aa9-a854326ac048",
        "cursor": {
          "ref": "fe590420-0cb8-401f-ab20-dd043ff25a14",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "12f2ed3f-207d-4919-bc4e-882527d7f553"
        },
        "item": {
          "id": "b52f322e-65df-4353-9aa9-a854326ac048",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b28af9ed-62c0-4ad0-91b1-bbc27bff3867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905ad277-109b-491d-a284-863588c9568b",
        "cursor": {
          "ref": "ffdbcdad-45e5-46e7-b441-31d22c33ba20",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d6f2598d-07c4-417a-9d2c-b2599299ab5f"
        },
        "item": {
          "id": "905ad277-109b-491d-a284-863588c9568b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0de88635-64dd-4913-900c-862f362bd895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53411e1d-5a28-44ed-9b91-d34193218bf4",
        "cursor": {
          "ref": "97f17095-cc53-40c9-8771-810ac084cfa4",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9d08c113-8f0c-439e-b521-38bb11e88ced"
        },
        "item": {
          "id": "53411e1d-5a28-44ed-9b91-d34193218bf4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cec7b586-72f2-41cf-9535-a978385f1a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdec3f0c-f540-4431-8ec6-7547c2b85880",
        "cursor": {
          "ref": "a3ba8927-84dd-442c-b027-1540f927ed49",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f7ce4ef5-b04e-476c-a5a0-ff54bb0d0d2e"
        },
        "item": {
          "id": "cdec3f0c-f540-4431-8ec6-7547c2b85880",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "172cf5f0-de26-41ef-993c-34f04f46879f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d378711c-d859-474c-922c-96766f82a9eb",
        "cursor": {
          "ref": "68435f8b-3e5b-4f11-ba0b-53be120439bd",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fc84b0a4-b6ee-4638-b0f0-3f9d07ebfdc8"
        },
        "item": {
          "id": "d378711c-d859-474c-922c-96766f82a9eb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5dc656b5-2836-4d00-93b6-4258c42477ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedf8f14-b224-4554-b4c5-999565a7e968",
        "cursor": {
          "ref": "8969a90e-07f0-4ee3-b69c-b38b0d33ed8e",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "63082d71-a11d-45ce-8e2a-5df3bf7187bd"
        },
        "item": {
          "id": "fedf8f14-b224-4554-b4c5-999565a7e968",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8048588b-a9c8-45d6-86fb-54e47c487c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8292e328-ac95-4853-87d4-09d28ea4cb3a",
        "cursor": {
          "ref": "ee7e6bf1-8e1d-4399-b1cf-3cffc2ce8b9d",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6f2efa4c-8a6e-425a-bedd-c1df5d139b10"
        },
        "item": {
          "id": "8292e328-ac95-4853-87d4-09d28ea4cb3a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "94072511-a3d0-4704-9334-4309b1f0af5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b0c8d8-478b-48a4-869f-f3e3b36b9f7a",
        "cursor": {
          "ref": "c20447b6-b8e5-4fb1-900d-f450f1217ae3",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f5e7f74b-70ac-4afe-83d4-92b033775428"
        },
        "item": {
          "id": "e4b0c8d8-478b-48a4-869f-f3e3b36b9f7a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6f7664cd-6ecf-4b6e-b92f-a756352396ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9bb7f0-3829-45ce-bde6-794068fc6c85",
        "cursor": {
          "ref": "aab597fb-3439-4733-bcff-cc55de191b0b",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9833f0b6-9a7c-4809-bdd5-cae12c76f4e2"
        },
        "item": {
          "id": "6b9bb7f0-3829-45ce-bde6-794068fc6c85",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f50b9560-83a1-4083-8018-d71c31418a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21028858-2200-4bc8-bf87-2cd390b440c9",
        "cursor": {
          "ref": "4f023179-fa18-4453-b51c-de22c7f8f4c8",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2c0598f4-19d5-499f-8ea6-1b4491c564da"
        },
        "item": {
          "id": "21028858-2200-4bc8-bf87-2cd390b440c9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f293c979-d817-41a0-8ec9-61689b997abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058a43c7-ed43-4afe-8c5d-71941d880346",
        "cursor": {
          "ref": "394a88b5-45fa-47a2-b449-10b999de923d",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0279aa8c-c8d9-4864-83dd-ed7ba2ca1d9d"
        },
        "item": {
          "id": "058a43c7-ed43-4afe-8c5d-71941d880346",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a1390e63-ae75-4182-8290-e4c10ca6b538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231938ad-d57b-49a8-bb58-0ebb6fa44288",
        "cursor": {
          "ref": "ea2385e1-e76b-4cfe-8022-02070088e3c1",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a372ec8b-1f7a-4c46-8721-acbedfee4d64"
        },
        "item": {
          "id": "231938ad-d57b-49a8-bb58-0ebb6fa44288",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7653e48a-0fe1-4079-94eb-8442bc8393a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5757a56-bd05-4a2c-9320-dbe479dd8009",
        "cursor": {
          "ref": "a189f752-2e6e-4adf-bd0e-2f77d400a4e7",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fad99340-1e45-40a1-a0b7-3d51e2d69145"
        },
        "item": {
          "id": "c5757a56-bd05-4a2c-9320-dbe479dd8009",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "14f61a43-0ae4-46b4-8a3b-bf9e19481dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171739b7-47ae-4ca1-8400-1e92b9e3c3de",
        "cursor": {
          "ref": "95410ec4-ed36-477a-894f-7cf01987f7bb",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f48dbf90-c86e-4e5b-9b28-d66689fd1545"
        },
        "item": {
          "id": "171739b7-47ae-4ca1-8400-1e92b9e3c3de",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a2ea877d-7445-4d86-8b87-8436e0e7926c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35afcf73-8b34-47f5-a312-6f310cd4b633",
        "cursor": {
          "ref": "709d871a-954c-41d2-99a9-f23e6270805a",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "aa7146cc-14ff-403f-9fa5-68e83f5632f3"
        },
        "item": {
          "id": "35afcf73-8b34-47f5-a312-6f310cd4b633",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "bdcf0160-72ab-4344-94d3-0d701991b1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c374ed-c723-4871-9f9b-0b724388944e",
        "cursor": {
          "ref": "2abc1e2d-a176-47da-8dc1-ac55ac403372",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c03e9507-e5c0-4df8-9844-c26bf422b114"
        },
        "item": {
          "id": "76c374ed-c723-4871-9f9b-0b724388944e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b8072fda-9a16-461e-bb53-dad0ed89acb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e10c63-d7b1-44f7-8dc3-97c11da0c77a",
        "cursor": {
          "ref": "06b284a9-cf58-4269-97e0-c6b6603c10e9",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "58345fed-b4eb-4583-a024-f717a02b3d5e"
        },
        "item": {
          "id": "43e10c63-d7b1-44f7-8dc3-97c11da0c77a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "59bccb41-61a5-4a35-a7d1-a0d442a3dc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9b9d05e-d1cf-4036-923a-ad33b38f047c",
        "cursor": {
          "ref": "ff966570-9af2-49fd-98ac-9e4853cbe046",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4839e5d0-41df-4398-ab5e-1b578e969b21"
        },
        "item": {
          "id": "d9b9d05e-d1cf-4036-923a-ad33b38f047c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c7ec0a89-b669-4441-94b6-1572347c90c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958d910e-039f-4321-9904-d98883c81625",
        "cursor": {
          "ref": "5eaecc59-7374-4955-a51d-2c46f2abdc39",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9caf8bca-ae9f-49e9-aad7-2a8015962323"
        },
        "item": {
          "id": "958d910e-039f-4321-9904-d98883c81625",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1afb077f-ad49-4e54-93ff-7930d2fec6a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45c3a45-355e-4440-a4c1-86ca7df033a6",
        "cursor": {
          "ref": "16188cb5-5ed9-4949-a17e-678f5743d203",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4caceb8b-d7b3-4a6a-b0ec-f3416e01f207"
        },
        "item": {
          "id": "a45c3a45-355e-4440-a4c1-86ca7df033a6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c9517a3d-005d-41f5-ac9f-49f6b7628319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51111e50-a80d-44fd-8ae4-29b3da9ba3a6",
        "cursor": {
          "ref": "f32813d1-81bd-4fb0-a3ae-f4d1b2c74c51",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e76366b9-3498-48ee-abad-f3aeaf98eb37"
        },
        "item": {
          "id": "51111e50-a80d-44fd-8ae4-29b3da9ba3a6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "97d06efc-27a6-4d63-a35a-f50ac8c51a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4619da13-4a7a-4a2a-a8c0-ca2bc158d641",
        "cursor": {
          "ref": "a9ad233f-2ce5-47d1-aa25-e9bb34f9e3b5",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "334f7aee-5c3b-4ec7-bf9a-3bde90059b56"
        },
        "item": {
          "id": "4619da13-4a7a-4a2a-a8c0-ca2bc158d641",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ade60678-3fe0-4549-91ae-f737e5baa665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe42ec80-25ec-41c2-a7f4-203d968fe629",
        "cursor": {
          "ref": "2a4f6df4-65c9-476a-bb9c-ead39de07e52",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f7385ee5-9dea-4a01-890b-01a86746f546"
        },
        "item": {
          "id": "fe42ec80-25ec-41c2-a7f4-203d968fe629",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0c70a1a9-31f2-439e-a4cf-2d0f84e70052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f324e92f-bb07-43e7-aa3c-22dedf775cf3",
        "cursor": {
          "ref": "d44e9b28-1729-45b6-9247-f8a716f8c7d5",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b014f7c1-a228-4e36-b78f-54ef788a96ce"
        },
        "item": {
          "id": "f324e92f-bb07-43e7-aa3c-22dedf775cf3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fde951ef-4d56-4d75-9283-2f5185d5292f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd54bf9-ea9d-4eba-bd89-94385c25b44b",
        "cursor": {
          "ref": "4351ffab-3978-49a0-9710-900b8d944edc",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "52de70a8-99b6-4ef7-bf19-15099eb94882"
        },
        "item": {
          "id": "6dd54bf9-ea9d-4eba-bd89-94385c25b44b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d4b90165-c441-4ba7-85b9-07024b6450ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f98e47e-3419-4e1c-8251-29e0283429e8",
        "cursor": {
          "ref": "c044c9b3-7188-47f3-92c3-60f3803b8897",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "281d6a81-910b-4780-9bf6-0d8ea98f7eaf"
        },
        "item": {
          "id": "2f98e47e-3419-4e1c-8251-29e0283429e8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "796d07ba-ea64-4549-9734-e3d7adb06e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419e09d5-5d4f-4db7-89c7-0bbd8bc78723",
        "cursor": {
          "ref": "3f33c61b-1055-4510-86a4-37d48ac7f674",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "edaceb24-7198-4932-9f4c-d2d33e2f8645"
        },
        "item": {
          "id": "419e09d5-5d4f-4db7-89c7-0bbd8bc78723",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "14c60e21-540a-4368-9bf8-d5097c077ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b876ce-8129-4e86-8196-1dce273ae25d",
        "cursor": {
          "ref": "a28dd9b4-22d8-49de-9d4e-98cca5cffe01",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2b7b6787-081b-4ffc-be05-21058ecf8969"
        },
        "item": {
          "id": "b1b876ce-8129-4e86-8196-1dce273ae25d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "78d66ccb-16dc-4cbd-821d-f7eaf62d907b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4421fd4d-f736-4914-93bd-627c68049f42",
        "cursor": {
          "ref": "c3c7c4a0-cc72-48ba-a81a-fbc962a0ba95",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "74deb070-c1cc-44df-bcd5-ba394ad3baf8"
        },
        "item": {
          "id": "4421fd4d-f736-4914-93bd-627c68049f42",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ea72bfcc-33da-4498-917d-3228cf1ef100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3730be34-dbe7-4376-a475-9d50bbc197cd",
        "cursor": {
          "ref": "27de8d7f-6905-43e0-ab1e-5ac29a4b3d5a",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e018da7b-6bc2-4b47-983e-d6a7b656a721"
        },
        "item": {
          "id": "3730be34-dbe7-4376-a475-9d50bbc197cd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "51e3859e-08a7-4886-a49c-3e9a1853c689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48844580-e2bf-4ae5-ad1c-a34f7f4e5902",
        "cursor": {
          "ref": "c9428432-ba6a-4af1-a2bd-4ec77ce072f9",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "31f055dc-839b-4247-832f-387215ae7580"
        },
        "item": {
          "id": "48844580-e2bf-4ae5-ad1c-a34f7f4e5902",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8e204e36-4dbc-42ee-b9c4-f93d03e0bf9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac54628-acb7-414b-80ee-24711eb40a62",
        "cursor": {
          "ref": "cbc1864a-8545-414c-8894-a839c1095c3a",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9b98c112-c1b7-4b51-996b-4fcab65543ff"
        },
        "item": {
          "id": "4ac54628-acb7-414b-80ee-24711eb40a62",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "86b248a3-e663-4cba-a614-31d02a31cb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0381cae1-4bce-4f29-afa0-4e84ef5c44dc",
        "cursor": {
          "ref": "f22ab878-817d-4483-89a4-e9d929f70813",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7c79e51a-bcec-4a5a-a698-9715508a0422"
        },
        "item": {
          "id": "0381cae1-4bce-4f29-afa0-4e84ef5c44dc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "726148f4-8808-4678-a078-43e4568b0fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3acb90-47a3-4483-afca-1b5d848c8850",
        "cursor": {
          "ref": "0114d48a-28e8-4dfa-bcd8-3501f093eda2",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5e282ca0-6d9b-46fa-a9dc-34ac5ad8487c"
        },
        "item": {
          "id": "6c3acb90-47a3-4483-afca-1b5d848c8850",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "286cc4b5-c423-420e-8671-9768f1c1f7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e354af8d-d6a1-489b-b108-87f479ccb012",
        "cursor": {
          "ref": "1a366f1f-031e-4d70-9ac6-74019f45a37b",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a7927368-2a40-40fb-902e-36c49f2d61ef"
        },
        "item": {
          "id": "e354af8d-d6a1-489b-b108-87f479ccb012",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b04dd2c1-46c6-4f4e-9f9a-a936ad4441f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5f6381-44d3-4392-a1a1-7fe502114d22",
        "cursor": {
          "ref": "88956f81-61c7-4e1b-a862-36bbfe734b86",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0d9e2293-8ffe-4ad8-862a-e27813df5d26"
        },
        "item": {
          "id": "ba5f6381-44d3-4392-a1a1-7fe502114d22",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cbd6e0c1-7a85-4436-8840-e01109bc907a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1056b560-679b-4b67-ba39-6416baec9145",
        "cursor": {
          "ref": "0ee4c9ae-1472-460b-8ef4-1b28cecbba21",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "ca777a68-4b8b-4950-8c67-1a85c49e2177"
        },
        "item": {
          "id": "1056b560-679b-4b67-ba39-6416baec9145",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "673066a9-c897-4998-8a43-cbee6fb04c9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3e4e6e-87ac-4016-b7ce-de0ebb6956ab",
        "cursor": {
          "ref": "aed8259a-b6ae-40e2-bf56-8726f8ad2891",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "570cec11-7a9c-43a5-a17f-dcc119dce70d"
        },
        "item": {
          "id": "cc3e4e6e-87ac-4016-b7ce-de0ebb6956ab",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "44bb8a91-bd6f-4ee9-a08c-da0822b248c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710f8660-7a1b-4d81-a2c1-450e64112a25",
        "cursor": {
          "ref": "75e475e4-82f6-4ddd-bd14-22d950e5557f",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1e1f7e4b-f86f-4109-8163-e4409e3d3068"
        },
        "item": {
          "id": "710f8660-7a1b-4d81-a2c1-450e64112a25",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4a96d3d0-2177-42b4-9bbf-6d101f864c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f307283-d3d3-46e8-8793-deca0ee14329",
        "cursor": {
          "ref": "9a2e9727-663c-4760-a476-560c3e776685",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ece1dcdb-361d-4351-abd0-b5e886b29563"
        },
        "item": {
          "id": "2f307283-d3d3-46e8-8793-deca0ee14329",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8377d9e0-697e-4c47-a00e-167845044875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5051904-ab64-43aa-aac9-f41aedff3456",
        "cursor": {
          "ref": "bbca27e0-3b17-4e70-ba34-5f94b98972cd",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "a0ddab44-c8c0-476a-8e0d-4e19eb02d1ea"
        },
        "item": {
          "id": "f5051904-ab64-43aa-aac9-f41aedff3456",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ae73061f-b12c-4220-905d-8bbd9261d841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be947827-f24b-4605-ac47-c7cfe2b81bb4",
        "cursor": {
          "ref": "33a72a15-4b7b-47f6-ac62-19cb6d8e800e",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "48dc54e2-f6a2-4c74-8234-1d138aa63a48"
        },
        "item": {
          "id": "be947827-f24b-4605-ac47-c7cfe2b81bb4",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "328cc1ba-6954-476c-85a5-1397054a77d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9b415d-eb66-4a42-8005-7ffd74917dc4",
        "cursor": {
          "ref": "28676640-19c5-40a5-b5cd-4766e619b355",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f3462145-aa3c-4ce8-8b30-a9dc83cf58a8"
        },
        "item": {
          "id": "6b9b415d-eb66-4a42-8005-7ffd74917dc4",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c78dd28b-bbbf-4355-b973-230fed3e1ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e180515-8517-4d97-b35d-a1bfd2b1dd41",
        "cursor": {
          "ref": "afaa334d-5e25-4adc-be6c-16f90d848725",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cc30d274-58e1-4262-8e59-fd5a8fa10729"
        },
        "item": {
          "id": "0e180515-8517-4d97-b35d-a1bfd2b1dd41",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "48ffee5a-5ccf-407b-aecc-f8eba12830ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40eb0857-23af-4f15-8aa3-feb5fe098096",
        "cursor": {
          "ref": "0aa7f772-3ce7-49c7-bba8-f0e9d2c724ac",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0a328506-f0d3-4872-a444-afd3bd67bfc0"
        },
        "item": {
          "id": "40eb0857-23af-4f15-8aa3-feb5fe098096",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a1ab2296-5701-4bae-ae3f-28f4ce67905f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e492b824-2b6d-4f2e-aec3-4f50c9d7fbb1",
        "cursor": {
          "ref": "aa011140-836a-4bc1-9db5-48636628f0f9",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e8efee35-87e9-4410-9900-6522a3e4ed30"
        },
        "item": {
          "id": "e492b824-2b6d-4f2e-aec3-4f50c9d7fbb1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7b999376-417c-4a8a-b733-b38923f9eaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f91c4b-6518-4557-8e5d-910b3db9de21",
        "cursor": {
          "ref": "3628c900-8012-433e-aeb8-4c047dab7e0c",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "18f7e29d-94d7-4769-8c14-6d15aa5ebbf1"
        },
        "item": {
          "id": "93f91c4b-6518-4557-8e5d-910b3db9de21",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0ce6129e-a355-4758-acdc-40b5bfeb0eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ba3cf3-de19-49bb-99e6-08977606d39b",
        "cursor": {
          "ref": "3a0bc568-8ecf-4cf6-bdfe-7c444b1f7c9f",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b415f247-116e-493d-bea6-b3bec7e1ed89"
        },
        "item": {
          "id": "84ba3cf3-de19-49bb-99e6-08977606d39b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cb3ea3dd-dd2d-4c34-8934-f7f47ec9f372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bb722f-349a-405c-9dde-6bc0e896807a",
        "cursor": {
          "ref": "04b5502c-3146-43b2-889e-086eaf94c2a6",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5043e03e-0ab4-4d21-993d-11cab599f483"
        },
        "item": {
          "id": "b2bb722f-349a-405c-9dde-6bc0e896807a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bd1ea88d-a763-491b-821a-faa84a2f1767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33057cf-a45e-4c61-9d6e-dc825424a822",
        "cursor": {
          "ref": "da8fa6bb-ce64-495b-ac49-f2abd8d0796f",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "eb5f7b52-a41e-4e6c-a7cf-472d28aa6331"
        },
        "item": {
          "id": "e33057cf-a45e-4c61-9d6e-dc825424a822",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c1e9d815-533a-4cf5-a42f-d106f1579a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1743c8ba-7606-472d-b965-6f04ac253bb6",
        "cursor": {
          "ref": "857eb35e-6ea1-4201-a417-c4cc01ffae92",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "57c368ce-e787-474d-9539-a6ac011fad98"
        },
        "item": {
          "id": "1743c8ba-7606-472d-b965-6f04ac253bb6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5a0e44ea-fbdc-4de7-98db-2fe1073254b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17f72ef-f9d3-40d1-8319-b20a41a4d760",
        "cursor": {
          "ref": "630bea2d-5c2d-4678-be22-a6a3cc330e31",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "47c1e352-f133-4e48-83bd-8d9d0c8ac1de"
        },
        "item": {
          "id": "a17f72ef-f9d3-40d1-8319-b20a41a4d760",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "36e9f7aa-8940-4b50-a1d8-cc5364031391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08589659-91d3-41be-99c7-ea51fefbed68",
        "cursor": {
          "ref": "e351872e-7cb5-4192-8985-96b0add6760b",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ebf62b06-3853-482d-888f-594c2df99d3d"
        },
        "item": {
          "id": "08589659-91d3-41be-99c7-ea51fefbed68",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bfdc36b6-2d82-4f49-a9dc-a920d763c92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4177c957-4a1a-4cb8-941d-b8509ee0be7a",
        "cursor": {
          "ref": "fbda72c6-75e9-4b13-9edc-ab66607a12b8",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "de0b1163-6da7-4b8e-96a5-cb6b2910957d"
        },
        "item": {
          "id": "4177c957-4a1a-4cb8-941d-b8509ee0be7a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ae9d2b61-92b0-49e8-8da5-03315308a70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f99b8af-4b07-4e5c-a963-8576341ca09a",
        "cursor": {
          "ref": "d7702abd-709e-4493-aefe-62779a5996ce",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2327909d-f406-4a26-a4a3-3eb5293866f0"
        },
        "item": {
          "id": "8f99b8af-4b07-4e5c-a963-8576341ca09a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d1bd7de3-fc6a-41fb-8f43-5df4515f54a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9704f8d3-5d8c-41f4-a79a-5bfbf1a9ad59",
        "cursor": {
          "ref": "b5562cf5-06f9-4c00-8816-909686790b80",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1417585b-2b27-4e80-9d6b-3ebb0f01a6b7"
        },
        "item": {
          "id": "9704f8d3-5d8c-41f4-a79a-5bfbf1a9ad59",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "adb75de4-68b2-4058-864d-59f620d6341f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2abb75e-062e-4f4e-a503-53a80cf44c7d",
        "cursor": {
          "ref": "717a5957-e748-4ae7-a367-019132d2379c",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "45b3e0ec-c17b-48d6-9a21-705fad0ef96e"
        },
        "item": {
          "id": "f2abb75e-062e-4f4e-a503-53a80cf44c7d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ec538989-3251-445b-aae6-3ae0beac918f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6868ce9d-07ef-4e71-843b-feec2f98efdb",
        "cursor": {
          "ref": "d1848e8c-dca7-4ff4-8452-9b3bcbc16eb8",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ef08459a-0449-43ff-b99e-0a8dc7b8e579"
        },
        "item": {
          "id": "6868ce9d-07ef-4e71-843b-feec2f98efdb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "82e3e486-c7a9-4a8c-ba9d-19c31e72853f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbb6296-0713-4cd7-9d18-584fbc4bb0e2",
        "cursor": {
          "ref": "8a2279dc-eda9-4f04-95c4-10bda69cb7f5",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e51a98c9-bd2b-49c2-a227-9fd7cc84ef96"
        },
        "item": {
          "id": "cdbb6296-0713-4cd7-9d18-584fbc4bb0e2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3f76258d-9614-4b89-9c9d-c530dffbff58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0145f60-7142-4f01-a8df-266551775064",
        "cursor": {
          "ref": "460aa312-d5f9-49b4-8dbc-17d3674b6854",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "2f96a042-4d12-4488-9872-33b79cc3255c"
        },
        "item": {
          "id": "d0145f60-7142-4f01-a8df-266551775064",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3928cd3f-506e-419d-bc93-0a53c025ac62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c718b10-1749-4e70-b459-aa841c685a72",
        "cursor": {
          "ref": "abcd346b-e46c-4b46-bbd8-750fe86931c3",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ba8359a3-7057-4088-b6a3-dfcd9d0e382b"
        },
        "item": {
          "id": "5c718b10-1749-4e70-b459-aa841c685a72",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8cad9459-f125-4eb4-b305-2c25ff5fc4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc43cd44-94a2-4022-9d00-ea33ebec4ea1",
        "cursor": {
          "ref": "37616038-4e0a-488a-b1e8-1a1c5690edaa",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4430d3f1-39e6-4ac1-bc90-b0cfef0cdb42"
        },
        "item": {
          "id": "dc43cd44-94a2-4022-9d00-ea33ebec4ea1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "47f02d27-73eb-43b2-b87f-e8edf154c261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa71c7cc-f14c-45c6-a841-881cd70e04d5",
        "cursor": {
          "ref": "291e58ba-7701-43b4-8068-b9a8b7975d5f",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "c52f71da-8a90-44c4-b6db-93ce10517790"
        },
        "item": {
          "id": "aa71c7cc-f14c-45c6-a841-881cd70e04d5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "43918f48-e837-4f71-9bcc-a9e6f877040c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccbcdf0-9de7-44fa-835f-d34e706d3699",
        "cursor": {
          "ref": "e084136b-e341-4546-b203-f8331a82d3a1",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9500d0b2-3ab9-4290-95f7-8a16aaf78d64"
        },
        "item": {
          "id": "5ccbcdf0-9de7-44fa-835f-d34e706d3699",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4576baa4-699f-4db4-9f62-8714c48b90a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ebcad3-5441-4f4a-b181-96a2afed472a",
        "cursor": {
          "ref": "d8abafd0-b96f-4d7a-86e4-41ba33c40e4d",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4ce9ca8d-3d2c-4b99-a77a-df9175ede566"
        },
        "item": {
          "id": "37ebcad3-5441-4f4a-b181-96a2afed472a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9531b6db-f4b1-4170-8447-c71f50277c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5a921a-3fca-48c2-8454-38ea1412add5",
        "cursor": {
          "ref": "45184284-09a7-407b-b4e4-0762fbc8dce9",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6dde373e-24ac-4324-a7c2-b7e05ad9aeac"
        },
        "item": {
          "id": "4d5a921a-3fca-48c2-8454-38ea1412add5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "72f61c56-3dd5-45a4-ba57-4a0747827674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b3bd90-41dc-4ad5-9c49-5e9db2374921",
        "cursor": {
          "ref": "1a7aa365-87fa-4408-9d90-da30b56a8f31",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b3a57d94-9a1f-4fd7-924e-8cf454faf30a"
        },
        "item": {
          "id": "56b3bd90-41dc-4ad5-9c49-5e9db2374921",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "90826892-d173-4c58-873a-5d1e9be39075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813bce6b-9395-4980-8bf9-b5a93fe49c6c",
        "cursor": {
          "ref": "62440d7f-00a8-4b56-a541-56ae62b6e83a",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "98a31938-76c2-4c4b-90d0-a48d450523db"
        },
        "item": {
          "id": "813bce6b-9395-4980-8bf9-b5a93fe49c6c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1412cd4a-ab6d-4295-a982-f6d6311f60be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d444e397-d7b5-4465-8c14-b82bd90c663b",
        "cursor": {
          "ref": "92704bdf-b93c-4470-8ef6-905b6a006540",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3b1a0069-e84a-44a4-ad73-2ee39c739d26"
        },
        "item": {
          "id": "d444e397-d7b5-4465-8c14-b82bd90c663b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d6abb201-44be-4961-8739-169b5ea4c89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601a0258-c3bf-4951-bf6a-5208951c1435",
        "cursor": {
          "ref": "c121dc59-f2ed-4f4f-a037-ab423d661e27",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "55fdcac3-805c-401f-9840-be2dca2ed538"
        },
        "item": {
          "id": "601a0258-c3bf-4951-bf6a-5208951c1435",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0cd1025e-1955-40d6-90e8-a6739325a9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e99b547-e956-4697-993f-caf7ebf08640",
        "cursor": {
          "ref": "9f085cdc-30c7-4e8d-9e1a-4e6529d01591",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "72b80d1c-ba01-45fb-80ef-b588e9bbd612"
        },
        "item": {
          "id": "1e99b547-e956-4697-993f-caf7ebf08640",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "41a1a46a-a4d9-4ae7-aa3a-877316099555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cd2eb7-0659-411f-8f4d-b5e0d5546ceb",
        "cursor": {
          "ref": "2cf8a656-c66b-47f7-98ae-14186cbd2a5d",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "da74b881-fd0a-43a0-9f24-c8e7ec6016ba"
        },
        "item": {
          "id": "74cd2eb7-0659-411f-8f4d-b5e0d5546ceb",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6ba53b6a-d3fb-45f0-b752-8d55b0c9e003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7940bb9b-dc46-4152-a18e-6f1698a28406",
        "cursor": {
          "ref": "0a4aa2aa-fc5b-49ef-b354-999c618a6dbc",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6539a417-11df-4f48-a10b-c8ea4c13871f"
        },
        "item": {
          "id": "7940bb9b-dc46-4152-a18e-6f1698a28406",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "9023a2e2-3e6b-4c24-b3af-2671866da32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae076df-d08d-4ba0-a60f-e5e16caf13c0",
        "cursor": {
          "ref": "c84db7b9-73c6-4db7-9acd-b4e4738662df",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c5801185-399e-4031-950c-e9f7a769e7e9"
        },
        "item": {
          "id": "8ae076df-d08d-4ba0-a60f-e5e16caf13c0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b742c8b1-5084-4c3f-8e36-8bcadd307cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbb8cf4-e3ba-413a-afe0-24782b9825d0",
        "cursor": {
          "ref": "11cb475a-1895-42b0-ab87-07f7226c76a7",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "50858de8-76da-4bf1-8d80-d4bdb6980aef"
        },
        "item": {
          "id": "8dbb8cf4-e3ba-413a-afe0-24782b9825d0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fa198b52-6971-415c-8016-94909bfe62fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48351386-2d0a-4126-ab37-ac38b0a29151",
        "cursor": {
          "ref": "290b2a8a-f17d-46ba-bdbb-589f0cf38744",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c095eb67-2a30-4808-bc46-f577b612b5b0"
        },
        "item": {
          "id": "48351386-2d0a-4126-ab37-ac38b0a29151",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a8851828-e882-422a-851f-41e9f4a60fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3220ed7-c309-4325-a817-76ffbfe776fa",
        "cursor": {
          "ref": "15733e12-4933-48e4-ab7a-0574741dc8a2",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "70c334e3-f148-434c-b812-83d2fa1d7677"
        },
        "item": {
          "id": "c3220ed7-c309-4325-a817-76ffbfe776fa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "509b4883-a4eb-4a8a-b41b-c11cc50a0ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f468c0fe-a944-40b0-95ce-20b7ee5f36fb",
        "cursor": {
          "ref": "3c075723-535f-40a5-a73c-0a4b6f591f60",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d56c871a-427d-4c9f-a861-ec924eaac94d"
        },
        "item": {
          "id": "f468c0fe-a944-40b0-95ce-20b7ee5f36fb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "023284bf-1f76-426a-981a-7546a78e2726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b662c32-870b-486b-9aa2-ee70c59a7a77",
        "cursor": {
          "ref": "bfa78727-3dae-4220-bf9e-01aff1c07ee9",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "75d093c3-7b49-42fb-999f-a4cf0a4c4981"
        },
        "item": {
          "id": "8b662c32-870b-486b-9aa2-ee70c59a7a77",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fa4bd90d-3426-4ac3-a1bc-40d2885fff49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a49cda-48e1-4a62-8549-5a6827bbd8a2",
        "cursor": {
          "ref": "3a864462-fa16-42de-8082-1fd67d128806",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "634d57b4-bf63-4d2e-883b-9ad8ff97256a"
        },
        "item": {
          "id": "87a49cda-48e1-4a62-8549-5a6827bbd8a2",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c4ace7ae-6e87-4450-9448-4a8c100345c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c9c6c9-4247-4c32-a104-164bb973864e",
        "cursor": {
          "ref": "22e9d0a0-3594-4a67-93c8-d672df6cfef7",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b8bacb84-e394-42a5-8159-b584558c0ad6"
        },
        "item": {
          "id": "90c9c6c9-4247-4c32-a104-164bb973864e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "47d43ca9-1da2-4f9b-a793-b17963a62302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56718350-4c1b-4fc0-8a6d-8249e68c4d6e",
        "cursor": {
          "ref": "4d87a58b-d63f-4baa-9f26-1585c41b3eb9",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c4e42fab-145a-4d71-aef0-54fc120c3b16"
        },
        "item": {
          "id": "56718350-4c1b-4fc0-8a6d-8249e68c4d6e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "045f525c-b27c-4245-8da2-0e1d54334580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b7a25a-8bf3-4b13-aed2-3fbee763c0f5",
        "cursor": {
          "ref": "7e5112e9-4d51-4edb-8a8c-3e9e77bedac8",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "40ed5f44-52cf-44cb-92ec-bd61d4f75fd3"
        },
        "item": {
          "id": "99b7a25a-8bf3-4b13-aed2-3fbee763c0f5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c4c656ac-96aa-4514-baf1-b9db96aeeb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6189a4c3-a268-4cc8-a3b8-c327b7f74183",
        "cursor": {
          "ref": "be90af6d-b1a8-4d2b-acbd-320f0afc9e66",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "65ff7867-2df0-4f14-a001-36278444ae5c"
        },
        "item": {
          "id": "6189a4c3-a268-4cc8-a3b8-c327b7f74183",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "88964113-a677-45b2-88ef-669243c57e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedd1be8-8523-4163-a44e-eeb165665326",
        "cursor": {
          "ref": "b57d3faf-718e-4e27-a969-60946767ea60",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1e8bf3b2-f9cd-4e4c-a8bb-e44f1a82a441"
        },
        "item": {
          "id": "eedd1be8-8523-4163-a44e-eeb165665326",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fd793de5-56f4-4a73-9626-00d1e0373ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3466b0c9-f8ef-4d3d-a215-242acf072b24",
        "cursor": {
          "ref": "122a0d14-0d89-4cae-807b-eea77d412a96",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "62836cc8-bdb7-45ab-bad5-ecc97042beba"
        },
        "item": {
          "id": "3466b0c9-f8ef-4d3d-a215-242acf072b24",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "17d7fc0c-20f3-4f14-a5a5-dd5508bb171f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9e3ac3-c964-4c78-bae1-30a4c20d1569",
        "cursor": {
          "ref": "b849dee5-25c1-4684-9f83-ff1dde253857",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8a05088b-6205-44d9-9951-846079861293"
        },
        "item": {
          "id": "7b9e3ac3-c964-4c78-bae1-30a4c20d1569",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b00b5935-da98-4ee6-9c76-554023e90131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd91b6b-0acd-44de-90b4-24bbc0e13095",
        "cursor": {
          "ref": "8a3db953-def9-461b-8215-5bf1b32a548d",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "aef83ff2-3691-49bf-b92e-df09ba9ab1d1"
        },
        "item": {
          "id": "acd91b6b-0acd-44de-90b4-24bbc0e13095",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8bef519b-b8aa-41b2-b27c-88971a641f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3017ed2f-a92a-4de9-9cdc-120d67a986a6",
        "cursor": {
          "ref": "89110a47-e59b-42a8-a7f6-5247f8a5bb71",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e0ecfeff-6659-49d2-9993-69323066223c"
        },
        "item": {
          "id": "3017ed2f-a92a-4de9-9cdc-120d67a986a6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fde121ef-13b7-4bf7-9071-3bef8212fde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49568c8f-b0e5-4fbb-a8d1-30c4f8d6e53e",
        "cursor": {
          "ref": "447ec8d6-8015-43e5-ac4a-bbfff126f505",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "037848b9-a8e9-48e7-a3c7-fc6215f0a7ec"
        },
        "item": {
          "id": "49568c8f-b0e5-4fbb-a8d1-30c4f8d6e53e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "06e8f8a7-3dce-43ca-89eb-f6c014a6b750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd32d45-a315-47e6-969e-c1b4a24b4393",
        "cursor": {
          "ref": "0a4b6608-1618-49ca-8702-5b51defcd598",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d6dad6d3-9079-421a-a18e-bacf5253881f"
        },
        "item": {
          "id": "ebd32d45-a315-47e6-969e-c1b4a24b4393",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8d1f3c61-b899-4d6f-af80-aeb2f214fab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c171638-0f48-4855-bcb8-0381c82a70ca",
        "cursor": {
          "ref": "649e62c2-e659-46a5-8f64-2743f957e9dd",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eddcc216-ee8d-459a-9737-f6f7da1bcfa0"
        },
        "item": {
          "id": "3c171638-0f48-4855-bcb8-0381c82a70ca",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d5c64cf5-9004-46d6-aca1-e52780c67db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e9ed02-d414-4e24-9344-2de0a72ed0a3",
        "cursor": {
          "ref": "1754f065-baa5-4e27-acb7-cb6d7eb64e2c",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "34b5b361-a5f7-4e77-acad-442c066d003d"
        },
        "item": {
          "id": "c8e9ed02-d414-4e24-9344-2de0a72ed0a3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7efd1823-3fa1-4ec4-a064-3a202ace4572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3207e9b6-31cd-434f-abee-b23567e44e2d",
        "cursor": {
          "ref": "6afae523-6cf3-4515-89bb-088a60a457fb",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e01c6cdd-492c-4122-86bd-1dc0350bc9a9"
        },
        "item": {
          "id": "3207e9b6-31cd-434f-abee-b23567e44e2d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ad7a3d56-7302-4d21-9a5a-dbf71e07f3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7f0574-7cf5-4b40-8c47-f84ed706502e",
        "cursor": {
          "ref": "9d468d22-b7d8-442a-849f-66b35d73e975",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c424bb45-cb53-4718-a36c-42f4914516eb"
        },
        "item": {
          "id": "5e7f0574-7cf5-4b40-8c47-f84ed706502e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9dee7941-e7d9-4d59-b131-7d71f4f573be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b586c676-c236-40d1-943e-747c2bf7d5b8",
        "cursor": {
          "ref": "2872afd3-c9c7-49a8-96ab-1c9196176e28",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2de7a2da-cfd8-4465-b3c3-6633cfe74805"
        },
        "item": {
          "id": "b586c676-c236-40d1-943e-747c2bf7d5b8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "905595b9-2e4a-493a-bc14-cdc2bd3f4240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32816d4e-7ab5-47ea-9fbc-37aa2046fcfb",
        "cursor": {
          "ref": "a2bb7741-8c04-46d1-bec5-c048e03394fe",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "633b9829-c9f4-4308-a7e1-b5deadf2074e"
        },
        "item": {
          "id": "32816d4e-7ab5-47ea-9fbc-37aa2046fcfb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7d101254-3333-4cb7-9a55-a6111d81d00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98270698-ad81-4776-9c94-9f85b4a334d5",
        "cursor": {
          "ref": "ca625710-2939-498b-9e0d-e5176796fd51",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9eb8a69b-a08b-42e5-982b-e6f43c3b5ca8"
        },
        "item": {
          "id": "98270698-ad81-4776-9c94-9f85b4a334d5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c8475ea8-85da-4036-a037-7899269aa7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b05772d-fa0b-4097-b670-013a3312bb06",
        "cursor": {
          "ref": "e36657a9-ed23-45c6-ab38-b47879f34fef",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cef72775-ea5d-4308-b9c1-047a8e4f8b6c"
        },
        "item": {
          "id": "7b05772d-fa0b-4097-b670-013a3312bb06",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a7533269-f66a-4732-ac20-05ce2ef55896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "374f94a1-2a7f-407d-8a99-de0f9151e561",
        "cursor": {
          "ref": "250d85aa-585a-45e6-901d-4dc347097258",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fce5204d-efa0-4746-92fa-7aaefe9df4b8"
        },
        "item": {
          "id": "374f94a1-2a7f-407d-8a99-de0f9151e561",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "945e8bb0-fdf6-4fa1-8dac-c78ec0ea6284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36db7c9-47e2-4e30-9ee1-c312f84c1817",
        "cursor": {
          "ref": "934a4a19-cf96-471e-ab20-292981e598a8",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b2acc2e6-c2a8-4059-b294-1f1e95fc1d35"
        },
        "item": {
          "id": "b36db7c9-47e2-4e30-9ee1-c312f84c1817",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "48cc8111-9f0e-487f-a3df-eb44e07cb534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f626b8c-1289-46de-bcbe-e90457621d25",
        "cursor": {
          "ref": "1fd7e5ce-f301-45af-8680-2aa13926e81a",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8582527c-eaa0-42ef-b190-5a19fc4f7968"
        },
        "item": {
          "id": "2f626b8c-1289-46de-bcbe-e90457621d25",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "42a77390-1e4f-4836-bc40-d49bd748b260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef60e67-6f0d-4616-89c7-45a1a36b37c2",
        "cursor": {
          "ref": "788ae1fb-c5e5-40ff-8bd7-3f6b29be97ea",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2740c8ff-dde5-4fa0-9019-28ac2fb23b66"
        },
        "item": {
          "id": "9ef60e67-6f0d-4616-89c7-45a1a36b37c2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "16412475-ff65-4fb0-ad1f-ccbb3679e756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5985667e-725e-4057-9ca1-b594e1a0acb0",
        "cursor": {
          "ref": "3056c8c5-a755-4882-a7af-c20da744d4ed",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5922e82f-9dfb-430d-8438-f44a8104f8bf"
        },
        "item": {
          "id": "5985667e-725e-4057-9ca1-b594e1a0acb0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "83e5f162-ad6b-4876-a611-eb364fa482c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e129ed6-d8a5-4133-967b-10acbc49d598",
        "cursor": {
          "ref": "bf137a3e-0352-4129-9ad4-6c74869e33e2",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "843dbc9f-71f0-4d91-96fe-d1f1fb6d9304"
        },
        "item": {
          "id": "2e129ed6-d8a5-4133-967b-10acbc49d598",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "010aea29-6e6f-4513-a52c-1ed98ae05ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2beff7-1c6b-40cb-840f-e4dca3fcd11b",
        "cursor": {
          "ref": "c8d5ff70-fc54-47cd-8f1a-eb048525084a",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e71a8739-e345-4bc8-8025-f48c20329c54"
        },
        "item": {
          "id": "8e2beff7-1c6b-40cb-840f-e4dca3fcd11b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "7b26ea6e-998a-4ee8-9dfa-8ee1850e7a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ff4b4b-0be2-41a5-8b37-4d82023b8525",
        "cursor": {
          "ref": "648918d1-9ce7-4b26-99c6-74bf77f6905b",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "06d50661-f25a-44dd-a47f-5ef777aa7418"
        },
        "item": {
          "id": "70ff4b4b-0be2-41a5-8b37-4d82023b8525",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "39bf7dcb-63a4-4494-a26a-902672c767b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad4f03d-8790-4f08-8bec-d58a0a25bf91",
        "cursor": {
          "ref": "2ebfd80d-1715-4059-bf6d-16aa06e8ccee",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5d30d592-034a-4941-a650-5116cb96ce59"
        },
        "item": {
          "id": "1ad4f03d-8790-4f08-8bec-d58a0a25bf91",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "6eb6b78f-d04d-4292-82d9-6663f8b7e510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e58a6cd-cbab-44fe-882c-7f17c732edf1",
        "cursor": {
          "ref": "6e010995-cc21-4d81-8f47-1a92aa5fabdc",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7877f2f0-8a86-4603-9a69-7936a61a83da"
        },
        "item": {
          "id": "8e58a6cd-cbab-44fe-882c-7f17c732edf1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e184516a-b09f-4c81-a343-9fc264534955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5b8f97-c5ac-4406-9604-56f5ea5997b0",
        "cursor": {
          "ref": "1f204695-be95-4b6c-a03a-dc6e918d178f",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "803c89b0-6a33-4a7e-841b-d3b494e3a1fd"
        },
        "item": {
          "id": "aa5b8f97-c5ac-4406-9604-56f5ea5997b0",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "025cc65a-c2b6-4f62-8eec-ceb0800f0c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e011484-b1a5-4b2e-881b-2362390a7e64",
        "cursor": {
          "ref": "7b89820e-928f-4b6c-aed8-a8cd33317dba",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "fd7f7b54-0e05-43f3-82b3-2df2ef45e6ac"
        },
        "item": {
          "id": "9e011484-b1a5-4b2e-881b-2362390a7e64",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4a3be5c4-39ec-45e8-bd7d-48668b68af9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a43992-321d-42d2-b59d-26e73549c26a",
        "cursor": {
          "ref": "49ba2378-5271-4e1d-86af-7a6395955744",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "70a2b0d9-539c-4a32-8828-667edfb6106a"
        },
        "item": {
          "id": "a7a43992-321d-42d2-b59d-26e73549c26a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a2ff13ce-e75f-45eb-b13b-f1874cff3f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe63affb-4c02-4e87-aed8-cc0d8d95b1e1",
        "cursor": {
          "ref": "0e0eaaef-50d9-4656-8ff1-9615215361f2",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "768eac99-8c9c-40ad-9488-ab2721362eeb"
        },
        "item": {
          "id": "fe63affb-4c02-4e87-aed8-cc0d8d95b1e1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2a6b41e8-b794-4781-9b7d-36da2b66f8c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002e3f6a-0347-4220-a2a6-2c23de38833c",
        "cursor": {
          "ref": "5e1b22fd-d789-4f7d-977a-1daadc6fab8b",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "61e85669-cdf4-4b77-a8a8-bc7c79c10d25"
        },
        "item": {
          "id": "002e3f6a-0347-4220-a2a6-2c23de38833c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7b0bdf9d-c63f-4533-9b35-a4116ecad5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38badad-943d-400d-8726-1da1c3bbe815",
        "cursor": {
          "ref": "76b7a6a4-26ec-4384-b75b-6a8d7d856acf",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b1c52020-e9f2-494f-977c-87c873f66191"
        },
        "item": {
          "id": "a38badad-943d-400d-8726-1da1c3bbe815",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6a217d2a-4108-40b4-9e6a-e2094aa6a85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247d9982-b69d-4af9-a912-8aa3b1ec6b79",
        "cursor": {
          "ref": "4181d2a7-1dc2-43c3-8faf-be6c7905a17f",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "255a83fc-4479-46b7-b8f6-8599b3670a2b"
        },
        "item": {
          "id": "247d9982-b69d-4af9-a912-8aa3b1ec6b79",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "880c6d91-868a-45e4-95d1-289d2796bfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ab6c4b-7bae-4c50-869f-c58e172a4d68",
        "cursor": {
          "ref": "2334a204-686d-4bad-9a4d-b9874d485e0a",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a6b58be4-ca41-4326-86e3-a65c1d4fd91b"
        },
        "item": {
          "id": "15ab6c4b-7bae-4c50-869f-c58e172a4d68",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4eb6d0c6-eb40-443e-ba4d-1bf51a82e029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a8cd6c-6a63-49b0-b173-62d6deeb8697",
        "cursor": {
          "ref": "880569b6-87e2-4d04-9684-9d0aa05c114b",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "bd950d98-1f27-4971-8e9a-59f19532c7c4"
        },
        "item": {
          "id": "c9a8cd6c-6a63-49b0-b173-62d6deeb8697",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4abb7899-9729-48c3-842c-09ac894e25f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986e7d29-0f3f-48d5-a729-d164a7b22b6d",
        "cursor": {
          "ref": "9b2a9983-6e98-4905-8f3a-c17b4c5e79ee",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "15742d42-17c0-4d80-87ee-d9a7ee5972f9"
        },
        "item": {
          "id": "986e7d29-0f3f-48d5-a729-d164a7b22b6d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d4739b12-54cd-4665-9833-d889e1654c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e8a1da-f7c7-48cf-8fc8-4eeefcdb15b7",
        "cursor": {
          "ref": "0d435e72-d67b-45e3-acfd-73f483cb66c8",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "17002216-939d-4425-b44f-8b08c37fc914"
        },
        "item": {
          "id": "67e8a1da-f7c7-48cf-8fc8-4eeefcdb15b7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7a43508c-3193-474a-8b54-a9756267983f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ea4526-4b66-46ce-9dbe-76f085eacc7d",
        "cursor": {
          "ref": "832685c0-986f-4dc7-afe0-a121967a4b51",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6f5c5a04-08c5-4c06-ac48-38247aafcbd8"
        },
        "item": {
          "id": "f2ea4526-4b66-46ce-9dbe-76f085eacc7d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "71801b20-9220-49ad-98a8-4d4a3a7e1e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26461705-2d01-4cc6-bf42-14d417c1c495",
        "cursor": {
          "ref": "c0d1f709-37a4-4b8c-b7e3-ae1a59f320b9",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f6c59b5e-622d-4ba5-8e6c-082e67a686b5"
        },
        "item": {
          "id": "26461705-2d01-4cc6-bf42-14d417c1c495",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2fa4129f-3eea-4df3-a70d-cb6ce211ea47",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d0c846-a81d-4149-9709-8d7f9d2c5b54",
        "cursor": {
          "ref": "a4b7d6b3-a0f8-42dd-9080-f106b327e3df",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "75a2e516-8ab7-4c4d-ab1c-492901301ad6"
        },
        "item": {
          "id": "74d0c846-a81d-4149-9709-8d7f9d2c5b54",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4a6c0f6e-7dbb-41c0-9866-1cbff56993ea",
          "status": "OK",
          "code": 200,
          "responseTime": 607,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9a9e00-298a-491a-9106-5aeb52bf82ec",
        "cursor": {
          "ref": "aa45770b-04e2-4afc-8294-f69c8de0d653",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "cd54fa34-6ca7-452b-8087-fe12f986b82d"
        },
        "item": {
          "id": "3b9a9e00-298a-491a-9106-5aeb52bf82ec",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e188a7c9-30f8-479c-af27-af489fee94a4",
          "status": "OK",
          "code": 200,
          "responseTime": 1737,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddae32fa-80d2-40dd-ba50-72f356101e2d",
        "cursor": {
          "ref": "9713c7ec-8a8d-4699-ab60-7a7ac6b2633c",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a00cf7fb-b04f-44af-9d43-314c2fb4b8b3"
        },
        "item": {
          "id": "ddae32fa-80d2-40dd-ba50-72f356101e2d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5767a2e0-b4aa-463c-803b-c5ca3260920a",
          "status": "OK",
          "code": 200,
          "responseTime": 1686,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6170934a-62bd-49f2-94f5-9b324998b16c",
        "cursor": {
          "ref": "500b17ca-cf52-4409-94dc-5583446c902f",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "faf4e309-40d0-472c-92bc-9c7054e7dcfc"
        },
        "item": {
          "id": "6170934a-62bd-49f2-94f5-9b324998b16c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "124b7373-3fff-497a-b07a-d53aabd24118",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6170934a-62bd-49f2-94f5-9b324998b16c",
        "cursor": {
          "ref": "500b17ca-cf52-4409-94dc-5583446c902f",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "faf4e309-40d0-472c-92bc-9c7054e7dcfc"
        },
        "item": {
          "id": "6170934a-62bd-49f2-94f5-9b324998b16c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "124b7373-3fff-497a-b07a-d53aabd24118",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d7229e-00d6-4541-aeda-a3395d6bb319",
        "cursor": {
          "ref": "e6c0f9d9-2d86-4116-a15e-4e41dca302c3",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "00945088-d908-4f30-bc75-7fc322b9cc79"
        },
        "item": {
          "id": "24d7229e-00d6-4541-aeda-a3395d6bb319",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "866ddaa0-d403-47bc-a1e2-e45972112ee4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c7c795-3dba-4956-aa45-9c39ebfb8a97",
        "cursor": {
          "ref": "e52f2276-330e-43a9-af4f-c79e795935d0",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "908f8580-857d-4f40-819d-ae7175b084e6"
        },
        "item": {
          "id": "50c7c795-3dba-4956-aa45-9c39ebfb8a97",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b615d798-271e-4490-916f-be14954dda48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}