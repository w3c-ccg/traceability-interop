{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "92565a01-c781-4a99-acd3-7371645d9384",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c1a63515-e8f2-4fc6-bbbf-3f7f14c6ee56",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "33439eab-5301-4e08-8683-32b5f2f38bc6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4d08389f-3262-44f8-a022-eb30a27a6b0d"
                }
              }
            ]
          },
          {
            "id": "e1e93f2b-2c9a-40f0-890b-e4ec39e0afa8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08024e5b-3c66-4a8f-8b79-7bd1fcc4c59b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a174de14-4118-4219-8281-d7be6a49248e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5dde03df-e88a-4216-a507-2c8c9e55ff24",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3fef0a52-4243-4e7b-824d-07c04c774169",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c15835c6-c1e1-4d99-8322-13f136d0108d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bfbff4f-76fe-4d5f-9625-03ef59330dc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "143fbc75-b5cb-4bda-96cf-5bbb7b8b3a12"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2137c46b-0ff5-4280-850f-72eb1f8965f2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7ebccf3-47ae-40d1-94a8-f99393abb0ec"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a186617-a33a-4536-aef1-1f388b53182f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ede40723-7abe-4c21-bd22-9d6dfe582b1f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e71a0aff-53b1-4d43-8bd2-71ec25568073",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b3b82001-ffc3-497e-8da2-576c1952a6ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9251dae6-6f8e-4db1-9760-7a68ac6098a6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "791de99f-eecb-4a03-9b9c-9d0498b25fc5"
            }
          }
        ]
      },
      {
        "id": "43aff827-c7f3-4052-80a0-3cabda498c1b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6293c88f-b344-4769-8ec0-d80995ec28d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "87a35234-0760-4c6d-af4d-87d3363da7e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b542c753-cf8c-414a-bbc8-2e404b262b73",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64a4b1d-9238-4501-9da4-e818982953cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31c9cfe4-34b0-49f2-a3df-e4675ee9d74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0eace9-71fb-4064-94dc-4e60307d8b37",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0743ef4d-253d-40ee-b12d-5f39b6208d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4080afe-4784-4fbe-80e5-73778bfbc24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3caf560e-b1ca-4e3c-8c9b-0377b0171a21",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3adaf8-3b6e-4a06-bbbd-c03b3c1fa2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5dceb77-bafa-4dfb-b0bf-650593cfd7fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87bfd5dc-1ce4-4bc2-936e-80f25a3e51be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87a1f879-16ff-47fc-aa13-1fc46e20c1c2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7740df6e-8d65-40c1-89bd-1093207ea55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23f07ca7-0618-4f3b-8eb6-b663595fe05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5284c6ab-18bb-4146-ae50-a874cd29fb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbb409e-c20b-4cfd-90c0-7bab29675546"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4c34c84b-7f75-456d-85ec-78974d2664d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1815f3fe-0a62-4602-84d2-a485612aa709",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8337e222-8f84-484a-9fcb-a1ce48ca5534",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7f36f9f2-32fe-464f-ba22-b72af426a948"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01544fd2-9631-47aa-aad4-20dbd476a6c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7d1f7923-572c-4775-929f-f3ca3ca2d17e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f5392bc-ae16-43fd-9753-536c3f50730c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa1f9b3b-5e0c-4d14-89de-45f66c473ddc"
            }
          }
        ]
      },
      {
        "id": "9ad8eb09-9088-4e0e-9c9a-791869518819",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "40f566e7-30e5-4916-9b86-312b8535d946",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63032cae-5aa1-49ed-937e-288fae1aee58",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b15525b5-d53f-4ee8-896d-ea01459be5b2",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c7d067-f459-4884-823b-fe8dcc99f221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c464aca9-713d-4c7f-8877-a8a75be2e89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8eba9e6-19dc-40e2-8b93-bc8f273f8200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f58bc48-a122-4f7f-8c7c-fa46c65b0b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097f3839-da86-4bbf-b243-4ea6ec955d03",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533be277-6877-4ba1-9a71-b00d8d0ec6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b25115-1d4e-47ab-af4f-f8e8a54b2534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9366e1d5-5c47-40c1-9fcb-53fe8877a61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87030c32-de08-4929-bf68-ba57d583c3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6713f92-3fc0-4721-bf98-9f7d772aad7f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f0baec-ec41-4053-af80-ab57e0a0ffc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd41f22-e386-46ad-87e5-f28998c596e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6963f2d2-96f2-4db7-82a4-57b1f7a96b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "662d1974-6adb-47b8-9fb4-7d3dc66c4eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f52a4ec-20fa-4338-b013-2a9bf54bffce",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "773f5303-1502-4f97-87c5-f5ce73ce4716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc30d0e-9aec-441f-a19d-5eca3f733843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af86eee4-d7ce-405f-b343-7c129bdcea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5abdc074-1909-4941-afc8-fc78f1388ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbca0c7-2a34-4bac-a6a7-6ce438b621ee",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30db2dfd-0ea8-49c0-bb6c-848c95513db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6111b0c9-f500-489b-8c6a-5885eafe9928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aece438b-d52b-46e1-bf85-d8ff3d181faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8141e78-ab89-4c2e-89f6-96611f3c499d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b9178c-d025-43f5-9473-f2dab56494f0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc8e9df-e835-4998-a917-45ed56566c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40571e62-352c-4e07-bf9c-9a8ae0d2b8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb885f2-1f5b-4db9-8d6d-b4a21a8ead9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc9c0703-d81b-443c-bb33-79ceebdd4e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b44a90e-7dba-404d-8efa-052f79f35f73",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cc1077-c87f-4ce7-8b86-cf42b139ba69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf254b3a-601d-424f-970b-964687c54397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9481e07b-a7b7-4aa6-a990-a46036efc798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bcdce53-8632-456a-b18d-82a6b853cab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a81bc3-3e25-4821-8be2-5b2835e15cd2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f8a150-2d39-4c7d-bb6c-2a9ff4782472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a44d883b-c542-489b-a1d7-55167c84402e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3405cb81-9eba-4b83-93f2-d884bca436c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f28f4d6-97db-44cd-9e1c-1bb5983d40f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089aab21-74c3-4708-be2d-b51dd456c88c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2102427-36ec-4064-b9ba-98d25df6bc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6faf844-4314-4f8a-8622-b873f9adb181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3110d24e-c266-4802-97d5-84105755033c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4995d4dc-7cbb-4bed-8845-ad41e5d78619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcb025c-42f9-4a78-8e40-96bd9a0e4397",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd9028f-21e6-48bc-8703-69bbe397f13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca3f070-edce-460e-abb6-470980481af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8155811-b1fb-4775-bda6-ce2415e074c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4466e1d2-35ba-4ce8-8590-355e82fc0863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be3fdee-abb1-4695-ad4d-127d7a618639",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b768848d-62b9-4337-835b-d7ec4e46a4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36179637-0612-4f1a-a59d-faa29d19c02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27f5fd9-b37b-4192-82d6-00ff9e5533e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59f67790-e0c1-483e-af0d-24955fa88307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903d051e-3984-4980-8c73-dea3ccf4c517",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38341da4-3a84-4b95-8ca6-5c9fa2e78dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c7e126-57b4-49f3-8066-f990f59abcd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d32d91-16d7-4003-b54e-5be8f50583ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a2b13f1-9240-435c-a2be-f1c820463e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1d4c75-827c-4cea-b3b5-107117ee39e5",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d553bce9-bc41-45db-a0c4-dda6f7bc3c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c4c922-1e8b-4c89-a5da-bcbf67420eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4be2554-226f-4cb6-9479-19e866caf5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e7a12e6-2613-4f4d-a7f5-afee3e435ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187c926b-3b86-4bdf-9e98-4601e06ddb15",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ef929e-8b3f-439c-8b81-547b599d6976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2e7c0f-3abd-47ac-a9d0-919627fd7711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4c1d25-6d5c-4620-992b-0fcd65d6376c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a00c2e0-261c-4781-a796-e29fff651125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c920f090-e256-487c-b67d-ed29a121d26d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7407a964-0cbb-4146-8179-f876a7b893b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd48a53-0ff1-4410-92d8-dfcbd2b31e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2fc2e8-f7b1-4044-8b56-a5085316d95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c52ad417-ca42-4b6e-b476-dac9f79e7894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c889c950-394a-43ee-b4a0-d6ed5d29ea37",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4107290c-d569-4ba4-b9af-3c8b91ab16ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2127bd-b9f1-4078-92b0-eb2368e9267e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5839da-e718-4c6c-aab1-b301c8a2a7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f5e8edf-0a23-470c-abd2-1a25bd3c1f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5d17ae-ae51-4d0e-baa7-a4b70b9a0d3b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29c3b22-de7b-48d5-975b-6fad8dc9d714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9393d0e2-4ef3-49b9-8cac-50064ccdff9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ccecdb1-c599-48d1-a3c0-4b9147d0243b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b8f7962-5296-4e29-a14c-4cd9aedbe484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e128b49-b4f6-4cf0-8a05-30ff65ab2f73",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05bdf9a-d3ef-4891-a6a2-e5791779633b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf252060-f9ab-4db7-95f5-e67bd2170703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b761cf46-f673-4c49-aecb-f91ed9faa9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b32eddf5-a07f-4d2e-8041-62f9185963f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d967aeae-d92e-4832-9e69-79ad13046097",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de34cdc8-80c0-40b7-a28b-5885b239ee1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a74806-7500-47dd-bf46-ef257b07d62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14192752-286f-40f3-b705-744ca1c919c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "27d799da-26b1-4d06-8b9a-83eab4d87eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5853152f-6887-4400-986d-a508db1c7b42",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea51e4c8-4db6-4ba5-924e-126f1fd6ed13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfed7b1-c5b6-4296-80ba-387e7ae5ea9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0214b3f7-e0a2-4a03-b444-0bd938194b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb298ec7-a519-4dca-a600-b2f74128266a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4046ce7-c816-4cf0-8c53-d680d0d4e53b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a465e2ac-85df-40a8-ac98-035f2304164d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8bece6-d5ac-474b-82d0-e352f328b381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5982677-5af6-4602-81be-9cbcbe7f5e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ddb47fd-63e7-43c4-a1c1-4908e88356b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c186742-35f7-44ea-8312-c70c11ce54ef",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ae8c50-31f1-4342-98b4-6032d43f0fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00f807f9-d865-4811-98f0-6a2ba0c5c73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb6e1fc-3566-49ae-88cf-635ff85f08a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d110dac-cbc7-41d2-ab58-cdaaaa279efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b671db-c54b-4960-8a1b-4da8c52e1d4c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421c4b04-b6fd-4eec-9678-dd7988f1c689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53a7700-d528-41ae-9773-c7c0d3255309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951a4747-58bc-4285-891e-c0d3af1ccf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6fea1be-aae2-4545-971f-33767e293810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd807ab-3c24-4417-938b-cd647bd49e6b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64f30e6-1f6f-45fd-a156-5cd264ea39a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044d902f-fd25-472a-88ff-7978a97af856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c9cab2-a3f4-4dba-b3ab-afe9a9737934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "804dab79-3c32-4ce1-9e2a-f80e8c0ac504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60631f8-bc85-4e3d-86e9-4c74da46e442",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23990519-016a-4be3-9152-ad333c3aeca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ae9b46-992e-4e9c-a8bc-307556fb6839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb0719e-bd70-4258-8e02-7130b75c489d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d27603d-1024-447e-bd7e-9797ed305a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d74419-7c1c-40dc-960e-9bd3cc73ff44",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a318429-0ce2-4e29-b9ae-e78857929ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0105e558-74e3-4f0b-abfa-b44578266dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b3263e7-75a6-4899-8214-e3ec910bb451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5567e0df-7406-46eb-8d85-8f45bfc76d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e90b23f-cecb-4e58-be89-a018aa7d8277",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65da6df8-c107-4d89-91f7-4430df850cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5738f989-258e-4d99-8f67-0dcba76b64bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a6eaaf-32ee-4289-9d03-a0bf3468a399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a60ad5d-c021-4cc4-97c5-9ecc346deb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2fa9ef-39f1-436a-b1e2-65e2dac7105e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4cd1f0-6145-42bd-b1f4-0f0465d4e266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4a1ef6-d76e-4037-bd15-16eaed0fb623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93735b61-b78f-4aad-9503-202dac7314e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c056c0e-5f18-4383-b81f-79387e267e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fffc2d1-bfe4-4957-b4d4-0cab0ff0a899",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d0a341-bd54-4b79-85dc-85bfb7ecdf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a278b86-6fed-43f7-904d-9651a3453001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fdacee5-a9d7-446e-9691-4f7ebbe95e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dba76e3-4f61-4b34-9de9-1aa7adbefcb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc83ab37-4f12-4213-97c2-8e2066b54474",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de7f3ea-1b1f-4883-b177-60e261c1e9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9afb33-229a-408f-9234-a7863610ef86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58756ee-6579-4899-a981-bfd86297d2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e915e4a2-3fef-4476-bf23-6543f0c134a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68e7b68-3e02-4601-80cd-c1b7e5c0a922",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c590504-6889-4df0-8934-0f5385d18648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d16c21-d8f5-47f5-a75f-e2795f9c1753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f41d485-ab4d-408c-8f89-b78f37618f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a87fb260-4d66-4d0a-91a2-e054f074bb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf44032-72e5-4586-8ad8-6e65d1be88d5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c062c7b-9bad-4418-a4d9-c2c6b2365042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a6cd407-845c-4189-9a54-34082ee07099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4c53e4-b495-4cfe-9a19-e9176a282dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25c4ad3c-b426-4d85-a55c-e40ee23665cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048dd33d-6a0f-4304-851c-7a2bd6a6dad3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bed90d1-56ee-47a6-b3dd-9750cc0a64d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d1e559-4961-4d37-a048-cdaf0a6f0636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dcad1e-d65f-491f-ab2c-0fbd34d55fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d252b7b4-bc75-40ae-92a1-b51775c190eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c098ab-f305-441e-80b5-ac1009306d04",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e60f9d-0603-4364-963e-c0cf46245e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "905fe6ee-f823-4bf6-afec-2391189ec602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436ef890-dfdd-4395-b17b-b075bd94a994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "947fded5-2fdf-4bad-8c97-c8dc8054a2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614580a0-2689-4a3f-9801-09e85051cf0d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f631864-bf41-4d5f-aacd-f653c5faaeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac83362-fed1-4845-83d5-63ea893f46ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490877d9-203c-4c7d-b574-a3348a15feec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9a244801-4515-471c-85fc-0b7d995b7ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4b5508-c2b2-4813-a4d7-2d9dc87fb3e8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42cbc15-fd2d-4487-b02f-ccb6ec0425e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a57e6f06-ae1b-46b2-9b3b-a28c092195e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c407278-6e9a-42ba-8be9-d48166583416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0d9860-10f4-40ba-8120-9c74450636f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72da3d93-76ca-4026-a2bf-0225686f0d35",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ed6d70-77a2-4d06-a530-ff0de86febc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6af4778-836f-4a93-8b3b-dc124ef3b466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0bbffe-1e6a-41c3-9659-104b89a3304f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "228af008-43cb-47e7-b329-c256173fe758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37659d0-8b46-497a-a130-0c3f4de8d325",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d040a2ca-e0b7-4dc3-913b-9b306b011d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1969b163-2425-46b2-9259-ec06fc05012c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373015ea-5377-48db-8493-822b52842dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "08f58950-68d5-4856-ac93-a300e51bb44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2321c6ec-a93f-4536-b8d4-8691540f6533",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71bb1cc-353d-4792-85cc-e38b71e4cb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec376a5-7b94-46b7-9a1b-a5194b6e5333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602175b3-67e3-4d50-9b91-ed6cad04a933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "89573623-6975-4407-b358-ce039543f27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b924921-5523-4d88-8e68-1d66f4c96a49",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49902c0-d5f9-4bf5-9b5e-5be87713b86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e138357d-f27c-479c-a9fa-1afb534116dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411cf222-8069-4a72-a50f-ab7a53a3e825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "38f78261-5d08-4c23-9b71-25d954971e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6d034b-0611-4fe5-8a09-48252ac4fc2e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711c8c2c-c73d-4c4d-8231-7930d11e66d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26407838-3018-41f3-a2e3-9908f8b8f721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33471cef-46a5-4699-a613-e4953052c45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc84b1c3-0b58-462a-87b5-f3d0883eb471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4720bb3-06bf-4423-9bb0-8f455eba1265",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4051a681-8476-4398-801c-43cc4676c525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca0031c-ec69-4a4a-b213-cc63a0a8a712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e328d37-ca22-4c81-b7a9-ba0957d30447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "43e4163e-c812-475b-b762-19cee5b4e1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aea512b-ca31-466c-a37b-4481906f5207",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9288a3-998d-49b8-861f-272fe323e9e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26721ac9-e1fc-4f46-ba56-41b9602960f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d9f9c6-f8e1-4e73-b934-8c51e54894a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4456ca01-5596-432b-a284-ede21859cb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6691bb41-e1f5-4469-9c16-ac3325e8964b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa17c8e-5cbf-49f3-b8ae-e3be8712fd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fae5b75b-48fd-4d95-83d1-19e0f54d121e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f3b661-4098-498c-8a15-19ba1eafc150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "570eb83e-4a97-422a-8c2a-864a3a47c401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b675d2b-5fb1-4a6b-bf0d-8ed3cbf6e6d3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef26c0c-7704-41a4-82e0-385fd32e4c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0314505-f407-49b5-b10f-1bcd1abf8e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fd1b41-cb53-4f0b-ace0-69378c7cbb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b63ecf-fd99-4508-a38d-8cf7456d70a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843124fd-267c-4e44-b306-bbfa582b620e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f80a069-b84a-453b-accd-7eb41ee7cf47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9249c4-fe5f-4362-812d-4f3928354c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127154ad-17c0-4f9e-bb24-29db899500e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6984e905-cbda-41f7-8c3f-f42198cb3840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "306b6834-f6d7-4114-bb30-ff435053e112",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976c4b83-e274-4697-960a-36836cb80f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24239798-2ed8-4c74-b90d-96d1054a7052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b0754e-77c7-4bec-bcd0-9f944380c889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f371c01d-1b30-4281-82e8-2530bc4044ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc38df7-a93b-472c-9067-93f946c07a8b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fa13b4-8668-4d24-81dd-1ad5ce25f45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975ffb2e-ac27-44f8-8fca-0d76b604a1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e057212-5b6b-4ee1-ab1c-82df0edc46af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc6e797-f01c-4a79-9c95-ddaf7970ccc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2775fc5e-6eff-4164-8ed2-15c4e0e80147",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d79acc-ca6a-4cb4-a529-9e6f0fb717df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ae94c7-59ee-40c0-a221-724fd4a44432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb18f19c-a785-46b0-8bf7-82f50e910744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "882df589-b5eb-45ea-b4f6-798c1d2e89c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2081dcd1-5b82-4bc5-8299-95c8ea78e3d9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45351f5-be14-46c1-b5b8-72335792c9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e86a41-9762-47b8-a964-8892519e30bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a150172-523e-4700-807c-4db16cdd7304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6ee258-848c-463c-a281-7ad3acc65dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aee600f-155c-4deb-b736-961bc5403d3b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6d81c4-bace-49ba-9756-fdeae80635f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e774e90-f9a7-4951-b0e0-20a2dcbddd59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c371aad2-dd29-4861-abc5-02b559c687eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd26b2ce-b749-4dda-bc0c-63eed9a98427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e012b1b-a481-46e0-997a-c961d01a27c2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a296e5c3-accb-4f42-aec3-57ae320dffe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09304d90-d7b3-43af-ba5c-2bd22a7ca0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43226c1e-43ad-4a4e-8878-72e02e45290e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "169156bd-71e4-467e-8410-487680cf1112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd3d2f1-44a9-4737-9d2a-a6a5ed474dc3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87870086-f116-4735-8170-8daf8353f0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "958ffdd8-98fc-487f-86b1-31333e83d1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd76e28a-afcf-4594-a626-2f81105e8254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c872f2-3694-419d-b47d-1c7bc3b939d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87f135b-055a-44ce-b568-9ceb8357ef7f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1272b921-cb98-41ae-8da9-41a905e7fbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4bd0c15-1c71-4fe7-ad7a-f7c227acde9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e622a49-a91e-42ff-828e-922faff60237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f302ea7-d63e-4fce-b99b-deca39c9eb2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be07f99-ce9a-4973-88e7-d3d17c7092b1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fa4b51-c166-4c20-b337-549fe8c40fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c6b787-b7e0-42df-bc85-939d419c37c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750742dd-876c-458b-ada6-5956e72364d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa38c1a4-d08c-43cf-9f3f-8d0f23892613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c28297-f3bb-45ad-8bf4-6cecdd0432eb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369b9156-c957-4fa7-a27a-b78594826c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc055aa6-e62f-4670-a4da-8fcc8342f81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8876ccb-6a3b-4851-bbb1-07dfa881e3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bde2a60f-9fb9-48ab-b29a-c4a55ec3fdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c594107-9ce2-4857-993b-654ad01ccbc1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed7b47a-6b10-4c70-a7f8-b19d011cc225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0690e79e-f0d8-49a6-ad90-6472fc438ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5995bf7d-6ac9-41aa-948c-1592340258fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "708286bf-d9ec-4f9c-957b-46e41310323a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae89b269-7d86-42a8-9def-0fa464542318",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528ed704-354d-4c1a-8c3d-d15f84462507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ef7d2e-540d-4b66-8261-fc5808d280ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e3663a-2c8e-4062-b06c-c36969ea4280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d6421b-9483-433f-8247-a7c39caff04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820e220f-669c-4b88-a5f0-ba301231da26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1627664-6608-4bd6-96eb-4543630e67c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db1126d-4226-4015-ac70-eade045f53fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd6525f-f072-4cb9-bd02-34785224cafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9627f3-1543-491f-9f89-fe6bca0c2039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917c6ca8-dcb7-4e77-965e-7e965915404a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf7d589-84c0-4c48-810c-5dea604761dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b105563-6ab2-4192-b616-ddc4835a4dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e29c62-0709-4329-ae54-9e286ea91574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eca0d5c1-281a-46df-87c3-20e8b000788a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151048da-11f2-46a4-af8e-07e1ad0f2862",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd20a33b-3134-468b-a867-daccec332a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf38f2b-4d5e-4127-8459-1d5ad26a3440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2118dfea-ea27-46a2-91cf-2ad91058ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "684651ce-51f1-49bb-b5bb-01d1339ed874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d433672-63eb-4d85-882b-895e87368090",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74b9684-b811-4508-84ef-fcdd3062a0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb1dd82-59b4-4950-9288-c000211a819e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13d7bc9-5f2c-4c61-a3aa-552e1f3cea24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "63a7119b-4467-448b-a1cc-4be518085b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92957384-2cd4-43bd-8f98-9ff865255588",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a78a83-0531-44e2-9735-ffd82144392a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fefafdc-7c76-4943-8c76-d63e631c77f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9b0caa-6852-436a-b22b-3ecd1ad42891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "88fa2ba0-3338-4a0c-980d-b6a6e8c53cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff20100-419e-4710-98d0-fe51a3414675",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ef8aca-e60b-41b2-98a2-24223f53087d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdae7890-71a2-4013-b8d4-5aa17af5d185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2fa8fb-167f-41b0-a743-c86cf2774767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29672b30-376e-43da-929a-9aa6bbf5f033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495a2c26-d489-4f4f-8dff-c65367104710",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46ef373-a03f-4d4b-99bf-cc52f81680c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c90502-1479-48d5-a7ca-ee536e5cb581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c73196e-29d6-41b0-ab65-86df6f1baa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc80c52-c73a-4853-b2b7-da19f9671245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d76d62-41d1-44c1-8c48-c319c8e0156e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed55e6bd-e83b-4fa5-8fb4-14b7c63d933d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fe2cb7-a859-40ed-8a8d-2b63d130223b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdd30256-36f1-4a96-a7f5-941537f018b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f156d70c-1e3c-4eae-a2c5-6799d63410da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7a1865-1d0f-4ae6-ba86-011fd24c00cf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85db52b2-3b44-4f3d-8a22-d8a357050bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e71dce-e98e-4b31-875e-cead44cb8b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ee10a1-b99d-478b-a269-2ea3ea465055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e557c9b1-a081-46a1-b9fd-8be0b7cd2ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511e28cf-828b-4aeb-bca1-d608d14baa93",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe2a7cd-5ba5-418a-942f-c1c018b15035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a189c1d-1ae9-4d74-b21f-e2e733153bee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a48c450-d761-40aa-a982-f05850b20fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1126fd71-6186-45f1-b87e-32613160d7c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c674284e-7555-4670-8e53-96ba13a8d724",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa78169-5fe6-464c-85c5-2886698217b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a449d6b-6a63-436c-8fa4-98987e6cab35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3218571-daab-4ab6-be09-c29c348ea050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea435ae-2adc-434c-99d7-8e58e39239e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16f16a0-1a7a-4ce4-8564-7a8d41194db6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b047c25-831b-4b2c-8f6c-d650736f7291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fede91e1-6b35-4b93-b31b-7eead83f3696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cdcbed-6ffc-474f-a16a-e2c42b2577e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9188f1-13db-46d5-9ae9-ee3223fd4158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260b386a-a6c7-445b-8a60-028f7723bc13",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e192909e-03e1-40ae-b606-df1bea950793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0f5edc-6dda-468d-b23f-42c1beb94959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37020c09-ea3c-4fc1-9ff2-ad039a7df33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30988e31-da53-4ebc-b2b9-46d87de2fce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d65d54-0d7e-4583-bfc7-a18e1432b461",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88f11f5-688d-4f36-a469-18f2873091c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a74eb8-72e4-4b89-955b-1c68eeade0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abceedc3-dddc-4b35-b157-1241b778ca98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a54009b-9743-4e59-a0e5-619fc74d4845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e84318-e75c-446f-8a85-4597d5ff1d3a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc0fdb2-6818-44f6-933f-f56aaf817ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ff8444-d801-4f8b-94f6-27c6e9510ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f91327-ba8a-437f-ae9b-d2467feb456f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83c3afc7-1458-493d-8f01-a961f3e6c9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f88171-0aa1-43ea-8e13-c980dde79f9c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a92c94-9c0a-4fa9-9864-e8be500f2f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9daef3d8-4051-49f4-b2b5-9638cd536bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5fc283-c389-4afa-bea3-d81421d02560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e52c36c1-8908-407f-8b86-f660afc7f7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac5b9dc-c23b-4b58-9a8c-68e1c11f471c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31babc85-176a-40c5-8f34-2f0a729ff244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a543f2da-c488-46a0-92c7-dd4360d70590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73f5b162-de4a-4263-a755-a3e51e3257df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae766cac-1405-430d-93c4-dff2ab97789b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c2a4f6-86ad-4cb8-9626-8d8efcefa1c1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b795b6a8-35ca-492b-aa8b-1062e16444fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24aacb1-c986-406a-9e97-fd290a8bac5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6d64b0-446d-4109-a9bc-045e916211a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b105feb-f5c3-4804-ba18-1291ae59706f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739a8c82-9f9c-4429-8449-3f26acc8560b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7650f44f-c8bf-4e59-8bb6-85fe8b156870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7682d68-b2e7-45ca-a746-92c519a074fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5f6b0f-b69e-4a7a-93c4-6ca4ca1d8695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c626a1a-6c1e-4ff7-936b-aa088bb60d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d198d7-e122-4611-88e3-be999459d623",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a8cdc0-f045-485c-8256-b7f60b1f14c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16dc6349-cba0-4472-b17d-8e40657e764b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae2192c-0449-4edb-ad6b-4dc483c69a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95a2bd38-76ce-4327-934a-fa3da1720a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df941c0-6acc-4049-8e38-f57888f6a79f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c477dcf0-0550-4932-8d26-fe2aba4da56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c386b437-f559-40bf-8a48-8abbd5943aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee57c92-123d-483b-bd83-91027282fe44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cdff7d07-8f13-4f00-b312-b66550d625e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e39664-d695-4fb4-a349-178b758e58e8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd5d9d7-4e2b-4440-b1e7-cab33f42cc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298dd0a6-4e9a-4800-900b-d307285907c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c7aa38-ed8b-42fe-b179-4fec6e5bb86e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb098b74-209e-4062-a550-9cab2b8e26a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a846f32b-2254-43b0-95da-051ccdcc4d34",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9175a7e8-98f0-4f4f-9df0-937b12d5127f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcee3169-aa80-40d9-a7a9-c127c1c70954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf9dbe5-787e-484e-b255-d0e95e22a2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "58de84d4-2bc9-4ddc-8d19-2925ab664180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0d2fcd-9385-45b6-bbae-cda52038bbef",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def9210a-62f6-4bea-ae0d-06968f6495b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fed414d-ee52-4d4b-9b74-7c76f65ab99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c29d1de-87a1-4104-93b3-f3e6ccf7e91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bee9c5a-5270-443e-bf89-f3aca3dba940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e54f26-9b5c-43c2-930b-f537c6fdcf08",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c652b24c-bedd-44bd-ad98-f7b38a70e452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685c9272-1346-4ea3-8c1d-1a726df31738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e554cf-6e52-455a-8ac3-02475a966742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e521812c-9d5e-47f3-a42f-b3f0445c92e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814b4336-354f-4f8c-a34c-3e6af0527c5d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f32ed5c-1e7f-492e-8f70-f0c36d54594e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce9a9bb-cddb-40b5-a407-0b8bbe7fdcc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f069046-b913-4fa6-977e-35362ba912b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aadad530-5d5d-436d-b762-e48fb5162139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a122d589-4eb5-4d9a-b35b-2cb5538e2647",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf31460e-c097-44e6-80f3-079844eb56b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195e7323-5786-4ede-9508-7a7db0bccbbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbb166b-dc46-445d-ad64-7138c9f5faeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87ad8c72-6235-430f-aaac-6a0c95addd0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b21e6ca-ed10-44e4-9fb5-434334cdb3e6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9550c229-05fc-4f26-b263-78ad265b180e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f58670-6206-4cae-98e0-40e28433e98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85026268-f016-49db-9dfa-0aeba91a89f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "773f131e-1169-48fd-a068-bae054aaa716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fb1c40-370d-4720-81fd-5d2c55f8fded",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9992c83f-09dc-4a86-a7ad-2e39f2e1ff52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59209a7-56aa-432b-acbd-47e9405cdcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4b550f-10ee-41f1-afa2-c05790090395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "67a64537-0d8c-4c7b-be6b-72b15ad191e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8dee05-35fd-400e-a542-16d4f588a1a3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c44fa8b-2723-4433-8b1a-46d884c856d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcdf54f-6f46-4b83-b38f-6abb82e92f8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb4bac5-01dd-41d9-85ed-44c83f17941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67275751-c91a-4a56-be6e-dfa44bff8015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a8a388-05b9-4f9a-8527-9ebf987d93c7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9943fe1-f8b1-4cc8-86f4-08e42c2d3ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf4e42f-a25b-4211-822c-fa3006ef7bb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad442849-4259-487c-b968-fe34fcf799ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a22621d-ba1e-4734-a6f0-90aaf6a21f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03438dbd-47b0-409c-a24d-0b249d279314",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c169e59-070b-4452-9851-ec4f031baff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3137d0-0ac0-478f-af9a-c4f9cbef4bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5a265f-a48b-489a-ad3a-7b30578d97e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "63a34c1d-9ab1-45a0-8968-6976d02b0adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09462b25-ef3c-4121-82c8-28fc6d7df690",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c09b710-a2ec-4aec-8643-a2f1304ea4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f9157b-5e75-4b68-bf67-a42cbdcae24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2d991b-c9f0-4744-8244-5bb49b1fd186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f04014db-5451-4825-b317-2bc17e868438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22833fc6-3edb-4b27-9503-6fc87ac609be",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eccfe4cd-bfda-44fa-ad84-8c6e0c96ba07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e872e57f-d48c-470e-a968-90357b3ab84b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35316769-310f-4840-a6ac-330622e0ecc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9dea5b6-b7a7-4459-b8e1-6aed02336417"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f0c65628-5cc0-4de7-b5e8-4c3f3558ff6a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac3a70e9-6948-4906-a410-24faf42771b5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4409be3d-5321-4a8e-a549-7c4045bc3846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "13dae69b-5ad5-4f76-8e0d-032f1dfef32a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c569b7-2232-43d6-8b24-4ece9bbf259a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10d1a56e-2242-4890-a220-c385f64a5efa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1544e90f-e12b-4305-b406-2e4d5d3448f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0ba806b-a562-4d25-8b7f-59730e7c2c16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5698d216-9f79-4eb6-b9c3-7ca0ad409dd9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3df43ef2-a278-45ca-a355-3e3d8063e57e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89279016-bf9b-479d-9c40-97b0d92777e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09bfa08b-c895-4c28-8844-f21ccf8917b0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a905c6b-fa3e-433c-b647-4c01fb9f849d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f40f1de-8d30-40d5-9e25-aa0ce92639e8"
                }
              }
            ]
          },
          {
            "id": "f8ae290e-3873-4591-b59f-30cbd200b433",
            "name": "Positive Testing",
            "item": [
              {
                "id": "daaee6b6-f692-432f-8c0f-cde1c8953401",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1fbddbe-bb5c-4745-8a45-b5b96d359448",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b333bbfe-52eb-44f4-823e-eb0c278c74ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52690db3-ee11-4c0e-8d04-5fa6e8f7d4c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "975b547f-b7b6-4a75-9579-d59b2afa3823"
                    }
                  }
                ]
              },
              {
                "id": "9e6e8ab5-958b-4ccd-a3de-067dc189ac4f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "195029ce-2e40-4f9e-b187-f2d679fdd39f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f597f4a5-5cfc-4ead-ad43-948b918ebbb1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83af3cda-7c3c-460c-80e2-ca38207f1f9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "61b294a7-1c51-4b6d-b0cc-8b74307ab624"
                    }
                  }
                ]
              },
              {
                "id": "6d06389f-64d7-4ec3-be4c-de7bcb530d80",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "071bf480-b100-4c03-babc-5f497d320204",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c29bbb49-1447-447b-a555-3647ed5ca7b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb85888d-a48a-4644-a21e-f414ee7573e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b2221d56-cf78-4d35-b971-5c2bba69ff32"
                    }
                  }
                ]
              },
              {
                "id": "26375118-00e5-4099-88f7-ae7abc6191ed",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08b8e09a-2bcc-44af-94c8-d2a60eacf1e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "402dd6aa-0f0a-4589-9fd0-6c5e5876da63"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6b3f277-cd93-45ae-9eeb-1ac41a83d587",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d0635fb4-89f7-4fd4-b07a-a86c5d0aed66"
                    }
                  }
                ]
              },
              {
                "id": "76ea91d5-734d-4b99-bf0a-2c265f8af22e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e131d5da-04f3-4fd6-8ff9-328fcacfe58b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c34e421-2d5b-4407-98e7-fe90aa65f6b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b106874-1098-4a7d-99f8-695f3788ee45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "64294865-55dc-4d01-8385-c278261a57a3"
                    }
                  }
                ]
              },
              {
                "id": "947d2258-5e7f-4266-bd95-5fe0390c6228",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4637c4b5-1f24-4a34-989f-1475e324fa45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f7446a9-150a-4726-8cbd-15b9dee13a87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccd22907-c820-400f-b517-3c9b633708dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "339c21a8-4202-4f59-8fa6-3301b8d70c44"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f562f7f1-76c1-4eac-90ea-0c1692ae0114",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5210e6af-d975-4c9c-b893-9c1631af77f9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b4bca70d-baba-45a5-ad55-14a9ce490f75",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b44aa151-2edf-4131-a30c-5bc772460257"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0937aa77-8d3c-4cee-852d-572bfe77f429",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "531a0ae3-0fc7-4545-a312-da7b09bdb5d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb96475c-9c01-4a24-adc7-c469819a2f55",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fecf39ae-3b58-43d0-a669-5394a92749cb"
            }
          }
        ]
      },
      {
        "id": "bc9501b1-af67-41fd-99de-b28c5236ecb8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a0841506-4734-43be-a7f1-de64b8ab2315",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21193b47-7db9-4c17-a517-26e0928307d4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6d95e5a9-362b-4e76-a3d2-9b313c9927a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f1fa9c-230f-4028-83d9-e51b6cf69f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9740718-630f-400a-9909-8b9d568ff61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a43cca0-1279-4d25-ba9a-8cfdf55ac7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d53cbc-34dc-4eb5-b487-581a4ed83c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcc0475-212c-4818-852e-bd38247a4b89",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2598c194-b8f9-448a-9626-22c1c8477f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b34fc1-12d2-4d78-bf78-012c83ab8402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520f3767-a73f-4a73-8959-46302d752c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9446a05c-965a-43e0-b84c-f0d1d08cdd23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf6f4b7-b190-4cb7-9abc-a500bb6bd5ea",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46a0e14-bf94-4f02-9492-cdce9478ec53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1b7dbd-67a2-4e87-9782-00c3670ffc29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48e1bc3-0fa3-4e38-a6f2-bdc6bd5c5461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f408ff67-30be-4140-81fc-9857e2068b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665d02b0-84d8-4e3e-b3a9-084dc9737ac7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd9ab4a-9189-4b7e-af48-9ea199f9aebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5f9cc6-aa77-43e5-8200-9733a64a9f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902db1d0-f216-43b6-b143-0309585af642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a584e6-519d-42a1-a749-5a637a662222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf16b72-50f3-4a2c-bdc2-683263bdde85",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "830c9720-2578-4aae-8ecf-31b0a6786feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba316ce5-0f5c-4194-a362-a830052af694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24b3adb-27aa-455b-8a36-8b3bc2306a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7109b460-5e04-4b8c-b512-f353a060e99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f853ed-385a-4fdb-b64d-3748d1dda822",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cec658-1d57-4b00-aab6-55f3f8ead865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "618df2fd-15d3-4f70-8b48-da63ddb3c9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fa1b03-5234-49a6-8689-776959f05cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e8c6058-0b11-4ad0-9b2a-f6a20e5affb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5078c2d-7a56-4510-a00e-c13ca0bced91",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce7402b-ce85-4cb6-8474-232923b0f727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01aa43f7-77d6-4730-8c76-854821daa042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9b9a5e-7d48-4b59-a16d-81d35b58d0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b00703b3-c1a9-4048-a427-38450f9908c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80894ae3-57a7-4b8d-ba2c-b20b1080de20",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2bda0b-a808-4d71-8ba1-e7a178366e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4d8c8a-f278-40df-a468-78df5cbf1465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54d7ff8-3b04-4b27-abd6-cbab4e4c4f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "014f5b8e-5a9c-4a51-9c98-6ae694dcdf90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647b7eff-9c7c-442f-a6cc-eb1d71a40f00",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7fa2bd-5a08-4b98-80bb-35ec94f5528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed755fb-beae-4a99-a600-8cc34030fbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed977fce-2c17-48da-9de7-913dde8ae14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b47b652-f8d3-4489-91f5-5d7bcd326a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aede51a6-6955-41f4-a19f-0a664331014a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf9cfd1-4245-486a-9bc5-715b08a51069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cd4772-8248-474c-a8e0-e339f6b61c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fdd4cf-c191-43b5-a778-42e1c4173c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c965eaa-ce03-495d-8871-c30668f3206f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c60b9d1-927b-46a1-8644-441be102be94",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320bf7a7-185f-4a7c-bb63-c111edf243b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ca939e-015c-44c8-92a9-4b8b4df97bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a43bd6-50d3-4b9d-922e-32f89b3468dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f66c720d-d392-4158-b860-1e7982cd0ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3019c2-e813-4a7d-a294-a5b542193506",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19122d4f-17c8-4874-8819-474770364e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ee5c2f-6713-483b-b3ce-b06a3a9cf01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d546e0-5f1e-4498-a7c5-ba409315cba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd62befe-af62-4929-b92a-74dec8ec3caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9712f1-fdc4-45c7-967d-f45cfef94237",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81cd943-51a4-46df-957e-077a351032c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57e2aa3-4e8f-471c-9af9-bb314f63aa54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d908da6-fc02-412c-ab96-623d1411bead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "162a6e3b-45a8-492b-97c5-a929278d7db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba3d8c2-b5e6-4f0d-be50-68fc29e33173",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f13e02-9ffc-4fe1-8e82-72d156d880c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa3de5f-40da-4c1e-9162-d647abedf7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bb60f3-1ee4-44ed-96de-033efdccbffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb4432ed-bc85-401a-be2b-3b120e842e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b728592-43dc-4544-82f8-443b9c1b9061",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840d62c3-6238-465b-a429-af271db27eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8620fb95-f881-4b4c-a4f3-261297e8590f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d45783-840b-428d-9d1a-4fbf9b37a1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab1ff6b-9edc-4c5f-a00e-fbae723bbc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a10292-7d68-437e-b2e6-0a062b53f4bd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448ee842-5921-41d8-8195-4fb1f0328409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98bb6a8-a972-40ff-8fce-3c6cb79adf19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad5d960-2956-4dbd-bf39-19500749be4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "456ec9e2-8a42-4b3b-8108-043045820b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd7d4c6-6204-4346-a64d-b30cc9205187",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2f239e-2772-4d17-892f-e62188f76267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f541ede1-f346-4e66-8237-b5dcf620ef6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0c55b5-44a0-4876-87ad-5ff80ac7f76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c4841d1-7b67-455b-b0ed-207fbda3be2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514d93e4-71fa-42b3-ae22-965b7e1b687f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "778a5b3a-2621-4f1a-a2cf-ece089e92433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91687c99-4b05-47dc-aefb-d2d05c549e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e7d6d8-d50a-4592-aa1a-0306bcbf5595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2173c79-469f-4100-9176-23bb178a4a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc51f51-d407-4486-a3c6-4236ba154111",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6633f5c-d1d0-49dc-82c4-258be3d1d4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653c7a39-0ae7-49d5-8b34-238fc6441478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a241a155-e88d-448a-b17e-4b128e75d096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d3ebb8-e07d-41cc-adc1-556d99898b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cecf59-840b-4a29-85cf-d59a57d034e0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7272a663-c50e-46e8-96c7-f60b4199f010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86628f9d-1518-46a8-bc00-daa96d5c740c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1d83e9-592b-4deb-88b8-d1d9e67147c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "766170fe-588d-487d-a514-01950437300d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9da653-2fcf-4dec-8075-c38c3d81be95",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ba4672-6675-4581-bc1a-cbd9f03f8c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe4f1b6-b1d4-4a38-91c9-4b447992e348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec33863-ecdf-4b5d-90ef-d123b9654450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f65afd47-2e6f-4ae1-bb67-f1cd17cfc46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816c2bb0-d94d-4610-a15e-465f2c9c72ea",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4061dc19-e218-4710-9934-4b23cb7228c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb6ce41-b3b1-477e-a786-dddd76360d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bf8ca6-58c3-4a6c-aa28-c650dd49f64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c74a8e5a-b46e-4d32-bdb9-52f2666ae050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c7a07-cb73-4119-a410-8eec350eca7f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1797b336-76a1-4280-95fc-56dd2460d5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab438deb-16ce-4a2c-b5b4-5ffb6e333483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b26e578-c18e-4f0c-b10a-ddbe7583b2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9edc1d-db02-4826-bce7-a8dd0a01e987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f35083-13fe-4e3e-86e1-fd86ebc70a87",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e8680b-f0e1-4890-b9c8-17c5b26b0cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd10016-d95e-4dff-9e40-54b8dfbe1a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67c2afe-4e80-47a9-adc4-b006ee987e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8afe2a15-bcf2-43c8-95c7-8cc5545dbfa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbb548b-59b7-46cb-9bf1-2f152ac6acbf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a8a369-4f02-4716-b9a7-907f69e481e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c056dee2-41b1-4fbc-be50-4ddf3e9a656d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c659c161-625d-44d9-800d-1601e7edbf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3dab58-86a5-4e73-abf4-13fd343005c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41cb263-fa4c-48a3-84f9-c89a1aa5679a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3784e9f2-824c-4b60-bbca-5e748df0c9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d197844a-5181-4674-a01b-84d5a99cdb98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c980657a-08ce-4f44-9c25-0e8037f064eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3a648f-b055-4fd6-88ee-d91bcb9d9327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063b7df3-4cef-4ef4-ae2b-5d87c21e7d1e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73d1957-73b7-4ee7-9fa9-90df8dc30d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37cb2eb-a881-4451-987b-5e409d74afb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233cc1ce-cb6a-4add-a962-c67a1c6bf01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a30ae8-4cf0-4711-8688-f3ea82d5f364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf3e548-32f0-4448-9e1c-e0a89b8c5cb3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766bab30-779d-4553-b3c0-86e82f583ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c140ac-8a9b-4063-95ce-2a0b3d893b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c40bfc-2fce-4c31-b69a-27b101c871de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70a50e8c-89fa-4a8b-9a7c-e633797994de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08da79e0-d04b-4ca7-8c42-c9ba9c342142",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b956c2-ec55-452c-a64b-6fa342941c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14bba9c-492e-470e-bbc1-96b68e8458d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b206b8-7093-4adf-b34e-92fde5846372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "082568fc-217f-4ceb-93ad-b17f5f919089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b712c3-9b7f-4dee-acc7-1c8a9b9acca2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b5cef9-a00d-4d15-b21e-70c5e37abcae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb84d20-004b-4e0f-9fc5-e89f4e94397d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b151d6ee-8bba-4188-bfac-d8a16aae19b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15f2854d-51ec-4141-83d9-723c44dc1055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78537eb1-b969-4997-a198-2683969602b6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffacd6b-8fdb-4689-aef3-e926fe3ca8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0896d5ab-cfd8-4e7f-a037-fd7d21176fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e390b1e-7f87-4d41-a23d-38dd6de0a568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d21b76c-a9ea-4d7f-aafb-247199e82eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39cf02de-2eb1-48b9-86d8-e338b084888a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6a8278-71e0-42ad-a0d0-db2466d0457b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e49dd92-039a-4a1c-b432-c987efc25f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557f35f1-004a-4dd1-8259-2477b07b16a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b8fb87-7c81-4f95-86b6-a7169cb3d00d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ca03f43-7d58-498d-a31b-f78cf108097c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa7c3c10-04c1-4e93-b1e7-6e654fd6e072",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7810928-75cb-45ff-ab45-32444f3e8f95",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4d6c9e3d-cc0e-4c97-a6ff-b9e8fc33ae57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b1c104-ac31-43e4-a895-247f73b6ef5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ba00555-8f9d-4232-af23-b39d4308d07d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5494ea2b-7e08-4dff-9555-6e908a2b09f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da44f380-31a0-4bee-9f62-cf70e54c9f68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c50c9fc-1990-44fd-84a8-90b4668990c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a089b21-60d5-4f9f-b64c-73070128a724"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3bc85027-3f5c-402d-9f3b-d4d25ce48d69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a61627af-33de-4138-9d7a-ebf95d6b43c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "004d135f-648d-456f-a040-c28a055145f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71094399-457c-4df1-a233-eb8579b60fef"
            }
          }
        ]
      },
      {
        "id": "c1d2ee8e-57ef-4414-9260-7d1e27121257",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ca7fdbfc-48ed-4dca-b6bd-d2654ee77b91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0510c505-f37d-4e5b-ac84-653f5e503da9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41097482-368b-40fe-ab9c-02c245448bc4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcd1dfe-01d1-4383-8251-4201298e5569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8e0b18-1824-4335-845e-b3c4a928e462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19d88a6-70ab-46be-94cb-ddc5ed3f0286",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b333a2b0-c976-4556-807b-9f174b76ff4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80a8b043-7736-43ab-aaa2-4175aa1f9b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7659f9a-1dac-47aa-af8d-6280508073b7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67bf8d4-5339-4b88-9527-1311b87d4414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc48c755-d0ab-4823-ad3c-e3fc05218aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45e7885-fc41-4467-9001-c0ca83975e9a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25e2aed-60fb-42c3-8bd1-d55ec0c668d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b702079-742d-4b6e-8e53-ea00e14dec06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df8efcd-899b-4b28-8860-97baf9670c01",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d0ad59-5ae4-47cb-acfb-053a286b2285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae98a2b2-bb33-4779-9a0d-75a2a8dd4419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb6d9d4-b0ea-437a-8b76-adb480f3d442",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b65164-c67a-4187-b178-7e792c3712cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6731852-8039-4ca7-bbbf-1588c74c3d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8379aa9c-ad1f-4bd7-a6bd-2ebf9018ac8e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3769c569-772e-4798-af07-999201d99565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03777cd8-c0e3-49ec-b471-e07d3b175c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5abd6aa-a83c-4a61-9147-042298412160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c786d324-7fcf-44d7-bb8a-9397bfbb43d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fed185a-af35-46ca-8045-05a76f832550",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464c1656-b52c-4fc0-b4fa-44b6d6a5073b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ed8ebf2-0105-43ac-aebd-17c8d29fef87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b22671-6778-4372-944b-fcbdf5b33be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002956ca-ef33-416d-827a-fba9d3bc4f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7315a3b5-b0d8-4939-8c71-c817ac31f8a3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e862880-951e-48d6-a255-3b79328ab14e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "531f225a-0f5e-41b2-96ec-4724911c3506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8698a4-53f5-4fce-ba81-5009f1c64f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca7639a-c886-419b-8095-bea214f6c2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d318fc-1838-4a6b-80b0-3adb1b56a307",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770c3b2a-4112-4870-bbb8-911008e66c2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf931be-4196-49a5-a87b-074baffac59f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bd025f-c187-4b90-8f0f-72234097ca2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da1c11d-0195-4b63-b981-c76c6b4d13d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad4ad00-2c84-450f-9f10-45b2ea2c96f1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c419dff-85d1-40bc-9e56-b087b516a5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0d27fa-e672-40ea-be16-b1c26dd9d1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc7fb36-ef90-45ed-a6b1-cbe2f657d493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea682c09-831b-4d36-b0da-21e0be995f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa923a2-08a7-41b6-b747-e1e169f3e89c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85616f23-0ebb-44f5-b67a-f108476a5704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50eba9d-47b4-462d-8120-449675f69e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68efa6ec-f58d-4a16-96c8-372941836d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d34dc429-959b-4234-af0a-ced49d29eb27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb76f48f-fa83-464e-96b8-9e9de78ea3c5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a2971d-8d43-4ca4-9817-16d20a11238a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67aac44a-9657-41b9-87c9-4d9a73c14f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f21d9b-acaa-4893-974c-be8ed46624b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ad216b-4f3a-407a-bed7-afc14d3257c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8085c0b4-03b6-4c09-b7ae-8928fa1bf5dc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21c96ee-f80a-4ad0-aa01-a7b68061a09a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "862cf12e-ae40-4b9e-931f-b69102e9f01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95e8500-943e-485a-8c98-d252f3190b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf0181c-81dc-4a7f-81f8-60401a82e66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a1ab25-c82a-4ea8-b81b-8a1ab53a2c72",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb44fd0-f61d-4b51-abfd-f9475974f4ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd67d99d-6d06-47dc-bf34-6ba0d5eaef0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5065d7e-7af3-4db3-8172-2a8a9658014b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25976c51-e986-48c9-a610-e6d0f320ab71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a617fb4-0135-4a3b-95d0-2cde495b033d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98dc971-8604-40da-8f04-9102d768367b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5139df3-1fa1-4960-9649-4afb3d1539c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f824c06b-3d30-4958-81cd-ca925409988f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c87a760-deed-4f13-9d14-7eacaaa1d3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cebfea-a63f-481f-a61c-284b45c4d39a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00e0458-8d17-4d21-959a-c6a9478e8f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f35757-dd53-4693-acde-61d32477ac09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702c99fb-0a19-46df-888f-1e93a9dce52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6178a8-cfcf-40d2-a8e3-fe0e00d7db2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091b47ff-db96-48c7-9dd9-306bdefdb353",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225d68cd-a29a-49b3-885f-eee30ee22e21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbae71b-ec39-4bb1-b273-0c03516b84f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c35a380-3a16-41dc-961a-b95cebed0753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc26b07-64c4-47c7-b094-ffd63fa2dc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b543f6-69f2-4d18-af9c-eaa059aab448",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02366247-b5bd-489a-8219-6942934ba08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88677475-7e68-4ea4-87d5-63edca8d6ab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dbfccb-f61d-417f-af2b-999f247ae99e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae9793a-f4e3-4ef8-84f6-ff20cf7f77d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e355a3a3-f3f3-4b1b-810b-dbdfb3ae9a73",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be78258-0ea0-4005-a828-186f9f6b4edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afd2e372-f4d7-459c-bf67-720dc10e2942"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2b0156-37a0-4448-9d9a-da69618a13f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6759b232-ad71-4cc9-8969-4e37675cd899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d13739a-a421-4a7b-bba7-ffb75203e032",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ba6027-ca19-4dd8-8dbc-041666aaba2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba43ed30-f8c7-4a1a-b9fb-c854c734eba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a36b4f-1f0d-412d-be41-ae3c5f918342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2ec333f-b0d2-4da2-8314-251a92866582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad219f3e-a1f2-4cf4-a4ec-2c8dcdc0ef9e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f718e2-d4a5-4c90-9c15-fe4f7f7f4749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "897aac4f-77a1-476c-b307-2fb1a9fcd3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8623cb8-46f1-42cf-994c-2401355cbb3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b15e36-311b-4166-9d12-a25d21535594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfea0e0-c4de-411b-9cb9-cd6f6d9b98b8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b57795b-1592-4424-9730-78cea72c3126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9d9bbd-8759-4040-8a63-89e282b910cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397b091d-d2c1-4812-a826-130a29edbe5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b041903-826f-4cf3-b618-cb11238e0c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c6be0a-fdaf-4861-acbc-ac392a6b0ace",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02db019c-c117-457c-9c4d-8ab7abbb6220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c60d2ced-37c6-4e72-9fd7-13ca688e8b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b87ee57-d5d5-46ad-bdb1-02b1421bfea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5652b895-b3bc-47c1-b3c0-fa86c03f0ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b1aed4-66a3-4ef0-bbae-5fd8f4bf4b59",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124d656f-8b38-4e55-83cf-5f6f5a88b16c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24f7d02e-2c98-450d-b5a1-e36e806d0740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a757ae2c-29e6-41e3-8497-3d3c80ef54c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b63ce6-064f-46f1-a18d-98be1491ad73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f34d26-e098-46ee-8d8e-98776b130ea2",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a53445-7062-4c18-b26f-e0720301856b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7e5c669-eedf-41bf-bd9c-19a4880063c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ec2a87-8ab3-4c23-bfb8-a80c9cf594e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34672f6-65c7-4c64-830a-528889718b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7d47db-98bc-4288-8f93-d11631de256b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bdb7d7-9a98-4bb4-8a9d-7bc718f7c0fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b6cbe1b-0e99-402d-ae2d-385cd2b8dd7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5a5e83-cbb4-42b5-a8e2-9f6c94b3e185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e3d805-8e73-4948-86ca-4696a04e785f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a935ab38-88ba-4443-a911-f6e1bdfb7c77",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f616aa17-4c68-4637-ad7b-3116d7beff49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b245f214-c481-4f38-aedf-7c4dfcd8f586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8195d8-82c2-4af3-b5e9-5bc1b6299fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ad6a2a-a6fd-4cda-ba05-853bfd0d251e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff8342b-325c-4f17-b749-9702488f6129",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a308f741-6770-44be-96cb-eee354a1b247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7faee24-b4e1-48e6-8cf5-4c3236a2e3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc73f90-ced3-4bb7-b52c-e69ee4a4c4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ca1e98c-b965-4b0a-affc-ef321f783e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0058bc-d8c5-4f3d-bbdd-669d907c934d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abffa88a-8ced-4c39-a0d3-ad37b89d4d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96d4436-943c-4cab-91a6-99d08a02fb7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32b5278-3cad-4a3b-8363-da22591f0039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2833060f-a055-4122-aa5c-2f4886709c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9add31-16d4-4b4c-925a-0ef4fead78ae",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424276b1-ac2e-459b-afc3-9c4ca5fdaf77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e926380a-0084-4a09-bb7a-a11092dfb64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9464ce1d-f5f2-4d82-98e0-9be385978f11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0263510-77f6-44aa-99d2-ecf8dbb4cf37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57cbd92-d26d-4e1e-acdd-f7cc8f9031c8",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c49c0a-9964-4bfe-ac72-1dc095a2a958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a4ba0e1-7d30-4e5d-b3a2-da1fc157bd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd39c50-8b0c-401e-b83b-a96f604b132b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca4f249-33c3-4451-8f3a-c1e63f28848c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a979eaca-ef46-48c2-990b-110a6449da0f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dfe48e-fb31-40e7-b102-c0bf8e2950ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "859cb0cd-d78d-464a-8389-5bc9e41e91c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5705cba1-1b61-4158-ad6f-e5c47d0bdc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064361c0-6914-4a66-a56c-1432e4ebf5c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e2205f-0b31-402c-9631-4b93f64471b0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73343315-9edc-44db-964a-7fd9d9c520fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d87674e-8213-42e1-9375-ee95ac503c10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2481f9cc-76bd-47a5-9d1c-065a7cd663af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac8c4030-a80c-46ca-b66f-ad072c8d4b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970bb70f-6172-4b44-8341-69cf9371f3a8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e9627d-260b-4e9a-8f29-1340354f44bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13f67a2-7e78-4f11-8589-f87bf18a54c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431bbbd0-2e8c-48c5-9b84-506c2c1ec035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf45fd5e-174d-4517-93b9-8300366744c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001c5b9a-1f0d-4433-acc3-5ff53646d14e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7000f277-e9ae-4566-bc35-cdee2c6dbc98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3922c107-7cb4-45ba-ab8b-c87486d0f516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba047d3-40db-447b-bb98-d939fde9ba41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb5db27c-0a8a-4297-abb9-7162248b8c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74342c36-b869-4077-bb03-f9aebfb7d4d0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c23fe88-115c-4d4d-b115-b58c3ee46f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd31d905-9f6b-49a2-8663-77d078226542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e552953-03b1-4014-af4c-504aa6fda8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2130f657-ac84-496f-b4f0-eb97f514e362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e033d7f0-c76e-415c-a426-7b08a42bd455",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb9bc43-95cc-4e32-8bd7-5d68055a22a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ed5c95-9fcf-469a-b5a7-d75d5430f222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dfde53-b91c-4aee-8c54-74161c9afedf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d45d89a-0b9a-45f8-b26a-f26d282d77f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc810f1f-a73a-441a-a785-81faed12d337",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d71412-4d5c-4ed2-a745-abee51dd53d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddfdf48-d4ab-4d28-93dd-637e7f7cf8d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f810e9f3-1312-42b2-98da-2e26e5122380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c43a4a3-a98b-498a-bf83-21f55f1b6347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f821f7d-4974-439d-8658-445768f8aa1e",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bb5392-a062-4b7c-8380-9c9220e20fb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8d9a08-e40f-416a-9be3-7ee7ce77040e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f432559-f8b8-409b-93d7-9311de800dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c18f77f-d702-4239-bfd8-5d954af850a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94462836-6765-4d2f-a135-bd70d0d5de6f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad64589-22fc-4cae-be8d-cb89475fa0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db710a7-308b-4dd7-a92a-eed1d71d43a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7354ae5e-8da2-4b93-ba81-c1b820c7b625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c56eb4d-8f61-4029-a373-f76673b8a399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e28109b-f677-4061-b14c-ec9f66cb942a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1ac766-4969-4dfa-8877-fe8b1bc76a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c442b87d-10f8-44ab-8264-c0deaf6546f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48929af-e5dd-4fff-be7c-04f44becf156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09352731-da32-433f-a441-4816476fe777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b7c525-dd99-4a8b-abfa-a8861bd18249",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93bf552a-888f-4932-9c32-721abe6a84bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50758183-d1ed-4b5d-9a6e-cff7af055d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4442d9d-08cd-4e5c-918d-6c6286c9f536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f71d9cf-c195-4aa7-9967-58e642ac723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31feb6d-1f9c-47c3-93f9-44a01e307a0a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b436f0a3-8341-4b55-ac06-65977d6370b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c295411-8424-41d6-9db3-1c96675f1407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb843691-2d7d-4484-b1c6-7d4d6cc5f93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25951ab6-3e61-4dde-a18e-15e2dac76ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9448899c-455c-42b5-b013-9abe8471a635",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921097bc-2fc6-4a82-803b-4d76609f49c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d42fa40-5cf2-4c15-8614-4ca2b9ed4193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cff85cb-de35-48da-91ca-6ee716aca532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33a61ff-25b8-4744-9f6a-95dab8b1395e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe0d7964-3657-4711-8e9a-6911a74b3f06",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0a9de3-c84a-4572-8963-3a15564a81a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019d161e-194d-42e7-bf2a-33b5c3ee85eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd24970-dc79-4e6e-89cc-c15b7a93d242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba778195-afab-444f-9051-7389d8aecf9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfd14b0-1f9b-4e4a-886b-e6a569c53dcc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dbb31a-c614-409d-bc34-dc71c68f4aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a069dcc-c1c1-429d-bc5e-fe34496928c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc509d62-acc5-46ff-a286-610968b94406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015e1233-07a0-48ac-af00-fe28a00a124d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915ee357-c1ed-485b-9044-513e42476ba9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1efe494b-db88-41a5-9ed9-bb4c8c894cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fd6240-72a5-4875-9521-abbbfe13da0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48ab27c-64f1-450d-a5f6-a49f5232d96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebed2195-4518-47bf-a9fb-e0c357ac5b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab485e72-183b-43a0-9c95-a9a63518668a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03950087-2edb-4909-99fd-916f183c4743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90fbb8a-7d2a-4c64-8a6b-2f705af3fe32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f907b812-b1e3-44f6-b6d8-61c08fc6c1c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8fce51-cb53-4209-9dfb-e1b7afcc5f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9510d75-fd3d-495c-a763-38257428ebfc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a14aa93-a438-437d-af3e-e7f73a9863c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e22d17-6099-4393-a147-f55851ee9da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1fab3e-14eb-4193-839e-009e3ff92fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60617a3-8c97-446b-841c-9efcb7dcc120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6963b18-d011-4c20-bcdb-12abd167aa88",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52cf264-8d17-48ae-a3eb-311190e2f5ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31164154-a31e-40e6-9b5b-8a488bcff7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054c4a87-47f0-4415-8122-3fd593743daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693239e7-a60a-43ce-b34e-94613a21359a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a611f8c7-9a3a-41a0-b440-d99e807ce84c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e84023-c973-4e9c-ac81-c9f4a5fed68f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a99208-2eec-4494-8179-bd12a1cb311c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fd6a4a-1033-422c-a42a-b6c0d64069cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5332d73c-94c0-41c4-83d8-6964be0a03e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aae91a-6fac-4953-b394-ee90b5f0cc3e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef2e246-03c2-4c84-9b1e-1047258e3347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db654b8-ea8f-45c2-8217-bae687579fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58bd268-4ee6-427c-84ab-f44d7d914508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299cf627-ffec-4a34-bb11-51492a8d1d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805c56ad-62b5-48cf-8115-823266ea7471",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5112163-938b-40cd-bd8c-51922c52944a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e627180a-a57c-4257-8568-ac373b124358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f445a4-40ea-4559-a6ff-3947ceb260ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec89f1b-8cd5-4bc3-9612-8a5eb9f197f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf01b7f-de2c-420e-a17e-766bec4b8c04",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff647fb0-9c58-4947-8642-f9586b793366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039f2be9-d539-4fec-aa16-fb82e8fb7aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b821f5-6808-4825-bd30-a5da1d223395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ed1726-9bc6-4ec9-b657-39d2b75e1b29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb41f51-47f6-469b-bb59-c9ff29abb3f1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be81a8e-f441-4ee4-8ea9-7bacbae1c4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2455ec-3532-4da1-a9ef-268ff1125d3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ce975a-3029-449c-b1dd-fd052b14fbef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cdbc71d-72ca-4f0f-a3a3-3fc2077ab855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d185a57b-80e1-4587-b2e8-001e738c5876",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3341aef-2466-45c8-b26b-febb57f432a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0aae2e-8edc-4e7f-9dc6-25419cb57270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f911597-4786-4462-b22a-ee83545d3b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c188f5-ab5e-4972-9e23-7f42011ecb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e2dda9-9983-4892-b172-f52d76bc3bcc",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87067e15-ba6e-428b-b440-938e019e42ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd731768-e3b8-4e86-a8d6-a2a10fcbd2b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f166ed-6ee8-4fe2-8455-083291ea4e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db67ab4b-98f8-4fa1-9f61-51f59dc11cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97672e34-3f59-4c40-84a7-393650d3de70",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af074d0-298e-45e1-8c12-581e6d02bb83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758a5454-963e-4830-9634-866e22b5cd1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0085fb-e4e5-442d-977f-f429f7c3784d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b054ef4-babc-436e-83ee-25a1485353e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4fcfda-be90-488e-ab71-f3630a712db8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9c3f33-e6e9-4904-8c54-81ee78cc9b30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e536cebb-5413-4ed6-a547-4f968d1e7e5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2235ad6-2b53-4fda-8dee-471f2e3ff3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dd6405-5e8f-4065-8d86-77a5569fcc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27239ec7-e304-4d17-9a47-565ff79dd0f2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e654c83-39e4-4b3c-8bf6-a70f2325fbba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb11c2b-7ece-4472-a7a0-e26a94eef52c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57246fba-ed2a-42ee-af5c-de0c816f6a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6f72d9-73d6-45f6-b9e7-9a6cb2c94114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12238852-92d6-4051-b18e-dabbff306e9e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ac7d96-a570-43e6-af53-000ffac67936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7422569-6b22-430b-90cb-486c98f21b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf10bfd-0d95-4fc6-b140-ca6c1dc3cf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3b11f9-086d-43a2-ad1b-e0dd298f0c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ab4559-164a-4088-9bab-55c2326b4036",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af492d2-4ba2-4eaf-8e0e-981ef77265c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65fa1de9-da50-47db-8d54-0bb45e2e0011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd88ba9-e03a-44b1-8324-07500536a4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd23df6c-c10c-440f-81a5-ceac530fe3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5027f384-760a-47fa-8c67-1da48127772c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa856ff-9b67-4115-8bdf-e751bd097d02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbc1aa36-fc15-4011-aced-a22550f2713a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d948fd50-e002-413e-8ddf-6155150bf67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890d820b-2b2e-4180-85e4-c1871db6fc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16032aee-5ee2-405e-a6fd-1b866203bba7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f24e142-daf4-4e04-8232-daae7c368af1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e968bc3-28b2-41d1-a193-4484a33cb455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f590871d-8e70-4d87-b5ac-d04bbaaef06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73f7d2bc-3e9e-4132-b214-8c24f22bc1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6db8f7-d86e-4d1a-8d49-457e774a2bf8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bdc8b8-93dd-4ec6-9273-d430ad9244b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade0806f-a80f-48ec-8e59-13170766c8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87d2f07-e9eb-4016-8067-437d93ec2654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5ce4de-5a2d-4bb1-bf21-986608022430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bea8123-e3ad-48a2-b6e1-af843d7ceb02",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf993372-2bb3-4824-8523-490421d9225d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42c3588e-f5a7-4fee-9ebf-4ae93430ad1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a71080-6e37-4f20-aefe-be9cd6084751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee2d37fe-d4a4-47ec-8ee9-65915cf96365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e21681-5379-4a0e-be26-2ff8efb6fb29",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaa6737-18da-435b-89ad-72a8cf27df52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "904748a4-e6be-437c-a876-abb7c92e76ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da2543c-5348-4c30-bd9d-a8bd1ff851a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b020eeb2-4e32-4ca8-8ef0-b05cd734f740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659824b9-5b99-49c7-bd85-7ffd871de6a5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc16bf4-0c25-43a8-a9a4-0ec60e2b74be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f6f5270-e086-4c9d-8830-46e989a284fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1835c19e-094c-481b-bb1d-7f3aa3a7ce04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acdfac8a-9eaf-452b-91d0-87fe3d7eafc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac0f55c-776e-4467-9fdb-f0df52016a7b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ac5946-d5d6-4cea-bb7b-769e6846aa84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1398d8ba-1383-470d-93f2-0c0258806cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbba1c4b-6101-489d-a973-3c190c7f148d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492eed67-ac34-4fb0-9a16-9835e17a4feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9465cf-3f95-48c0-9f33-8074771961bb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48d07df7-498a-4408-bc05-55f19d88f5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0f41d98-a200-42f8-95c7-70717ad36784"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a1b451-d75e-49c3-8093-f9cf91d30be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124b2709-3954-45e1-a0f9-bebd84b4a603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b353e3-74ac-4d85-83a7-2895e634c241",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c25dff2-18c9-41be-bc38-e0b548cba508",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "920eb9ff-7537-4b2f-9817-2bd3cbccdbcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48d3fb8-ba5c-45a5-9fde-d102760b4c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0697f74-1fcc-4936-9212-f4ec6edb13c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58353207-ffa4-4486-a8c0-89655b2c9552",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f03c1a8-97d9-4471-83df-9cac1f742f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "820bc0df-9779-4883-b501-25b5e5e3dbc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aefe8d2-91cf-483f-9026-e0fb95580249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dc250a-6ef7-43b7-a90d-4c8322802941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac956d9-d0fb-49a3-af31-f1d462f1cf1f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dad38b-958c-474c-8545-c39b1af54e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "413be6dc-e556-40bc-a793-0f24faa97d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947e92a1-bf0c-47a4-ad45-baf9c479431d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a82246b6-b06d-4e85-825c-4b64de63898b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29915701-a990-4e0c-8884-9a189756eb4d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3b9c25-6a38-435b-abed-ffe55e807119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b05c8c2-c37d-49da-8e5a-fe5b0756e3a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f2f328-c68e-4b55-ac01-59a057e1fcfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187e394c-5d63-469b-adc7-045a442a3089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05f3ba7-c9eb-4375-9107-cefb1c746c1c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e99149-e917-4b5c-9a88-e1a242efa065",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7476fc4c-7af8-47d9-b543-86e04f7943e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac946ba7-aefe-4f9d-ae79-c02dd85b5bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183bf136-314a-437e-805f-bcbcb80a67db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2d6c63-2579-4949-8926-856c02969682",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7df73c-c619-4d0e-9c6c-643d1b2a7a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e05c8e-dabb-4510-96b3-267fe287952e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca669d2-67f6-4d50-a023-cc3c64512640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4c3dd1-9aa8-4413-b727-e32f3731dd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b280b0-96ba-455c-924d-7ae5da6bbc11",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c13af44-22e4-42de-b576-141531f5d26b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a14644-8617-4f31-8ab2-c09e383b9361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28daa7fd-eb49-48e4-8e19-3bd4e87e917b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febc970d-1ba7-4f74-b74c-a540c6972174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b454d0b9-328a-4e4d-82e2-a3b901f373fb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40767665-885a-4682-b1f5-2d71721bbc30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c42a7de3-aacd-44df-b662-6f586096982e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad3b16d-fd95-44ac-8cb8-209e15990b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29875810-cd15-4014-9ca4-c9e4f9bfa7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "228671d2-7671-44c2-91bc-b6ecbe1ad85e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec95398d-035f-41ee-a448-13acdc856bc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664f0a33-c428-4e92-b809-ba22535af954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94988822-b3b1-4aba-b998-48e103eeb420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97e31e6-9870-4b18-85fa-5d4e1f0ff164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902390d7-ee29-450f-8e26-1bd076bf08f1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f8cf9a-bc9f-41cf-8bdb-bc828b401d7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8b1fc7-0eca-4979-aa82-bf4c8dd1f865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224e494d-d45f-4b8c-8e29-0d39506257cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05747243-8002-4562-8c53-b40390029a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d8511b-7100-4f5f-ab95-15a3c64d2a9c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb42a4e9-47ad-4e04-8c95-5a0358dfbdf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "686fd354-b79e-4eab-817d-c0f8cb3108af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0654ffb4-a960-4e5a-b173-44ca213c39d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59520fd6-8383-41a7-b6b0-781513f11ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8409df94-e92d-44a7-92d3-4e99630f6d23",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ff2758-3408-4c03-8cf4-ace731952592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c12a47d-614c-42be-ab22-b089c18e7cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82f10e3-d963-4794-806c-43b851d5d698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70da279d-50d8-4b3c-b21b-74c757586809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aae4ed3-4395-45fb-8be3-65626d8c9c8b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7415b6f-eb50-42cd-a609-a7a6924c1aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d6e2743-68a7-45d9-9072-ecbb8f6c6a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63b5bf1-275d-4126-95b7-776b84b62632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1b37d7-710a-407a-8f2e-ba9ceb11d550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f9e87e-e60f-456f-825a-b6569bf6ad21",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb7cacb-81a6-4a03-a1bd-4af2538b7469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba8a6e0-c497-41b7-a288-28382dfa78a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e959a205-8d6d-4ba0-bb60-c48f88481351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb8c9a1-d94b-42e3-8e4a-355016833576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdda2f9a-8511-49fa-a2b9-80a3244ed8fe",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe7759d-ac3a-4954-8475-a51d14e0591d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "499832c8-e1fd-41c7-9d61-c0d255596673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603a0f2b-d7fa-4b99-a8ec-2cc801d97e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23accf63-2d42-4554-a81e-2af79ae3c54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3e2100-e81b-4410-8d1e-7298d62c73b5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5db33b-1072-4b00-a02b-88fd0461e384",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be1ee96-3f70-4c77-8bf4-30f7cd44dcc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10697a39-1daf-4e2f-a0a8-a49253a22700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efc22b6-8543-4eea-a348-394783bcf6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00661b37-c2f5-4ea3-9736-5d72e64d687d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a2230c-3acd-4f9a-9f7e-982613c73c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01e91e3a-ad09-46b0-98a4-aa93c2288441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000819a9-734d-4fc0-a488-1ca0fcdbce32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0143d4-605d-4fa7-8b86-26f002c155cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d74b99b1-19d4-4300-9a85-c91a3af62c04",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b861716b-c8f3-4c64-9bd1-37f021807464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1bd24c1-c15e-4be1-b069-54dd7699b627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c200c8-c099-4add-8f74-27b4c107b743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13760d62-7c85-4910-b787-3c6711b13838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a6ae10-626a-438f-ac49-4591f29fdcdc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d4208b-9150-4560-80cf-0db116d2af6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d73c20d4-3d07-4f47-a78f-ffd60c636e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb90211d-a9cb-441f-af1c-6ab0a208d19b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "604453e3-f259-4b7c-bf87-24a1fa3646db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccda8eae-208c-415b-b652-1eac8433a886",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb91821-475b-4aed-bd03-e8f82c1e52cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3769954-a533-4bc9-9474-d697e37b635b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7800f5d-6d9a-4bcc-85f2-08eb299e3e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101992a6-537d-4f83-ba54-76e26d189f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29217bb9-a52c-4332-b69f-b3ca60f21ec5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a80b4f7-32b1-47cd-a8a4-fdda47c4e248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9748b40e-47e7-4b26-b12d-7656047e8874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e50aa2-5b7f-4411-972a-e72de251df5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b867827d-15c5-4653-b38f-5e7808008bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c60f63-e9f5-4f77-9323-7c90bf3c7ee9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec7f0d5-2894-4a6a-a3fe-91d74f68add0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37fff287-9c69-4b10-9410-64f5e8679e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b57a3ee-c748-4808-b239-097063af7e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94adeae-63df-4725-9cb0-418e83ee7d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50436069-6d89-4509-a987-26647437ac36",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5500b19-021a-45a3-9a4d-fb5925f0b473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "962a46b7-01d8-4c6d-a8fb-43284a5497af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96159112-e135-4ef4-98d7-b8a82f493d0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66367b5-95b7-4edf-8973-b36f3cf55f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58bd9a19-cd39-49b5-9044-be01c9d5bd5d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4356bf1c-863d-4465-b1f9-792f55baf2d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b80ce8d-391a-4246-b3df-562d66f84f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93fd2a6-97cc-4dc3-87f3-f431c40851c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467e7712-4047-40c5-a7ee-c1e668f356a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15e610b-9b96-4ee2-bc5e-8b48838b083b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f61e1f-3ea4-44fa-8c6a-417a5964a24c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "384b33dc-79df-4ecf-a53c-c413bbe6b26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c614d46-7369-48cc-9fa5-a8f920267536",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ac6ec5-b88d-4b73-8552-ccf4fb03dc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9b9358-7e58-4b1b-af3f-15d9ab81e578",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980b9262-0fc5-4900-8aa3-62bcddb29dc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16f36dc4-3517-41c8-9835-3b31f5c7ecef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a752db32-35e3-4577-9460-9749a9db60d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf88df28-dbf1-4b7b-a282-bd12bef26df5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "517a0f1b-bf27-4ed9-8895-3013325b7626",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf2302e1-bb78-45fc-b2ac-b8818188044f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a61a2d28-1b9d-4558-af2e-618e450edade",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a86c052-a7bc-4854-942d-05d6c55be59f"
                    }
                  }
                ]
              },
              {
                "id": "7c507320-82bc-487b-ba54-df68ef071acf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00db4ed7-0dc1-4a0d-babf-25bb57733c36",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81139eed-b0ca-48bf-ac07-f23682e474e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1fc3b3e7-32f4-44b7-81a8-ab643b65f6fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5571a463-a6b4-411c-842c-83f15ab587c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ac6f87f-591e-4a43-a817-dfde74f42070"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1030345-64d2-42e3-a753-d38f56796ce6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fd1ceff-8abf-445e-a8ce-c9c3c053aa8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15a71453-c5d4-43b3-b7d5-26bfd9c0d0f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8858d20-cc71-4fca-ab5f-1cfa7e8a4270"
                    }
                  }
                ]
              },
              {
                "id": "450c32eb-7989-4081-84d8-815c84c1ad96",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "161cb677-c288-494c-bc87-600d0e3968a6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bfaa20-b037-47a8-8c61-b80b64651bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d0b2ae28-c3ba-4a26-8d9b-f8fff5e09fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24d7b5b-b8f3-4686-90fd-1bd58c55e296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69e0fc2b-374b-40f2-9b97-414eee8efbe2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "30f64f58-f3a3-4bf2-a7c5-927568569926",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d7148fd-76ac-40fc-827b-7e5855943b3a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81989a4c-b7eb-48c0-93d3-162946cc1f97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "52bd58bd-9574-4f59-bb9d-5eedff0b226c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a80418b9-40a1-4605-aeed-d622b70f5ffd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d2ace85-a033-44b0-817f-08775e4acf7c"
                    }
                  }
                ]
              },
              {
                "id": "e150e79f-6861-41d9-a83a-8efa235bcb1b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2689c2d-daf1-4d24-9607-b2e761997cd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ba40068f-9aab-467a-bebe-3847bec45b7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2af534c2-7d07-46c0-b597-764abb33136c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ab93104-a854-4506-a8a0-2b1ff6935d42"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb6fddf4-84d1-4f9a-8d4b-8a1813c6e0d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "04e9d3d6-91a5-407f-8d29-1053b98be912"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc1d5284-b583-4c3a-ab84-804353fa6e1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4054541-3b16-453f-83ce-9623980639ed"
            }
          }
        ]
      },
      {
        "id": "8d7cc468-1d7b-4678-b744-a8cffb0261d1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9898e00a-f7b1-4fbc-a0eb-4cfb0272685b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6a1d2ab-3131-4156-a439-0cfd9879bf37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ee69332-1269-4f79-a216-e03ddd0cda64",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dae7f4-95eb-4542-9d40-553b2a13af9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bc6d224c-57f5-4630-b83a-83cf74d98592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2b2a7c-baf3-4432-b0fd-03676b4f2d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dfd6422d-1d48-4338-ac8a-3dc6d3dcd511"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe6680bd-abf3-4a49-b798-3c4839ec5705",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c5e5541-469e-4321-ac14-3ae5b4bf85c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddfc8cbc-2337-45a4-94d0-703e8d908295",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a011ff47-b30e-4f1a-abb9-1403e857a4a9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ce738a4-2f7d-47ff-9e8e-3bad1acaa1a2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7015f2f5-909b-4d5d-a6c1-d2e0c8c472f8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eeaca44d-8ae0-4ae5-a392-abc618006ba6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "279e0893-1870-47c0-890a-03d946eeeba6"
            }
          }
        ]
      },
      {
        "id": "5d1f64ac-957b-4306-a1c5-e1fe1cd08f6c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "481d6e62-c15f-4d6a-8f31-845a1a08d322",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e0c85bd-4f28-4e26-b017-302724c1ed55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7083e874-704b-4490-84e3-d3b44022aaf6",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44fa65ce-9db8-4e08-8490-d6e52cd0998b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b98fe46-53b8-493d-86a9-60345dd0aede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7433e63f-724c-4873-8225-719f9f3af5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d47f781d-fca5-4393-8aae-e4ae671c3953"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ace3c96-4d7b-4e72-a776-38368cb5a298",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0eae68e7-b1c8-41d4-b73d-595ed02ea3c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f58d1564-ab9b-4624-9012-52c35b52b433",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4db17459-c6e4-497b-ba0a-3945770b24eb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4924e747-5b35-4058-b7ea-221b09b78f27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e4a2bf1f-9902-475b-af2a-76c3ccae6345"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08961c90-4b6e-48f8-b7ac-9d0dde9eb660",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cda9ed5e-0c57-453d-9c2c-5011ec3a2191"
            }
          }
        ]
      },
      {
        "id": "6eb9d6c4-8092-4082-bc65-6c75c76d409f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d32fd3c7-03a1-44d8-97b3-587305b1463a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e90776d7-2118-4c1e-adaa-91920bc99920",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4c49a708-0cb6-46dc-b8d6-2f0f996f05f7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb4ab0e-37bc-498c-831d-6d486bcd0bd2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1a301d9-7c27-413b-85cd-6d4855b3c293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "481881a4-36fe-40b6-8ba2-be181b49bde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "849a6fd3-eb32-4e25-86ab-c25504552ce2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "adbb98f4-cea0-44f1-8be7-f6cdf23d062a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3b84d80-910c-4912-a46e-bb7b68ac1d40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1689cf7-926a-4e19-bcc8-04e919b519ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f329232c-38c8-40b5-a399-12d3abc0db92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9380b402-c426-49f9-8d0f-0b4425022878",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce4221c5-c59e-4bb7-b997-4fa2c804e322"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "945722d4-2dca-4c2c-ae04-299d6934bb98",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9925205-878d-46d7-933b-10ab064ac418"
            }
          }
        ]
      },
      {
        "id": "5f2070d2-317e-44bc-a574-17bf479c2e6b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0490f0b-ed87-46c7-9311-7967fde45732",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d1edb26-25e4-458c-be46-bf86c18e37a6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d72ead0d-5748-4b2a-91e8-7267e5623e3b",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f7368fa5-11bb-45bc-b8f2-d102e65d4bb1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36a85948-c200-48b4-a533-8d15846cc459",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.66260162601622,
      "responseMin": 19,
      "responseMax": 304,
      "responseSd": 27.934519538546333,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1687049197697,
      "completed": 1687049216672
    },
    "executions": [
      {
        "id": "c1a63515-e8f2-4fc6-bbbf-3f7f14c6ee56",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0d5b0946-9b3f-41d0-baa3-6e617d509b09",
          "httpRequestId": "a531b00a-92ec-463d-81fe-9230f116eb96"
        },
        "item": {
          "id": "c1a63515-e8f2-4fc6-bbbf-3f7f14c6ee56",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5a3eb26d-30b6-4f73-9cf0-fe721aba7990",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 0
        }
      },
      {
        "id": "e1e93f2b-2c9a-40f0-890b-e4ec39e0afa8",
        "cursor": {
          "ref": "95392cd2-59eb-4144-b08b-0cca1842118b",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "085fe984-ae39-417d-986f-5307550328e8"
        },
        "item": {
          "id": "e1e93f2b-2c9a-40f0-890b-e4ec39e0afa8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "30bd4d1a-8446-498d-aea8-ee7b691f98be",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "c15835c6-c1e1-4d99-8322-13f136d0108d",
        "cursor": {
          "ref": "daf14886-ea10-48c1-b50c-9ff40eed7f5b",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1d706031-a170-478d-b4c4-95ac139b686c"
        },
        "item": {
          "id": "c15835c6-c1e1-4d99-8322-13f136d0108d",
          "name": "did_json"
        },
        "response": {
          "id": "6ece927c-d181-4603-9d48-20162de2666c",
          "status": "OK",
          "code": 200,
          "responseTime": 304,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b542c753-cf8c-414a-bbc8-2e404b262b73",
        "cursor": {
          "ref": "235d2765-8ee1-4ce2-b2a7-7cded83d4ae7",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c35a5d30-53f9-4496-9dd5-1f2863b8c19d"
        },
        "item": {
          "id": "b542c753-cf8c-414a-bbc8-2e404b262b73",
          "name": "did:invalid"
        },
        "response": {
          "id": "2fda70e7-2500-409a-a488-83e90dfc659b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b542c753-cf8c-414a-bbc8-2e404b262b73",
        "cursor": {
          "ref": "235d2765-8ee1-4ce2-b2a7-7cded83d4ae7",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c35a5d30-53f9-4496-9dd5-1f2863b8c19d"
        },
        "item": {
          "id": "b542c753-cf8c-414a-bbc8-2e404b262b73",
          "name": "did:invalid"
        },
        "response": {
          "id": "2fda70e7-2500-409a-a488-83e90dfc659b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0eace9-71fb-4064-94dc-4e60307d8b37",
        "cursor": {
          "ref": "a13d7edb-490a-45fc-a194-14cddeeac4db",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a332aeaa-7fe8-4d3a-986d-7b6064418e9e"
        },
        "item": {
          "id": "cf0eace9-71fb-4064-94dc-4e60307d8b37",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f33f1b11-7c6d-490e-94f8-95e93538a38d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3caf560e-b1ca-4e3c-8c9b-0377b0171a21",
        "cursor": {
          "ref": "a91b24d9-6d69-4270-a73e-748081bf6d12",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "38f2d395-b4a8-4d57-97a3-99cb876855c3"
        },
        "item": {
          "id": "3caf560e-b1ca-4e3c-8c9b-0377b0171a21",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c1567fc8-4fab-481d-9707-daf86134e94b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a1f879-16ff-47fc-aa13-1fc46e20c1c2",
        "cursor": {
          "ref": "f6d30b55-6274-48d6-966c-93bb2b09b127",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9b7e409d-d38c-4eac-8173-75711f88182b"
        },
        "item": {
          "id": "87a1f879-16ff-47fc-aa13-1fc46e20c1c2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b56a9ea5-b85f-46ec-a111-aca2024a1ce0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1815f3fe-0a62-4602-84d2-a485612aa709",
        "cursor": {
          "ref": "0bf39cf6-db87-4886-a442-7ab81652038c",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "875a99c8-f0ce-4f4c-978e-4ba8145a6de8"
        },
        "item": {
          "id": "1815f3fe-0a62-4602-84d2-a485612aa709",
          "name": "identifiers"
        },
        "response": {
          "id": "d8f72cdf-4d17-4716-aeab-237e0788c774",
          "status": "OK",
          "code": 200,
          "responseTime": 190,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15525b5-d53f-4ee8-896d-ea01459be5b2",
        "cursor": {
          "ref": "4714d8a4-ed04-4fc7-9188-5f7c8e33cb11",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c510264c-da08-4f2b-a79b-8d14c7d5803c"
        },
        "item": {
          "id": "b15525b5-d53f-4ee8-896d-ea01459be5b2",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "49ac8378-b87c-4db8-9ca8-98f2bc00a655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097f3839-da86-4bbf-b243-4ea6ec955d03",
        "cursor": {
          "ref": "b7f3cd05-0e0c-4716-b144-9729ab7096bb",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0d86fef0-7e1c-4a49-ae0b-fa36d7cb17d5"
        },
        "item": {
          "id": "097f3839-da86-4bbf-b243-4ea6ec955d03",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3d1d9c05-df8b-4de3-90cd-66b2f3e8e817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6713f92-3fc0-4721-bf98-9f7d772aad7f",
        "cursor": {
          "ref": "67e28d2e-01af-413c-90c9-18cd1c60e46d",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c8790d17-3ebc-43e0-b0cd-479b2e3e961d"
        },
        "item": {
          "id": "e6713f92-3fc0-4721-bf98-9f7d772aad7f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5dbbe07f-ece6-41a4-9d4f-971ee4f3b0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f52a4ec-20fa-4338-b013-2a9bf54bffce",
        "cursor": {
          "ref": "86d655a2-32b0-4380-b21f-bddad96ae07f",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "48ea885c-b2c4-4dbb-97f5-aef776277c27"
        },
        "item": {
          "id": "5f52a4ec-20fa-4338-b013-2a9bf54bffce",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b5c2809d-7d37-4544-9971-c96f7fffadc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbca0c7-2a34-4bac-a6a7-6ce438b621ee",
        "cursor": {
          "ref": "7bb7494e-b072-4316-b9c9-4c21ee480e9f",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fd8c674e-fd59-4cb5-ae91-b69cae4c905f"
        },
        "item": {
          "id": "5bbca0c7-2a34-4bac-a6a7-6ce438b621ee",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6f3236df-c77e-4c63-bc60-82a15ddb31b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b9178c-d025-43f5-9473-f2dab56494f0",
        "cursor": {
          "ref": "2ccb7e19-2e67-4c19-b9e8-63a589ef84d9",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ce40bd5d-3c32-4a81-a7c7-3ad7128e35f3"
        },
        "item": {
          "id": "31b9178c-d025-43f5-9473-f2dab56494f0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "afae48a5-5a70-4ba5-84dd-99eba4de0dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b44a90e-7dba-404d-8efa-052f79f35f73",
        "cursor": {
          "ref": "8b5bbcb3-85d2-47f2-8537-40bb8d6b9fd9",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b9c7cfe1-fc57-4541-be79-bd916923ea4c"
        },
        "item": {
          "id": "1b44a90e-7dba-404d-8efa-052f79f35f73",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4627f427-bf50-45e1-88b9-5049c1f9250d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a81bc3-3e25-4821-8be2-5b2835e15cd2",
        "cursor": {
          "ref": "46497f07-9fe1-4915-9567-4f0357bbc8fe",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "aa89c504-2f41-4b55-9f7c-097f89992eb2"
        },
        "item": {
          "id": "31a81bc3-3e25-4821-8be2-5b2835e15cd2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "118e6181-9366-4121-bda8-b6bcbd479310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089aab21-74c3-4708-be2d-b51dd456c88c",
        "cursor": {
          "ref": "fb554709-d273-4890-8b2f-0967a3770f30",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "6688601c-43ac-4ae9-92de-efa44ace8e57"
        },
        "item": {
          "id": "089aab21-74c3-4708-be2d-b51dd456c88c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "541fde3d-fde8-42ed-808b-5822d4d89380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcb025c-42f9-4a78-8e40-96bd9a0e4397",
        "cursor": {
          "ref": "993740f4-8b86-4100-8f17-b440c75091d8",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "24b9a6b7-7267-4b6f-a57d-7339795b9c06"
        },
        "item": {
          "id": "cfcb025c-42f9-4a78-8e40-96bd9a0e4397",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "407c5379-0e80-480f-814e-b3351b964092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be3fdee-abb1-4695-ad4d-127d7a618639",
        "cursor": {
          "ref": "6fbbd576-75a1-4caf-ab5f-dd51aa7051f5",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "50d64eeb-c719-49f9-8e44-662949cef374"
        },
        "item": {
          "id": "1be3fdee-abb1-4695-ad4d-127d7a618639",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5c6ab622-b3ce-4d30-b310-6710133b1dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903d051e-3984-4980-8c73-dea3ccf4c517",
        "cursor": {
          "ref": "69e20d74-ad45-4462-b60b-23a26955192f",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fd192af4-cf8b-4f37-b6a9-f9f6d8bf3733"
        },
        "item": {
          "id": "903d051e-3984-4980-8c73-dea3ccf4c517",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5bceeab9-c9d7-496f-9e9d-8fd7c0d18920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1d4c75-827c-4cea-b3b5-107117ee39e5",
        "cursor": {
          "ref": "b7efc964-1f6b-4e84-bfb8-6d59b539a301",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b820d3e7-f46c-4b24-8ab4-cbd407d224fa"
        },
        "item": {
          "id": "1d1d4c75-827c-4cea-b3b5-107117ee39e5",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ba2abffd-3170-45af-a1e4-a390db0a912c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187c926b-3b86-4bdf-9e98-4601e06ddb15",
        "cursor": {
          "ref": "c1c822ba-948d-4a0c-8b97-af0a056a585c",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d2351304-5b64-499f-a407-bb2ba5aa6ad5"
        },
        "item": {
          "id": "187c926b-3b86-4bdf-9e98-4601e06ddb15",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4b4739cf-c56d-457e-b49b-0b510600224c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c920f090-e256-487c-b67d-ed29a121d26d",
        "cursor": {
          "ref": "6a683d23-060a-406f-b92f-36108e85c06d",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "692046bb-b917-46c0-ba59-1e4c21ea8867"
        },
        "item": {
          "id": "c920f090-e256-487c-b67d-ed29a121d26d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "87fd660a-b4c8-47f9-90ae-e04992d94741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c889c950-394a-43ee-b4a0-d6ed5d29ea37",
        "cursor": {
          "ref": "acbab4d7-2deb-4f0f-a496-79b619dec4c9",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "21546fb0-9fb9-46de-b039-88f500efc9c3"
        },
        "item": {
          "id": "c889c950-394a-43ee-b4a0-d6ed5d29ea37",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8dbde747-b5c1-4fb5-b2d7-6bc433a38c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5d17ae-ae51-4d0e-baa7-a4b70b9a0d3b",
        "cursor": {
          "ref": "41a88f59-1538-40cd-a645-217d67d8f830",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "ed46099c-c741-4416-b16f-1f0e2d93b373"
        },
        "item": {
          "id": "8d5d17ae-ae51-4d0e-baa7-a4b70b9a0d3b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b686c749-7106-42cd-bb50-ef8d1d483d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e128b49-b4f6-4cf0-8a05-30ff65ab2f73",
        "cursor": {
          "ref": "e02bfd6f-382b-416a-b6ae-b8c80072c55a",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2c618546-1158-4343-a095-d267472fac56"
        },
        "item": {
          "id": "4e128b49-b4f6-4cf0-8a05-30ff65ab2f73",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "55eb0f2a-697e-4cce-963e-86f8ba39a957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d967aeae-d92e-4832-9e69-79ad13046097",
        "cursor": {
          "ref": "d4d09b58-5457-4c4f-b14b-d4cb37f144c5",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9784381d-8bd7-490b-ae43-6ab0f3045287"
        },
        "item": {
          "id": "d967aeae-d92e-4832-9e69-79ad13046097",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "db1e5b64-b6c3-4b33-822a-31ad02f4944b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5853152f-6887-4400-986d-a508db1c7b42",
        "cursor": {
          "ref": "4cba8379-b2cb-4139-9dfa-47f2addaa31e",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "98ed1be7-32a4-4167-bcb9-baf1bd5731b2"
        },
        "item": {
          "id": "5853152f-6887-4400-986d-a508db1c7b42",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d96c4240-03a2-465f-9a27-10211731f9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4046ce7-c816-4cf0-8c53-d680d0d4e53b",
        "cursor": {
          "ref": "ef730b01-b8fe-4ca0-9493-190395d3ef49",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a12d6bd6-29a9-432e-89b3-416ae9f1a73e"
        },
        "item": {
          "id": "c4046ce7-c816-4cf0-8c53-d680d0d4e53b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "dfb2b966-bcb9-4507-8cf0-fdc2bf471192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c186742-35f7-44ea-8312-c70c11ce54ef",
        "cursor": {
          "ref": "372a083c-b69f-447f-8aed-b8439064ae39",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d925569e-ac28-4ccf-a59f-a3b04360a048"
        },
        "item": {
          "id": "2c186742-35f7-44ea-8312-c70c11ce54ef",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "0b1cfe45-b6fc-4b03-b840-12150da94a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b671db-c54b-4960-8a1b-4da8c52e1d4c",
        "cursor": {
          "ref": "b2ecb326-7f2c-42cc-a2f1-2e8e7cc050ce",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7305b25b-2d23-4687-9e84-ab49b1314525"
        },
        "item": {
          "id": "43b671db-c54b-4960-8a1b-4da8c52e1d4c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0dd0bf4b-4287-497c-94be-0e975b97c248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd807ab-3c24-4417-938b-cd647bd49e6b",
        "cursor": {
          "ref": "556a11f3-4df4-4017-95cf-b521004c2132",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "66a72e19-38c6-418c-b75a-fd278935e33d"
        },
        "item": {
          "id": "4cd807ab-3c24-4417-938b-cd647bd49e6b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "edbbd670-5071-4a00-a952-dd57c46e3b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60631f8-bc85-4e3d-86e9-4c74da46e442",
        "cursor": {
          "ref": "b8c8566a-469d-43c1-bb22-08d7f5c1b334",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b267ffe5-b8a2-4e43-9902-abca1a186298"
        },
        "item": {
          "id": "f60631f8-bc85-4e3d-86e9-4c74da46e442",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ae9493e8-7837-45ba-af6f-db960c789723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d74419-7c1c-40dc-960e-9bd3cc73ff44",
        "cursor": {
          "ref": "a0d02a39-bf4e-47f6-aeb6-5e92d1ea6e59",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ea5c2008-15ab-4517-a14f-bde5bc3ea21a"
        },
        "item": {
          "id": "29d74419-7c1c-40dc-960e-9bd3cc73ff44",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "471412ee-6853-4123-89ee-315470c10ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e90b23f-cecb-4e58-be89-a018aa7d8277",
        "cursor": {
          "ref": "fba66e2b-b005-4a6f-96ce-91280cc33b2f",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e0abef5f-7f63-40d4-be5c-dfb7b99a66c4"
        },
        "item": {
          "id": "8e90b23f-cecb-4e58-be89-a018aa7d8277",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "30a27272-251a-4791-a237-23dc37084df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2fa9ef-39f1-436a-b1e2-65e2dac7105e",
        "cursor": {
          "ref": "6f074d45-db24-4dce-bacb-7ba745078740",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f2edb042-2e20-42d3-94c3-0e7c76eda69e"
        },
        "item": {
          "id": "0d2fa9ef-39f1-436a-b1e2-65e2dac7105e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "28d92080-dd0b-42df-91e1-780b76612c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fffc2d1-bfe4-4957-b4d4-0cab0ff0a899",
        "cursor": {
          "ref": "9dfbe03a-4e4b-4ad2-ae6f-ff3cd7577f17",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1a3b645e-f9ee-433b-ae7f-ab3c19eda2f9"
        },
        "item": {
          "id": "9fffc2d1-bfe4-4957-b4d4-0cab0ff0a899",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "af10212b-1766-432b-8b26-cf4241eb68ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc83ab37-4f12-4213-97c2-8e2066b54474",
        "cursor": {
          "ref": "0c61beef-6858-4647-a339-c25a53ea066c",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "33a66ed0-d05c-46a3-9a01-725c295d75a6"
        },
        "item": {
          "id": "bc83ab37-4f12-4213-97c2-8e2066b54474",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3d489f65-bee6-4dad-9eda-ebc67256e453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68e7b68-3e02-4601-80cd-c1b7e5c0a922",
        "cursor": {
          "ref": "078f2e4e-4f3a-465e-b638-b157529fab97",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5f71968c-9dda-4734-a601-73cd1dc8f113"
        },
        "item": {
          "id": "e68e7b68-3e02-4601-80cd-c1b7e5c0a922",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "00acf8ad-0ec6-4862-8b1c-e50ba59bfd00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf44032-72e5-4586-8ad8-6e65d1be88d5",
        "cursor": {
          "ref": "37831ce3-3c0f-4c2c-b5bb-dec65435c7ec",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b9ac3a8d-385d-4f32-a6b2-5722ff2e0c79"
        },
        "item": {
          "id": "3bf44032-72e5-4586-8ad8-6e65d1be88d5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1908c9f1-2968-4aec-9ca6-201a2f7c8252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048dd33d-6a0f-4304-851c-7a2bd6a6dad3",
        "cursor": {
          "ref": "6b6b863f-eae9-4b5f-970a-1b589dc3e5ff",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "86fa0bbc-47dc-47b9-bc90-f903e2c2e57e"
        },
        "item": {
          "id": "048dd33d-6a0f-4304-851c-7a2bd6a6dad3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8c238a40-e49f-45e9-a23a-166a1e398161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c098ab-f305-441e-80b5-ac1009306d04",
        "cursor": {
          "ref": "f31f40f1-ce11-4241-8b05-3f7a84516859",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b4e09658-34bd-443e-add8-babfcf4866a2"
        },
        "item": {
          "id": "90c098ab-f305-441e-80b5-ac1009306d04",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "76c8f8d7-4952-4752-9c86-cda8ba9ab9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614580a0-2689-4a3f-9801-09e85051cf0d",
        "cursor": {
          "ref": "2b94842a-ba84-4b71-84b1-93fb599c2a7b",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dbedd29f-cafc-430e-b22d-65d0fa4022f4"
        },
        "item": {
          "id": "614580a0-2689-4a3f-9801-09e85051cf0d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "bd13bc78-70f4-41dd-aa4b-c2dd86dfd628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4b5508-c2b2-4813-a4d7-2d9dc87fb3e8",
        "cursor": {
          "ref": "71b039c6-4fbb-4847-92aa-48202fec9211",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8c8205ad-a584-4e47-b035-bdb05e1e6936"
        },
        "item": {
          "id": "9e4b5508-c2b2-4813-a4d7-2d9dc87fb3e8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "05ed5c68-f93f-4627-a7c1-a7061cadac1a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72da3d93-76ca-4026-a2bf-0225686f0d35",
        "cursor": {
          "ref": "33235719-4dfa-4982-9a59-570c125f5716",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "38ccf043-a2b3-4cef-b864-55046e6ecadc"
        },
        "item": {
          "id": "72da3d93-76ca-4026-a2bf-0225686f0d35",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "87c47bd6-8c49-4bb3-9b73-1ad67d110e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37659d0-8b46-497a-a130-0c3f4de8d325",
        "cursor": {
          "ref": "8ad1a2e5-1f0a-402a-a378-3b5ae3487ee0",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "60a1fed1-e182-4502-aa5d-c5ee6c7f1663"
        },
        "item": {
          "id": "f37659d0-8b46-497a-a130-0c3f4de8d325",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2b018229-2dff-4a83-88ed-9d7964d32ac2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2321c6ec-a93f-4536-b8d4-8691540f6533",
        "cursor": {
          "ref": "29cc6317-ac2d-4871-8a6a-faf24809a206",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6b8a3d4d-bc26-4c61-b68a-f0553ae0cd41"
        },
        "item": {
          "id": "2321c6ec-a93f-4536-b8d4-8691540f6533",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7cee8f48-59f6-4d27-bd65-f00131052b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b924921-5523-4d88-8e68-1d66f4c96a49",
        "cursor": {
          "ref": "e6e3533a-5e0c-4442-9a2d-3dab560fc989",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cd0a7852-a46a-487b-802a-5637c4d52aff"
        },
        "item": {
          "id": "7b924921-5523-4d88-8e68-1d66f4c96a49",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b76b6d4a-0e06-4d80-9ada-2ed008017e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6d034b-0611-4fe5-8a09-48252ac4fc2e",
        "cursor": {
          "ref": "bfcb1950-50b6-4cec-a9f2-35a45f7228e0",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4d363c06-37c7-4d5f-b555-a14366f67a77"
        },
        "item": {
          "id": "8f6d034b-0611-4fe5-8a09-48252ac4fc2e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a547d394-d7e7-4139-b453-4ba00e152075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4720bb3-06bf-4423-9bb0-8f455eba1265",
        "cursor": {
          "ref": "47b3c052-b2be-4484-96ce-669bd7b0a84a",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "af94a5a0-c752-4890-820b-c6fd161c44ff"
        },
        "item": {
          "id": "b4720bb3-06bf-4423-9bb0-8f455eba1265",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "61a8547d-bdb0-456b-9209-ef331adcba91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aea512b-ca31-466c-a37b-4481906f5207",
        "cursor": {
          "ref": "22beaa2e-4a1e-4117-a1ce-75eedec54ccf",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ae8d3f2d-bde0-4221-a757-2f56828998a8"
        },
        "item": {
          "id": "6aea512b-ca31-466c-a37b-4481906f5207",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ceff4a2d-f7fa-45c8-b5fc-67fedeb0dc84",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6691bb41-e1f5-4469-9c16-ac3325e8964b",
        "cursor": {
          "ref": "b9909a84-7d2d-4e38-bf58-023cfb7fc654",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c0219785-f835-4eee-87d6-fef11e50a8d6"
        },
        "item": {
          "id": "6691bb41-e1f5-4469-9c16-ac3325e8964b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e1461c24-0484-4f80-9300-501f926d8a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b675d2b-5fb1-4a6b-bf0d-8ed3cbf6e6d3",
        "cursor": {
          "ref": "1c4b93dd-ef85-4e5c-9a79-3756b1236631",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e1507260-db31-439f-8e68-afb74d0445de"
        },
        "item": {
          "id": "8b675d2b-5fb1-4a6b-bf0d-8ed3cbf6e6d3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1a4529ff-1d8b-4723-a47c-0da12100a1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843124fd-267c-4e44-b306-bbfa582b620e",
        "cursor": {
          "ref": "a5e04a83-7209-40dd-88e3-b87bb010caab",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "473e2fa4-90fe-4c6b-88a4-2494c8fe28c7"
        },
        "item": {
          "id": "843124fd-267c-4e44-b306-bbfa582b620e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7883bc4d-beb3-4ace-877b-b374a3bafd04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "306b6834-f6d7-4114-bb30-ff435053e112",
        "cursor": {
          "ref": "ed4ec1d0-b164-48c6-85a3-d2bf4c151702",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "41ce2b78-5b05-418f-aa10-274485078c66"
        },
        "item": {
          "id": "306b6834-f6d7-4114-bb30-ff435053e112",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "882308aa-7b79-4dff-a013-002a442a48be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc38df7-a93b-472c-9067-93f946c07a8b",
        "cursor": {
          "ref": "8ebec552-d9a3-4e29-bd2d-d4bc946776e4",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "06f34572-e26b-4b1b-a5f2-07304da45305"
        },
        "item": {
          "id": "fcc38df7-a93b-472c-9067-93f946c07a8b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3aff8f56-4608-4fd2-80b9-9b44b1bf9a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2775fc5e-6eff-4164-8ed2-15c4e0e80147",
        "cursor": {
          "ref": "d8bd36d5-6dfb-4941-9904-673f0a2604fb",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6804571e-f1b1-491b-bcb8-04be283b8b66"
        },
        "item": {
          "id": "2775fc5e-6eff-4164-8ed2-15c4e0e80147",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "809ee94a-a859-4486-a592-76859d72c1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2081dcd1-5b82-4bc5-8299-95c8ea78e3d9",
        "cursor": {
          "ref": "59a6f3dd-20ff-42a4-b58f-1dc67a510335",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9e502497-1f36-4945-ad2d-e969aca9b7a8"
        },
        "item": {
          "id": "2081dcd1-5b82-4bc5-8299-95c8ea78e3d9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c536fab1-6527-4d42-83c1-e34ff376e9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aee600f-155c-4deb-b736-961bc5403d3b",
        "cursor": {
          "ref": "1b0e6fcf-999d-45a0-a320-fc144c1e0dae",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3c57f7dd-764b-4f80-9b00-d84fe70a9088"
        },
        "item": {
          "id": "6aee600f-155c-4deb-b736-961bc5403d3b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9784276e-c98e-453e-8cd2-b1e02f43b10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e012b1b-a481-46e0-997a-c961d01a27c2",
        "cursor": {
          "ref": "7f33f5b4-62c3-4b91-bc2c-e6506242fdf4",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0daa43db-7003-4777-bd3c-4feae3482fa8"
        },
        "item": {
          "id": "0e012b1b-a481-46e0-997a-c961d01a27c2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "65c232c7-b1cd-4a23-a713-af61ebcd8fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd3d2f1-44a9-4737-9d2a-a6a5ed474dc3",
        "cursor": {
          "ref": "6c45b136-0db7-4343-804d-f30a5c2f91f8",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8ce953a9-608a-4625-86ce-e4cad0d8c101"
        },
        "item": {
          "id": "9bd3d2f1-44a9-4737-9d2a-a6a5ed474dc3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5e6582d0-5596-449a-ac7f-338536860bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87f135b-055a-44ce-b568-9ceb8357ef7f",
        "cursor": {
          "ref": "40bf74e6-07d9-4654-b7f1-11a6e246ef32",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "803676f4-2a2e-4a99-af05-1ec0f2d714ee"
        },
        "item": {
          "id": "f87f135b-055a-44ce-b568-9ceb8357ef7f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ac7763f6-0d94-4539-94ee-07bc322ce1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be07f99-ce9a-4973-88e7-d3d17c7092b1",
        "cursor": {
          "ref": "06fb9866-40f8-4a39-a99f-0a80c7454605",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6e137e26-e0bb-40f4-aec6-63875a7ffee5"
        },
        "item": {
          "id": "9be07f99-ce9a-4973-88e7-d3d17c7092b1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "479c340f-5990-4434-a945-3a198df6b719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c28297-f3bb-45ad-8bf4-6cecdd0432eb",
        "cursor": {
          "ref": "73fbee16-6a30-4c00-8b00-9dfd91ad7aeb",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c7c3adc4-e130-48d1-87fd-8fe31a8f13dd"
        },
        "item": {
          "id": "59c28297-f3bb-45ad-8bf4-6cecdd0432eb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bbd19dbb-8b10-4991-9077-4a775ac38d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c594107-9ce2-4857-993b-654ad01ccbc1",
        "cursor": {
          "ref": "cfeb7dc1-c160-4fd9-847d-1c82b3747ade",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "36b2ca47-43a5-4bb7-86ed-678f8f427d69"
        },
        "item": {
          "id": "8c594107-9ce2-4857-993b-654ad01ccbc1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "87d92ced-cef9-46e9-8413-a8955c01cd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae89b269-7d86-42a8-9def-0fa464542318",
        "cursor": {
          "ref": "6163a145-20e5-4528-939a-e083b36b74ac",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c71cb7c5-1dbb-46d1-b885-6cb3fffab72c"
        },
        "item": {
          "id": "ae89b269-7d86-42a8-9def-0fa464542318",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "18e37673-fd29-4361-8cc1-44c56b4facaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820e220f-669c-4b88-a5f0-ba301231da26",
        "cursor": {
          "ref": "b492e9db-2da1-4a56-8604-5b49a0888c38",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c55534e4-8380-427f-a529-756df5351569"
        },
        "item": {
          "id": "820e220f-669c-4b88-a5f0-ba301231da26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c0dba1ec-9543-4661-b30a-17f908db8105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917c6ca8-dcb7-4e77-965e-7e965915404a",
        "cursor": {
          "ref": "b813a826-5dd7-430b-96e7-8b8da22819b4",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "32a157a3-3e0c-4e5d-8ee9-d67636119951"
        },
        "item": {
          "id": "917c6ca8-dcb7-4e77-965e-7e965915404a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2946e0ba-f1c7-4028-bded-4c0137774de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151048da-11f2-46a4-af8e-07e1ad0f2862",
        "cursor": {
          "ref": "f63297fd-02e5-4b69-a07b-3570da6a196a",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "42cdc9e0-a52a-48ad-8786-e8f36886698d"
        },
        "item": {
          "id": "151048da-11f2-46a4-af8e-07e1ad0f2862",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e0f9502b-3687-448b-93ec-faf7b2ca18c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d433672-63eb-4d85-882b-895e87368090",
        "cursor": {
          "ref": "02f323fe-da80-40b4-9c10-515c661bf06e",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bb624336-6d3c-4a75-9bed-60c48ad7f4ea"
        },
        "item": {
          "id": "5d433672-63eb-4d85-882b-895e87368090",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "20753f62-6dad-498d-a2f6-de3bbf656066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92957384-2cd4-43bd-8f98-9ff865255588",
        "cursor": {
          "ref": "77f5348b-559e-401e-9c75-429bcb10201f",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "558134de-36cb-466a-863d-6e2285bb51f3"
        },
        "item": {
          "id": "92957384-2cd4-43bd-8f98-9ff865255588",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "35bc906f-c7e8-46dd-8ab9-71c30d829f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff20100-419e-4710-98d0-fe51a3414675",
        "cursor": {
          "ref": "6b6df623-edf8-410d-919b-7be8d47f72a6",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d2cf67db-5ba3-4fda-bae8-606a6e632167"
        },
        "item": {
          "id": "5ff20100-419e-4710-98d0-fe51a3414675",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "5335bae2-46c4-4a28-a273-2994120ef589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495a2c26-d489-4f4f-8dff-c65367104710",
        "cursor": {
          "ref": "5716b4c0-f251-4af6-a69c-f2908abd1c67",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "449f1688-0b62-4cda-873d-fb1975d84a19"
        },
        "item": {
          "id": "495a2c26-d489-4f4f-8dff-c65367104710",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4170dc35-ce15-46d1-8f30-b5f2a7482607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d76d62-41d1-44c1-8c48-c319c8e0156e",
        "cursor": {
          "ref": "940ac8d3-983a-4cc1-9deb-f431d0ac8f1f",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5f972fd2-d646-4485-a4da-acabd3232c3a"
        },
        "item": {
          "id": "82d76d62-41d1-44c1-8c48-c319c8e0156e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8be4441f-e142-42ef-838d-46e322ed1425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7a1865-1d0f-4ae6-ba86-011fd24c00cf",
        "cursor": {
          "ref": "12eb5859-e643-404a-825c-dfb83df14ebb",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0eb6a7b4-35e8-418a-91a2-05525e0ee123"
        },
        "item": {
          "id": "3d7a1865-1d0f-4ae6-ba86-011fd24c00cf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8d07ec5a-117b-4d22-ab26-86d847372891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511e28cf-828b-4aeb-bca1-d608d14baa93",
        "cursor": {
          "ref": "7875cbd3-04b2-42c7-9736-d364aa7329c4",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5fdad1bd-5fdd-436b-ad95-7c7a02a901c4"
        },
        "item": {
          "id": "511e28cf-828b-4aeb-bca1-d608d14baa93",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d5f51739-0f38-4dcb-b651-fa61de25c36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c674284e-7555-4670-8e53-96ba13a8d724",
        "cursor": {
          "ref": "d3cfcf02-398d-4584-af2a-1d4ed25110db",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "884e6c45-f1cc-4595-b15e-9119b0d094e7"
        },
        "item": {
          "id": "c674284e-7555-4670-8e53-96ba13a8d724",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a758ca02-4e36-476a-8db3-e0b30c9dad7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16f16a0-1a7a-4ce4-8564-7a8d41194db6",
        "cursor": {
          "ref": "0e235eb4-8507-4050-a61d-71cf7a9acab7",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3aeb4f61-6b99-4985-a490-22638c883b68"
        },
        "item": {
          "id": "a16f16a0-1a7a-4ce4-8564-7a8d41194db6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4e51a113-efe0-4635-8390-d0afb76e6af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260b386a-a6c7-445b-8a60-028f7723bc13",
        "cursor": {
          "ref": "519af311-3b9d-4b30-a141-a4f1fd94d3d5",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e77082f3-c964-4e5b-b4f9-6029769004a7"
        },
        "item": {
          "id": "260b386a-a6c7-445b-8a60-028f7723bc13",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "395827e5-a094-4b1c-a2bb-71b120c017f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d65d54-0d7e-4583-bfc7-a18e1432b461",
        "cursor": {
          "ref": "d08e1a32-24db-47e8-9afc-368e90f00e41",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bd44178b-f89f-4694-b949-7d3a09f6f9e6"
        },
        "item": {
          "id": "b3d65d54-0d7e-4583-bfc7-a18e1432b461",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d510821f-b118-4a00-a783-3272df9cf091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e84318-e75c-446f-8a85-4597d5ff1d3a",
        "cursor": {
          "ref": "497bb00d-47a5-4ac1-9b33-e8bd7a29c764",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e3b1950b-cccf-4d06-b61e-4debf2e8252b"
        },
        "item": {
          "id": "a1e84318-e75c-446f-8a85-4597d5ff1d3a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3e6aa06f-6bd9-4aee-a8a8-18a17e8e594b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f88171-0aa1-43ea-8e13-c980dde79f9c",
        "cursor": {
          "ref": "8cdb860b-cc20-4124-8747-f05774a94590",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "8048b6ad-7c77-4765-a022-53e591b0851d"
        },
        "item": {
          "id": "c8f88171-0aa1-43ea-8e13-c980dde79f9c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3ca98cd9-5889-42e7-870f-07c06468bc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac5b9dc-c23b-4b58-9a8c-68e1c11f471c",
        "cursor": {
          "ref": "118fbae7-e9d0-49b4-90c9-4343f193eede",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "831222d1-e4ae-407c-89ee-d627399325b0"
        },
        "item": {
          "id": "bac5b9dc-c23b-4b58-9a8c-68e1c11f471c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "becd6783-1799-43bb-ba9a-3dbea3027b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c2a4f6-86ad-4cb8-9626-8d8efcefa1c1",
        "cursor": {
          "ref": "434ae932-4cc9-4239-8798-4cd2c01ac6a3",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5858ca95-4604-4a42-989e-ee19b347cb6d"
        },
        "item": {
          "id": "11c2a4f6-86ad-4cb8-9626-8d8efcefa1c1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "84372c5e-1799-4a28-afff-d2f405b0cc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739a8c82-9f9c-4429-8449-3f26acc8560b",
        "cursor": {
          "ref": "d7681ce8-38f8-4178-9c78-209bfacd6fdb",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5fc50930-2558-47ac-902b-2f9281608bbf"
        },
        "item": {
          "id": "739a8c82-9f9c-4429-8449-3f26acc8560b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "69f33e24-4d96-4976-93c4-0cd24e8e6529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d198d7-e122-4611-88e3-be999459d623",
        "cursor": {
          "ref": "723e4631-c750-4b3d-a8f4-172d3530ea25",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "558774bd-b268-423a-b9bb-f2ae2573aa25"
        },
        "item": {
          "id": "a1d198d7-e122-4611-88e3-be999459d623",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "471bbfcd-9748-4a7f-bb02-f15ecbc8b9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df941c0-6acc-4049-8e38-f57888f6a79f",
        "cursor": {
          "ref": "fbe3015d-7e68-49c6-a99b-3cdca6b901ae",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aa3dd881-1d9a-43d4-86eb-ab7880900ed7"
        },
        "item": {
          "id": "4df941c0-6acc-4049-8e38-f57888f6a79f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f700ce8a-d39d-4e67-b45d-43ae7df44ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e39664-d695-4fb4-a349-178b758e58e8",
        "cursor": {
          "ref": "b82887a7-e512-47f8-adab-6fdfe4dde705",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b4c79584-656e-4926-a289-3b6368b2fbb3"
        },
        "item": {
          "id": "b4e39664-d695-4fb4-a349-178b758e58e8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d3c35fda-214a-4eda-b041-ada9e53dc920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a846f32b-2254-43b0-95da-051ccdcc4d34",
        "cursor": {
          "ref": "587cd3fc-30ca-4b43-a5e5-663930910372",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "94b04a46-c6ec-43ed-97f1-ab0cd3248d5c"
        },
        "item": {
          "id": "a846f32b-2254-43b0-95da-051ccdcc4d34",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5ab264b4-9925-47db-8051-e73b47e4a277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0d2fcd-9385-45b6-bbae-cda52038bbef",
        "cursor": {
          "ref": "4f34f01e-dc8b-4fd8-87b3-2261dd7d78c9",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6a8628a2-c586-4ec6-a8f4-0fc330212a53"
        },
        "item": {
          "id": "cf0d2fcd-9385-45b6-bbae-cda52038bbef",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6e0392b7-7872-490b-a6bd-22d922d7477b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e54f26-9b5c-43c2-930b-f537c6fdcf08",
        "cursor": {
          "ref": "4dd6a1bb-f0f7-427b-911e-dfd5d30b38fe",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2f93379c-155e-4edd-9fad-9a3e6b481b83"
        },
        "item": {
          "id": "10e54f26-9b5c-43c2-930b-f537c6fdcf08",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cfebe8f3-9898-4b51-899c-ab3147322f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814b4336-354f-4f8c-a34c-3e6af0527c5d",
        "cursor": {
          "ref": "e64fb695-f815-42ed-95c1-bfea34cd2670",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3924ad06-b4e7-4e43-a7b4-73ef0f5c258a"
        },
        "item": {
          "id": "814b4336-354f-4f8c-a34c-3e6af0527c5d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "05904dae-ef75-4ec1-a948-7c884895f9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a122d589-4eb5-4d9a-b35b-2cb5538e2647",
        "cursor": {
          "ref": "b92c7f25-2fb7-4ebe-82d5-e7ecf30c6c37",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "765c4031-4e48-41cb-8702-3a0cf91ae0d5"
        },
        "item": {
          "id": "a122d589-4eb5-4d9a-b35b-2cb5538e2647",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "b0792d87-7ea7-43b9-a662-5476bd5ede07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b21e6ca-ed10-44e4-9fb5-434334cdb3e6",
        "cursor": {
          "ref": "84312e83-98c0-495c-9e90-a194cd359609",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5124bb9f-95a4-46d0-849f-49b121d0d8ce"
        },
        "item": {
          "id": "7b21e6ca-ed10-44e4-9fb5-434334cdb3e6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2323f083-eee8-4563-bdbc-11050c8baa4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fb1c40-370d-4720-81fd-5d2c55f8fded",
        "cursor": {
          "ref": "903d4352-bd0d-4583-bcd5-a6180eb92004",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "932980ba-4cc1-4825-baa7-2e11588e1b22"
        },
        "item": {
          "id": "14fb1c40-370d-4720-81fd-5d2c55f8fded",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a9de788d-f93f-4432-a10c-a0d6bb09dd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8dee05-35fd-400e-a542-16d4f588a1a3",
        "cursor": {
          "ref": "bf20250a-706c-48ee-b590-19f7c271d92c",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e96ce8d5-e041-43ed-b867-d736cf661d42"
        },
        "item": {
          "id": "9e8dee05-35fd-400e-a542-16d4f588a1a3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "83ed27c2-905a-445b-b48c-19233450277a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a8a388-05b9-4f9a-8527-9ebf987d93c7",
        "cursor": {
          "ref": "2053868d-d728-4ec8-be68-0e1f15ddcfe8",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e911866a-e904-4414-8421-fbbc7e4ab289"
        },
        "item": {
          "id": "e6a8a388-05b9-4f9a-8527-9ebf987d93c7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bee22d46-060d-4109-9001-54800acfeacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03438dbd-47b0-409c-a24d-0b249d279314",
        "cursor": {
          "ref": "e35cab68-77da-4192-a346-a5d1209d7473",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0f171db0-d724-49ad-9e95-5d0f770bb859"
        },
        "item": {
          "id": "03438dbd-47b0-409c-a24d-0b249d279314",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4c152972-ccdf-44d8-95b3-b1fdb26f9a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09462b25-ef3c-4121-82c8-28fc6d7df690",
        "cursor": {
          "ref": "d0a0c954-5ad5-48b6-b18a-716c43702336",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "080a53f3-cb63-48a3-b5cd-2b99379db95b"
        },
        "item": {
          "id": "09462b25-ef3c-4121-82c8-28fc6d7df690",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "55c2c789-47ef-4b64-8c47-2189e59188be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22833fc6-3edb-4b27-9503-6fc87ac609be",
        "cursor": {
          "ref": "19a330a2-9fb3-424e-8c07-2f2febef53a4",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "081087d8-721c-4551-9377-e13fca3b6a4a"
        },
        "item": {
          "id": "22833fc6-3edb-4b27-9503-6fc87ac609be",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "37300308-3c29-448e-8764-f13cd41d1fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3a70e9-6948-4906-a410-24faf42771b5",
        "cursor": {
          "ref": "00ee1776-c4df-4f8d-baac-93b5b3293f7a",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "14d39196-e092-423f-91ec-137346512b3c"
        },
        "item": {
          "id": "ac3a70e9-6948-4906-a410-24faf42771b5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "81e4f3f4-5f33-4fa9-b2dc-3c1ce6669db6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaee6b6-f692-432f-8c0f-cde1c8953401",
        "cursor": {
          "ref": "888997e3-08c0-4b2a-9a2b-846f4b5f2f7f",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c796037e-6670-4135-8478-a667dc49f744"
        },
        "item": {
          "id": "daaee6b6-f692-432f-8c0f-cde1c8953401",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fea61fca-521a-4944-a025-e3504caf06af",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6e8ab5-958b-4ccd-a3de-067dc189ac4f",
        "cursor": {
          "ref": "1fe0ef84-4fd1-422e-8b90-afdea595d752",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "bd2c0e0e-a78a-474b-bf35-0f9ea22cdad6"
        },
        "item": {
          "id": "9e6e8ab5-958b-4ccd-a3de-067dc189ac4f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "5d4e0613-ab75-4bd2-b20e-28e1739d86f6",
          "status": "Created",
          "code": 201,
          "responseTime": 145,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d06389f-64d7-4ec3-be4c-de7bcb530d80",
        "cursor": {
          "ref": "bb766190-6558-4d93-92bf-23571e5dc63f",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dae98a44-d370-4478-84a8-d51eb16ff722"
        },
        "item": {
          "id": "6d06389f-64d7-4ec3-be4c-de7bcb530d80",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0d9716c9-6acc-4b0b-80f0-f410175b7616",
          "status": "Created",
          "code": 201,
          "responseTime": 79,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "26375118-00e5-4099-88f7-ae7abc6191ed",
        "cursor": {
          "ref": "6c86ccd8-6692-49d2-9e9d-230eb6598549",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f7429b3c-2f78-4121-8cfa-dd37c83ca2d4"
        },
        "item": {
          "id": "26375118-00e5-4099-88f7-ae7abc6191ed",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ee5f4116-910b-4551-a4bb-89ed2dd08ae9",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ea91d5-734d-4b99-bf0a-2c265f8af22e",
        "cursor": {
          "ref": "250bd522-1521-43a9-94a0-a8067c13a874",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5078bea5-e361-4415-a996-f21e5fb9c2ff"
        },
        "item": {
          "id": "76ea91d5-734d-4b99-bf0a-2c265f8af22e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fb703abf-96a3-46c3-8f7d-be12032b5a0c",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "947d2258-5e7f-4266-bd95-5fe0390c6228",
        "cursor": {
          "ref": "1e7a35ec-cf53-4352-b20e-eb1cdc20c8cf",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7b8cf695-0d79-4276-9834-c9e25f90e73f"
        },
        "item": {
          "id": "947d2258-5e7f-4266-bd95-5fe0390c6228",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ac54c756-c28c-40d2-a4d3-15607a079385",
          "status": "Created",
          "code": 201,
          "responseTime": 53,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d95e5a9-362b-4e76-a3d2-9b313c9927a3",
        "cursor": {
          "ref": "cd0b4e91-b68b-4ab8-a3da-fbc76d3c7122",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8e3556d3-8cf1-4a7b-bc99-3e865fd18445"
        },
        "item": {
          "id": "6d95e5a9-362b-4e76-a3d2-9b313c9927a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "0da67892-c596-4d65-a603-cf8cf3db5d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcc0475-212c-4818-852e-bd38247a4b89",
        "cursor": {
          "ref": "c4b6f3ed-8d34-486a-8e93-868434f89c1c",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "146a897b-21bd-4c7f-8e3d-7c32badb2399"
        },
        "item": {
          "id": "4dcc0475-212c-4818-852e-bd38247a4b89",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d9bd4b04-5b2a-4cc2-8c7b-aec34c3ae6d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf6f4b7-b190-4cb7-9abc-a500bb6bd5ea",
        "cursor": {
          "ref": "7d3de6a0-ec69-4ba1-895e-8d21a7363ee1",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "deb1adb2-2d6a-4851-9dd9-8ea74417d8fd"
        },
        "item": {
          "id": "aaf6f4b7-b190-4cb7-9abc-a500bb6bd5ea",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "773885a0-8568-48e6-9539-9c735b9f30f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665d02b0-84d8-4e3e-b3a9-084dc9737ac7",
        "cursor": {
          "ref": "479ede53-e52a-40a3-909e-448bfe00efb9",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "91267e4b-22f4-4151-bba8-2f79254e17ae"
        },
        "item": {
          "id": "665d02b0-84d8-4e3e-b3a9-084dc9737ac7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "aafb6872-39b3-40a3-a6bb-5d9a7a3fba26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf16b72-50f3-4a2c-bdc2-683263bdde85",
        "cursor": {
          "ref": "23d5d9e7-6a6c-495e-a27c-640042d0ec13",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "168c2ef1-1955-46a0-943b-e25617d4179b"
        },
        "item": {
          "id": "dcf16b72-50f3-4a2c-bdc2-683263bdde85",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ca6d48e0-553a-403e-8f87-db024efc91c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f853ed-385a-4fdb-b64d-3748d1dda822",
        "cursor": {
          "ref": "cdfdb71b-77c7-4617-b048-7db5bccda773",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d7346c35-3bb6-4180-8d24-80c6f9034218"
        },
        "item": {
          "id": "24f853ed-385a-4fdb-b64d-3748d1dda822",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "375ed61d-6cd2-4c97-a770-0303487c5cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5078c2d-7a56-4510-a00e-c13ca0bced91",
        "cursor": {
          "ref": "17f37b00-b251-425a-982d-d7ae1a014d53",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "caa8f1a1-aef4-459d-aa13-01c2606ebf62"
        },
        "item": {
          "id": "b5078c2d-7a56-4510-a00e-c13ca0bced91",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "790bfb7c-f383-46ec-b298-da6d995af3d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80894ae3-57a7-4b8d-ba2c-b20b1080de20",
        "cursor": {
          "ref": "d0028690-5f29-45e5-b338-a86604371af1",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2eed12a3-9314-4c9d-803f-31a7ed14006f"
        },
        "item": {
          "id": "80894ae3-57a7-4b8d-ba2c-b20b1080de20",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "831f75f6-4230-49b2-b272-02e499504f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647b7eff-9c7c-442f-a6cc-eb1d71a40f00",
        "cursor": {
          "ref": "38989bfe-4932-4a15-9566-50b9db3c0545",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8cffe41e-d1b0-46fe-88fa-320290912547"
        },
        "item": {
          "id": "647b7eff-9c7c-442f-a6cc-eb1d71a40f00",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d70d7d7-a9b8-409e-88cf-b824c10c7f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aede51a6-6955-41f4-a19f-0a664331014a",
        "cursor": {
          "ref": "120ddb03-6456-4300-940a-853dbc14a097",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8c513bc3-4a9c-4d34-8946-c277a519dec1"
        },
        "item": {
          "id": "aede51a6-6955-41f4-a19f-0a664331014a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "caf65a0e-af8a-4e88-a00f-f8aaf4d37878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c60b9d1-927b-46a1-8644-441be102be94",
        "cursor": {
          "ref": "6f198201-54e4-4e4a-b8d5-cc3f957a1f36",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6cc1b1a4-a716-4e7e-b214-7d94c8c0f53c"
        },
        "item": {
          "id": "0c60b9d1-927b-46a1-8644-441be102be94",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "92212eb2-f554-44e1-9c10-3d80289d5fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3019c2-e813-4a7d-a294-a5b542193506",
        "cursor": {
          "ref": "1ec0aab9-2725-4405-9f36-6601724ab3f9",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e0f1dff1-2e0c-4211-a493-fbdfe91494f2"
        },
        "item": {
          "id": "1f3019c2-e813-4a7d-a294-a5b542193506",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "34e40797-c54e-4021-aeea-24413e92936f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9712f1-fdc4-45c7-967d-f45cfef94237",
        "cursor": {
          "ref": "53569d63-cbb9-423d-a1e6-e0a1f20f07d2",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "75f77ff1-6d06-4cd6-b1c0-4688cfc01ef4"
        },
        "item": {
          "id": "ce9712f1-fdc4-45c7-967d-f45cfef94237",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "088cbb45-65ed-4679-b6f2-9f886af1303c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba3d8c2-b5e6-4f0d-be50-68fc29e33173",
        "cursor": {
          "ref": "c2f3abb9-dcce-43dd-add0-3bd80eced1b5",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "22add8d7-182b-4ce7-9425-bd40341a97e5"
        },
        "item": {
          "id": "cba3d8c2-b5e6-4f0d-be50-68fc29e33173",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "28362680-d69c-4a56-8025-6c9dbe873132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b728592-43dc-4544-82f8-443b9c1b9061",
        "cursor": {
          "ref": "f15832d4-3f49-4d81-8be2-6697f1b73c31",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "58653de8-679f-4d66-9738-6bbf37849010"
        },
        "item": {
          "id": "1b728592-43dc-4544-82f8-443b9c1b9061",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "06ea9f51-82b3-4c72-a117-86b72e752f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a10292-7d68-437e-b2e6-0a062b53f4bd",
        "cursor": {
          "ref": "5ed39bb1-151e-4454-b9b1-75768fd8a242",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3cd77bc9-5012-45fb-ad4d-29da8e35b7ca"
        },
        "item": {
          "id": "26a10292-7d68-437e-b2e6-0a062b53f4bd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "805d38df-459e-43a4-95c9-280357852652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd7d4c6-6204-4346-a64d-b30cc9205187",
        "cursor": {
          "ref": "c0963034-a9e8-406d-8778-07263e023b30",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a1e6ea8b-8bdd-486e-86aa-439cd757f849"
        },
        "item": {
          "id": "ebd7d4c6-6204-4346-a64d-b30cc9205187",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8d9b2ec5-1318-433a-b2df-04d26c000e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514d93e4-71fa-42b3-ae22-965b7e1b687f",
        "cursor": {
          "ref": "d2be6c39-f04a-48c2-a0a6-39763676d93e",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "825da0d2-4a2f-45b1-b357-e11070433e66"
        },
        "item": {
          "id": "514d93e4-71fa-42b3-ae22-965b7e1b687f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "83b62aba-2e41-43cb-af19-6096ff11c52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc51f51-d407-4486-a3c6-4236ba154111",
        "cursor": {
          "ref": "163f0507-7f45-4113-a63b-1204d29944f5",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9d0a9e1f-17b6-43b6-92cc-5c98ef7d6121"
        },
        "item": {
          "id": "7fc51f51-d407-4486-a3c6-4236ba154111",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "615c9ad7-c2f1-49b9-980c-67b467a5a3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cecf59-840b-4a29-85cf-d59a57d034e0",
        "cursor": {
          "ref": "3d8ea6a8-83f8-485e-af1d-c00dd01d248e",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "55b5e096-77f3-4b68-be20-2c057f9ad46f"
        },
        "item": {
          "id": "12cecf59-840b-4a29-85cf-d59a57d034e0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "55e0bb94-49c1-45ee-8c1e-5e43180a6616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9da653-2fcf-4dec-8075-c38c3d81be95",
        "cursor": {
          "ref": "646556e8-2aaa-4cec-b18b-b6ecb0af5a1c",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "78cbbe5c-a42a-40b0-8892-9a27ce0a1501"
        },
        "item": {
          "id": "4b9da653-2fcf-4dec-8075-c38c3d81be95",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "18dc9e15-8d54-41fc-a727-e35e7861334b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816c2bb0-d94d-4610-a15e-465f2c9c72ea",
        "cursor": {
          "ref": "abed2a2c-8870-4017-82f2-45d68ed8e5aa",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "aa587bbb-8fc3-48ea-a12e-59bfbd60f2a2"
        },
        "item": {
          "id": "816c2bb0-d94d-4610-a15e-465f2c9c72ea",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3d7971cf-9362-4052-87a9-bf5c18db7c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c7a07-cb73-4119-a410-8eec350eca7f",
        "cursor": {
          "ref": "4f11b932-77c9-44ed-b23d-1b3921ab3ef7",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fe94737e-7de9-4cd5-8764-a0625a43dc60"
        },
        "item": {
          "id": "2d2c7a07-cb73-4119-a410-8eec350eca7f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bd096b7d-2dff-4125-b645-b303a2dcb054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f35083-13fe-4e3e-86e1-fd86ebc70a87",
        "cursor": {
          "ref": "02c686f6-ff7a-479a-845f-83abe3436dc8",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "07058926-11a0-4306-9f99-939d29613d62"
        },
        "item": {
          "id": "61f35083-13fe-4e3e-86e1-fd86ebc70a87",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0578ff4a-59b6-4ab5-9a53-97e08899cae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbb548b-59b7-46cb-9bf1-2f152ac6acbf",
        "cursor": {
          "ref": "9f7e7f79-a875-4615-83bb-1053dada5128",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8b0046f5-eaa4-4f81-8d2d-7c6f7ab3d794"
        },
        "item": {
          "id": "edbb548b-59b7-46cb-9bf1-2f152ac6acbf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e32ff429-e129-4a47-a62f-a158248b5d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41cb263-fa4c-48a3-84f9-c89a1aa5679a",
        "cursor": {
          "ref": "79845073-d50b-4566-ac5f-95d3f2f198ee",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "125478e9-6b3f-42ec-86d4-ae5dce01d31e"
        },
        "item": {
          "id": "b41cb263-fa4c-48a3-84f9-c89a1aa5679a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4bf1da16-3a3c-4914-95a5-bb7a055e7e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063b7df3-4cef-4ef4-ae2b-5d87c21e7d1e",
        "cursor": {
          "ref": "3fead384-0dd4-400d-8fcf-8947e0148049",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fa2616ff-d265-46c9-95ac-af2feec158c6"
        },
        "item": {
          "id": "063b7df3-4cef-4ef4-ae2b-5d87c21e7d1e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6c6f7c03-10ff-4cbe-ae69-daa6e6d8a1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf3e548-32f0-4448-9e1c-e0a89b8c5cb3",
        "cursor": {
          "ref": "3af0863d-5aa6-48eb-a0b7-59612e1ddf64",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "82a04152-34b5-4938-9c8a-7af227904af5"
        },
        "item": {
          "id": "4cf3e548-32f0-4448-9e1c-e0a89b8c5cb3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "de1f4fa6-e31f-4228-b01f-78b654e97c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08da79e0-d04b-4ca7-8c42-c9ba9c342142",
        "cursor": {
          "ref": "95a82fc8-340f-4fc6-bb71-193e3317951b",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "296b1ca0-49b5-465c-b0c5-546df7913931"
        },
        "item": {
          "id": "08da79e0-d04b-4ca7-8c42-c9ba9c342142",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1ed89ca2-c58f-43a5-aeee-85963da0e9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b712c3-9b7f-4dee-acc7-1c8a9b9acca2",
        "cursor": {
          "ref": "b1483e9b-e9b1-4451-bed9-44ade19c0eae",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0fce3443-57fa-4fb0-8986-30451b9d0d78"
        },
        "item": {
          "id": "c1b712c3-9b7f-4dee-acc7-1c8a9b9acca2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8da029fa-abd3-4d5d-93b5-7aa83c9a32c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78537eb1-b969-4997-a198-2683969602b6",
        "cursor": {
          "ref": "497d409c-b6b4-4b31-84f3-1ac5a4a5c5d7",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6e093b73-73c8-48a5-b5ae-8764a2e99e66"
        },
        "item": {
          "id": "78537eb1-b969-4997-a198-2683969602b6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6ee310b9-9441-476c-8a18-3e2207a21226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39cf02de-2eb1-48b9-86d8-e338b084888a",
        "cursor": {
          "ref": "4dc79cb9-488e-43de-8055-3e79eb20ceed",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7b6c0ed6-6d10-4b70-82ac-b22805d37b61"
        },
        "item": {
          "id": "39cf02de-2eb1-48b9-86d8-e338b084888a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d2c6cd83-b9f1-4884-a581-4aaec8f948e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7c3c10-04c1-4e93-b1e7-6e654fd6e072",
        "cursor": {
          "ref": "047bb43b-fbcf-4f79-aae6-a3c160c8b783",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "892a7327-8f45-4699-81b2-b2a8b5c13ff9"
        },
        "item": {
          "id": "aa7c3c10-04c1-4e93-b1e7-6e654fd6e072",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2d43f90f-1b26-4a84-878b-c945d6ef9c21",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41097482-368b-40fe-ab9c-02c245448bc4",
        "cursor": {
          "ref": "3cde6a97-21b6-40e0-becc-8c648a78fa74",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "aba29547-daf1-4f32-886e-7d0fb3a1c92e"
        },
        "item": {
          "id": "41097482-368b-40fe-ab9c-02c245448bc4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "29c1c1d7-acf3-4c76-93a3-6f50e033264e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19d88a6-70ab-46be-94cb-ddc5ed3f0286",
        "cursor": {
          "ref": "1573dd1d-a70e-40cc-8dea-69a6b9448502",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "5009babc-995e-4c36-9c3a-a96fab82fccf"
        },
        "item": {
          "id": "b19d88a6-70ab-46be-94cb-ddc5ed3f0286",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fd40e851-7b5c-4969-b4f7-ff56ea323ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7659f9a-1dac-47aa-af8d-6280508073b7",
        "cursor": {
          "ref": "c80b14b2-1922-4ac2-a691-37eac60ac05c",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "edaf9cd9-6b41-4e7e-975f-db571807adbf"
        },
        "item": {
          "id": "b7659f9a-1dac-47aa-af8d-6280508073b7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "873a3736-a002-4855-815d-15eae8b07fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45e7885-fc41-4467-9001-c0ca83975e9a",
        "cursor": {
          "ref": "e29b2160-170e-44e1-bef8-25b6633f45be",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4e8295b6-3426-4efd-9e9e-89df5649c32a"
        },
        "item": {
          "id": "d45e7885-fc41-4467-9001-c0ca83975e9a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a5c59cdb-694d-4ceb-833d-3167b16c9639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df8efcd-899b-4b28-8860-97baf9670c01",
        "cursor": {
          "ref": "79110d2f-4962-45a0-bb10-b23ef0689b17",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "535f8ff0-8cee-40a6-9ff6-9f7854847a6b"
        },
        "item": {
          "id": "3df8efcd-899b-4b28-8860-97baf9670c01",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "26f13338-bbcd-4406-b50f-faa470b8555b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb6d9d4-b0ea-437a-8b76-adb480f3d442",
        "cursor": {
          "ref": "35360c7e-794a-4c60-bdcc-5c6c5a29714e",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aed4718b-3842-4b1a-9b15-9a5502e2aeef"
        },
        "item": {
          "id": "2eb6d9d4-b0ea-437a-8b76-adb480f3d442",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "41044f2b-41d6-4fb1-a82d-bc228916f2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8379aa9c-ad1f-4bd7-a6bd-2ebf9018ac8e",
        "cursor": {
          "ref": "42761d9e-ea8b-44d7-9c28-2e316e984bda",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7cf965c4-7149-442c-b153-762ce4b18915"
        },
        "item": {
          "id": "8379aa9c-ad1f-4bd7-a6bd-2ebf9018ac8e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "124f25b8-0db6-47df-84d1-49ef18e8358f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fed185a-af35-46ca-8045-05a76f832550",
        "cursor": {
          "ref": "f3d5d516-b303-4dd4-ba30-f2dc6271e4ff",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0e8ceede-0d68-4701-ad01-81bc9e596fa0"
        },
        "item": {
          "id": "8fed185a-af35-46ca-8045-05a76f832550",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4102eae3-2cf4-4889-a86b-f11f5fa07908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7315a3b5-b0d8-4939-8c71-c817ac31f8a3",
        "cursor": {
          "ref": "f1f0dfde-427e-4a10-a86e-ce05d5e3fc42",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "62a2c2e4-5aac-47bf-9f96-dcd48cdf6b97"
        },
        "item": {
          "id": "7315a3b5-b0d8-4939-8c71-c817ac31f8a3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1d8eae9f-fc5d-4554-8ecc-52ff78a93cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d318fc-1838-4a6b-80b0-3adb1b56a307",
        "cursor": {
          "ref": "8ad7da71-ebaa-48f6-815b-4fcad34f3620",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e8f01de0-332b-4b5e-9472-56ee9af5a2f8"
        },
        "item": {
          "id": "26d318fc-1838-4a6b-80b0-3adb1b56a307",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1619683a-4cf1-49aa-8369-c30125390858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad4ad00-2c84-450f-9f10-45b2ea2c96f1",
        "cursor": {
          "ref": "95dfbbf3-c9cd-48a7-97ad-e01f71af63cd",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6e585618-641b-49ca-99da-12a87a78cbd7"
        },
        "item": {
          "id": "1ad4ad00-2c84-450f-9f10-45b2ea2c96f1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "56c3cffc-0c4c-498d-ba5f-c65e4ce96bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa923a2-08a7-41b6-b747-e1e169f3e89c",
        "cursor": {
          "ref": "f0afb785-1151-443b-a65e-250bf80f2509",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b4478009-81b9-46f1-afd3-9943a0fc809b"
        },
        "item": {
          "id": "cfa923a2-08a7-41b6-b747-e1e169f3e89c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "3495ee57-d4bc-4702-abc2-9e93889066b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb76f48f-fa83-464e-96b8-9e9de78ea3c5",
        "cursor": {
          "ref": "9fc0ae87-a74f-46bd-854b-c2d8f1e492ef",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "44e64d72-0a07-4f51-9801-ddb76e1f1b18"
        },
        "item": {
          "id": "cb76f48f-fa83-464e-96b8-9e9de78ea3c5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c8c03a3e-9f4d-477b-994b-5eff44a51a2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8085c0b4-03b6-4c09-b7ae-8928fa1bf5dc",
        "cursor": {
          "ref": "5efaef78-91bc-4045-a10a-00ee4564b3ef",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "93bc15f1-4529-4c0b-81ef-256b678d741a"
        },
        "item": {
          "id": "8085c0b4-03b6-4c09-b7ae-8928fa1bf5dc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "994d79ca-6782-4a81-bb0e-31517825fbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a1ab25-c82a-4ea8-b81b-8a1ab53a2c72",
        "cursor": {
          "ref": "1b48fa90-4b75-4e2e-9fa8-1f5a95a1c0c1",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4d637212-784b-425b-927e-664b7fc2d2e3"
        },
        "item": {
          "id": "b5a1ab25-c82a-4ea8-b81b-8a1ab53a2c72",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9d1644a6-d019-4cd6-b539-583f67201c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a617fb4-0135-4a3b-95d0-2cde495b033d",
        "cursor": {
          "ref": "ac0bc860-d989-4a3b-ba21-c740cd6a319a",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b25befe3-aea4-45e1-abd0-60f5a57258dc"
        },
        "item": {
          "id": "1a617fb4-0135-4a3b-95d0-2cde495b033d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "776097ec-30cc-4fa9-a1b5-d81c7f2d2c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cebfea-a63f-481f-a61c-284b45c4d39a",
        "cursor": {
          "ref": "91c50986-69b0-49dd-a324-1c56ceda0b91",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f2f0dd38-aca5-4e84-8493-c6d5431c26b6"
        },
        "item": {
          "id": "b5cebfea-a63f-481f-a61c-284b45c4d39a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "85a9a594-2cef-41e8-9dd6-ba7477bd51c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091b47ff-db96-48c7-9dd9-306bdefdb353",
        "cursor": {
          "ref": "22f7bb84-201e-4b34-b0ca-545964bbf454",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3628d760-6723-45d1-b215-6618a2a296ad"
        },
        "item": {
          "id": "091b47ff-db96-48c7-9dd9-306bdefdb353",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a41b93a2-b4f5-4e48-8bbf-e17f7310e0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b543f6-69f2-4d18-af9c-eaa059aab448",
        "cursor": {
          "ref": "34c4671c-9fbd-4d69-93c1-83924522d3ae",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d5047f3d-e0b3-4e39-91e1-c79ebf627aeb"
        },
        "item": {
          "id": "62b543f6-69f2-4d18-af9c-eaa059aab448",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "39737288-d2a5-464c-8734-bcb0aa0c1883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e355a3a3-f3f3-4b1b-810b-dbdfb3ae9a73",
        "cursor": {
          "ref": "b11661c2-7036-4d1e-b436-a0931327e07d",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "63e9dbb2-12c0-4ca8-81fa-87bcff8f6e59"
        },
        "item": {
          "id": "e355a3a3-f3f3-4b1b-810b-dbdfb3ae9a73",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3b9a2b87-b2a6-48d1-84c5-75aae874a6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d13739a-a421-4a7b-bba7-ffb75203e032",
        "cursor": {
          "ref": "bbb96433-eb3b-434b-846e-8913fb619c32",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8ff9249e-8ff8-4f7d-8381-e4f897930f3b"
        },
        "item": {
          "id": "7d13739a-a421-4a7b-bba7-ffb75203e032",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "493383bf-b83f-4d3d-a759-e2ea1e3bf007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad219f3e-a1f2-4cf4-a4ec-2c8dcdc0ef9e",
        "cursor": {
          "ref": "6df3c6e1-a891-4f9a-a852-b0e85002e6e6",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "65c54b09-35e1-4331-9da9-e8b95f7826c4"
        },
        "item": {
          "id": "ad219f3e-a1f2-4cf4-a4ec-2c8dcdc0ef9e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fd2ba6f8-e4db-4cb1-85f4-52e15bd1941f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfea0e0-c4de-411b-9cb9-cd6f6d9b98b8",
        "cursor": {
          "ref": "b3ec207d-e4bb-479e-bb16-ffb75e041b1c",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ee4ef8b9-1af6-47cd-8ed8-54cff4485cc2"
        },
        "item": {
          "id": "ccfea0e0-c4de-411b-9cb9-cd6f6d9b98b8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ee6ae616-97c0-4a60-92c6-2dc245f01882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c6be0a-fdaf-4861-acbc-ac392a6b0ace",
        "cursor": {
          "ref": "d5450010-e5b6-40e1-aa0a-a06143122c36",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3e46d1a1-9b08-4615-83f5-2cebc7b5fd0a"
        },
        "item": {
          "id": "d6c6be0a-fdaf-4861-acbc-ac392a6b0ace",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4b8d05d7-0931-4914-a217-76572e923754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b1aed4-66a3-4ef0-bbae-5fd8f4bf4b59",
        "cursor": {
          "ref": "3fd81e44-9e65-44fb-8049-5b569efad57a",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9f836f9c-6534-47c5-a087-916cbcfa2eab"
        },
        "item": {
          "id": "83b1aed4-66a3-4ef0-bbae-5fd8f4bf4b59",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ba63b343-afdf-4537-8578-7406fb3d6d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f34d26-e098-46ee-8d8e-98776b130ea2",
        "cursor": {
          "ref": "bb6003a2-58c5-433c-a426-ce66e514eabc",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "561ab63c-1621-41fe-8b09-331e1542ec08"
        },
        "item": {
          "id": "36f34d26-e098-46ee-8d8e-98776b130ea2",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f1c0beb0-ad38-42c9-8d9c-0cda7e39b3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7d47db-98bc-4288-8f93-d11631de256b",
        "cursor": {
          "ref": "253e1a5e-3e8f-4871-9a7b-d89145898a5f",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7512542c-13ff-400f-b7b0-6827bfba78c0"
        },
        "item": {
          "id": "fb7d47db-98bc-4288-8f93-d11631de256b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a7de026c-21fb-4911-8a73-4e30b9f1598b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a935ab38-88ba-4443-a911-f6e1bdfb7c77",
        "cursor": {
          "ref": "1a85273a-8e0b-47cb-8365-a63c736fe3df",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3e4b1bca-4eae-4df6-816f-639db44b843e"
        },
        "item": {
          "id": "a935ab38-88ba-4443-a911-f6e1bdfb7c77",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6976aab1-6630-4fee-b242-2006857ea363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff8342b-325c-4f17-b749-9702488f6129",
        "cursor": {
          "ref": "1e183859-d8c9-4f61-9daf-b275d313027c",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "292088bd-7b1f-41a3-92ae-6ce86618cbca"
        },
        "item": {
          "id": "1ff8342b-325c-4f17-b749-9702488f6129",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "815b96d0-1f64-4d99-8a42-cd9a9a941230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0058bc-d8c5-4f3d-bbdd-669d907c934d",
        "cursor": {
          "ref": "6ebe60ad-09c1-4a4a-b8a8-fa9e6aa16f20",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ce277d9b-c7b5-4ecb-a6dc-81a161fa1e9a"
        },
        "item": {
          "id": "6f0058bc-d8c5-4f3d-bbdd-669d907c934d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1b15a514-90db-4bd2-bb56-13bbe4b0e32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9add31-16d4-4b4c-925a-0ef4fead78ae",
        "cursor": {
          "ref": "20934b94-1f6b-474e-9f41-420e8d05bdb3",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7af20d29-ddb8-489f-9a63-309c68cd5a7f"
        },
        "item": {
          "id": "9a9add31-16d4-4b4c-925a-0ef4fead78ae",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ac3f3992-ac32-4359-b50b-2692865f18c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57cbd92-d26d-4e1e-acdd-f7cc8f9031c8",
        "cursor": {
          "ref": "6bbe39cb-ed56-4c3e-b0b3-fa329f4e128f",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a36ee169-e78b-4bca-ae73-90294b5b933b"
        },
        "item": {
          "id": "c57cbd92-d26d-4e1e-acdd-f7cc8f9031c8",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0a2328a8-d4c2-458f-8559-38342bff67f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a979eaca-ef46-48c2-990b-110a6449da0f",
        "cursor": {
          "ref": "016006a8-4fd3-4489-a46f-a30cc54fd941",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e53f8233-a86f-4400-9e87-55d2c2dc3b8b"
        },
        "item": {
          "id": "a979eaca-ef46-48c2-990b-110a6449da0f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e570052e-7462-4c39-a60d-9c1c184f10bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e2205f-0b31-402c-9631-4b93f64471b0",
        "cursor": {
          "ref": "3d9b3ee5-3eaf-47ef-9e73-62a20b0fb668",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "99804191-0a47-420a-866a-35b0e7060755"
        },
        "item": {
          "id": "68e2205f-0b31-402c-9631-4b93f64471b0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9be8dcac-ef74-453f-87df-9026239b0932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970bb70f-6172-4b44-8341-69cf9371f3a8",
        "cursor": {
          "ref": "3f916b30-c016-46d4-a718-2da86f683fe4",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "339508d9-b281-49ea-b0ca-42676691f499"
        },
        "item": {
          "id": "970bb70f-6172-4b44-8341-69cf9371f3a8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a280babb-9d75-48e8-a347-8dd634b65c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001c5b9a-1f0d-4433-acc3-5ff53646d14e",
        "cursor": {
          "ref": "7708d96e-881f-4074-9e2a-4f5fbda95132",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1c3b10f9-78b5-4deb-a1e5-d683838afddc"
        },
        "item": {
          "id": "001c5b9a-1f0d-4433-acc3-5ff53646d14e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e7728176-720f-4060-bb7a-0d9d46f92b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74342c36-b869-4077-bb03-f9aebfb7d4d0",
        "cursor": {
          "ref": "7c504c3b-f282-49f8-acd0-772b88a0ed2d",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "e8ca4be0-36b9-4134-8ecb-95d3d535122d"
        },
        "item": {
          "id": "74342c36-b869-4077-bb03-f9aebfb7d4d0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "775ef4b8-f186-45a0-b767-356ba48023f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e033d7f0-c76e-415c-a426-7b08a42bd455",
        "cursor": {
          "ref": "bd2da720-6b83-4c5b-9cad-c8a96dcdf093",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "20657a3e-7817-461d-9600-5b3c67bfcbe5"
        },
        "item": {
          "id": "e033d7f0-c76e-415c-a426-7b08a42bd455",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a35e7b44-eba6-4b34-aeaa-d25050458e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc810f1f-a73a-441a-a785-81faed12d337",
        "cursor": {
          "ref": "141f7c5f-1419-4b70-9327-5433453cefb6",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "548b3fa5-6fde-4762-a074-fb85e2aa8913"
        },
        "item": {
          "id": "dc810f1f-a73a-441a-a785-81faed12d337",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0dd6ac5d-c659-4475-93c1-31632b8eca54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f821f7d-4974-439d-8658-445768f8aa1e",
        "cursor": {
          "ref": "29a4128e-998b-4169-a25d-1413fae13b5f",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "81d2adfb-97ca-4120-81f2-1d7483576863"
        },
        "item": {
          "id": "0f821f7d-4974-439d-8658-445768f8aa1e",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e81b0345-fb94-4af0-b9ed-f33d407704b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94462836-6765-4d2f-a135-bd70d0d5de6f",
        "cursor": {
          "ref": "88fa8a2f-455a-4a8d-8165-16284498646a",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2d6165a2-f66a-4994-9de9-5df21e9e63f2"
        },
        "item": {
          "id": "94462836-6765-4d2f-a135-bd70d0d5de6f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "620dfa08-bba5-435e-8885-bcea98ffec3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e28109b-f677-4061-b14c-ec9f66cb942a",
        "cursor": {
          "ref": "e8fc9965-6cc6-49ea-814d-6a47c8a20d98",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b7cb08ed-0e68-4bab-abc9-fb66919c40fc"
        },
        "item": {
          "id": "5e28109b-f677-4061-b14c-ec9f66cb942a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7f8acd60-20e6-4bec-87f2-e3071c70a037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b7c525-dd99-4a8b-abfa-a8861bd18249",
        "cursor": {
          "ref": "3190495d-4995-4f9a-ac85-5ee90374d72a",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "844851d6-4f4b-45b1-8a67-c5b19a35e8c2"
        },
        "item": {
          "id": "e9b7c525-dd99-4a8b-abfa-a8861bd18249",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9866db6b-91f9-4963-8016-c48b70bc7e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31feb6d-1f9c-47c3-93f9-44a01e307a0a",
        "cursor": {
          "ref": "f72893b5-0887-4b50-8900-64abd56a19d9",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c7a931fa-9f08-4012-b69d-1275004f3d6a"
        },
        "item": {
          "id": "a31feb6d-1f9c-47c3-93f9-44a01e307a0a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b3edbec7-ebe9-4b11-8a9d-b8ff1f7ecbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9448899c-455c-42b5-b013-9abe8471a635",
        "cursor": {
          "ref": "80c465e2-1949-4cac-8fbf-52862778e6af",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d25e4d37-6bfd-4d01-b175-1f30b95a6afe"
        },
        "item": {
          "id": "9448899c-455c-42b5-b013-9abe8471a635",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "024af714-14a3-42b7-b5d5-66fc9de65898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe0d7964-3657-4711-8e9a-6911a74b3f06",
        "cursor": {
          "ref": "9b5425d0-096f-4757-8719-d6d5a683f950",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "912c63be-7473-478b-905e-f6baa9cb83a3"
        },
        "item": {
          "id": "fe0d7964-3657-4711-8e9a-6911a74b3f06",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d22113a3-b09c-4a0b-b64b-9f0a7270cd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfd14b0-1f9b-4e4a-886b-e6a569c53dcc",
        "cursor": {
          "ref": "5c883824-53f9-4e7a-90ff-4fdb577330ec",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fa580a97-ca22-4618-a29d-e2976e200a7d"
        },
        "item": {
          "id": "cdfd14b0-1f9b-4e4a-886b-e6a569c53dcc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "82de037c-ac29-48d5-ba2d-e989fea97398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915ee357-c1ed-485b-9044-513e42476ba9",
        "cursor": {
          "ref": "f46bb14e-4d9d-4161-bee9-dde8f6696318",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d8f03e8c-5ab6-4018-9f51-e0bd8a39e73e"
        },
        "item": {
          "id": "915ee357-c1ed-485b-9044-513e42476ba9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ecd4dc39-b55d-4c35-830f-a63c14a3f215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab485e72-183b-43a0-9c95-a9a63518668a",
        "cursor": {
          "ref": "5d0bf3fb-f951-402d-9be9-c715d4adb5b1",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "568b54ab-006c-4823-a674-737bd8a9677e"
        },
        "item": {
          "id": "ab485e72-183b-43a0-9c95-a9a63518668a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "16ec75b1-9117-4101-9e3b-c25850b69a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9510d75-fd3d-495c-a763-38257428ebfc",
        "cursor": {
          "ref": "b9ada35f-bd11-40af-8249-1b2461b3ffe8",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ca0a89ff-cfd6-48b4-a71d-478286eb83ea"
        },
        "item": {
          "id": "f9510d75-fd3d-495c-a763-38257428ebfc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3d567017-77b4-4e28-840d-9b3ab30d42dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6963b18-d011-4c20-bcdb-12abd167aa88",
        "cursor": {
          "ref": "00a8a5b8-c1a6-4a64-9688-af131366ef64",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ce336653-b38a-4823-bad7-f830a0f545e9"
        },
        "item": {
          "id": "b6963b18-d011-4c20-bcdb-12abd167aa88",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f3503da0-bd51-4731-a520-dba8c0045e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a611f8c7-9a3a-41a0-b440-d99e807ce84c",
        "cursor": {
          "ref": "9105d56c-750c-4b26-8aff-78c825d7159c",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ead672d1-d1bc-49c1-b831-9208f3858f54"
        },
        "item": {
          "id": "a611f8c7-9a3a-41a0-b440-d99e807ce84c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "559b5c88-aa9b-45b2-bf75-39218e01171a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aae91a-6fac-4953-b394-ee90b5f0cc3e",
        "cursor": {
          "ref": "29261ee7-8079-4b11-8d6e-076f9a4a468d",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "775114b1-6f51-454d-a668-02953fa4adde"
        },
        "item": {
          "id": "45aae91a-6fac-4953-b394-ee90b5f0cc3e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e32a2df5-f810-47a4-8c75-33d4ce79eea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805c56ad-62b5-48cf-8115-823266ea7471",
        "cursor": {
          "ref": "f2e096fe-220c-4660-a07c-03aee03ae033",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f3def4ac-d7a0-48a9-b750-971781a55b2d"
        },
        "item": {
          "id": "805c56ad-62b5-48cf-8115-823266ea7471",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e26aeb92-6286-4050-998e-d785702f96c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf01b7f-de2c-420e-a17e-766bec4b8c04",
        "cursor": {
          "ref": "133196d2-aef4-485c-a91b-6434a489b6c4",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ac232d01-c0d2-49e7-88c8-e6c97d203e6b"
        },
        "item": {
          "id": "fbf01b7f-de2c-420e-a17e-766bec4b8c04",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b13763c8-46fb-4702-8cbf-025432125240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb41f51-47f6-469b-bb59-c9ff29abb3f1",
        "cursor": {
          "ref": "b913a436-c0d1-4e8f-9023-32154acffe5c",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3c627716-ced4-416b-9618-ea3496dc8138"
        },
        "item": {
          "id": "adb41f51-47f6-469b-bb59-c9ff29abb3f1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1dfed093-1397-4074-afa1-32dbe971a19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d185a57b-80e1-4587-b2e8-001e738c5876",
        "cursor": {
          "ref": "373cfe76-d72b-4543-b10c-23e7350e1703",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f229cadf-936d-4a1b-a30c-b0c8483eb396"
        },
        "item": {
          "id": "d185a57b-80e1-4587-b2e8-001e738c5876",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e8c8d541-214b-4c29-8b29-e2297f19a2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e2dda9-9983-4892-b172-f52d76bc3bcc",
        "cursor": {
          "ref": "783dcd65-4c03-4bd2-80e7-cb96fb6c0cde",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "caf3834e-100f-435e-b9a1-5f06a3bd858d"
        },
        "item": {
          "id": "67e2dda9-9983-4892-b172-f52d76bc3bcc",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "874f3ecd-b2f4-433b-88bd-31685d677cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97672e34-3f59-4c40-84a7-393650d3de70",
        "cursor": {
          "ref": "3476ab0d-eb4f-43be-913f-2a0ac6756383",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5c6a3cff-2aa0-4c0b-8506-93c1d77870e8"
        },
        "item": {
          "id": "97672e34-3f59-4c40-84a7-393650d3de70",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "04253924-1abb-4eec-b51c-f1970ca9668e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4fcfda-be90-488e-ab71-f3630a712db8",
        "cursor": {
          "ref": "04c69c65-a70a-46ed-bc42-7d251426a791",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "a70435f5-a9d3-4a77-9a80-0111520f589d"
        },
        "item": {
          "id": "8b4fcfda-be90-488e-ab71-f3630a712db8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "27e2d0ad-e79d-46a7-ba2a-35a59ec54b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27239ec7-e304-4d17-9a47-565ff79dd0f2",
        "cursor": {
          "ref": "9d1ec402-8b28-44ad-8f21-e53f373d215f",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "336c5675-344c-416c-8f80-e843b47249be"
        },
        "item": {
          "id": "27239ec7-e304-4d17-9a47-565ff79dd0f2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7710c417-7811-4965-93eb-bc2fca41df35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12238852-92d6-4051-b18e-dabbff306e9e",
        "cursor": {
          "ref": "80068ef1-4f40-47d7-9eaf-2967f156f4f9",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f3620806-3f25-4ddf-b36b-487a4c55be5c"
        },
        "item": {
          "id": "12238852-92d6-4051-b18e-dabbff306e9e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d3c3feb7-38a5-47f5-95dc-bd3f6b5ac3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ab4559-164a-4088-9bab-55c2326b4036",
        "cursor": {
          "ref": "066f0a89-ec0f-44fb-bab5-dbc91f74335e",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bc8ca962-06d4-48f6-a8cd-1e384f3caa1c"
        },
        "item": {
          "id": "c7ab4559-164a-4088-9bab-55c2326b4036",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ea07d59c-7117-45cb-89c1-86f6eccc8e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5027f384-760a-47fa-8c67-1da48127772c",
        "cursor": {
          "ref": "c15da9e3-7325-4d74-b3eb-14a65940e441",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a6bce4e0-9e93-428c-9849-463145617663"
        },
        "item": {
          "id": "5027f384-760a-47fa-8c67-1da48127772c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "54b169f4-3f91-4d60-aed1-f4c0106afd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16032aee-5ee2-405e-a6fd-1b866203bba7",
        "cursor": {
          "ref": "7b9c52f1-f4a8-49c9-a236-3366428cea8c",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5272ef82-0de1-480a-9f54-e166aeb1f7f9"
        },
        "item": {
          "id": "16032aee-5ee2-405e-a6fd-1b866203bba7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "53ec2265-d2c8-4a2d-9a85-fb727b4a0e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6db8f7-d86e-4d1a-8d49-457e774a2bf8",
        "cursor": {
          "ref": "cdaad1c1-ee94-4fda-9cdf-43256e4c7b57",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "40951600-3ac8-4b46-bea6-dd37abc95edb"
        },
        "item": {
          "id": "6e6db8f7-d86e-4d1a-8d49-457e774a2bf8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cdfd0cdb-74d8-4b46-b178-260cc997ec4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bea8123-e3ad-48a2-b6e1-af843d7ceb02",
        "cursor": {
          "ref": "749840ce-bcfd-4529-9cb3-deb4b1b6a049",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "1958e887-ff1b-4d3b-a1c3-efc00446a4e5"
        },
        "item": {
          "id": "9bea8123-e3ad-48a2-b6e1-af843d7ceb02",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "22a9b8f9-3d07-447a-9a72-60d880a896b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e21681-5379-4a0e-be26-2ff8efb6fb29",
        "cursor": {
          "ref": "0beea4f4-46cb-4580-b954-9e63a446796f",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "09093f52-1275-43ab-bc7c-a69288ce3d40"
        },
        "item": {
          "id": "50e21681-5379-4a0e-be26-2ff8efb6fb29",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0b4d08b4-4021-482c-93ba-413590f948ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659824b9-5b99-49c7-bd85-7ffd871de6a5",
        "cursor": {
          "ref": "7a810a9a-fe48-4e4a-bba6-141dc396dd1f",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "02eea594-0fe2-4f3b-8fcb-dd7a0e77e742"
        },
        "item": {
          "id": "659824b9-5b99-49c7-bd85-7ffd871de6a5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "fde4ffb9-0411-4340-a7a5-a261cae1f4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac0f55c-776e-4467-9fdb-f0df52016a7b",
        "cursor": {
          "ref": "5162a173-4afc-4396-9cd9-5284c1664882",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4b7d6b2d-a129-4cd1-9444-5fa0b36ca18c"
        },
        "item": {
          "id": "5ac0f55c-776e-4467-9fdb-f0df52016a7b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fb19f5bb-de1d-4fd4-b0bf-7ca2104b0232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9465cf-3f95-48c0-9f33-8074771961bb",
        "cursor": {
          "ref": "2a1ec381-c372-449f-96b4-4b2babac8cbf",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f930347d-64e9-4e02-abce-bd1bc0e6a2f7"
        },
        "item": {
          "id": "dd9465cf-3f95-48c0-9f33-8074771961bb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4a247404-e679-426b-89be-3310ea410089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b353e3-74ac-4d85-83a7-2895e634c241",
        "cursor": {
          "ref": "e4f335b8-45e1-4a04-9fcf-ada04dcb8814",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f143fb28-e83d-464f-8dbc-7b89f9754c3f"
        },
        "item": {
          "id": "e9b353e3-74ac-4d85-83a7-2895e634c241",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f36b2e18-6886-4017-8cc0-fc5eb2f60cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58353207-ffa4-4486-a8c0-89655b2c9552",
        "cursor": {
          "ref": "5f09a4ac-62b2-4675-8f5c-fbb77322797e",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f91d4035-7714-4dff-b9bc-967d77bedc79"
        },
        "item": {
          "id": "58353207-ffa4-4486-a8c0-89655b2c9552",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "eee9fc60-6b07-4d08-99ee-dedd5c1bb481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac956d9-d0fb-49a3-af31-f1d462f1cf1f",
        "cursor": {
          "ref": "427d9f68-980c-441c-b446-7d6407094577",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "813c7bff-dc33-40d6-ad74-e34a714a9720"
        },
        "item": {
          "id": "9ac956d9-d0fb-49a3-af31-f1d462f1cf1f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2bf82d5f-586f-4718-b6be-0da0f7db269d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29915701-a990-4e0c-8884-9a189756eb4d",
        "cursor": {
          "ref": "324c461f-b08c-4311-81ad-10392fde2917",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a18ec4d6-a039-4070-a7ea-d1762087d950"
        },
        "item": {
          "id": "29915701-a990-4e0c-8884-9a189756eb4d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "52394817-d720-4f2f-838c-b56c574d6c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05f3ba7-c9eb-4375-9107-cefb1c746c1c",
        "cursor": {
          "ref": "b25dd99f-927e-49a9-90c5-93c22ea03c9a",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4eab019f-d84e-4f29-b78a-432a04d5fe96"
        },
        "item": {
          "id": "c05f3ba7-c9eb-4375-9107-cefb1c746c1c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6e23dd07-2321-4c76-86f7-2e6710a02187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2d6c63-2579-4949-8926-856c02969682",
        "cursor": {
          "ref": "7bbe0d39-532c-4bb0-be87-29f338e18b48",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fbff737f-b329-4792-8f6f-bd0ceb732424"
        },
        "item": {
          "id": "0f2d6c63-2579-4949-8926-856c02969682",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b8caa248-fd6b-422e-b2a7-c5cc188afa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b280b0-96ba-455c-924d-7ae5da6bbc11",
        "cursor": {
          "ref": "827cc8bd-22f2-4f40-b019-9e3eca414254",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b7215f08-c46d-4b27-a887-7b89efda92b0"
        },
        "item": {
          "id": "46b280b0-96ba-455c-924d-7ae5da6bbc11",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cd3c862d-b6f9-447f-bcdd-7005348f4a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b454d0b9-328a-4e4d-82e2-a3b901f373fb",
        "cursor": {
          "ref": "3c5bb2d3-f597-4eb9-b7f9-126c0e8676d1",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "236cec32-e245-49e5-9d33-6b8265dbe079"
        },
        "item": {
          "id": "b454d0b9-328a-4e4d-82e2-a3b901f373fb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "db685558-16a0-482b-834e-19fdf8fc3fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "228671d2-7671-44c2-91bc-b6ecbe1ad85e",
        "cursor": {
          "ref": "e2f818c4-a0e8-4547-b3a6-4844283ecb97",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e3c4d071-abca-4f37-b9ae-0aaf608bd9b1"
        },
        "item": {
          "id": "228671d2-7671-44c2-91bc-b6ecbe1ad85e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2c2cd811-bdfe-4c4f-b876-207a43f47439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902390d7-ee29-450f-8e26-1bd076bf08f1",
        "cursor": {
          "ref": "40eedcce-2a47-4464-ad6c-a184b297e02a",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9a6088e8-c903-4c7a-a880-e556bc2aa7b5"
        },
        "item": {
          "id": "902390d7-ee29-450f-8e26-1bd076bf08f1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "57e1f3a7-52f4-4866-afdc-3d55b08dd554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d8511b-7100-4f5f-ab95-15a3c64d2a9c",
        "cursor": {
          "ref": "0ab51c71-27d8-4f5b-bfee-47a153201537",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "991c11e4-daf1-4d01-b39f-5f7d511bd956"
        },
        "item": {
          "id": "22d8511b-7100-4f5f-ab95-15a3c64d2a9c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "294de441-8721-4744-86b1-e92c36807bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8409df94-e92d-44a7-92d3-4e99630f6d23",
        "cursor": {
          "ref": "5e3ecb86-b600-4cdf-8090-371a900bf4fb",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9012f3fc-eacc-4b73-960d-9d91767a21ba"
        },
        "item": {
          "id": "8409df94-e92d-44a7-92d3-4e99630f6d23",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a116697e-0089-4ea1-a598-42fef60203c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aae4ed3-4395-45fb-8be3-65626d8c9c8b",
        "cursor": {
          "ref": "1237d132-a902-4c22-b924-0530431ee8fd",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "20fbd044-2241-497c-8955-6a0e5c80fdcb"
        },
        "item": {
          "id": "7aae4ed3-4395-45fb-8be3-65626d8c9c8b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "11d41e91-c838-4dc2-b44f-6602fc92826c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f9e87e-e60f-456f-825a-b6569bf6ad21",
        "cursor": {
          "ref": "8ab7c8d0-8a8e-4e51-9b88-b50fd607e420",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ab158238-cacb-42df-8088-e39342ec425a"
        },
        "item": {
          "id": "95f9e87e-e60f-456f-825a-b6569bf6ad21",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "32581dc1-6277-4804-af31-0bf59eb7ed35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdda2f9a-8511-49fa-a2b9-80a3244ed8fe",
        "cursor": {
          "ref": "22eb9fd2-d512-4024-8c2e-b6d370e77f0b",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0f4c0bea-90c9-4d1c-bbbc-c111f6310f80"
        },
        "item": {
          "id": "bdda2f9a-8511-49fa-a2b9-80a3244ed8fe",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0fae6002-eb96-458e-b93b-a7ab9f197da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3e2100-e81b-4410-8d1e-7298d62c73b5",
        "cursor": {
          "ref": "7ca039db-8045-4597-a390-227e4bec5017",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ab2c74ab-b0b9-4dd4-b97e-0eb0ad049237"
        },
        "item": {
          "id": "8c3e2100-e81b-4410-8d1e-7298d62c73b5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7529b951-514f-4984-913d-31772196a3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00661b37-c2f5-4ea3-9736-5d72e64d687d",
        "cursor": {
          "ref": "ab7835e5-7786-421b-992b-28f1e63b940a",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "afbc5518-8ecc-4e82-b211-a7a96a8738ce"
        },
        "item": {
          "id": "00661b37-c2f5-4ea3-9736-5d72e64d687d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4d034d8f-129e-4910-a3de-5d17fc25fa04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d74b99b1-19d4-4300-9a85-c91a3af62c04",
        "cursor": {
          "ref": "4d2f8141-c1df-4d4a-a930-7b4c3a8f505d",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "db092158-ac18-47e1-a5f7-30b95daa8dcd"
        },
        "item": {
          "id": "d74b99b1-19d4-4300-9a85-c91a3af62c04",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d0e2566d-5c8b-45f0-9e52-0d1146903aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a6ae10-626a-438f-ac49-4591f29fdcdc",
        "cursor": {
          "ref": "314dffbd-23b3-4a33-8428-feb109ab9118",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cc42367a-7357-4e30-9c1e-05512394f386"
        },
        "item": {
          "id": "29a6ae10-626a-438f-ac49-4591f29fdcdc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "1fa6e62d-a13b-40b1-9ce8-d5aaa55237e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccda8eae-208c-415b-b652-1eac8433a886",
        "cursor": {
          "ref": "c0ea84d8-d6a3-4347-87d7-e95c38c6a55f",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "05f890dd-9b78-492f-8e2c-61c4a05563cb"
        },
        "item": {
          "id": "ccda8eae-208c-415b-b652-1eac8433a886",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2c56d5ab-b70e-404f-83a3-0d6ff067bc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29217bb9-a52c-4332-b69f-b3ca60f21ec5",
        "cursor": {
          "ref": "b5c4380a-8b41-4939-9bb3-ef5bb6858943",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f38d6035-86f3-4eea-a5dc-5170d0e9bfd2"
        },
        "item": {
          "id": "29217bb9-a52c-4332-b69f-b3ca60f21ec5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "840ee356-700d-4254-930f-c8b8e3216048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c60f63-e9f5-4f77-9323-7c90bf3c7ee9",
        "cursor": {
          "ref": "4642633c-7792-438f-9307-9085c75741ca",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "39f5f963-90f3-476c-bd91-22253ee778a1"
        },
        "item": {
          "id": "23c60f63-e9f5-4f77-9323-7c90bf3c7ee9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0a4c0cad-dfef-4232-99cc-16fa3987a534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50436069-6d89-4509-a987-26647437ac36",
        "cursor": {
          "ref": "db36a70f-f648-4827-8869-2132246d4512",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "22ba5b7e-baed-41a4-bc76-072fd7ccec80"
        },
        "item": {
          "id": "50436069-6d89-4509-a987-26647437ac36",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c3402e9e-b253-4771-bfaa-cdbc8fcd3aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bd9a19-cd39-49b5-9044-be01c9d5bd5d",
        "cursor": {
          "ref": "36e63de1-3a6c-4efe-a807-8e8ecb80570e",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8253b995-f842-4e9d-9ca1-5409cc6e29df"
        },
        "item": {
          "id": "58bd9a19-cd39-49b5-9044-be01c9d5bd5d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7c7a9492-49e8-4c05-b90e-90cd7892e642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15e610b-9b96-4ee2-bc5e-8b48838b083b",
        "cursor": {
          "ref": "8f226357-6a95-48af-9116-ce03b6173e2f",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6c76ae2f-9eb4-40a8-ab58-ecbab862357c"
        },
        "item": {
          "id": "f15e610b-9b96-4ee2-bc5e-8b48838b083b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b6e90312-f62e-4e8b-95b0-3a45cf36f625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9b9358-7e58-4b1b-af3f-15d9ab81e578",
        "cursor": {
          "ref": "9b6ca9ab-e0bf-4fed-874c-9f1abb985055",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1590c259-7d2d-49f0-8175-10b49ba2d300"
        },
        "item": {
          "id": "3b9b9358-7e58-4b1b-af3f-15d9ab81e578",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b362ac24-6536-4410-a52f-07c932ba7050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00db4ed7-0dc1-4a0d-babf-25bb57733c36",
        "cursor": {
          "ref": "72498366-05de-42f3-94db-f4f5801c2092",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "496dfb59-dd44-462d-a78c-d820bac0efe7"
        },
        "item": {
          "id": "00db4ed7-0dc1-4a0d-babf-25bb57733c36",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f5b957c9-50db-4b04-a8bd-e1dc982c4d65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161cb677-c288-494c-bc87-600d0e3968a6",
        "cursor": {
          "ref": "ebf529f7-4a8c-4519-b409-cf62ad68d5fe",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cfa5f8c7-cd8e-4f6c-baa2-200604bfff30"
        },
        "item": {
          "id": "161cb677-c288-494c-bc87-600d0e3968a6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e48b3550-99ef-4e16-ad2e-bbb4954215ce",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7148fd-76ac-40fc-827b-7e5855943b3a",
        "cursor": {
          "ref": "b23cad9d-d393-47ea-ade2-f0efa63ac129",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3ace2567-4319-4398-88cf-65953610eab4"
        },
        "item": {
          "id": "3d7148fd-76ac-40fc-827b-7e5855943b3a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "04d31e37-8ba2-40e1-afc3-e017c664805b",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e150e79f-6861-41d9-a83a-8efa235bcb1b",
        "cursor": {
          "ref": "c28b0f2a-13b4-4064-9030-bc3a5c64a1e2",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a765472d-10c5-4cc2-b25b-57ab37554320"
        },
        "item": {
          "id": "e150e79f-6861-41d9-a83a-8efa235bcb1b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "71316a59-ca28-466d-8234-a9eacc9867a4",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee69332-1269-4f79-a216-e03ddd0cda64",
        "cursor": {
          "ref": "236cce4b-0bdc-4a98-b03e-ad171147e0a1",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6eebe74c-f6dc-4d2c-b76f-4de6e12d21f0"
        },
        "item": {
          "id": "6ee69332-1269-4f79-a216-e03ddd0cda64",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e3e063f-6c52-423c-a7a9-220fab459dfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee69332-1269-4f79-a216-e03ddd0cda64",
        "cursor": {
          "ref": "236cce4b-0bdc-4a98-b03e-ad171147e0a1",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6eebe74c-f6dc-4d2c-b76f-4de6e12d21f0"
        },
        "item": {
          "id": "6ee69332-1269-4f79-a216-e03ddd0cda64",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e3e063f-6c52-423c-a7a9-220fab459dfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7083e874-704b-4490-84e3-d3b44022aaf6",
        "cursor": {
          "ref": "5d7fc445-7158-49bb-aa46-35d837d4d372",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "38186c27-1b66-4b05-b168-1cb5a1cfd157"
        },
        "item": {
          "id": "7083e874-704b-4490-84e3-d3b44022aaf6",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4866804d-2000-47d9-b27a-d8e8ddd80aed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c49a708-0cb6-46dc-b8d6-2f0f996f05f7",
        "cursor": {
          "ref": "933e0d51-a449-4e07-acd7-c46f58469161",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "07316e17-ebb0-4b2d-91da-42295b389ae3"
        },
        "item": {
          "id": "4c49a708-0cb6-46dc-b8d6-2f0f996f05f7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "07e5b0a1-9a69-41d4-9b4a-f5b41ef30d09",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}