{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3f068acd-4d43-46e0-8ddd-66ba67f9b1ea",
        "name": "Clear Cache",
        "item": [
          {
            "id": "22379443-f38f-40a7-848e-8d0d8a7bc247",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1752b5fb-6da1-47cb-a2d3-b0f788bb3262",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b192214f-b9ac-4382-9043-cce67deaa84f"
                }
              }
            ]
          },
          {
            "id": "ef253da8-d2fe-4ade-9314-95202b87f404",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "674192c8-d368-4a8f-aebe-5f1ebd570977",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b557f288-485a-4365-bead-207578f0213f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "dc627ba0-b077-45d5-90c9-114edcc3380f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ae311ca3-798b-4066-9dac-b2efe41761b8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e5f8890-ddad-4084-9e69-c071567283c4",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9275e9cd-dc40-4821-bdd1-4bf90d976ba1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5acb791-a434-47e5-a33c-6d27b6afb415"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7530a33a-061e-4d76-a84a-e869d87f0420",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3214e294-d41c-433b-bcec-5eb7efe1d046"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7bbaa80-4ccd-407e-98e7-6e856138e8d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af4444ed-f4f5-4795-83dc-8766e3420cbf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f72f52c3-87aa-428d-bfaa-7fb466a7f8ac",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4b2b1fc2-cd54-4296-bd25-50cd67e08a83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84bfbc3f-0469-4875-a476-94face4c0c3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c108e6d2-f4d8-4c19-a2bc-378c9c9ab06e"
            }
          }
        ]
      },
      {
        "id": "94fc8a7a-bb81-4cab-9fb5-dc7126283c36",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "adf99aa6-8c7a-4ec2-b967-c132c58ced18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b62930b-6419-46e1-a2ff-d4f04b7aefc2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c645dbf-d72a-49ea-8058-5ded607524e2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93380242-3c82-40a2-b3f0-054f3991f809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c7776b6-069a-4fe7-af29-bb526dcd2791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3ccf1f-5763-48ac-a034-0170905ff7fd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ed21c2-50d1-4157-b9aa-60ea3b584d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3bd3849-0c72-4ff2-8ecc-447586350587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abb9dfa-ca08-4259-855c-abf40b297915",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e204a50a-fea3-4b2f-a7f4-e6ed77cac390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d980c050-f700-4f41-9650-3ba92340695e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d30710f-f3a0-4c62-9131-53099c3fff8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4475adf9-8788-45a9-b960-69ed2d974b3c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be592670-c192-44e1-a58b-10f68f534ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bdbedcf-09c7-452d-a643-6c2a00324092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c0a441-c70a-43ed-9e8f-194861b90889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ffcf82-b430-4700-ac91-71a249504623"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "88ad9d6d-29d5-40a1-95f5-bcf5314cef20",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8667c700-b94e-4d37-98df-2a58fb41f535",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fe43255-9a9a-454d-93bd-a6821af84939",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d189f1d9-6aaf-4c23-8520-a469b2a9fcd6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad69ae56-6f3b-48f0-b3fd-0cc0f5152922",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "60982e42-17b7-41e4-9a2b-31dcbfce9d9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9232fc64-b40b-4f9a-a373-1f89a246ca41",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b89a6dd8-bcd0-4817-a156-7e575e5aac8b"
            }
          }
        ]
      },
      {
        "id": "c2bf81b3-530e-49cb-b8a8-e11b237935f7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7d265460-66a5-4a4d-ad5f-d81b17047965",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92a1a9a7-b87c-4fae-891d-6d5347c11dd8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c3d0b45b-9757-4baa-8234-1018e583f107",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45962dad-d5f9-4343-b959-670384f682ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07d4947-e678-4ffa-9625-e97ed98eeabb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d30a5c9-04f9-4bb4-91d6-2cb2d9b1269c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9ebf9c1-d622-4ffc-8ad9-3b686420a563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a5681e6-1c50-4d5b-be92-fe66a2206787",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242cd56c-f114-4280-8d0d-14d2cfb09d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c009e8a0-80b0-4212-9872-68a8726c7b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277a96b3-7e0e-4c58-abec-d33445561f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe0b8284-96c2-47df-a654-1ea5a9508742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4391d2-78a9-4f5a-b92c-b4cc5858b28c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002c778f-80d6-41d0-b6ad-7a03056606ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c252979c-7958-44b7-aa62-8c0f33e21a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13d67df-a68e-4b88-ac29-379fe2bf3565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1aabd5ee-e8e7-44df-bd56-0b99c61e44ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec43314-7a87-4561-b425-0b77beec27cd",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888269bb-9e4d-4631-a840-34e9f0f8dc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7e988b-8ca7-404a-811e-cffe24287d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f70949a-d41b-4dd1-a193-fa4aa4550bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a2bd72d-f891-4540-a6de-bf84ccd4095f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dbaca2-fd53-4499-b6e3-9e17f547b13a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee26ea28-aa7a-4fc6-b0ec-2839ddc56ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6124bfe6-f1e4-4728-a342-56c697eb4797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923bd871-79ea-4529-b208-30c7db1c3151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d1fc9e6-8769-4e8e-8688-e132862cd1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161daaae-3a31-48b0-b32b-f7211553ffc3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a001a8-4971-4395-8f9c-57fb5736e630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42f744e-1b03-4d0e-bc37-420db9be783b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b2451d-9a34-44b4-af23-0b8d2717a3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db94b3fa-55f5-4ad2-a0e9-ee99e7c83050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0c4e94-2f0f-432d-9b8d-0854a264329e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca67c7ee-f2f3-4790-aaf5-1b5000737c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2beab7da-c883-43b3-830c-e9c3db643af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ded3287-a8dd-4990-83f7-db7b609c76ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4d68e99-e04e-4626-9572-8d0ab80f1ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e267a69-c388-4f54-a3a1-36c6f4a72353",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e444c5-d1a5-43a9-916d-a510e4ec1fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1fc322-6bfe-4d02-b0c0-2b3b599cdd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40acc5d1-4f7e-412a-8c74-f49c87b1277d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efce7c44-adf7-4771-ab6e-9bbec87cde5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b2a5e0-129e-4ad1-acd8-89da7ec28a17",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43cad0a-eee2-4693-a7e1-aaf3e6ed997a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76fb8d9-760e-4ffe-923e-cdea71ab39b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5216246-5315-4ce4-b0e7-7a526f5bab78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "986f83ab-1a78-4607-94f1-362472b3362a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b42c28c-38b6-4f30-9ffd-fc9be677c0bf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce380a9-6fec-49ac-8b45-0e29b4b230a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2a9722-d435-410f-b306-6a123de97990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ca008a-a5aa-46a4-be3d-7a322edce5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3354335a-c9f9-4e19-983e-9796814ef404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd01feaa-55b8-45e0-8b79-77c0aae46c0e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3c59ee-4221-4c3d-be98-65e580af6b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eced427-10b5-4f28-9731-4d7774d5c6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5221cb6a-0f0c-48bc-a072-cacd0ce65093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c45c703-781c-4892-abd3-40fa2be2a3d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f3d266-fb56-4359-a74f-564225d66b3b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1f101e-b6d0-4ebe-af25-83d2986a35ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6347702d-4c13-483f-8f7c-b90999d2f747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc979fa-0f95-408d-8d27-b0bb4494bca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0c1e820-b23c-4794-9a91-808b5f5a0cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f72239b-08e0-4e5d-8a3a-ba2462b50525",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3216d67f-073b-4dc2-b6c8-57e423e2a0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341de2e0-1821-4b3a-b883-20627f6484fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9526a5-7770-4faa-9f0f-bf0cbcea03e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "505b3229-0a8c-48a2-a735-ed4d4e14cb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a260092-864d-43b4-b624-2ff5fecd6841",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bf3c55-a36d-421d-8fce-8b29c89ad43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fc6e92-c749-4a32-92c6-d24d41d331e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c43ee76-0925-424c-b30e-2b62edcf1b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cabd6ebb-3a94-4a18-a7b7-6e3934829829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96d0916-9e4c-4b5e-8e21-fdeaccba6d88",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c2eeae-aa70-4f61-8e3b-5ff2472c32d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52fa459-10ab-458d-9061-43c9563231a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0beec02a-29c5-4d99-a3c3-21d1ecc2d82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e72752ed-502a-48f8-ae3c-b971f634292f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a57f45f-4272-4059-af27-2ea18b122720",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42fba84-fbbb-4512-965a-bb79fdb1566d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1268536c-bd50-48b1-9267-841c786ec75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8983abb1-7a37-4300-b7d4-f2db2d084223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10948be5-64fc-4aed-91b3-3de1066aa12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025116b7-07fb-4e60-bb4a-2d6d7f507007",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1b4ff2-acb5-4822-9518-4ef47c014a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3c4b86-f468-4246-a060-6863a92e18b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e78c3b-fa34-49e1-a68f-3b543b6ef84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "317d5b3e-d6e5-41fb-8d95-be01a5b39e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13154fe-3cd6-420c-9648-ffe5408e5fd8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8388ed21-4ae2-4312-be09-195aeecc1608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef06643a-1c76-4bd9-be49-b1ce71d5e8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c448a655-9786-491a-a784-c606636d6e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6140b648-1577-44b1-9283-60f7ca664593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216ad94c-8dfc-4006-afa4-f93b84819e89",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1663ff6b-361d-4e8c-aaf1-3fd1a629c7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd2b9b1-6905-40ff-96cb-397ba56555c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd30c4e8-a12e-455a-a6d7-c5515c4dfe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01c09475-d9d9-40ca-918a-e8dcdb023772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a787d1-72a4-4f71-b3d1-bfdf23907097",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf8f278-b751-44a0-bd47-bf6cd186715c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e695a1-2931-4e33-aca7-8866e42718e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db830e89-9100-4212-b9ba-3b47c7fa7ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "05fb13b2-872b-4323-9865-cac79a516e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4349ee59-8b3f-45ec-88e8-ba5276219714",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6c63ab-b70a-4cdb-92a0-91e6c8bdeb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5496e931-4a65-4f1a-ab86-56afc3cdf305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5e63c6-1e57-430f-b104-a68c009f1465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfbe848-ddbb-4940-b5d4-231d72427a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20816dcd-2ca5-45b4-99ab-e7f7af0f3ec7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e94df3-0a50-48e0-9b3e-c9c635fc179e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f98c2f0-2057-4ca5-ac03-b5ce1e0498f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6829e5e0-8ac1-4619-82ac-07a220db59c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47fb9840-d7e7-4ed7-82ea-65e95e615291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e76cda6-55c4-41a5-a8fd-d95236b46c5b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc3e58d-72ac-4921-a941-53fd1e695198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c026341-6b0a-4caa-aa51-919ffccef4e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c795a0-9463-486c-a6e3-3705b73d70ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5cc9f6b-ccd8-4bd2-a927-0f0ea62acf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f231b9-4b5c-425e-96e2-933e6d6953e6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39e89ce-a000-4770-a179-3e9a304b8497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f600b2c-f16e-4a80-a2e9-c876fd83078b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00dc944c-6685-44c3-9d87-56db8f0edbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33802254-128f-4390-a52f-dc13dcf0c805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb0aef3-dbb4-4dc8-a789-79a3b6d94aa3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb927a4-9a87-4fda-a03b-1f2901002684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b24f4fa-4244-4f4c-8749-164a1377d18b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b2fad4-1a15-4e99-b3dd-3885f5ef7678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a883f9-26e9-4a09-bc10-632c09894fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6e1f39-6a62-49cf-ac91-d006ba67c205",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a91252-adbe-4770-a287-a952888c9669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15516d57-403a-418a-a7e7-484054b349d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3acdbfa-60ea-4efa-8734-711031d3f8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00edea10-640b-40b1-bdf0-d12abe739a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8250dd-69ea-468b-a4d6-32ec15f2c1fa",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6c9d15-ab64-44bc-9c60-0b27dd3e6421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e938f2d-c349-40b4-872a-8ee1062efea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837120ec-769d-47c3-9ae9-05e6eedda114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "582a10eb-65ae-467f-87e7-e204a2b0ffd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97c7332-8d88-40db-adb4-11aca7e9f543",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e73cf4-8a19-4ad2-963d-919d8ad0efba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ed8dad-5f56-4a2d-af2b-fe18cc41d381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fbb4ea-6f93-437e-b137-56e7df368f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "305d3687-80e6-4852-8970-a1c11785bbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6915c783-03ab-4e58-8924-6b7404bc2f3e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17716ee-bb15-47a7-9eba-ad65176a0fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a0c3b9-9c78-4145-9b0b-4d3b82bd2240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27851deb-8bf5-4bc1-89c0-d1ac6118328f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa9a2b8-3258-4e05-a441-e4635ff5e56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a358f3f-246f-4afc-aed3-226483c185df",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b234d48a-8487-4d17-8580-60a09776c84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46384c15-d538-464e-9626-ce80509e8bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ff874d-18bd-41ff-8e7c-d2b81f712412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9c0b7dd-f4a9-43ef-b68c-eade74b727a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7b5d7c-bdcc-46a8-8c95-272d07df25e5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5efe94-24d3-49ea-9383-3246e06ecba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5159fc34-1406-466e-9f96-16da2b9bf32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78865386-d9cd-4f60-b566-c56b8ffe17c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f22b54b4-b9b3-4135-9f76-fb47f9e264e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af70e97-83d1-461c-b18f-bd108ba5ee24",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce58d0a-ad00-49f3-a220-2e8b5a54461e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f720022-996d-4a35-a689-b7ea46f2dd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f938ee-73ac-44d6-b72c-357ed6293714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87da031e-5cea-494b-ac5c-c7df40ce3603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f177cb8e-7858-47f5-b359-cd58cacb6365",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2243078-da6b-443b-825e-f986ef43107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e8fdb4-57cc-4178-ade0-91c261fcf228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83c6661-9bd8-417f-9b34-c64ac8916e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b305281-9f18-4131-9c5d-71d7b31dc4d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce11f7f-745e-40f3-8274-00b991c383df",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1543e65-2958-40a7-b383-16af17fc48a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21479f9c-9a8a-4b9b-9489-ba75ae44d9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031d79d1-8ad5-4ef6-a1db-1a8452be4e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cedd10a2-8f3a-4a9c-9058-3323068677c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e7e275-b405-4af9-977f-fa207dddccbb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3856b6a-6f6b-46c3-a16b-5f287c37267f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390b808f-2162-4cb6-9925-b7b586391aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19fe8621-0eb7-41c1-80fa-0a93c9dc4a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "70568e15-8496-425e-b9cd-dfe3fc492b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c042681c-c8f7-40e2-84c0-b4849f661c90",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd282694-0ae5-4daf-a2c1-03865e6aecfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47528617-3eb2-48fc-8410-d8229ac351ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1f8a71-a157-4a41-a965-c2e7b36cbc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32cbd813-3e78-400f-aa23-ae63a9745bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0331870-7b1b-47bb-9c6c-3c8d64d79b7c",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a4887e-283e-4790-bb00-d35f96fff7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24e007e-54ce-4fc1-8b62-bdd4c405dccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250cfff2-7767-463a-ab3e-b86c95d17cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a486c7ee-d424-4e7b-b7d5-ec5e5a19598b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20de817a-af60-494c-88d7-989125ad12ac",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d052910-8e12-4b7a-be26-f73a33c463f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e738c92e-9cdf-4d3f-93a0-a285a2e60011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9d805e-c6fc-4112-90b4-839ce26d7589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea09520-ca0b-4593-95a9-3ef50dace955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dd5711-be48-41fb-b446-d66aba18c47a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b8e5dd-c019-43f2-ae50-8fcbafa47b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b226eb8-f05e-4cf8-8e15-2bec90998d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f99a9b3-b637-40e9-b7cc-f61e14ae0de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c037f8d5-5a3f-4d0c-9819-89069b96dca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a50b74-186e-45ec-aa0c-85be26318d3c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb80430-948b-442e-93f0-5ba7caafa8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a01a9c-aab6-410f-a982-6a026863e6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6354b5-209a-4361-8149-702fd7549e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee1b0ea-1b99-4a45-bd13-e68d08460c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4da2f1-d6ab-4bf6-b825-ecb3e9dd11ec",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77816fad-e05c-41ff-b32e-dd0749d25436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8696c686-2778-497e-ad69-95ef0dd86c45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca17124-7de8-41b1-b988-c4529e25b715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd3e07c-6fa7-4662-b54f-7623e6b4b6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8b2da4-d757-49bc-9095-98884ec74f73",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "504f933d-8305-455c-818e-af2e39cf1722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "325861ae-4496-4fc8-b372-d30c534d3011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19710c83-d72c-4f05-9e73-1703d9491d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "20895ea1-eaab-43ae-8192-716414414ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe2a53a-918f-4032-8517-ac53984fe9a5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c4d233-9b09-4ec5-af4b-41b391add688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e35c40c1-d275-4f65-bb94-71884d5b44bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2168649c-d0ad-46a1-b588-d2bf8aa0387d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ceb1d886-975e-48cb-a33c-32cd4dab3dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a1650e9-f376-4515-8260-0e950aa90770",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed381677-1b37-4780-8b86-09520c9c54ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7dfee7-e2e8-49a1-b4cf-a1d368dcedf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e85433b-6bd2-4bb8-9ed8-ccbfe18ee6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3a9aa2-e3c5-454a-aee8-a5e3271db7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c42088b-4dd6-451a-9882-32647bc0791b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f512772-782a-40ba-ad29-e5fcd2134f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e747882a-5d38-4d25-a9e5-5d21ac9229b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a1a8de-9b86-4e9b-a3f4-1e18903a2c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a734b295-bb58-4947-bf4d-741edc14bb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da660941-36fc-46b1-a335-76814ba86ef2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74e1d7e-4ac4-40a4-bd28-2f396df0aed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15868ac-922b-4d6e-822d-8c805e972a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c461fea-bcce-40b8-a4e5-2a408d127eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1090db3a-d28e-4cef-980e-8862fce4b69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbecb24-fa25-4a39-96bc-422dd013a3bd",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38cf7dc-4b6e-4116-8b74-375165fc773b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1669f352-9501-49dc-8786-921a5f5ebcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36250f18-4b49-4acf-8211-ee0facd6d1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d86477db-669b-449b-b9b3-23665b3ed138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1649ebd0-a102-4d40-a5bc-acd32bab8eea",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def46705-5b55-497e-9df3-21aacedf991b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d595b32-83c4-4476-921f-cef5fb640e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7a10d5-935f-4539-ac84-0f7126a1110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "921bc3c8-aad5-4495-883e-6f810cb4db81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5ed014-bcd1-419d-9043-a91752d55301",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43bdf6a-610a-441f-bb93-470e16765a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1c3594-3848-4c0b-a97c-223f9bc61991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555025a0-0b41-4592-b0fc-16f450ed7340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9152dc-1659-4b52-ba5b-75f29d49b42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc317074-e5b4-4119-b119-17f39339062d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081551ad-291e-47d9-94e0-de8ee1178a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb9f329-fdd9-4b8f-8418-549b3aa0beed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6400861c-feba-44a3-a037-62cdc0653e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05582f0e-fa12-4033-bb02-466ca404f766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcbd477-ed1b-40c7-a89c-717a027ee717",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255c4d66-1d96-4912-b1e6-833781053ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a8ae1b0-282a-4696-8790-11e89e280000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623d3bfa-cc35-44d3-9c7d-aa8ab1e42e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f67dd1-87c8-464b-91ba-dccf6aeb5d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a626f52-7671-45c9-bf92-962c0c12257f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1757fc1e-845d-4f67-9089-ea9e955e81ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3b6412f-e378-4edd-9353-586ad9d61ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8bdadd-0df7-474e-ac49-8571c93a21c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ed4f54-1b1b-4e22-8cbc-31f4a3add8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a585cd52-f6b6-4948-9b94-e43ce79e078d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45fbb6c9-978c-4d53-80bc-80b0e005e998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f323d9-c517-44bf-aea3-cfec1dcb5295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0ce2a1-e219-4620-8476-5ace6a742929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b33a1dfc-80f6-4ec8-8756-1fa44b539cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4811d659-4ed6-4bda-ace2-aa3facfd8815",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26587392-2518-47e9-b375-c4aa2f010e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f4d9b9-c7f1-45d2-9218-4d5685098f01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738b4d76-b09b-4d48-b889-c5ffd0315e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88712683-9ba6-4039-b8a7-932992046576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c44ea2-adc3-4c9f-acac-b6837c8438eb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fb8d9e-a9d1-4992-87b3-7dd37d24e23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac36ac6-d1e6-46aa-933f-e4f1626366cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf931ba-f2e9-4238-b7a7-18fbf24bcc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5a713b-b820-41b4-975d-26fda593d94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5820aff3-1aed-407f-b0d7-866a97dedf1b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d15d08f-6fee-4a0b-a46a-5a3a30677c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ee660b-3a7f-4373-8c56-8ff30308f7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ea5c88-0212-4af5-a22b-e8120508fdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3a0855-290a-44f1-82da-c397d8c40acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36532440-347f-44fa-bd8c-9d8d2cc03a63",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86d6fe6-1142-4b28-b9ee-de0a37e088c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab63d594-1d81-4480-aa5b-22b754b37f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "665133f5-3d70-4f7c-b4d3-00ac8dabf8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0978fcd4-5184-4178-9ced-7b7dc2359b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be329660-5af4-48ab-89ef-1152530dd6b2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909bd119-3ece-47ed-9c5f-fc54a2c4b0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7abe8c-06ec-466d-b452-14a6e6a43b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f7fe27b-cb0b-4197-9dbf-1657425b697c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "94d791e3-d2f0-4b89-a570-d8319fb75391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70dbe16-729c-42de-8d0f-2e3ea6c4bef0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a18e79-c1d5-4a1f-a237-6e171c92b9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be062364-29d5-4490-badc-42667ed8ace4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae32b52c-28ab-4857-b7df-1ac7b37b572c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1c9f3a-3225-4a19-9cd0-9ccec05bdb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41855fb-9392-46a2-b994-d49be6a81870",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2f6372-9b07-4664-ae4c-10c6bd30bb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca68475-5282-432f-9d55-416b6fc0f936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9b92b5-40f7-42ee-bff1-3193e5d1d3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae93122f-f7d1-457e-9964-fc5d659a4343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f587b80-78dc-4b74-a4bf-2eec2491fe04",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3fa6e9-ec0a-4880-ad09-d2a1d1621dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee622315-42d1-4aab-8975-9b670abc8262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76c9426-107f-4eba-9e6d-1600a58ea856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a699ad6a-2bc8-4b64-aae1-8126d666eaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f710addf-7236-4a00-84f7-a75a08f76c47",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd912ad-6fa4-45b5-8a75-2b4ea0a350ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c043bf89-0b20-4125-8960-70b07c29be50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114abd32-30aa-49e9-bc1b-67d25d8a52e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "947da7e9-840d-434d-90a3-1e2b4fd1ec58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03070c26-9c3d-4dde-a044-2aa5101feb18",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e48017-b716-4ec8-a43c-4246c04dae57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac75404-792c-4760-93a4-31c7da03fde9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071d360d-2df1-4839-acfe-bafdef618db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2ac0a1-25f1-4c36-b93a-bfb64153203f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886b8988-e970-47d4-b2e1-f4e4d2559d3e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e554ce9-b1eb-418b-8734-e54e78db812e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be550719-1d09-4a72-a2bb-249c4e8784ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62fe534-6b22-4d83-88cd-e098337eb7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00108fc6-7bb3-4401-b868-1138a2c107ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ccbc3ee-9571-4dcd-961d-48faf6ed2f9f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ab967d-dc26-4db3-a5de-8d34909acc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b6a716-8ae8-4b94-b238-f142744bda03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7e9841-5ae0-46a0-8724-8195e31f9315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b475a8e-6f15-4f9a-a81b-bb224b2b64df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f381a44-811c-4817-93a3-59c76706f3ab",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3e58dd-150b-4a1e-9c20-7ce028b77049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391ac878-d4b9-443e-b574-aa6ec0a1da55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8fff21-0040-4321-8c4b-67dc33114445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29249219-9a65-455a-afe3-2fe7ed6813a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6fb990-b599-44b0-9628-217280aa4f41",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84aa2a69-e63a-4e84-896f-d6ed48b047e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c518d47c-4b90-4890-aaa3-30d6e2f8af3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88811e59-676b-4f36-9baf-9189960cf32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a1799135-9315-4a34-8fe1-657a45ecf045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd826d83-e4be-4eff-8261-111ac3ab0070",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a39dec8-67c7-4dbc-82de-4cd740ffbacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727f9226-c600-4930-909a-f2524378acf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94587c7c-2ffc-4b3e-9abd-5936329c2484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0612aa9c-b643-454b-a77b-97109aff0630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b2db48-bb05-4430-9b21-9fd6039744e0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac92903-ba20-41a6-84d4-c52373ebfc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c221bd95-35e8-4808-ae4d-cca3a5a86cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b3bcdd-8b9a-424e-9722-6fad98297a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "80788113-f52d-4cf4-b551-b9290dfa16f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52717486-467f-4065-a2c0-e60a04f32d38",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6aa57ad-a6f8-4802-9a27-24a10e9fae93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c11c66d-38a3-412c-8a80-b5ce2175ccf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e543e6-6028-4ac7-ac12-84d5fdadd1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff62e7d4-8915-47bc-8fdd-8a5713823efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a034e4-1a2a-4310-a292-305152f762b1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed4f8a0-bd48-4f61-ad92-f03450562ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9885bac4-fc60-436a-a965-8d65e98274f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5670f61b-cacd-4eb5-a4d5-08fb5dd8ee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e4d046-612e-4c43-85f2-f95c9b48dcfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777090d8-57cc-47fa-9918-cf1481914e4a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5735f6d8-2625-424a-907f-8c4073e532d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc8a3ea-f6fd-4da5-953b-21f179548bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f889525-86da-46c6-9d92-d3ee54152fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad5fc34-1f12-43b5-82be-d55f5c9b058d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61940012-6997-4202-a5ba-a7dfebea6909",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ef9cd0-1466-478c-8ad0-46f48a5f938c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1506863-a151-41a2-8dae-84344e7f6a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e1545a-5f10-48f8-9b96-31ddfa746d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4ce5d4-6d6b-4135-a77c-0a315f8b212f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731be65a-ef46-41fb-8729-20c48c10ac9b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2e11fd-1b30-4f59-bb44-ebb6720ace94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38380851-2ed8-415a-9867-13dce06f45fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd081a3e-46a9-4a7b-92c9-7471bde712e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "457566e9-8af6-41cd-8fa0-f50db16ab85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7d041b-05db-405b-a1db-aa57ccec5446",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27937b0c-e8b8-4010-a303-05fbef70593a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c3f979-4752-4b78-b2cf-7ed57ee1849e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b1c18f-41ef-41a2-8708-7a6c15224ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bdc61f-866c-4a9a-b4c8-afc585891ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac86c06-5c56-4c73-9cb6-84131cd9b70e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72599ec6-f4da-48b1-bdf0-41ddcb3683d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354ac7c4-0f94-43db-9bb8-d97b342fb601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d69b3ba-3260-49f6-868c-4db1bf07a085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1161896-388c-41f6-b57e-3d623c198fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639fee1b-c917-459b-898d-c41d96c7ee84",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c42324-a21b-4c9b-bc1d-7aba2ae94b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026d268f-1473-42e1-90a9-885c0879cc9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab1cdd5-97b3-4e62-b4e3-479be2e24127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88dfb2ba-6625-4433-8a21-6fdfa8b41c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cb3228-ae26-422b-9c32-da8f96571bcc",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb5cd6a-1fea-45e9-ba44-bb6457d43b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6952f386-497f-4f75-b6e8-94bb0de98233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d74ba6-ff9a-42c1-bd10-3e738c9b84e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb6b330-8a5e-469f-a42f-872cc1776c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5eb5d33-7703-4a2a-b2a0-80986127016d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231273f7-6fc0-40d2-a30a-f81c56ab03ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc432ec-a293-4c7b-ab16-5533df3d807b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a0f4dc-313f-48a2-89f1-3589d3a41d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c4c49ad-4651-47a6-8f2d-8bb5ad85e7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16898d12-f3b4-43b7-a814-84453b82ad56",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269a2981-7fb3-4721-80d0-1d9a5aed1277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "780af843-765c-48cf-87c2-70c2f746fea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c1f3d8-f454-4398-9a31-d1e95a0c813d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e84ae18-6ec4-4b58-b71c-c38e00695a8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4b7c70-a415-4b31-8398-4b4a204dc52e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f372e957-8045-465a-8f90-581a6e03e62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6624eb8e-1143-443d-80a2-defdc8f96d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1a24f1-ca0b-4a72-a94a-43c22e15c406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef2ba15-7175-4183-91ff-de5ba81bce45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a847ce9-0307-4784-9734-d186bcfd9395",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a8853a-4a5b-4f7f-b06d-dfe8597841d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "223172d4-7b89-4874-8040-c6a7db001279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3956a5-6e30-47b7-83b9-47ea948c7749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d70abcaf-db12-4861-be71-3af85c09a7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fded91-468a-4c45-95cb-2d2e128e3fba",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc4e3db-26f0-4400-8301-524730256c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e8c2ee-78ad-4f3e-826c-89037356ae2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2848486c-41a7-46a0-933a-3a76d15e7e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f778551f-44d8-4f21-8c7a-3366da523201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e5787c-1588-4733-b523-e8523ce06ebf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b298cc36-74cc-4d03-86f4-1a1772b522d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a38af21-afe5-4083-84e7-390a4c6f7349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8697572e-d5c3-4a80-9f76-a66c33f17060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c04c871d-f8bf-4c2d-b2b3-23fe2bb1ce54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba343a3-890e-4d95-8435-6369f6fcea79",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0293e97f-930f-4cfd-91bc-bf9b47b11608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d048693e-d80e-4d08-9dec-ebf9c654e63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c85e5ae-4bc4-481e-96ae-aed81360bd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b396a8-028b-4bd8-bcaa-40d9a241cb99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c20e9e-440d-493d-94e9-eb34a6e7612f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee7a1a0e-32e8-486d-8766-4438ea026c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c45ad3-ae8c-4430-9917-8789fe94c3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea2e451-5e30-461c-97b6-13bc88dd5409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "392e2952-0959-4c47-bff7-65ee2883c1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9088bd-af0b-44ad-8d86-f717af6ce11a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0604762-5aa7-489a-96e2-2926e7a4ebe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48cfe41c-d978-49f0-92b0-eba5b737ba22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b68d8e-21b6-4c12-9413-cb5565bedd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "864f6574-402e-4841-9800-bd0ae1ff89e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd7f75f-1979-49bd-bc39-705470a2511a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e336ef9-2129-4c59-b9fe-262a9d5b1b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9142f7cf-20c8-41c2-94ce-8abb0f0bf96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc107f0-20aa-4a6b-befa-f94140129470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "027fec0d-2b9f-4f73-898a-e5d5e0bbf26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314e4c14-c190-44ed-ba5c-7f28b8aa6cc4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5b1a5d-bc34-4cc1-8e89-0ba02da09c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1d174a-c69c-4a04-a5eb-f02f53b93bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3243ef30-dce5-44dd-80b7-fa7c131ad72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7df6e2f-57cb-415d-8912-7f90dcfae51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f95cc2e-7f00-4d13-9e87-abaabdece0ba",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4559eda1-2829-4be7-81a7-c7fb5976c156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19242823-e07c-42ac-92a6-15c45874ed6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c686605-39b9-44e7-8373-2a9be2885b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d01687ea-75d2-4a9a-9e72-8b550c5d857d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3f94ef-6704-47b7-b267-e172cde3349d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8eeb810-85a8-40a5-8999-9a0039b6ab5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c119fb84-3439-46bb-9005-f3e9ed61dc00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18edb624-a9a5-4486-ba37-d80c4b843e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9454175a-c16d-4246-b51f-8fd10fb317d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91a7aae-126b-4797-95eb-e0bbe19c7cf1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbcb4e2-015b-486c-9d8c-226eceee61a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1825320b-bd75-4322-9222-e41069b4360f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86b8a3a-ae8b-44c4-abe8-4880f951228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "97062810-f917-414b-8260-b7c595939209"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df7b2d19-cd19-4bd7-9842-dd32701847b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d05c7964-e771-4a5e-939b-0db76d7fe2e2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258e540a-5a42-44c4-b11b-c7f5239fe190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaa59026-6077-4b9e-9162-6107944c5741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a80929e-54f4-43d6-846b-bcc6faf39f8c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5e6d1c1-ced9-40b2-8a1c-74fdf97f12b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79d05854-357c-4b18-bf16-c79c23620ee4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44a81e36-e978-453c-9906-149456acd3c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e47821b-bd2c-4163-97a8-977f5ee75b2f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "186910d0-ad5f-4d4e-9b27-7109b68a8bf4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cdd64091-7523-4c75-8028-648314b24a6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd64ed99-281b-4be6-970d-1f373b4030d0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9161ff0-e520-4090-b726-249c5e5f9b28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb01c7dc-fa17-4cb6-a735-bfb1c5c34ee3"
                }
              }
            ]
          },
          {
            "id": "7ccdd21d-abac-44fe-b007-5305a46f4618",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5802eeec-aaae-42ee-83e1-513ec76e9c3a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc52efcc-ad42-462b-ad8e-dcabd04c9b5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fffb220f-b872-4b2b-b04f-485c988ac0b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0245677-4c23-4a25-beee-0a1ffdea874b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de16b62b-a08b-466f-aa3e-66bde5e8afb7"
                    }
                  }
                ]
              },
              {
                "id": "7458f571-03f8-47c6-8a31-4dece681c8fe",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bc6d9a7-575d-4e0e-8a44-681b8aab029a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58448181-146a-4a9d-9eae-d8c28a254bc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4c31237-f32d-4ed7-8564-740277d5a745",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ffa8995c-d1ba-4aff-bd5a-e69ba77ec4b1"
                    }
                  }
                ]
              },
              {
                "id": "47a4a0dd-2902-4479-9308-e430091bd9fc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f78f805-12b3-46a4-8b54-f73443aefe99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4467f49f-83d0-4036-acfd-bd082dd36754"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df38a489-cb3c-4552-8ade-b2000ceef8c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68a639a3-f1c7-4240-92c5-f14cec97795d"
                    }
                  }
                ]
              },
              {
                "id": "f949cbc7-7cb7-4979-a6e4-301be60721d0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "556821a2-674d-420c-ad0b-1a7bd5ac9695",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8b36975-fe0c-424c-916c-8dfc9efdd54a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d607d391-408b-41a3-8773-64b4da5cb92e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a1f936f7-5efd-495e-af1b-dd92888b428d"
                    }
                  }
                ]
              },
              {
                "id": "c135aa79-4313-4d62-9a67-2bb68ea5fb5e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4611a73-0bcb-4346-aa03-39d92fad372a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf11d5a9-07e9-4e63-a714-5f70e39b4bcb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bf1331b-c6a4-4178-8fd0-c0bea6686e0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4a9be70b-f028-4744-be7e-4d9a85e3746a"
                    }
                  }
                ]
              },
              {
                "id": "a3c58b8e-9b55-4663-9757-8bb5bb81ec6f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93ddb651-f63a-4f3b-94ab-5eb728dac1a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6656c6e3-9da3-4ff3-9902-f19c90229174"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e82b826-e0b5-47e8-8ed3-d3f593c2b276",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba738ece-d3e4-4e66-86f3-fda2fdb031f6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ccfd0dfa-92aa-4aac-96b0-551cac7614d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf031951-fe7f-47ee-b788-d84dd066a4b2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2cb10569-b991-4f91-9731-97ab34b649f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "250e7411-7680-44c1-ae68-4756087756b8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4482d09-c94b-48b4-a9b0-ffd1ccd76107",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8f4227e1-3ec4-45ad-b381-69dc85053585"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e58ea073-6c6f-47cd-91c7-00c20bb39717",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "297dc593-667c-4a55-ba4e-06a3e9322845"
            }
          }
        ]
      },
      {
        "id": "ba63fdb0-1cea-4879-9c58-9be62038836f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ef2f9abf-cde5-4411-afe8-0ee202449b05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd7cd895-6f5c-471b-afec-b195c963ff59",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "83caf829-6174-4668-8791-65d29965bc85",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a63f9b-fe20-4b86-a95d-67d7c719f3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ae7999-2d48-434f-8dc5-3c58503e4b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41e9df1-61ac-4e02-908f-00fcf9ef33ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1ee50a-c70e-4366-a0ba-39eda3627207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72382996-7a29-49cd-b2fa-47c9a2c07b29",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786d68a1-506e-4417-98f2-602ecdc6a66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b367159-c198-45eb-bdad-0e0e9cffea4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c81e3bc-572b-44bc-84c5-c76e7c0d47c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "386222ab-95f9-4d98-9060-ceca5c69990f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90649c0f-383e-4761-baac-b1023ec92c40",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9fe9cd-4535-4723-a2dc-5819739fd041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0029daf3-e4aa-4728-a58b-adea467f273d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9ab19d-7f93-4854-85ce-937e130ab1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1505b364-7653-425a-97c4-225d9eed381c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19beee5-5809-4845-ac52-0b54f7ea25f0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d766edf8-0bc6-48ab-ab31-3487a6a707f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25835d67-19c5-44c3-999f-c663816a46f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b64d02-b8d0-4e20-9b14-bf69ceb27f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21ba2e09-54fe-4c18-8a3c-bab4a92f6cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3400992f-b8ad-417a-90f2-6971fb097bce",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078976d9-af7b-428a-9bcb-5be969250bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48b10a5-cf61-4861-a738-7d09ba8108e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8c2a23-5f29-4626-8cba-da31d2fe5e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7adb6d2-72b7-4740-8366-850533c38ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0240e301-b5be-4720-9c88-5f41b26f6685",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19a13e2-1373-4b1a-8006-ce85891b1e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5acf5d6-b361-41d8-b194-f0e84a3effd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2e64bb-6901-425b-8191-6a50bd9f682d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec829d21-f9ec-4ce2-9a11-f2a8aa0ec056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480ffaa2-33d0-4b9b-8540-4183c3f941fe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2175f6f-248b-4c2f-bfe0-8414108c6f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "361fb70a-3be4-43b2-a8cb-8d5c52d7c982"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f3966d-4126-4aa4-b77b-19816de43b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a02ed79-4e28-4d44-89c3-e3e515cd7011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec047ca-867d-42d2-b3a8-7d8d67f040ef",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53db4638-48ab-4b8d-8080-aa57a97bf82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "433f6aa5-51d4-4046-a486-f58395785d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ea61a5c-f3c3-4e5d-a967-a0b0ba0bc2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08a66f3b-8716-44b6-93da-04ebb4e18c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e16e9de-535f-491a-a004-991acffdbedf",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca9f5b7-5f62-4386-82e3-7e55a029c842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629d8471-c32e-40b1-acdd-7a767831fb61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa674ea-d547-423c-a329-5de2b9b35cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6780b9d-cff0-43f0-bbdf-caf2d76c6145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9d396e-02de-4655-91c8-6e8999ead433",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f085e36a-8368-47b3-b66c-7e2743215dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ab610b-fe0f-46fb-b015-d6d2cfceac92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6918497c-2c5f-46d7-bab4-e21694cce022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dbff03-1fb6-41f5-a642-da182cd22fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c24e5fb-58a5-4908-8b52-2eec1efdd94a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13495204-c5bc-456e-8e7d-9b5b7c6cbfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1738b50d-b6fc-43a9-b71f-5d3b85dfcc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef23ac8-f0d3-47fb-8c6f-b48a623f9274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ac634333-87ff-403a-bcdc-d7829756441a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13180428-7c5a-44dc-8180-e2116403b51d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1c8802-13d4-43d4-b184-55c162ed0768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0d04bc-7e63-4b9c-aa30-a207eb724889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4631cc0-00dc-47fc-bea8-888d385ed5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1571f6-7539-40d5-9d5f-dc7ec9b8d805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec55e1f6-9607-4956-a69a-c5073287b20f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901d9bdb-065b-47cf-9f1a-8812d31b273b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1dafdd9-24ec-457c-a8ea-82d896e9c59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67ae49c-5296-4580-b6c2-b40f796347ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7132ef41-a13a-40de-a678-75c2f2e632ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c64bdf9-8373-4f66-96d7-bc65f79d940a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5fafee-1a5a-4337-b052-f245b21dfaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c364220b-09c1-41de-b255-1bbd2f0382da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b39f0e-b41d-4589-8cd9-f31dcca951d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f06684b-39c4-4fc4-a357-94daad1bbfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c932956-b880-4fe1-a4a3-89ff9d0f0e42",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502564af-0060-4302-876f-d09e6a5b6fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107fbc9c-78f2-40dd-8ad9-5d9c9300601f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c1aedd-25a1-4d0c-9d42-2c743a5e7598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "12049464-8ab4-4a9c-8a3e-8e37d8360f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8692338-802f-4744-94fb-4498f7c18447",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f06345-04be-484e-9d4a-16940fba60fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14d7100-6c64-4b23-b37b-edca43ad3bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c554c293-a224-4185-856d-288a29c251ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d79e218f-34fe-4ffb-a5f0-e0efe868701b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056d2669-fac5-450f-afb7-e8fb6448af8e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1eef01-1483-44ae-8644-6656cc29829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778d678a-b172-45bc-87c8-55628a4849a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de24a2bd-67fb-422b-93b4-fa5227493ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "837b29a4-2a6e-4721-9d68-80d926f834ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132ac748-ef94-48ab-a0a9-de2903f0a11f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3136efc9-cec1-447b-b495-92d2f77a3b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbf295f-9de7-40bb-9f4c-3402ab899306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3176807f-ea18-49da-b034-d093b016766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa9a7a9-536b-40a2-a344-b54a943cdd61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68aeacb0-445b-42aa-aadf-1cc6b097b5c4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7104932d-7f46-4bea-8dd2-729967745b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d09a6ba-75e8-4bea-8961-d3244d89fb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b6b788-c168-4df5-8aab-dfd920ffc589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a67dd4-2f2d-46eb-ac0c-56ee885d3518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12eddf41-8c78-4f38-af46-c3852ccb4b34",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a627b9-0cd9-4f39-8b96-f09107519c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822e5be9-9abc-4297-8239-0108c4140f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbbcc7b-575a-40b8-acbc-dc9e1b1e71f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f78bdf-43b1-4233-ac2c-0973dcc71a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8338cd66-5327-44ec-b24d-a08223f28569",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5fd46d-7a59-4c31-a9e2-ec9dd08cf66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8a98b30-d093-4b43-87e1-e9fe26574670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6821bb-878c-4422-8be7-ca20353d8217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01fb44fd-730c-42e4-b423-ec7d34e5f3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c8ea2e-9c5c-42cf-bc89-10ffec1c68dc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68871f6d-9785-4918-8a0e-c56d8bdba5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e65f1da-cd73-470c-8655-97759bec5db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bf3c64-49a8-4323-9272-becd6f7a2328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc90111c-a2d4-44fe-b1bd-8570e793c749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00693f4d-9ba6-47c1-baaf-99701d788ad9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74080f1f-4880-43e1-952a-12b8f2f66d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bd29a48-750a-492f-866b-31cb89d0bd93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8a4ed0-d349-4ae5-9cab-81f3b732d159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72965c5f-1b5a-4154-9139-d367d6a59081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70d57ed-d640-4f4f-9b7c-46c5b2815122",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f9bdb9-0aae-49c0-b9e9-f914cbb7eb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24d63b17-16c8-4fac-997d-d438099f472f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee71db4-eb1a-4b2e-8abe-c9efad09558a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86d6557d-4da5-4d13-a215-e60b2fb9691f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9aa49a-33f9-47de-9cdc-2ca0e8d020bc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c868658-e29f-4aee-93f0-78abac7ad251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89173bd-1e0d-497d-81a2-1fffc1d7293e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdddae7-5885-45f4-b9ae-a1bfb0d1aca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2c3d31-5568-47ea-820e-bcc2498db968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09853dda-0a37-4bc4-be7f-2838a0c2a8dd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9bb7da-f99a-478e-91d1-c6d2f3422325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c3f7509-5153-4117-b2b0-6bee56a046d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225ab2c5-d059-4e0e-84cd-c579c9e8ca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f4677f-012c-450b-8a77-ba18b3b124e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0162e8a-0450-4d9f-a165-28c5797883f9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22975906-71a4-44f1-8bbc-abe905674a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76830fa4-f27c-4f23-a50a-cae819ac9212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852795a6-55d8-4ffe-92d0-ce56ae08afaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06ebbaf-2f18-4122-983a-4f59f3c72ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70d5c05-f499-4e1b-b31b-e598b17263ea",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53764fd8-eb38-4c58-ad9c-ef29929323fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "221285d6-dc35-4192-b0d0-29be140fda78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be6261e-1147-433b-85d5-51b64a7e49f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc0fe74-c5b6-40e9-a136-e22e32fe175d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff273582-261f-473d-8ebc-4f9b81b3a48f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca9a28f-4238-4f0b-b903-8e2cde6ce2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c37a8ddf-14c7-42a6-8cb2-1bdce3eba735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e689c64-339a-43d5-b2da-7b25741ab4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56fe7a5a-6684-4671-9526-e60182a37114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6c8e47-4088-4bc5-a0af-be2c43a5efb7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1879e0af-f2a8-4065-b4f0-a46450b5a08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa5f252-7d76-4172-a113-baba00884804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b9b50dc-8533-46e0-8ae3-a472ac6d90f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f17074-ef34-4b21-8b9d-6a97ed03272a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea33822-f690-4403-8b93-c625a3f02faa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605ca42a-210b-48a2-985a-ef622ee75714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191595f2-1eca-42c6-876d-dbad5f2eb60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78617031-0a4d-4ec9-a431-6cf70a1e5b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96820087-9cbc-4b43-b57c-221608710ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a73db492-c72e-400c-a9fd-a4c54fd7b6a5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2a1027-5e75-4d3a-9b77-5cd168bb2f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abb7f76-a371-47a1-bfc3-532398225f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba6635b-d4c9-4509-8e1c-846c47d6b4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27e542be-657d-4638-ac8a-b0107dd67b75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "78fa3257-2683-41e1-a6f2-a4a451b53f58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99621a21-7de2-430e-a4d4-8e782c45b635",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ca89f6-851b-48bf-a8d5-9159df2a855d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1bddc0f2-a700-46ae-9e72-8d6dfd64924b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d515d40-0e45-4b6c-95b6-7eda1d31c1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3be83e79-c2ef-4318-8258-7a620ae1cb45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6430df7-1a28-484c-8e0a-cb3ca1c30bfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e478219-37af-4bbc-8d46-0a47187590e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "133f70fa-0ced-4e0a-ab07-f19f07c94ad9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29576daa-130d-4023-b3ad-cd9fe9fa197f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c0c4cbe-4f2f-4afe-bf5d-ac160724eb3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4997162f-27ec-43f6-bae5-621e472cf0ba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3239d76f-2c92-480d-a363-d540cc9e842e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c8241c8-369f-42c9-a971-2ec6aae24ebc"
            }
          }
        ]
      },
      {
        "id": "c3363128-c13e-45ad-b553-f239b4da99d6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6a809bdb-077b-446b-ac0f-421ea1fc1bde",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2d713a6-b2d2-41a0-b780-6cfc4f94f883",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "72c7020c-91bf-450d-b00d-fd57c38a5887",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7352c88e-5245-45b5-9ded-5391de932a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a3eda0-2c9c-4417-9a93-c7de7988889a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502ffe64-6851-40aa-81b3-94f0b752a1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4bff76c-d714-4b71-8183-8c7d993f1042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4ba67f-1198-4019-8b1d-877e864253cf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3878b0a0-e3f6-41d6-95b8-fd9da55ba99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c12dc9-b9d7-404f-85bc-1b1386cea7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143ce40b-8c82-4cba-a899-662b8dca4f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae601472-3355-42d5-ac59-48277841cd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3d3673-d479-44d0-8361-16edf6fe1502",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdaf359-5fc3-4149-bbf3-e47087088b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2887a8-a50e-4ff3-8752-40181c8984d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1321aa3-d970-44bb-9fbe-a940cd7f38f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b62f2323-0ff6-4ff4-b587-bafd51e514ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31b6c15-fa90-4170-bd08-48df67541f18",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f14e47-c477-49de-a794-b10efcc67108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0647228c-c46a-4cbf-b57e-23f31688d938"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f19ca2c-dac0-470c-b322-b6fead73e721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b59666e-1842-4a05-9132-64ea1d40c082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01362f09-0ee5-47f8-9d8d-c2484862b186",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557b2233-6f12-4149-9725-f65464d37e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d9be92-3264-4b30-8ee9-44fb531e5afe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36510cc-0b69-48d3-88c6-ed727feee12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b74dc3-b339-4056-a899-6c4d39a01b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42b108a-b43b-4cdc-a1f0-eaca22951d75",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e220db-c643-4373-8bd4-ada791d27253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5bb9d8-228f-49ae-957b-557a1bc128c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd494a91-b208-4c93-baf7-6fdd42a60b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5c2e4d7-e501-478a-91f4-844c915f15f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fb74ee-4fd3-4739-a3e1-a34261a568a0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "352328c8-3d55-4e59-9b05-e843fd8fcc75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8084488f-c31d-4512-aecb-cb01b92d513a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd74f67-c0f9-4775-8191-d438c3bd8c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf10be1b-ead0-4e46-8c68-76c7860d7c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df7f3b9-4689-4639-9252-ff9050612f58",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04d4041f-2705-4cd9-96c5-6410aab50dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657bdba4-21d6-435a-a12b-09ed5ca29892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c5a4a8-df99-4368-84db-8ee6b3b3616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65520673-bab7-4581-8751-c7a746910065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e02dcfe-f20c-472f-ab06-69d5b9cabb67",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810b01dd-93be-4b88-965c-449377f5af0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4c8a3b-9835-45b3-b549-d71f50800de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7da3bf-1faa-4a50-876b-2d2d75b8d7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "688d2d74-f99c-49e9-bcd2-092b10749869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1cc3f2b-6eca-4d3f-a4a0-4f6e24d9a555",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64593e61-5458-497f-ba13-7e81e0841c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e99690-1560-44a5-9b43-03dc763dcf7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1087db-f419-4bb4-bf10-c3e244b72b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc15386-86a1-477f-8d25-8967a254edda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6996400-c5dd-4225-8f0c-a362945eff7e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "344b7a3a-fd57-43ef-9d0f-594016f8febc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612afa5f-3ff3-48ad-8f18-bf8f0db9b9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d2734d-18ef-40db-9f4b-d94eeecfcd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ff99bbea-28b3-4d8a-b00a-767c4a19595f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcc09d1-c947-4c29-bec4-10aeae6d454a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce149f5-3661-4ee8-b5c8-d98d0de8bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a456de95-4236-4fee-be50-581cee8ddbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fde3b44-40ce-498f-a31b-7d475e33f817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e53e434b-2e6b-4982-9923-7e68931d4c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5899385-debb-4a87-845b-b74b5fd640f5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd19803-0026-4296-88a2-e65d99b8142c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f3c8cc-012e-45ab-999f-4dd4589b82b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ccaa78-2aa0-45e0-b009-2205657a1a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "903b78ba-c350-405b-b605-cfbacb968de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fae7ab8c-c48f-471b-8f61-34043a8ed1ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788fcfe2-b8d0-4f6b-9b0c-685fd8c7c84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7bc7ce-cc48-4d90-b470-aa1359d2177c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ec55b4-f666-42f1-87e3-cad3c695a891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "504cf86d-5341-4410-87e3-a402e8d878ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75505424-98dd-4d60-a4fd-304d0fac3a51",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b95e8a3-5dae-474f-855a-a07861cb1d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e1b103-73f8-4268-b005-6e200cb99b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9af7ea9-746c-4be7-b420-4a19ea791eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dcfcc65-1d5a-4c3f-805f-b628a3b0b391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782eec84-d779-46e4-8966-dd82d0539924",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a0fe94-78de-421e-9bac-3c0930091772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75905b1-4dd1-4c01-94ee-6e9134b3b889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a096d7-b59c-42fe-825e-2bd81a722f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6d52ad-9da5-4cd8-a6c2-5048321d6741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a6d40c-5556-4ef2-a090-190cd8085168",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c983bfe7-5e0c-4e18-b2d0-0ea9dc5bd670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04a80c16-7dd4-43e7-87e5-1ffd1b879d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ffa14c-8ccb-463e-a79c-ae5746b5fa14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fb3b72-33d8-4b2c-b10e-707858361220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8cf105-4562-4a95-8c13-87f28b87b789",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5461998d-af32-4d65-9fb7-e939704daa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619a2b4b-59a5-4259-b7b2-2138540b4ece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521474a9-871e-437b-abd9-11b6a092c4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc22a6e5-3c6a-4f03-ba5b-4e372ce3b9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7ecc12-2207-4984-8a4a-721a55c662d2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c99becd-fa25-4fd9-b24b-626108322863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ccf038-c624-43da-bf40-266f69015dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d5de82-298f-40af-99f1-4f8e033769fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "067be426-af38-40d7-a736-41167c3c0b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fb5f75-6ce7-4af7-96b8-7a3c307d1dc6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9578e290-b8de-4ae3-8fb0-52d69c15ed02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621f6411-258a-447a-bd5e-3791eeda88fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351e3731-954a-408c-b619-22e54db04663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e24eda2-4830-42ab-9207-c5a726ef9716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82a731d-8be3-4602-bf8d-cd058b91aa93",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac7ffe8-11cf-439a-b119-f6fa65810b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76799d7-da68-47ac-be17-6d1127babadf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab03586-f2c4-4952-8f1b-8f6a782a778c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22baf213-7c43-4102-b219-3907828f83e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab6130e-7841-4a8d-8cd5-12152d59f1a5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67aa438-03a8-4aba-ab99-70610790af79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42806ad2-04d0-4bb2-aa8d-7c898b438c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25683da9-e5f8-42aa-a3e9-d1c1fb050522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d65e36-86af-465b-b2ae-84b48ffe35a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0493981f-2d39-40fe-9f7d-ab089179b866",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00b88bb-e281-42f3-957e-e05c5be6f978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fe774c-633f-4ebf-bcbb-3e441493d022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337a0879-0990-41b1-a60e-c7ba9c8e69f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "791dd243-ec85-45a0-a64a-3b4d56bbb2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aacf506-d3a0-46bf-9c8b-4f8fd22d39bf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aaeb8b1-f90f-4a97-8e8c-46c54f7c18f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bceda03-10ec-4277-b30b-639a14fe1db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122ece30-4352-4fce-bf27-65ba1da66464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ab1567-cf71-4fa6-9f90-adc092ec725e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd0128b-e7f1-42a2-b8f5-7380f5b83a56",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a6ee1e-c3c1-4254-8c7d-29faaf871d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ce6d4b0-d7ab-4225-84e6-9bf5a9b1500e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc1ca89-764f-497a-bce8-f467dd5af052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1430d16-b504-4d7b-a6f3-487af9f6fbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404ac64f-c58c-4b38-940d-796ca50a641a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee03415e-d0de-4702-9ca4-22b77701158b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7b263d-c619-4b8e-bc38-2e729b2cbb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c337a723-c034-4721-a22b-fe92af80ccc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54af953a-11ad-4556-aced-4ad7a2b6e4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec9320b-3142-44e1-b6be-52955512fef3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8ef438-167b-41f7-b10f-02f7c42ae37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b68503b-84a7-47c3-9f96-50e23dedf1a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f6cd85-ceea-4366-833f-51393d0f3749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c8d8b4-cbe5-4a1f-898c-ce7449bf3776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492dab2c-9223-4fab-a247-c35eb81bc0cd",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9058e4c-2d43-4b42-b7e4-16b0be51cf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aaad04e-4287-4cd2-b264-fabd314ab833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460c0d12-1635-4f3e-bb98-c3a73d5ce053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e01f58fe-60f3-4561-8558-6d7b23bbf87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0111d3c-7a01-4e8d-8f87-50b1e0ec8df6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f30c99f-f0bb-4b6e-9c76-eff4a955eb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d48f8b-1873-442e-87af-9060bd9301e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c87847e-1b0d-4b01-a2de-a48c70b4aa89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6ff760-7260-441d-a9ca-50bd2a8acbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26049c52-b955-40cd-a015-aefb3bd3b289",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1d0907-f52a-4148-a219-136bbcc2b300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db297d34-9680-45aa-9c80-00f33948aef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3e1736-c283-431b-9033-f9e354829229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c9e411-de64-4dc4-858f-34a9bca03918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd77bfb-d5e6-4dc4-bf07-cc3ef7101296",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a12643a-07a2-4b7b-a829-c5f5ff6eb1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bed7c80-c305-4786-907c-5772df65b512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e420dc9-d184-4c37-8eed-ac871f28920c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc45efd5-b456-44b4-9d25-d097f15dc20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccde374d-4c17-4366-9f62-9514e15847ed",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3cb4a0-f67b-4e87-8bdf-921d52a3c0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d397a3-9164-4f9b-b047-5219ac928624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fffb7b-519e-491b-937f-5210fd00c941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a52e744-4fa1-4fdb-9064-3c1f18519610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a360eaf5-a43f-4aaa-b1fe-727ffaffc483",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b481d7f0-96ef-4054-b084-4b8b3142ddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b926282f-7e11-4d89-86cf-ab7b5c3cd0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d406a65d-8ba3-4c85-bc4b-39135c05d0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53160451-23b9-4d1a-b440-5758c9d89199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5db04bf-93ef-415b-a7e9-9d2e5d0f9d2f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42de17d0-eafa-4e4d-a8a3-f22747800d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98bba8a-8da2-4c25-92f3-92fe7849a41d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f324e5-caf7-4920-8169-5ea5b74c0c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfbc7398-92b3-40dc-89ab-24252dc6aa48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7be7dbf-bf0c-4d1d-83a4-0db63282723f",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bb5c1b-6fc1-496e-b517-6fc02d2480fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc059db-b226-4e6a-b6b2-64f77401f0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3fb4dc-9ffc-43b9-8fb5-106caab9a352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b10bfba-2f4d-4abe-9ceb-6fe779febdc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d6561c-d3d1-4241-aaa3-4187ebebef15",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dbc791-a7e3-4be2-bb80-7229b1555448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8576b095-c7ea-4558-a017-34d14566da6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a3db0b-ba06-4a67-8308-4779f648a052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85df6551-5db3-4e6f-a42f-e4c28685d120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e9954f-ab4c-4bdb-85e6-52c62ec3d6f6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c222f87-2982-4d4d-bc7a-357086c89876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0223cc4-87ea-43a5-9abd-ed00d9e6effa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6942b3-0b4b-4315-9696-890151e5cc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a566f482-2bfc-4f6b-833d-ca388d14daa2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f2aa28f5-9e74-467a-8edd-df8d06b1ab01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "81dde20c-51cc-43a8-b1df-7c5c152629af",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb52eb5-8577-4222-b1cf-71f0cef7e919",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ce02c999-34a7-4ea6-a7ea-9d2a52a11041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2446e7-0801-430f-ae4a-06c23ea8b4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "52122ed2-7a0e-4dd9-916f-0d250240e50f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c93f6343-5956-4f7e-aa8e-c3ac0038441e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f9b04aa-5450-423e-91be-c5ff0e2727ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c4a7cb7-3be9-4843-897c-8fcc812a0352",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5b0a66c-26bb-4c41-9f8b-eb3d1ea3b7e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f91502b4-e0f1-4852-b15a-8a32e848727a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1510b694-8850-496f-8948-4fc787a3726b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "beb89b3a-dac7-491a-a108-bc8cd2a56929",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80e64a5c-7c0f-4b3b-909b-205dbf34c2bc"
            }
          }
        ]
      },
      {
        "id": "ef08a609-3696-4f14-a82e-44ee12b68eab",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "dfe63141-0b46-40cd-984a-f9e854be5865",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e282735-7d8c-4fd2-a19b-272eb01bc6ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec8bc86d-00bc-40c8-a4a9-17cfd995ada1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e67ceb-5858-4b55-ab57-141da0c8fea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7c8852-0c93-4dfb-b687-fd73c41e44ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d87839c-1b14-4a73-bbf1-de531e7cb697",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcaa1016-43aa-485a-a4cf-9aab22acca54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28efb9e6-2147-4f35-bd7f-01f8eb2d5c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c356c0-1fcf-4f73-af22-2f0dee992479",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b80a59-8d5e-4bc0-b746-2731287e0af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b3c776-0c7f-4e24-85b9-2ded96bb0453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79371ed-e26d-4222-81eb-22abbb5e3679",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44bdf692-14d8-441e-8baf-4cc1916ae287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9dc92e9-38b6-415e-bbe8-2a660168f34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb59635b-0079-483a-a177-2117451852c5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10df676-694b-40d6-9b7b-ae8c0baafedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3baf46-b776-4fdc-acfe-f46f158b35cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0429722-c219-4f36-81e3-f45726587c39",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eec0967-54db-4b52-9279-5936f6fae8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "297775fd-b602-49a4-81bf-10470b7d24c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9075ca2-e31c-40b1-90c4-f33f1e906b93",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5d3d61-7d03-4371-8e30-410d2303bf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e70463-0b33-474f-9e49-afad064155b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95617441-1213-4dbe-9a93-d6bba33847b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d48069a-699c-4ae1-8ffe-e49144b410fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6a477f-4891-4443-a102-1e7e46d01cdd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966dede2-c4ee-4eb1-8172-5ed55329596d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be40d8e1-d4c5-4718-b082-be92de585980"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073f5071-b11a-43ef-a8bd-48ee6df7c9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6986c608-4d36-4bb3-b273-051b175c5961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf2dd24-0563-4e96-9c23-4ba44f9d47c7",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891234aa-0df8-417b-ba4e-52f69e94503e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd130da2-b2f7-4054-b8d5-c7f58f88dc25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcb93e5-f159-4b95-9958-5fe56d7cb0e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d0bc82a-3c6c-4510-a7e0-937c67953102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e20ff894-5c58-473b-8801-efb335ee9c9d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb457cb-7993-4571-811d-a17142b65643",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76a64011-8278-4e9d-9827-cedf34d51794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee864800-f9ad-4700-b5a6-4695daff8f15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65548e17-8a5a-40ad-b3af-764150c9ed51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625deae9-7b8d-40d3-8624-6f7a5d565ff5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4089e130-41ad-4e4f-a976-b1f6b6942bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bbdd39-6164-4227-95d9-414ee48224e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96809c5d-59d5-4146-a34f-61968040619b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42d7d8e-79a4-4956-9bd5-ce73cda69268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c85308-019e-4db5-8aac-6440b72e2de6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221172d9-9cb2-4b0e-90ef-9b4cefe743df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "683eabf4-07f4-427c-8a16-0d974578b14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07321b30-adef-4445-8fca-1c0a5182e1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd90fbe-6f5c-4bf9-a9ad-2aaacf940c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162d0024-8246-489f-b672-f71d24f3dafa",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b5d4ab-2fee-4650-abfd-47f0520351c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64cba4ef-33e3-48b7-9162-70984c1bdfa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd79e01-718f-45c6-9b57-97350dbd8d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be0ecc9-5b95-460a-8e67-93556d01e1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d642d8-e845-4efd-985b-c79804d25603",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fa1938-bca8-4d66-ac95-5dc112b6b2d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3aa46fd-d459-4741-84f5-58aabde7e1a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b75a86-c435-4108-a26d-13196eb5b78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3e91b7-0c56-4bee-85aa-2fd31d4356b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454f65f3-952a-4e44-a93f-bf8ac42f9967",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87be8507-9b4b-4444-950e-edbe0b18de0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "544f26a6-e0dd-4a88-9124-d168cbc00281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b37008d-3277-437e-bb9d-0f200239bbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0cdbd6-02bb-4436-b9bd-d8f60fc6697c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8143fd1d-da74-4176-b06a-cb4f99162176",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8abab06-dff4-4181-8751-c7d9e2ec7aa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fa5daae-25b2-498e-b68b-9084eb810075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd62376-6a0f-47b1-804b-efd331f76872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0905dc2f-9ef0-4fef-a9b8-9522ecbd3fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "919c6f63-dcf8-4783-808c-ea363e141488",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29eebc2-c15a-42a8-b4d4-80c5c31d6fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf57da9a-2d9b-4ea5-b907-350ae24c6ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6389a966-9092-4ebe-92ea-5ba39340f093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8097ad-0cda-44b1-8ecb-f19913352e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85d1e2f-6d7f-4871-a0ad-590be546193d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "794bdc92-7f7e-4fb8-9ee7-4b1b9de8f51b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0907332a-9a56-4f06-9847-401edf3fed7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f8025e-647a-4a46-8132-01f3c823684e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e452e0-df94-4b5f-8fb4-ad3188350ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992bc33b-f60d-492a-98c8-4b76ff7fcfff",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a517f5-b0d0-4bc3-ac67-ad3e297d401a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b9c8d1-4ef1-42df-aefb-71c7c100cb7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab0a5bf-de81-4c4f-910d-5c1aa3996bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c04054-90c7-44e0-832a-08ed9ae85a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa25d651-dac6-4cd9-871e-a73e5769130f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07f4e47-038a-4105-bf7b-d7c60cea0f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e88096e-4ada-40b2-bb92-86ef692632e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1130403-faca-4cd5-9c9c-0ce3249c88fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4631c580-acab-4403-b222-e98c63c5f6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7ce6f0-f705-456a-879b-af221cc4c12d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73ff340-d1f2-4bc7-882c-bfccfd960206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e55928-1d67-453f-a264-6940b5411b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1fa6da-b598-4af7-8ebb-a512c3cb2d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9fb9dd8-6081-49a1-955e-db5fd2ead018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f85efcb-e9a9-4944-81dd-c36b3b2c516e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc7882b-194d-4bf7-933e-a2f782c46636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d578be3-521e-4263-9700-f8bec869fe46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48754eb7-c3fa-4250-9b40-e9246ad0bb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516126da-b3da-4781-bc6d-e1421a3574c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f03e0a37-a85b-4308-8690-739005c90686",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913b2043-2699-4cc0-9248-34da9b166fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e56ba7-fd30-4087-9b9c-a20f3eaed0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d951d84-9208-4993-a6f3-e1f672014284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18508c8f-3650-4c2d-8a4f-40653a27ef5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989a79e4-2eb4-4af9-bd90-b84c05baa9bb",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62702fcb-277b-4127-bfc2-f51ad7841a06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "964a76d5-bc3a-46cc-8fe1-9e4c648a42f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b5132d-9ebc-428a-aaea-965a4daff93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c7dd9b-8ada-418b-8f8d-cfd08f334dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b1e160-2bb6-41ba-8ab2-72ec4e4726ab",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2896ddee-f00e-4a28-9bcc-a2090402f45d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa6a83e4-bcad-4280-9fbb-1d1d5d5d415b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588fd5bb-5646-4108-b4e3-fc1aa3b7c1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396f38bb-7f63-4eb6-94d7-f684472ef92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311a4b7e-a2c3-4691-978d-6e6bb6b2a58f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73c5fb6-b85b-4b93-982f-9a87951b13ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b96046e7-511e-467a-935e-06b2441a38ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9250ab36-7cc9-4371-ad29-7903e591050b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5dd5665-726a-4fdd-9df5-2406a6b674bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0c04fa-2098-4df3-9c1a-99bd81448a54",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c699901c-c231-4b36-a18a-d32feeedaf59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62bd16d3-8a6b-4b80-a4b0-33992a7af654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba5eba0-01e1-40f8-98bb-9c98f394955c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a54af03-5cea-415b-9dea-9b49d3b60426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f12a810-cfa9-4c67-a16a-a4cc84de74db",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785566a7-3438-468d-b084-a702656b0f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33af68eb-07ad-4638-ba1c-be84f7c3bedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd422a8a-8112-422a-9800-70cce9243ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134e684d-4db2-4db9-9986-539fa28dd2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d20e64-a8ae-43c1-95bc-7998a420f53f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d38168d-f7ca-4ce2-bb04-cfdf6540dd2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a6f3a18-6f7b-448a-8173-64917b7df198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842f0089-1c72-4cf8-be47-755681bbfee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713a377f-063e-4769-9129-0d4dc14fda5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b316fbc5-a3f6-4a09-ba5d-fb2d753e9632",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc770c2d-7644-4a73-aec4-30dd212ecb7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d87a57f-82af-4f9f-805a-995aebf191e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c318ad-0213-4e70-9fd8-43e537669d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c45d5d-35cf-4644-beb3-b3ceeec3e417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ad1ef9-280b-4936-b020-6ce85c3a44da",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858e9b03-574f-4188-8b63-1dad7ba4ab55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa77b4c9-1488-41e9-aef4-abfb2e3b9063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f061814d-d878-4d73-8f2c-ae6c4787d698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba1cd011-98a0-4bd6-a7f3-52061464f58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97e32fa-37da-4da0-986a-4b9f78965181",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c93cd07-9d5d-4798-b125-3eefbbcf232b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41031e15-f0db-4774-97ac-ea1d92618012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cabd8f-8234-4b9b-bdc4-433f65c2a3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68de611e-5ea8-4a63-a5dc-007606fad4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16462b1f-f207-4a25-b561-267c63c18776",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b764e4-9662-4963-9ab1-1c3ff208df9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e10072-82ba-4d9e-af39-0276fa703250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ca4a08-4391-47d7-bfb7-9e2c61d2375a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52747e1-0bb4-4630-a943-22acfe4ea107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260b24c5-37a7-486c-a3e5-8cfc7b6ccd6e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a391299a-8302-400a-900f-ce0a873cc6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707cb6d3-1058-43bf-82ed-ec9c35220717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1f47ee-a17a-4159-a855-764ec834c90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44931276-a7bc-40ec-8449-c55f2384e39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ccd23d-dc69-4a1e-932c-3c754533bba0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be08944-a453-4059-9f4a-1594144a0631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86ecd1f-7e57-42c7-9999-f99ed16d4396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d29052-d231-4196-89f7-174ef3a10dc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6240d7-e140-4ca4-a4f5-68d42c04e3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6b7e3a-a2fe-419a-b36d-75f71a378fcc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b893241a-ac37-4f68-b706-834071dcce73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63340285-dddb-448a-8679-6893c01d67f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fa6005-6644-437c-86f1-d78ec5ea5c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1e562e-6740-4810-bbfa-2d84da79ec5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06693481-363d-45e1-9c43-aab63734e955",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffdb8a1-6540-4c4f-99f8-c76d51e43eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de84e521-8ce4-40cb-be72-896e66ffc6a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a567daf9-4c44-460a-b577-9df33eb9fa13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf09a17e-0c73-426f-b292-cfec42a23dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a304c6-077d-40c2-9f2f-6b6e04b90c31",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a263eb5-0b40-43b5-858c-40ad7a342bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f058d5-2a9e-42e1-b223-3ae269392ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f5442f-7ae7-434c-bf09-5fc4468ece66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f6305c-7cd5-4757-b639-09214074b15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87844df5-a2b6-4e68-b0ec-0e01825f23e4",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f733aa6c-454e-4e4c-874e-7e9922a1e474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a5dc5f-f488-4ce7-bcba-33a9b21752fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc637b7-13e8-4efa-ae81-53f487756bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79eadadc-51d7-40fa-8f13-a4735b36ded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f19c72-bf38-4bde-b5b4-40b4d778fff0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0acb1a3-1862-4d05-9750-ce24e590858d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8c31b9-ce53-4596-b347-ce9d5c7acf44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51c7c24-18a3-4a8c-8d2a-39a421974f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b73a03b-8ecd-4252-8a55-f73a6668fedc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5b9677-adaa-404a-800a-a5d35d8e85ab",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d728a00-a3d2-4fd5-a8de-ffc218b98f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f270867-c856-4a8e-bb5a-012b99039291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13703e95-a1bf-4451-9dd0-0ec45adea847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c91ead9-d1ff-4bda-acb5-f67222a58477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d11172-abbc-4a3e-9ec5-7d0af25551ab",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e38b4ff-1e5e-4625-956c-ab4996566b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d52b9e-3223-4df1-8a26-f0575a45041f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b8aa72-2a8f-4656-8ae9-957389ec13ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1adcd98-a808-46c7-8a54-f9594f6bb718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e6aae1-94ef-447e-b342-2ed9cb80fb77",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4341daca-86f2-4309-a974-761ecb13fabf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25611842-15fd-4a2d-ace4-4ca3024abeec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711ba97f-d377-403c-b2d7-23c940bd8478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259fd5d5-336b-4521-992f-3c9f05ff18ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c54dce4-32f4-4494-b115-74451d0dff12",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2312037-8cda-4220-81e6-1331cbd2b7fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1bd290-41c5-4e6e-860f-52384c68980b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81224648-bdd5-4ec1-9474-b7a9bb17864d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fb417e-7208-446b-bc92-8743552cd89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5d25a4-ae53-4c45-9272-5d0a74d5881f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e35939e-736b-4539-975c-5aac38d82bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a09fb24-cdca-4f9b-ae1c-023305457299"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f25ca75-fb16-4ee5-8459-453fb31574b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69803f51-cd03-4a7e-a782-cc6b1b175942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62b2851-6d09-45d6-8ba3-f2492eaedf4b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f65732-e84c-499b-849e-39ff1728c1be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e2e724-e067-4537-b14c-2c99130faaee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b68cb59-ecd7-41f4-9797-b170bf68e67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e199c2b-c024-4122-8dea-d4d95282ea49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cd7448-2328-485a-b918-2453dfe048b4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8765e4-ea15-4687-878f-9a3341f7e7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23481602-3920-44f2-8a8c-d2dcbd3c69da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48112578-562e-4cc1-af4c-d702a2af2581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba91c8fa-2e2c-4721-8cd2-a4aba6cc018a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a740bd-8129-4bd4-85bb-e0a0b0b1b4d0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9cd489-693f-47a9-8978-5fe29fedb7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff12bdec-3a15-4d82-8eb8-486cf04d5f2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7867d3f-7792-4ed5-b5eb-a6c057cd8c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5df8ce11-fe59-433e-994e-4af2a4200d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81acc82-df21-4b03-bf0f-06b0619aa351",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80569649-89aa-4715-9bc9-da0bb92879d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c89b75-f97b-43a1-85e9-23dcf5b75c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1ffdbd-e360-4b99-987f-9fe16b438b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f871a7-5efa-4ab7-8952-d96cd56180cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa28656d-1394-448b-8074-594fbd175e83",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61afcbc8-5991-41e1-bfaa-d180af7e5a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d950d4-cffa-4ee7-bed8-c3ca4f1a8312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7e86cb-3e4e-4769-b400-f46e5d49bc1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000d9053-d927-4b5b-964e-cf957547d1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0748f1-01f9-470d-836a-055fbf47540a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8f0620-023b-4b38-9fe6-49162fb8fc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2412db7-36af-422f-8213-d5a650da17c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b22ca2-5bb9-43c1-91c9-78724c6ee1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080d59bf-13f7-4719-81a2-94488d77bbb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b85b40c7-def5-4f87-8242-49e917d1b339",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55146aa-1de4-4065-9fb5-f1031718427d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95251cb9-72a5-491d-be42-d73d58093713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ecf151-2843-4904-9ef4-51d70a385c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2ed7f2-2a0e-46b7-ba36-207dd7934f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cab33fd-6300-4e59-ac88-006020308051",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ec3a16-4b74-42ce-b98e-cca51380e30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97084ecb-13a6-4a1a-8c38-41fe0837e567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef5ca019-d468-4a11-9f51-4e6cb7a9ca86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690fc199-dccc-47f2-a480-c3c38fa9b257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b9686a-2822-4780-bec4-64f4f6fb63f2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d84040-a98c-4f6a-aba2-08d33d74c4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff747a32-db35-4c74-a57e-2fd1e34feb2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c15eaf7-32da-4e01-b57c-a40a542d6b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0390703-d445-485c-a053-133cbe050bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba875f4b-aa3e-46aa-98d3-41ea13a9dd32",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204d5245-6841-41f8-a37e-929e79393d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efe5e05-8a28-4b3d-a526-53998daf990f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14567b2b-802b-4cad-8baa-5f55f7641b72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11bb7da0-1916-4f71-a040-a3a657a1c784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9764176-a16f-44c4-af40-22e61b222009",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a126d3-755f-4229-85d3-94951f441fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f66f5f-3a66-4207-b0db-ca2f8bf70dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f200965-e5cd-4a21-b997-1d5212261981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf028c4-9c82-4d6f-b495-7094f4d091b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8627e94-ba49-4259-a8cf-01e9a68abea6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc5da77-b627-45bd-b354-607abe9205aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9bec3b2-87fd-4632-984a-cb92400a9c78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db84ae7-be3e-4ca6-9d5e-1bff743af61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e198db-11c9-41ad-9aba-3bf15065920c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1d6aca-2dc0-4074-8c2e-55e2e3de4f18",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709bd0bc-0026-493a-be6e-26a4a5544c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc23ef9d-4e56-42b1-a9df-292235bf1b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1bb3b5-f62c-48f1-ae80-42a9e4dc8b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ffbb91d-8a6d-40b0-a283-f8234dd80bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e204fe89-497e-4193-8648-1d7af918774d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44102e51-4c00-4d0e-9127-05f8f97fce0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385828ab-cafd-4b87-85fa-b6c580f21a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "806bcacd-4337-4bbf-95d3-1f6de7fb6817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d7945c-1a5b-43c7-ab04-d31c68ffc385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eaadd72-1908-4522-af2e-f1fb8a2dce3e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc11751-3db4-47ee-94ec-228fe1153dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a20daf83-2585-46ef-a35b-1b4df2196cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98e7e688-6de2-41b4-be07-a832caa03a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0288c82-9575-4576-9f68-2ba1544e0297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153bba73-5133-4448-9158-ca99931e2134",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683978ad-9d7b-4fb8-8d0b-39eefdc99272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d69c68-5ac0-423a-8c06-5fa7daafbe0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76eb422-b186-4850-b62a-ad4ad8a88d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf204ac-00a5-40cb-b6f3-062a84b0f44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "702b7d6d-f667-45a2-bc63-e9c625ccc1e6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec8eb9b-66be-4143-b479-fb5e1cdf4239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bfedb05-a982-458f-a84e-58e7d7502320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336302b1-8872-4af3-afd3-6c3b909273d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab184501-bcae-4263-8df4-10a1d747907a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f795aa-5254-49b6-b78c-1f9c2f024342",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690a78c3-396d-4faa-90ca-4ed1824e1f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfd7c7b-169c-4e50-b3bc-59b7180d0c40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd26c258-6f9e-48d6-a809-65a3b4d56291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1dcf22-9d2a-4037-85cd-06dbcae52db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597a3df1-ad80-4240-879b-48fc9df52be6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ed386d-5fc1-41a1-94b1-75933e90c570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24edf651-c46d-4480-ac90-7ef7eaf98e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddf0c89-b0cf-40d3-8427-a3dddbce46f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1635f04a-2028-410d-9fa1-cf71fe5fbace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b668e5-fb13-4549-8264-9935bb971e48",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886e7fc8-a62a-4aae-886f-0f288985b113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c241d40d-df05-4160-ab75-c5867591eb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10df25a-d860-4b78-881b-e48e37cbb5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aff958d-e41f-48fd-8cf8-9cfd393d2bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc445fb8-e967-4279-a32e-1a3f0fe1aaee",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a817940-5931-43fd-a9e8-f050897e8796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f82216bc-bd41-4d78-b757-b7b20990a726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad9fcd5-f394-4d09-bae7-d1e63aa05d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa02c74-dfa3-48f6-b813-9ad3bd314965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206c3361-c00e-4f3a-b698-402fa8057be9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433aead0-7ed8-4665-b598-2999a4e4815d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f7dfb3-7085-4b4e-8917-94a285d86813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037273d7-efe9-4b1e-adb1-8e133273bd9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7052173b-3571-4fe1-8773-2c4a70ce6bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50689fe6-9f73-41e6-9cb7-3fec188f2645",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c62af3a-09c2-42e7-a71d-d1b2ff589932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1edeb1b7-d7d1-4caf-a727-ccad105829f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16cf565-1370-4d6e-b8c2-7dc0549606ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df1bbd70-959b-41a3-8991-1d5e6cc65128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8f711c-3e70-420a-a7df-44fe6ef26ec0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae2c5c6-285f-4891-819c-8441d93b114e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfba4b69-7c7d-4237-9ff4-344fa827aa00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b776548-3b79-4245-9de7-a9e0b723b809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05468350-fc7f-499a-b79f-937d6dead693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5fee64-ae5e-48ed-a773-095b04a589d8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd45714c-8ad9-4672-9891-bc9b8cb6ebe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aea2803-3517-44b2-b767-5b7df85b98a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7157a6-a8a5-4148-b356-5f01b0b7aa65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418b0810-e999-4c96-b2c5-40de90cb0d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2a9fdf-3e94-47f3-8356-b84a83c63ad6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f31acc-279a-4de1-b5a0-4e5d7e77ae4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7113adc-5b53-4eea-93f5-2f32e335490d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30c4b28-3cb4-40fa-a475-ae985961d540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca6ea68-a590-4854-8422-cb8af6761fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97c1f1c-6b44-4394-bb27-e1e598a27e28",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac365eb-daef-4c94-8c04-41bce6ccc1a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05fcde27-da83-4dfd-866e-f989c31882fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b7676a-9413-476c-8e8b-8353853f16a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f462a22b-27de-4b45-9ec1-b7a615492f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78aa6818-e4cb-4b71-a4c5-137a41746690",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f68bf67-3fdf-4c26-873f-a5bfd6ed87dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff08ec9a-5cc3-46ba-8882-337b46c89c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589b7cf1-f92e-4679-a99e-7c72d2879509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee9cb65b-1914-4797-9d3a-c851c3192456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df30acc9-646d-45d3-95e5-98177f69681e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673dcaed-3760-470f-8abc-9753af17aea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5078e3a0-d068-4fd3-8435-03115208ea07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b23437-379d-42ad-8662-f94f61c6b44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d035d1-5ed2-44c6-9d09-b768230c143f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9fe2dcc-f3ed-4f53-8bf1-39f4759a6349",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb70a7d-6527-4176-87e1-7738eecf1fc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61e711ba-b9b8-44cc-91d7-ba09a7404c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2de04c-5b54-4fe4-afd1-e552f4dd6c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd37cee6-836a-42f2-8717-afffd9fff198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7c751b-5d87-447d-9fc3-24bab158140b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874ae7a7-17de-4982-a2dd-ed8ab41f62c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73cd713-52b4-48a5-85da-84973aad3017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b38105-ca99-4e91-91f6-2cc9b597baeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a50644-8853-4e4f-b18e-85249b17822f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ffafc2-f093-4aad-b073-a39351dae28e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b3b4a4-41e0-407a-9413-20a29748bc01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "557946ca-0090-45ca-a660-a14de56ec414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a447447f-3e0c-4fa6-ae28-f67092cd00e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f32556-f9fb-431b-ba4e-4320cf427435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45101b6-70b4-40a2-8951-f2bcfbb605f3",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a90e3a9-ba7d-415b-a810-d2ff2b60fd3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24114b10-fbfb-4ed1-a77d-3c2947d6cbd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c58441a-1966-42b9-b3a0-046f8f6c8d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed8306f-9825-49ca-87f1-31c0cd41a1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceae6f2a-0478-439a-adac-f459d0ed2976",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e41049-8a41-4e11-ba1e-965209f19e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4079efe-1331-451d-a003-7d1882eb2863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253de0c9-61b8-488b-92d3-ca3f12dc0876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce86b5a1-1c40-45a3-badf-18c2a85c82e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeb8d0d-99f3-4913-babd-aaab7c8ace7f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382813c1-8326-49df-ba6d-8b25ee0549c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187dee6e-00b9-407b-9446-48444daa3495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c14ab93-ac68-4b52-aadc-89e6ffa3783a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9e63197-fd5a-454c-92e7-4d414ab4446b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f21236-75f6-4c3b-9c22-489b44e5e269",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b22d8f0-f8af-45eb-b78b-52ba073cc2c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d651922-be4a-49d1-b3d8-b1ef20f6932c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb1bc3d-aa1c-490a-8053-95418dbb0055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1836b33b-cf21-478f-8b1b-fe935e755915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fafec1-b51b-483b-ab06-dc6f66d5fe28",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c662f5-a1f8-4f77-8253-725b4a58f566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd7bc175-6007-441a-b1de-f084629b242a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d04a4a-4dfe-4360-92b9-46f8630f6385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf0458b5-0e30-4ef1-8c13-a4b1d64a94b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82e09660-2605-4e22-a7c1-93999b19a568",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4c9e75-a848-442d-bdbd-854c83031813",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c9680e3-579a-49ec-8b8e-c31af1a1bbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14c63bd-9937-43a5-a340-de56ef575e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06ca17a-c486-48ed-9634-5e0921ee68de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0407db-502f-46f8-935f-7095f889cbdc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f91e54c-c060-4769-80de-fb0d3af5bcba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f174b33b-5dbb-4072-ad64-f6d49e3d7710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b388baba-3e0e-4e01-93da-29433e11a996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193477f0-f393-4823-b196-e44846e5d051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8323a0f9-3371-495a-80c2-13959984d51b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6211ff-f255-4a49-976b-4fdb448c03cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d8aa90-ca99-4cfa-9dc9-11df660d9ddf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c3ac3b-8ef3-458b-bc17-3924fff0f0d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b93558-5805-4583-a1b5-5a04fee6d79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96d45d1-66a4-4106-9135-117b2cf9e9bd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cc128b-5380-431f-8e31-56dc3fccc0d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84a0979b-476f-49a9-9f64-bdbea7c17296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849566a3-245d-4133-b7f5-74dbe064e97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ebc826c-a69c-42ae-872e-e63c4f9cce46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7465700b-5c6d-44f2-958d-1220145dda3f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2f9239-4a99-4a28-9908-382a0b7a5026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "328e6773-7412-4bb4-bbb7-fa76390ce253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb48017-de97-40c4-91ad-af162f1b9503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7393ceaa-2b26-4f6d-88ee-852e62389991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb88aad-dd43-46f7-8267-58c5c018c229",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cf42c4-9bef-43df-bbc2-dd76aabefe67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75ba0faa-0c99-4ee3-adb9-303b5a62549a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ddfb7c-f08b-4af8-96c1-238ee6f54d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3496dbc1-89a2-435b-9b3e-6ef541f44c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f778b37d-8693-4047-a963-f5917ed68414",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fb359c-1c55-460d-abc4-00af0b7c6a8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da4fb2b-2efc-4358-8e71-d63b32133275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a4c5f8-c69f-4734-b5cb-74ff73732dd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "274ff90c-792f-472b-ab4c-a882063c05fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11e4a92-e177-40d7-81bf-95ea7152ea10",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce75f25-2586-4ec0-98ca-5e8b7c3e2aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07544ec9-b447-4860-98e8-5a5c7a652f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509aa598-b370-4f46-87c1-422cf4559a87",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c1d4e8-bab1-459c-a4ed-9a7111f0808d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f32b2c3-ee32-45bb-85d4-21efb6b1222b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7aa73d-b16a-46d3-b3ff-209300c661fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7df92d80-4bc2-4fce-9e00-fe382662dec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb73fcc-9d6a-4ac1-9470-fcef692614d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c34a55dc-ddf0-48a4-816a-c344b5d05b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf825911-7bdd-4634-b93a-33bf285c6570",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f908a32-6cb9-41cc-8490-ac2b0199cfae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04554314-fade-4542-a57b-5dfbdc261fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ac9e17-d45a-4f1f-9214-f97107ff9286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bde4a65-f7a2-4085-b411-bd4a16dc227d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7d3dd8-5834-491e-9c22-d5f5f502f933",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b43a26-7282-4b6e-94ef-e22e37a31ab9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf1b0e67-3a56-42f8-b7df-010396961bea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f17243b-2f75-41df-8ac7-dac6cddb57f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7506f8fe-d233-4b37-9bab-68919e7f591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a28509-7d5f-468f-9a16-40c86dcee490",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf78abf-e43d-456c-88a6-74ecc6521a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8af0beb-b7fe-4fa6-ac88-6e41c14c2f59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dfd2ed-c2e0-4b44-bd27-2abafbac5d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "433b5630-18b5-494f-8ba2-dba1ba7c1885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508b5c9b-ecd6-42f6-82e4-7de28937569f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f0c396-d106-43a3-aad9-e6c3396d166b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cda409c3-88e5-45ff-b2c3-30fe2eb79e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17137465-60d4-4c9f-9f39-55e088844325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2734dfda-f227-4f12-b394-bdeec3f4bff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd587d9-38c9-4504-98f8-a7c531189df1",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c233a27-3dfa-4ada-a4da-54271e8464ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0505855-4f5a-4ad1-8ea1-b44396e84516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01382d7-b8ca-42c7-8364-a23f0a508f31",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead76ac6-9459-42a1-b833-dbfff62076de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0bdb89-a927-4ea0-811d-7c32935d5280",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081a4ee9-8e7d-4483-b5cf-f90252358f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a923ed42-a4a9-49c4-b0c6-e777ed078ca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c213c5f8-ca8e-4d07-abb3-d959ac219993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ccc80b-1f38-4541-b752-5826a224b9d1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dae519ae-b632-4511-b006-3f68a6dd84cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aff8dc25-b44a-46fd-82a1-aedc812cec0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f7a0ca3-cf1b-4919-b633-6ba75d35c069",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e214dbe0-ad38-48f5-bc67-0a75c544ab1b"
                    }
                  }
                ]
              },
              {
                "id": "b36d37a2-259a-4905-aa80-0943f966b38e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3559d89c-46a8-4003-b741-502fc8875ed6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71589a32-937a-4aed-a382-d55d7d6069d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "31bb9b43-81b7-4b7c-a166-05a35b52cfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ea2851-d914-4842-a0e4-3111c8a99c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bb753ba-a467-45eb-ac07-8ff96c0ef4be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dac95800-da79-4c9c-9490-c815a7ca0b0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1513c600-3c8b-4852-aa12-5f9ca430ab9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40449e54-6d94-4d28-89c0-c6bf4e6613ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d43b0e00-31e0-4a72-8d39-50d1d34f7b6b"
                    }
                  }
                ]
              },
              {
                "id": "71c3ea0e-d140-477a-92af-8d9e75564deb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7b6d22f6-49e2-4b21-b74d-5d14e2fcd23a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad0368a-5f7e-4092-9da1-dcbc94ea5c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fa80254b-fbf9-4dfd-af81-2d3e64001a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e114a2-d06b-4417-8501-d6090b436899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecd2e99-15ec-4d70-bb65-9375f5198a56"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "389d1902-9a88-4046-9650-02e5bb4a733a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d1352e2f-4990-41f9-9523-6769333f9ebf",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "23ec1812-e9e3-46a1-a7f7-891c77253280",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "64e250c8-67ab-41d1-a85c-95ab3721f044"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40bab66f-a44c-4a3e-baf4-55b6bf0921e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d42c35f7-8ab4-4707-9a97-e9522dfba023"
                    }
                  }
                ]
              },
              {
                "id": "442023a4-8748-4ef0-ba66-360633dec9ea",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5116c497-58d6-468f-bad6-5542b0008abb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1c6f8a33-2e19-4510-850a-819b991cb550"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95f1f7db-1ee3-4fc7-9a42-a329157181e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86b5c484-063a-483e-8041-37da39f1a992"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1831d4c-9e80-4d00-a26b-685baa081c08",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c45be70f-1016-48dd-b069-7372cf118433"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "138fcd9b-9003-4a48-ac76-7ebf547ebd82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "daa3886f-43ca-4163-a06b-d71a965e8994"
            }
          }
        ]
      },
      {
        "id": "cfea5956-044d-4177-9bd7-7214975cc65f",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1d06a3ca-bb51-4227-baab-eb204e01d74b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc26da49-b8a5-40b8-ae1c-0ba6d5af6db5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1292da91-7a97-4211-b76a-6909996b271c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390e5c27-9d10-4ca3-93f1-8e15a9e3e202",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3bea9d07-c88c-4a91-b813-d81359e9fc63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b4b8bb-30c7-4d1a-88c2-10bc6e75d197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "034140d4-e955-4d08-aa15-3ee239e17d33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16fb11ee-b64d-495c-bf92-ae146fb2b77e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a74f147-83e4-4a0e-8ec5-8cc4d8295f3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d768979-f41a-488f-a6da-59b9da480419",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "66c2882b-5fae-45dc-9bb3-76d479f66657"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5282105c-2204-4062-b2a7-d367d5568d25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cb4384b0-15bc-451d-be74-35502d63f88b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75ed427b-bee3-46c0-a7ad-d016ba087bbc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0733bd24-38d5-49e5-a1ec-e747fd2de3bf"
            }
          }
        ]
      },
      {
        "id": "7fd9889c-1f56-4f26-9597-ec2a7664aedf",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a56f359b-2bd3-4133-89c9-fff73e1f89d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2f065134-0aac-4815-85e7-51e5a67f1db5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a953a64-3ca6-4cf3-9caf-6b902807552a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5622568-3299-4ae2-babb-c0e3cea32da8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b76bb6c6-d5d2-4e84-9c87-065e8473c2cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da766eb-1792-4a19-8b7a-8c6f20715f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51110ef5-ceb1-47f7-a017-390031831b07"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ce97460-d45a-469a-94bd-aaba2b345732",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b779063-6427-4136-b7f5-9c0bf466c637"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8fe7382-2635-4d85-8588-96aafb1279e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6f92b7f-0c8f-49f5-9699-f713d2191408"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e39910a7-cb6d-4b7f-bfc2-4c5e5da4b569",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b27e3501-3292-49d0-bd80-63b2e8c6d1da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6aeb14a3-6682-473e-8d8f-629ddfc7829f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6de8f495-598e-486a-b7e1-85ccf7ead11a"
            }
          }
        ]
      },
      {
        "id": "bd9a96ce-10eb-4981-aae6-b337a2f5fe81",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "be8219ef-8e6b-484e-9c94-a7cfdf64f097",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a1e5192-66e3-46e0-8cb7-02f4e8b8d016",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "865bc84b-b23e-4d99-89ea-e066b7162b50",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ddb5b7-ad48-49d0-9eff-731eced56580",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1ba41ef-6d05-4617-aa03-352836436cb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fec3dd8-d3e3-4ccc-9862-8d36b8edf16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e95277f3-ffe1-486a-8517-3cc8a9d67f5f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ba43467-8b16-41d0-bfd9-0f2066893378",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6528b319-287e-4079-9c30-ae7c46bb3af8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01f78e9e-4223-420b-b26a-943321252b60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7839798c-d8b7-4938-aa1e-62f7c73a1c68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5e75191-1e78-495c-84bf-4c51e49b8c24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "39e7340a-f84d-439c-b2c4-c52c01712b25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55c0b0fc-6e9a-47df-ab0a-0bd735aeba9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a31d4dd9-99c8-4001-b8f7-67ef5f1ad73b"
            }
          }
        ]
      },
      {
        "id": "c3959a67-3d1a-4feb-a428-14ffbd443316",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f5e54f0-c625-442e-a1cf-3b6a8bc6fbbe",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6285b675-d092-4daa-b371-d1ab9d989380",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "884e4745-424e-4598-b178-1c39ec6b05e3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "84f41387-e375-4799-82fe-726abf9d0cf9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14f2dcbf-c35e-4d69-9a42-d9cf1317f907",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 302.32042253521115,
      "responseMin": 10,
      "responseMax": 6706,
      "responseSd": 792.3449060518399,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693182782792,
      "completed": 1693182880697
    },
    "executions": [
      {
        "id": "22379443-f38f-40a7-848e-8d0d8a7bc247",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e7e72d79-2ecd-449a-898f-83c820415cb6",
          "httpRequestId": "2753d8d2-47a4-44af-b301-c75a784d82d3"
        },
        "item": {
          "id": "22379443-f38f-40a7-848e-8d0d8a7bc247",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "135d0b5f-a75f-4b37-bf8e-3047619b2514",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "ef253da8-d2fe-4ade-9314-95202b87f404",
        "cursor": {
          "ref": "81ebb5f4-ce52-463f-8bd4-a49bb3323d55",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "de0321bf-11c0-493d-8437-5373f92f4054"
        },
        "item": {
          "id": "ef253da8-d2fe-4ade-9314-95202b87f404",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7133ff19-07cf-4fa1-8afb-b2c91e3c7b39",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "7e5f8890-ddad-4084-9e69-c071567283c4",
        "cursor": {
          "ref": "d596d91e-1be0-4a8e-9f9a-8b15551ca10f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "19337dfa-d6ae-4659-b72f-c20c8a575c9c"
        },
        "item": {
          "id": "7e5f8890-ddad-4084-9e69-c071567283c4",
          "name": "did_json"
        },
        "response": {
          "id": "3db2d99d-642a-4367-93eb-2de0299ba7ff",
          "status": "OK",
          "code": 200,
          "responseTime": 1524,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c645dbf-d72a-49ea-8058-5ded607524e2",
        "cursor": {
          "ref": "1a587dbb-fb74-4868-9a33-729c9aaca31b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a0e8ce18-9b00-481e-acd4-c636db95efab"
        },
        "item": {
          "id": "0c645dbf-d72a-49ea-8058-5ded607524e2",
          "name": "did:invalid"
        },
        "response": {
          "id": "231c893d-c980-4ba2-9de4-57d2c774a6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c645dbf-d72a-49ea-8058-5ded607524e2",
        "cursor": {
          "ref": "1a587dbb-fb74-4868-9a33-729c9aaca31b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a0e8ce18-9b00-481e-acd4-c636db95efab"
        },
        "item": {
          "id": "0c645dbf-d72a-49ea-8058-5ded607524e2",
          "name": "did:invalid"
        },
        "response": {
          "id": "231c893d-c980-4ba2-9de4-57d2c774a6bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3ccf1f-5763-48ac-a034-0170905ff7fd",
        "cursor": {
          "ref": "7fb897ab-c076-4e55-a7c9-a2b0d3d2c87f",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "22a97264-b6aa-4013-b796-9a0a662e81a4"
        },
        "item": {
          "id": "0a3ccf1f-5763-48ac-a034-0170905ff7fd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bff0a946-0994-42b6-8fc5-8353405eaeec",
          "status": "Not Found",
          "code": 404,
          "responseTime": 330,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb9dfa-ca08-4259-855c-abf40b297915",
        "cursor": {
          "ref": "e08aca40-995a-4069-aa0d-d4067af77d30",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "83dc8168-4866-4d63-a21c-f8c34fd1be64"
        },
        "item": {
          "id": "4abb9dfa-ca08-4259-855c-abf40b297915",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7cd92519-842d-475f-b6ad-2fd632838d75",
          "status": "Not Found",
          "code": 404,
          "responseTime": 348,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4475adf9-8788-45a9-b960-69ed2d974b3c",
        "cursor": {
          "ref": "baf60f51-12b9-4f51-bf28-9e54fee45a3c",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "afbcace7-5e33-4742-94b3-51b204406caa"
        },
        "item": {
          "id": "4475adf9-8788-45a9-b960-69ed2d974b3c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e4b8f78a-4626-4447-84df-1c9d2ca0b40d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8667c700-b94e-4d37-98df-2a58fb41f535",
        "cursor": {
          "ref": "e484172a-d60b-4fff-8023-9cdb8eef1503",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f2c15267-8159-4cb4-8d00-11f7e995566e"
        },
        "item": {
          "id": "8667c700-b94e-4d37-98df-2a58fb41f535",
          "name": "identifiers"
        },
        "response": {
          "id": "904bd9f5-154c-415f-985e-40d386388616",
          "status": "OK",
          "code": 200,
          "responseTime": 1125,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d0b45b-9757-4baa-8234-1018e583f107",
        "cursor": {
          "ref": "aafdc469-1cb7-4510-9591-15bd1f2079b1",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "39e35a2b-b0d4-4485-b541-467026558b4e"
        },
        "item": {
          "id": "c3d0b45b-9757-4baa-8234-1018e583f107",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "30932411-80a4-4a6f-86e1-d39fcb690fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a5681e6-1c50-4d5b-be92-fe66a2206787",
        "cursor": {
          "ref": "110238c0-ebb4-4a19-9193-ebe49fd78a9a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3d0c89de-2463-4eae-9ecd-72f69095031f"
        },
        "item": {
          "id": "7a5681e6-1c50-4d5b-be92-fe66a2206787",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "177310a7-3b19-447b-b718-719d0c45f2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4391d2-78a9-4f5a-b92c-b4cc5858b28c",
        "cursor": {
          "ref": "6f900201-5e62-4c50-8113-4e16395b1f72",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a2e2fe24-6f04-4da1-b0b1-740496d22a64"
        },
        "item": {
          "id": "8e4391d2-78a9-4f5a-b92c-b4cc5858b28c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "41c573c4-efcb-4f33-9849-9f763840d321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec43314-7a87-4561-b425-0b77beec27cd",
        "cursor": {
          "ref": "db001f4e-458e-4d29-8509-96e4c3ab6249",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1f889743-acda-4954-b2a0-52eb56037c18"
        },
        "item": {
          "id": "7ec43314-7a87-4561-b425-0b77beec27cd",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fd3b61ad-b80c-4d58-8f18-80803e2dd0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dbaca2-fd53-4499-b6e3-9e17f547b13a",
        "cursor": {
          "ref": "be03c64c-4b11-46f1-b8f8-0d863c70434e",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b3cce751-26b3-4107-b1aa-dbdf4f7b5922"
        },
        "item": {
          "id": "43dbaca2-fd53-4499-b6e3-9e17f547b13a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6821d1e1-a1b3-4ee2-9ed5-ac0f719b8fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161daaae-3a31-48b0-b32b-f7211553ffc3",
        "cursor": {
          "ref": "4f3aceea-6662-480f-acc2-6254bd94f0af",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "872552df-ccf0-4e17-ab0f-24f26159ecfb"
        },
        "item": {
          "id": "161daaae-3a31-48b0-b32b-f7211553ffc3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "02a72139-9742-4d30-a3e8-32bbe5cc7123",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0c4e94-2f0f-432d-9b8d-0854a264329e",
        "cursor": {
          "ref": "9b07f7ef-c474-49bc-afb0-09b4da9eb0e0",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e34bfff2-28ec-42a6-ad7a-84b8a6d3674b"
        },
        "item": {
          "id": "cd0c4e94-2f0f-432d-9b8d-0854a264329e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d92ad0c8-071d-4018-91b1-ff0b6029b1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e267a69-c388-4f54-a3a1-36c6f4a72353",
        "cursor": {
          "ref": "0a205c3b-b974-4c86-8c4a-9dc97d46993a",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6976c7bb-3b6e-42fb-9c4a-f86fdbab84f2"
        },
        "item": {
          "id": "6e267a69-c388-4f54-a3a1-36c6f4a72353",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "89c05fbf-ce26-415e-927a-b15eff60f360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b2a5e0-129e-4ad1-acd8-89da7ec28a17",
        "cursor": {
          "ref": "c48be860-3d8a-4341-a53e-14474bf22bd1",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "86613aaa-9faa-444f-8b9f-2d848d960588"
        },
        "item": {
          "id": "43b2a5e0-129e-4ad1-acd8-89da7ec28a17",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bf1a0ec2-bb90-4f06-83ee-96702d27f261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b42c28c-38b6-4f30-9ffd-fc9be677c0bf",
        "cursor": {
          "ref": "dba98d0e-8067-4eb9-ac1a-72ed5ffd85bb",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "804f3931-1c5e-4e2c-b490-8e517bf9307a"
        },
        "item": {
          "id": "4b42c28c-38b6-4f30-9ffd-fc9be677c0bf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ff336dc1-ee1c-4cf4-81f7-6edb73ed88f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd01feaa-55b8-45e0-8b79-77c0aae46c0e",
        "cursor": {
          "ref": "3b52bb6a-e813-4b4f-b4ba-d631cbd273c4",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f61bc2e6-df16-4652-bbc7-e888da6b46e8"
        },
        "item": {
          "id": "cd01feaa-55b8-45e0-8b79-77c0aae46c0e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3c20a763-1cdf-46f2-994c-a44293fb5a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f3d266-fb56-4359-a74f-564225d66b3b",
        "cursor": {
          "ref": "a9dbf085-6962-42c7-a008-d94af23200ff",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5c6c9eb0-6f9c-4c50-83e8-ea89c3d24e63"
        },
        "item": {
          "id": "11f3d266-fb56-4359-a74f-564225d66b3b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "de8bb6a2-e06a-4527-a076-d8d165c827e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f72239b-08e0-4e5d-8a3a-ba2462b50525",
        "cursor": {
          "ref": "9a628f05-908c-4a91-ba79-3177833ddc44",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "13ac73af-c82e-4e8b-9105-555559507dcf"
        },
        "item": {
          "id": "8f72239b-08e0-4e5d-8a3a-ba2462b50525",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "294ad046-4e71-4de0-8097-5d6164196c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a260092-864d-43b4-b624-2ff5fecd6841",
        "cursor": {
          "ref": "402f5796-4949-42af-85cd-f2f3890daca7",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f54f03d1-1c5c-4297-ba22-f3ff161b6cf0"
        },
        "item": {
          "id": "2a260092-864d-43b4-b624-2ff5fecd6841",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "67de5418-fcc8-459f-869e-aa85568c1446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96d0916-9e4c-4b5e-8e21-fdeaccba6d88",
        "cursor": {
          "ref": "fca974b8-7fbb-4e4e-9764-67fa99141028",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d8ae77f1-a4ea-444f-8c17-51edc06cb3c5"
        },
        "item": {
          "id": "a96d0916-9e4c-4b5e-8e21-fdeaccba6d88",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "72855690-644a-46d6-b343-d4b77d6ff4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a57f45f-4272-4059-af27-2ea18b122720",
        "cursor": {
          "ref": "6e6c5eec-55f0-410d-a876-6fe1e505b9cc",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "67149cc6-af1f-4d89-972a-967299d9ff2a"
        },
        "item": {
          "id": "0a57f45f-4272-4059-af27-2ea18b122720",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8b806311-b667-4458-ad06-6803a72d4c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025116b7-07fb-4e60-bb4a-2d6d7f507007",
        "cursor": {
          "ref": "0d79688c-c5ef-4f03-b485-a9dc0de7324e",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fbff63be-acff-42a8-b26b-c7c6a346a9a1"
        },
        "item": {
          "id": "025116b7-07fb-4e60-bb4a-2d6d7f507007",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7ba303ca-5d3d-40cf-bc9e-5c54be3be7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13154fe-3cd6-420c-9648-ffe5408e5fd8",
        "cursor": {
          "ref": "fbc43a7b-4a57-424c-aaf5-6f832df13ec2",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7c479d63-d132-46a2-83e2-a68d3ac12d99"
        },
        "item": {
          "id": "d13154fe-3cd6-420c-9648-ffe5408e5fd8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bf89f9f9-b6ed-44d0-8c6e-957c921d3d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216ad94c-8dfc-4006-afa4-f93b84819e89",
        "cursor": {
          "ref": "5078f235-206a-4ff0-a985-e2d3d3a4db09",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6b213961-d55c-48b5-accd-29a994ec7fce"
        },
        "item": {
          "id": "216ad94c-8dfc-4006-afa4-f93b84819e89",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ae6cd219-cb5a-42c1-9d14-0633e36bb3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a787d1-72a4-4f71-b3d1-bfdf23907097",
        "cursor": {
          "ref": "49d0abe1-2b9b-45a7-b43e-2ff366c64e79",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "01e993a1-bfe3-49fb-87cf-5b1d959af855"
        },
        "item": {
          "id": "83a787d1-72a4-4f71-b3d1-bfdf23907097",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ab1b79fe-202e-428b-8451-44c51b4c3922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4349ee59-8b3f-45ec-88e8-ba5276219714",
        "cursor": {
          "ref": "c7b8af08-542b-4cbf-9691-240af79f4f88",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b40e0e9e-1423-4269-b14b-de778c6b01be"
        },
        "item": {
          "id": "4349ee59-8b3f-45ec-88e8-ba5276219714",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e405e531-c373-45f3-a8bf-c405040168e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20816dcd-2ca5-45b4-99ab-e7f7af0f3ec7",
        "cursor": {
          "ref": "ee02cd7e-18d8-4732-8434-345db8450f84",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "942f36b2-5878-47d2-a8a1-e043f6a9a2f3"
        },
        "item": {
          "id": "20816dcd-2ca5-45b4-99ab-e7f7af0f3ec7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b79728dd-eab3-4f71-8086-3227bc7ab63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e76cda6-55c4-41a5-a8fd-d95236b46c5b",
        "cursor": {
          "ref": "88159267-7aa4-4000-b124-14436342d84c",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f178d7c5-a876-48a1-9c41-45b991580644"
        },
        "item": {
          "id": "3e76cda6-55c4-41a5-a8fd-d95236b46c5b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "800cc7fd-e185-47a5-ab5d-b7ec37a881a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f231b9-4b5c-425e-96e2-933e6d6953e6",
        "cursor": {
          "ref": "49d06671-2946-498c-b2ae-c27c2ce0ecf9",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a71ca609-7700-4f09-88d3-7456f4c37f41"
        },
        "item": {
          "id": "58f231b9-4b5c-425e-96e2-933e6d6953e6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a1986719-dad1-450c-b9f7-3a13d96d2c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb0aef3-dbb4-4dc8-a789-79a3b6d94aa3",
        "cursor": {
          "ref": "5cba82c6-9639-4f0c-8ef9-9bf8215c55f4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "90675f50-ceed-44cd-99e1-4eca6a1b31c6"
        },
        "item": {
          "id": "6eb0aef3-dbb4-4dc8-a789-79a3b6d94aa3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7177c36d-7080-433a-ac38-9588dee266be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6e1f39-6a62-49cf-ac91-d006ba67c205",
        "cursor": {
          "ref": "1d1c78f5-3005-4400-b7b4-060a86e8bc27",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5915b6f5-3e1b-4de4-b54f-26ab472e233c"
        },
        "item": {
          "id": "6b6e1f39-6a62-49cf-ac91-d006ba67c205",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "745e5e0a-0649-48b2-ab5b-fe8be8affeea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8250dd-69ea-468b-a4d6-32ec15f2c1fa",
        "cursor": {
          "ref": "f22af063-286a-46a6-8732-c0c8e2b2fc36",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "10de8a30-4c41-4ed2-b825-faf21da659e5"
        },
        "item": {
          "id": "9e8250dd-69ea-468b-a4d6-32ec15f2c1fa",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b0c16d2f-f2f4-485d-b2b0-a2d0d483c3e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97c7332-8d88-40db-adb4-11aca7e9f543",
        "cursor": {
          "ref": "4ba549a5-a9f2-4da9-9db0-8bc32d3e4bb2",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d6b06336-2cba-4993-8ac7-d0c7d80b42e4"
        },
        "item": {
          "id": "a97c7332-8d88-40db-adb4-11aca7e9f543",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ff511313-e624-4350-adf0-6968b3b867a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6915c783-03ab-4e58-8924-6b7404bc2f3e",
        "cursor": {
          "ref": "05d87d7c-fadc-4723-a917-dd9359707427",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "342ce951-3bee-479d-91e4-cbcdf8cd12c4"
        },
        "item": {
          "id": "6915c783-03ab-4e58-8924-6b7404bc2f3e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "58ca34e0-f5d0-4b37-8426-b3bfd3cb4da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a358f3f-246f-4afc-aed3-226483c185df",
        "cursor": {
          "ref": "fc7195ef-484c-4ad8-b423-177967695a2f",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "14a8bd42-d39a-460e-bc68-5f0740acf292"
        },
        "item": {
          "id": "1a358f3f-246f-4afc-aed3-226483c185df",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2ef74019-fdf2-4bd4-9e77-290ada17f3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7b5d7c-bdcc-46a8-8c95-272d07df25e5",
        "cursor": {
          "ref": "732b9d8a-8f17-4233-91ab-bed210b94173",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c38ff981-1610-4e5e-a202-3e258f3aa1a4"
        },
        "item": {
          "id": "2b7b5d7c-bdcc-46a8-8c95-272d07df25e5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a52ef73f-b19c-46b5-8ade-fe556fa2e6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af70e97-83d1-461c-b18f-bd108ba5ee24",
        "cursor": {
          "ref": "780efcb6-c4ed-456f-99fd-bd19573aff34",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "130f3e36-b8b4-4e86-8e09-fefd4cfdc4cd"
        },
        "item": {
          "id": "8af70e97-83d1-461c-b18f-bd108ba5ee24",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4ffb06be-c40e-40a0-9920-616c1b124abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f177cb8e-7858-47f5-b359-cd58cacb6365",
        "cursor": {
          "ref": "75b3781b-8d0d-4e84-b043-c215e003dc31",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "801c99fe-c8ac-428e-95d3-b3a8a54724c8"
        },
        "item": {
          "id": "f177cb8e-7858-47f5-b359-cd58cacb6365",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2bcc1126-215c-4bb8-ac43-88d01db7c058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce11f7f-745e-40f3-8274-00b991c383df",
        "cursor": {
          "ref": "27c7f5fa-bb58-4a8f-a2df-12314fe3a6fb",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3fe6bbc2-3ce5-4b9f-a44d-833c0aaba599"
        },
        "item": {
          "id": "bce11f7f-745e-40f3-8274-00b991c383df",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "51395296-25d7-4c15-a8fb-ccdb73b17bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e7e275-b405-4af9-977f-fa207dddccbb",
        "cursor": {
          "ref": "b62c7f3a-18c5-49b2-a433-f8b9981186ad",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a61dc80c-5974-4e43-9442-2a0c1fadee0f"
        },
        "item": {
          "id": "25e7e275-b405-4af9-977f-fa207dddccbb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c7d22de0-4911-4a1c-b78a-51e0849ac14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c042681c-c8f7-40e2-84c0-b4849f661c90",
        "cursor": {
          "ref": "bfb89ccc-dc88-4d10-a2c2-4abf0d770738",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4e2061ce-fc9a-492d-8738-9b41051f5a07"
        },
        "item": {
          "id": "c042681c-c8f7-40e2-84c0-b4849f661c90",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "00027dca-065b-45be-9421-353d4b817b10",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 569,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0331870-7b1b-47bb-9c6c-3c8d64d79b7c",
        "cursor": {
          "ref": "aa3e1c46-1c39-4b67-a75d-349e8d6e06f9",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f826eb73-6997-4332-9605-095d32244a7c"
        },
        "item": {
          "id": "e0331870-7b1b-47bb-9c6c-3c8d64d79b7c",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "61745650-6f92-4908-8ef4-74310f019ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20de817a-af60-494c-88d7-989125ad12ac",
        "cursor": {
          "ref": "e3a6da80-646d-4159-b634-fce469362b55",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "834e0ab2-6b8a-457a-a293-2167ca70189c"
        },
        "item": {
          "id": "20de817a-af60-494c-88d7-989125ad12ac",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "25b95d2b-ba49-4a57-a9f0-b7ef4f1910c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dd5711-be48-41fb-b446-d66aba18c47a",
        "cursor": {
          "ref": "e6435515-45f5-45ae-b1c5-4933e0e232f9",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e30559b9-7460-4a1a-b75a-2ae8561934b9"
        },
        "item": {
          "id": "29dd5711-be48-41fb-b446-d66aba18c47a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0bc72a4c-2e59-424d-b022-65d95f349647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a50b74-186e-45ec-aa0c-85be26318d3c",
        "cursor": {
          "ref": "ef284f9a-34d9-44c5-9d1c-ccac263f0ddd",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "60fa6382-1802-4bb8-8816-8d611fad70ea"
        },
        "item": {
          "id": "f1a50b74-186e-45ec-aa0c-85be26318d3c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "69358f28-5261-4a3e-9f98-1e2a0ea4e227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4da2f1-d6ab-4bf6-b825-ecb3e9dd11ec",
        "cursor": {
          "ref": "e0fa0613-92ed-4e45-b6df-721394fc242a",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "503512a5-6212-4631-8ebb-55da248c8772"
        },
        "item": {
          "id": "0a4da2f1-d6ab-4bf6-b825-ecb3e9dd11ec",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ab6a4bdb-311e-48ec-9214-ba5cdc0013b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8b2da4-d757-49bc-9095-98884ec74f73",
        "cursor": {
          "ref": "233eb3af-ae6e-4f9b-8aa7-267f61aceea0",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5fcaebed-eab8-4640-9b34-bad2fec3d99e"
        },
        "item": {
          "id": "3b8b2da4-d757-49bc-9095-98884ec74f73",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cb687529-0dce-4595-94ef-87544f6b0828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe2a53a-918f-4032-8517-ac53984fe9a5",
        "cursor": {
          "ref": "4b73a222-de9c-45d9-b0ec-df30700ea5e5",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b4a3cf22-9b71-4a34-bf88-1180954b59a3"
        },
        "item": {
          "id": "dfe2a53a-918f-4032-8517-ac53984fe9a5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "5e5a8d7e-a78a-4e47-98c2-a07fe2c83b2c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 580,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1650e9-f376-4515-8260-0e950aa90770",
        "cursor": {
          "ref": "f91dbd8e-6167-4371-986a-8b31ad4f492e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "be9f298f-5607-480e-a88c-7b5f887e06ac"
        },
        "item": {
          "id": "3a1650e9-f376-4515-8260-0e950aa90770",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a2dc7e99-a9a5-4b0a-9317-b5e0a097d1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c42088b-4dd6-451a-9882-32647bc0791b",
        "cursor": {
          "ref": "65fdca28-656a-4d72-8c79-72931681705c",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b1afb193-edab-49e7-b058-3e9e30318245"
        },
        "item": {
          "id": "1c42088b-4dd6-451a-9882-32647bc0791b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "99786b2a-f0a0-4961-8211-036e2101f214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da660941-36fc-46b1-a335-76814ba86ef2",
        "cursor": {
          "ref": "9de24efd-1b9f-477f-a40d-01eb2a291945",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "48594b9b-f956-41e8-8086-f140f315e586"
        },
        "item": {
          "id": "da660941-36fc-46b1-a335-76814ba86ef2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "68c821fb-db37-4241-b73e-49c51c35f7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbecb24-fa25-4a39-96bc-422dd013a3bd",
        "cursor": {
          "ref": "295b06f4-9999-49a5-9aba-6a153c0e3294",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d6f9e076-7f4f-45db-8b99-f09cdbaf826a"
        },
        "item": {
          "id": "dfbecb24-fa25-4a39-96bc-422dd013a3bd",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cdf3a3dd-dd01-4934-9a51-a0975ef09a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1649ebd0-a102-4d40-a5bc-acd32bab8eea",
        "cursor": {
          "ref": "10d4c0f5-514a-4b0b-8140-9581b4c8be6f",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e27bdfa6-26ae-46a1-a321-51525e67ea4a"
        },
        "item": {
          "id": "1649ebd0-a102-4d40-a5bc-acd32bab8eea",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "14c408c3-d3a9-40ad-8932-557dbac300c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5ed014-bcd1-419d-9043-a91752d55301",
        "cursor": {
          "ref": "f69f2434-1690-401c-8e7b-471c61b5432c",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7f23d055-7e3e-4ebd-b758-874b88105717"
        },
        "item": {
          "id": "fd5ed014-bcd1-419d-9043-a91752d55301",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "22cfb236-9099-4937-83f8-25f04b487fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc317074-e5b4-4119-b119-17f39339062d",
        "cursor": {
          "ref": "eadddb13-eeb0-4322-80b6-45d7cd90ae52",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e6576878-1dc7-4776-9002-a6ddafafee9f"
        },
        "item": {
          "id": "bc317074-e5b4-4119-b119-17f39339062d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a90bc29a-e5b7-4031-89f2-1cdd648c320f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcbd477-ed1b-40c7-a89c-717a027ee717",
        "cursor": {
          "ref": "12dcd652-e01f-4916-9579-f8386a2c151e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f249a808-ba5b-4756-ae19-2369782fe230"
        },
        "item": {
          "id": "4dcbd477-ed1b-40c7-a89c-717a027ee717",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "59bab879-7982-4cd6-8ef8-7eb9c8a07b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a626f52-7671-45c9-bf92-962c0c12257f",
        "cursor": {
          "ref": "ef5661ca-eea2-470c-a82a-6c1147ee51a9",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "96bff218-992c-492a-9a55-74c609da570c"
        },
        "item": {
          "id": "8a626f52-7671-45c9-bf92-962c0c12257f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "257adb82-f842-4a90-bf50-10961ee47e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a585cd52-f6b6-4948-9b94-e43ce79e078d",
        "cursor": {
          "ref": "248e0bdb-a963-42ae-885f-2b9f8d6824b2",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7a05f824-bd00-4745-adfb-40aca0260aef"
        },
        "item": {
          "id": "a585cd52-f6b6-4948-9b94-e43ce79e078d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "624a7384-5372-443e-bcd5-0a32746f92a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4811d659-4ed6-4bda-ace2-aa3facfd8815",
        "cursor": {
          "ref": "98fcfacd-0011-45e1-abe5-f8de55f0dcb0",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "984b7be9-637a-459c-a38e-823603a4656c"
        },
        "item": {
          "id": "4811d659-4ed6-4bda-ace2-aa3facfd8815",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f683d713-d506-4919-a9c0-5e65cb5a0ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c44ea2-adc3-4c9f-acac-b6837c8438eb",
        "cursor": {
          "ref": "255d085c-1d81-499a-a2ef-a7077b101c61",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5c401467-db33-4cb8-927e-305e9bd2dec8"
        },
        "item": {
          "id": "26c44ea2-adc3-4c9f-acac-b6837c8438eb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9f4ce61d-853c-4855-9849-f635b02f40dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5820aff3-1aed-407f-b0d7-866a97dedf1b",
        "cursor": {
          "ref": "d4eaaf08-f566-4cf7-8293-d3bf56edb29c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0213a30f-40fc-4728-a287-09ed856ae2ba"
        },
        "item": {
          "id": "5820aff3-1aed-407f-b0d7-866a97dedf1b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0cb90a61-2566-4978-9086-02aa33b0cf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36532440-347f-44fa-bd8c-9d8d2cc03a63",
        "cursor": {
          "ref": "22e6321c-7030-40eb-84ce-10941ea9c333",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ab0203d6-56a6-41d8-bac0-450693477501"
        },
        "item": {
          "id": "36532440-347f-44fa-bd8c-9d8d2cc03a63",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "438442bb-1be0-4d6e-a0f0-1d9a0a747e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be329660-5af4-48ab-89ef-1152530dd6b2",
        "cursor": {
          "ref": "ce764a83-f298-4697-97c4-32187ed75524",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bdfd577c-f332-481d-9685-74e15f9a0927"
        },
        "item": {
          "id": "be329660-5af4-48ab-89ef-1152530dd6b2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0ed86cce-7641-4f62-ab3b-3b8ccd9a1d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70dbe16-729c-42de-8d0f-2e3ea6c4bef0",
        "cursor": {
          "ref": "969984cd-dc60-42be-bed3-d36d79c3fc37",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a851e97a-061e-4abb-ae8c-98736ee47446"
        },
        "item": {
          "id": "d70dbe16-729c-42de-8d0f-2e3ea6c4bef0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2c201fcf-6569-48b6-878b-e2af70c01bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41855fb-9392-46a2-b994-d49be6a81870",
        "cursor": {
          "ref": "0eccb4b9-75b1-4c30-afa1-c96d46f73e1a",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ad5ab5b5-5e99-471a-afee-7ee23e6f7e0b"
        },
        "item": {
          "id": "d41855fb-9392-46a2-b994-d49be6a81870",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1f92d2e9-7a78-4840-ae4a-e84d5288ddcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f587b80-78dc-4b74-a4bf-2eec2491fe04",
        "cursor": {
          "ref": "afbf15e2-a3fa-45a0-a7c3-ce185c32cb64",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "fa0270bd-8b18-4461-97c5-fd260ce7d364"
        },
        "item": {
          "id": "5f587b80-78dc-4b74-a4bf-2eec2491fe04",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dca8f679-e1a1-45fe-b93b-877b35ad9359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f710addf-7236-4a00-84f7-a75a08f76c47",
        "cursor": {
          "ref": "ba3e55c1-e0a5-46e2-aff9-bb8447e5ea93",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9cb2230c-0e29-4a1f-abda-94462187e5ee"
        },
        "item": {
          "id": "f710addf-7236-4a00-84f7-a75a08f76c47",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4768acd0-ddb2-4fb5-8c98-e5cf3cf4408a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03070c26-9c3d-4dde-a044-2aa5101feb18",
        "cursor": {
          "ref": "96e9915b-0592-4147-84e8-b81ecbd941a9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fc4eec5f-9eec-4c46-8f66-27741fac7000"
        },
        "item": {
          "id": "03070c26-9c3d-4dde-a044-2aa5101feb18",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f38d6a0c-3446-4c37-82f7-85e251f8ab36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886b8988-e970-47d4-b2e1-f4e4d2559d3e",
        "cursor": {
          "ref": "dd74b54b-63a3-4fb6-80ba-a566f707fff3",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c2792311-4616-4f29-b46c-8f6d072afca6"
        },
        "item": {
          "id": "886b8988-e970-47d4-b2e1-f4e4d2559d3e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c2408fd7-4c19-46c8-b40e-49e6df44838c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ccbc3ee-9571-4dcd-961d-48faf6ed2f9f",
        "cursor": {
          "ref": "cc003b17-9d55-419c-a52d-d6346e5549a7",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a8f6432b-d073-4827-b91c-ea31ffbe8236"
        },
        "item": {
          "id": "0ccbc3ee-9571-4dcd-961d-48faf6ed2f9f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b9f8ecce-5255-4c0a-858c-ab3729784768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f381a44-811c-4817-93a3-59c76706f3ab",
        "cursor": {
          "ref": "d41d4b3c-88f6-4609-adf1-98b1ddc683f8",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "af73cd5f-82b5-4ae3-b85b-c84810946ea3"
        },
        "item": {
          "id": "8f381a44-811c-4817-93a3-59c76706f3ab",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b3ba38a2-6716-44a0-b94c-1e17435b9be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6fb990-b599-44b0-9628-217280aa4f41",
        "cursor": {
          "ref": "17cfe4de-bf5c-420c-903b-1124382dd9b9",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f7ec7a32-27e7-400c-8232-d094b49d0051"
        },
        "item": {
          "id": "cc6fb990-b599-44b0-9628-217280aa4f41",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9bb177e6-e234-43c7-b6da-f078de7aba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd826d83-e4be-4eff-8261-111ac3ab0070",
        "cursor": {
          "ref": "82738b2f-f4e9-4c07-88f1-d615c4f2a1c1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2b2577e2-7719-4515-b279-9b01b3251e80"
        },
        "item": {
          "id": "fd826d83-e4be-4eff-8261-111ac3ab0070",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "aadba335-ea66-494b-81ac-54c229ccd6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b2db48-bb05-4430-9b21-9fd6039744e0",
        "cursor": {
          "ref": "9e3dde7f-1dbb-46cf-af9e-d50b2784423f",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e8d2e867-bc4f-4620-a2ef-09c6f2caa53f"
        },
        "item": {
          "id": "b4b2db48-bb05-4430-9b21-9fd6039744e0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1eea3768-7af4-49a4-8527-d9ff29664c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52717486-467f-4065-a2c0-e60a04f32d38",
        "cursor": {
          "ref": "75054646-2953-487b-8340-5dd32ed3f91f",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "362e9872-439b-4913-b69f-71234d9a88a7"
        },
        "item": {
          "id": "52717486-467f-4065-a2c0-e60a04f32d38",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b61a23b3-9a59-4cb9-a4cf-9fce7e6c40a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a034e4-1a2a-4310-a292-305152f762b1",
        "cursor": {
          "ref": "704906e4-66c6-489e-ba4b-0edc7ee87fdc",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1e8a8ca1-5b2d-4d22-a635-ba1b52f504a5"
        },
        "item": {
          "id": "22a034e4-1a2a-4310-a292-305152f762b1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d6be55f1-f290-43d1-90c8-bbc9cd7a93ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777090d8-57cc-47fa-9918-cf1481914e4a",
        "cursor": {
          "ref": "798ec8ba-cfbe-49c4-b62a-75a571064bfd",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ad6c9da9-0d4d-4d19-a2e1-d4833cb2f0cb"
        },
        "item": {
          "id": "777090d8-57cc-47fa-9918-cf1481914e4a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dcb0aebf-5c06-472d-b4d7-c8d5aeac4079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61940012-6997-4202-a5ba-a7dfebea6909",
        "cursor": {
          "ref": "b82be9a0-0338-4ae5-8834-d5a3e6693275",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "be33e1ec-88d9-4837-9abe-557bc3cd1de7"
        },
        "item": {
          "id": "61940012-6997-4202-a5ba-a7dfebea6909",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e9f3c539-3685-458c-91be-f00f1deb616d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731be65a-ef46-41fb-8729-20c48c10ac9b",
        "cursor": {
          "ref": "d13b5cc0-2304-4bf9-b5c1-9ef78618b059",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4b29a215-ad4b-491f-b213-a68c86577f89"
        },
        "item": {
          "id": "731be65a-ef46-41fb-8729-20c48c10ac9b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "37eaac91-a274-41bf-a58e-b79dc5824d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7d041b-05db-405b-a1db-aa57ccec5446",
        "cursor": {
          "ref": "3f68734e-d84c-408b-849a-8c707d67e846",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "69a28441-1744-4678-808b-6e36f8e9b08f"
        },
        "item": {
          "id": "cc7d041b-05db-405b-a1db-aa57ccec5446",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4dfcb556-7455-43b1-91c6-1f47646d3432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac86c06-5c56-4c73-9cb6-84131cd9b70e",
        "cursor": {
          "ref": "173acb71-f003-4386-91a0-9cdf3f560183",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "14d477cd-299b-4f09-a504-e44aadc406d5"
        },
        "item": {
          "id": "5ac86c06-5c56-4c73-9cb6-84131cd9b70e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "762ed43a-f00b-4bfa-8276-8fbf130ebc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639fee1b-c917-459b-898d-c41d96c7ee84",
        "cursor": {
          "ref": "513aea5d-cfc2-4aab-bac0-cfb43ece56a4",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "703d1d69-ea0b-4a9b-91f1-34f99a1750d1"
        },
        "item": {
          "id": "639fee1b-c917-459b-898d-c41d96c7ee84",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "61e1fb1d-0316-4211-ac5b-9f41fe2241d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cb3228-ae26-422b-9c32-da8f96571bcc",
        "cursor": {
          "ref": "62414f48-ec80-4616-91ad-07324b7de14d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b62be59d-41b7-4711-94b9-fe09dc7428e2"
        },
        "item": {
          "id": "46cb3228-ae26-422b-9c32-da8f96571bcc",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3382cbf7-c32a-49ee-9472-80a8a7263eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eb5d33-7703-4a2a-b2a0-80986127016d",
        "cursor": {
          "ref": "64154504-2b8b-4725-9301-b4675381900c",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ebd3df62-f7d0-4bce-8d6c-72cf9277510f"
        },
        "item": {
          "id": "e5eb5d33-7703-4a2a-b2a0-80986127016d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2f3ee791-5dc2-4406-828e-3b9667009995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16898d12-f3b4-43b7-a814-84453b82ad56",
        "cursor": {
          "ref": "98fdcd0b-2702-4f70-bd6c-4ded909bb6e7",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "242d6b51-2fa3-4d86-8677-0edd04492c92"
        },
        "item": {
          "id": "16898d12-f3b4-43b7-a814-84453b82ad56",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1ad86327-22f8-4abf-9673-f5c56abda5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4b7c70-a415-4b31-8398-4b4a204dc52e",
        "cursor": {
          "ref": "8ad5dd26-2ee3-41a9-9f92-7f76cdaa208f",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fa76c3d9-7a76-47b4-bdf8-e25b5ad59a53"
        },
        "item": {
          "id": "1b4b7c70-a415-4b31-8398-4b4a204dc52e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "18a7172f-c06b-426a-8de6-76594e7ed84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a847ce9-0307-4784-9734-d186bcfd9395",
        "cursor": {
          "ref": "bea2a565-ecdd-4ece-bc66-5ad808faed52",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "482d41f6-e717-410f-94ef-48c0082e3391"
        },
        "item": {
          "id": "6a847ce9-0307-4784-9734-d186bcfd9395",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5b67d4c3-514e-4dbf-8907-237ad86e8721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fded91-468a-4c45-95cb-2d2e128e3fba",
        "cursor": {
          "ref": "4b1c3dd5-9431-4800-9555-b6f89b3423a0",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5cfc327a-58db-4863-a627-ef6e81b8272f"
        },
        "item": {
          "id": "83fded91-468a-4c45-95cb-2d2e128e3fba",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "979c5a16-3b5a-403d-8a32-40a8d80aa9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e5787c-1588-4733-b523-e8523ce06ebf",
        "cursor": {
          "ref": "1d4cdf48-52fe-45bb-9a60-ebbb04d0fe99",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dcf3cd26-059f-432c-a432-fd1beb1d64c0"
        },
        "item": {
          "id": "73e5787c-1588-4733-b523-e8523ce06ebf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1f43a251-3f70-4fbf-aa63-47ce605d7a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba343a3-890e-4d95-8435-6369f6fcea79",
        "cursor": {
          "ref": "512a0800-e0e4-4039-a4c1-667f7c65bf8d",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "743ad538-6f1e-49a2-931c-33bc26985b2d"
        },
        "item": {
          "id": "7ba343a3-890e-4d95-8435-6369f6fcea79",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2e1076dc-b5cf-428f-adeb-a0d90d1089d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c20e9e-440d-493d-94e9-eb34a6e7612f",
        "cursor": {
          "ref": "ca1b73de-895e-4f09-8cdd-dc79101be8e6",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e1b51903-f772-47e7-b53c-d631a7f4b5b4"
        },
        "item": {
          "id": "e7c20e9e-440d-493d-94e9-eb34a6e7612f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "97e36069-7680-4d4f-8fbc-66c1333a075f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9088bd-af0b-44ad-8d86-f717af6ce11a",
        "cursor": {
          "ref": "91b6a9a0-3cde-44aa-925a-a652a81acd71",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fb70da4d-92fc-4b5e-8a99-22da01408990"
        },
        "item": {
          "id": "be9088bd-af0b-44ad-8d86-f717af6ce11a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d04ca8d1-ff83-44f2-8d8d-d0c9fc642260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd7f75f-1979-49bd-bc39-705470a2511a",
        "cursor": {
          "ref": "a7668e99-d39c-4a4b-a9ff-84009e17413a",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c374fe10-8b59-4914-ace8-8f4929233434"
        },
        "item": {
          "id": "0dd7f75f-1979-49bd-bc39-705470a2511a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "36daa30b-d7a6-4fc2-bad3-e60b1106afb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314e4c14-c190-44ed-ba5c-7f28b8aa6cc4",
        "cursor": {
          "ref": "dbc176be-2137-4407-b4b7-f91925b69801",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "29515c9b-3fd1-4803-bc1d-cd010bd1ffed"
        },
        "item": {
          "id": "314e4c14-c190-44ed-ba5c-7f28b8aa6cc4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8b13b121-5c84-4b71-b95c-7b43b276dc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f95cc2e-7f00-4d13-9e87-abaabdece0ba",
        "cursor": {
          "ref": "a9db74bf-e361-46e3-a77b-0239fa21301b",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "395b08a5-c655-4de3-ad89-925423ec426d"
        },
        "item": {
          "id": "0f95cc2e-7f00-4d13-9e87-abaabdece0ba",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "87f79448-f96a-41e1-b3ca-08b31455b775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3f94ef-6704-47b7-b267-e172cde3349d",
        "cursor": {
          "ref": "4b886183-d8b3-4398-a610-967c7d05fe63",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3d5a960a-7305-4f13-9411-458fb0ef8e91"
        },
        "item": {
          "id": "ce3f94ef-6704-47b7-b267-e172cde3349d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5cb1f661-dc7f-43fd-917a-e2f2194155af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91a7aae-126b-4797-95eb-e0bbe19c7cf1",
        "cursor": {
          "ref": "adc105f4-f0d2-4d21-8df4-854e7395c4bd",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1e0b28f2-3eb1-4570-869c-1e4aac2d36c8"
        },
        "item": {
          "id": "d91a7aae-126b-4797-95eb-e0bbe19c7cf1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "786244a1-e9d6-4ff1-951e-2132affd5048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05c7964-e771-4a5e-939b-0db76d7fe2e2",
        "cursor": {
          "ref": "5e3999b4-1c85-4136-896d-034726156592",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f4996a3c-5b62-4467-a154-853b5966ebce"
        },
        "item": {
          "id": "d05c7964-e771-4a5e-939b-0db76d7fe2e2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "241c1185-baef-4a4b-8fce-bee5dbe7eb6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5802eeec-aaae-42ee-83e1-513ec76e9c3a",
        "cursor": {
          "ref": "22b73ad8-1122-43f2-a36d-9b627832646c",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "020c9e6d-6fbe-48c5-8301-cb83b161ca5b"
        },
        "item": {
          "id": "5802eeec-aaae-42ee-83e1-513ec76e9c3a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "69d9961e-1f0f-499c-863e-41d7892ef04b",
          "status": "Created",
          "code": 201,
          "responseTime": 6706,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7458f571-03f8-47c6-8a31-4dece681c8fe",
        "cursor": {
          "ref": "49ba3acf-c638-4168-a25e-948c70e3e34a",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6304cab8-981e-48aa-b57a-d7f9c238fa0c"
        },
        "item": {
          "id": "7458f571-03f8-47c6-8a31-4dece681c8fe",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6e3f464f-a663-4c80-80c7-40a00e56fbcf",
          "status": "Created",
          "code": 201,
          "responseTime": 6411,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a4a0dd-2902-4479-9308-e430091bd9fc",
        "cursor": {
          "ref": "e66c4ce6-6abc-4dde-b9e0-b665789b3351",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9cc0975c-24c7-4004-b815-75b9fe97b7eb"
        },
        "item": {
          "id": "47a4a0dd-2902-4479-9308-e430091bd9fc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d98a444f-c752-4478-8170-327918871f2b",
          "status": "Created",
          "code": 201,
          "responseTime": 5857,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f949cbc7-7cb7-4979-a6e4-301be60721d0",
        "cursor": {
          "ref": "3c319f21-0f4c-48fe-8f51-f980f78f962e",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d9d84245-45cf-4f00-84d9-9e83331413d8"
        },
        "item": {
          "id": "f949cbc7-7cb7-4979-a6e4-301be60721d0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "78b62556-1865-4359-b988-a9f709e3e6e2",
          "status": "Created",
          "code": 201,
          "responseTime": 5586,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c135aa79-4313-4d62-9a67-2bb68ea5fb5e",
        "cursor": {
          "ref": "a8f27e0e-b584-4c3a-b4bc-a8664a3ee0a7",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "84ea8e7b-fb48-4f1f-bdda-cf6d3906418d"
        },
        "item": {
          "id": "c135aa79-4313-4d62-9a67-2bb68ea5fb5e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1c2f1433-1167-4d18-a561-748045c41579",
          "status": "Created",
          "code": 201,
          "responseTime": 5660,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c58b8e-9b55-4663-9757-8bb5bb81ec6f",
        "cursor": {
          "ref": "ca809e59-92bd-4d9d-8fb8-b02ba00cce33",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "804cbc6e-cadb-45a5-a75d-4b1f9df88764"
        },
        "item": {
          "id": "a3c58b8e-9b55-4663-9757-8bb5bb81ec6f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f8cf5d14-c9ab-47a2-8d9a-f988db989b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "83caf829-6174-4668-8791-65d29965bc85",
        "cursor": {
          "ref": "3c88d6b2-e71c-469d-9828-cf776565f23d",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3c6e38ea-f486-4bb5-b527-a2657ea4fabd"
        },
        "item": {
          "id": "83caf829-6174-4668-8791-65d29965bc85",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f3956b64-1458-4b5e-bf88-6da139a92c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72382996-7a29-49cd-b2fa-47c9a2c07b29",
        "cursor": {
          "ref": "07c646bf-c15e-4dd9-ae5d-f0a5bdbd25ab",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "82c57429-ded7-404e-9399-838ea53a59fa"
        },
        "item": {
          "id": "72382996-7a29-49cd-b2fa-47c9a2c07b29",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ecfdc28d-1a95-427b-94fd-03a748d31a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90649c0f-383e-4761-baac-b1023ec92c40",
        "cursor": {
          "ref": "93c7d2a1-c70f-4ffe-8254-a3b920045ea6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a60d36c1-0186-48bf-8e81-e5f20024af46"
        },
        "item": {
          "id": "90649c0f-383e-4761-baac-b1023ec92c40",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3150b484-23af-473e-849c-c3f7abd2bba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19beee5-5809-4845-ac52-0b54f7ea25f0",
        "cursor": {
          "ref": "4270dca8-8c84-4d33-8664-cb637106572c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "01339780-202b-443e-9d1f-0078899540e9"
        },
        "item": {
          "id": "d19beee5-5809-4845-ac52-0b54f7ea25f0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bdec64e0-0576-4126-b082-dc4cfeac8250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3400992f-b8ad-417a-90f2-6971fb097bce",
        "cursor": {
          "ref": "2ce22651-8b78-4fdb-9473-999187a7cf7a",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "53e6bb3a-8448-4b00-9c33-0225b7ce2814"
        },
        "item": {
          "id": "3400992f-b8ad-417a-90f2-6971fb097bce",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8323f586-0fd5-4f91-ae6c-441f631d1f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0240e301-b5be-4720-9c88-5f41b26f6685",
        "cursor": {
          "ref": "116a3a01-ff5f-421b-b2f9-58fa151a3ed9",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8f2ea23a-3c5d-4683-844a-fe26d2687fd7"
        },
        "item": {
          "id": "0240e301-b5be-4720-9c88-5f41b26f6685",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0a1805b7-4bf5-4fc5-b94a-38bd2dce15a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480ffaa2-33d0-4b9b-8540-4183c3f941fe",
        "cursor": {
          "ref": "044964ad-c1a0-41c9-a6f8-76563dedaf5e",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b7116a32-c276-41ef-9077-5d03f313f4db"
        },
        "item": {
          "id": "480ffaa2-33d0-4b9b-8540-4183c3f941fe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fdf537c3-0433-4061-ad41-461bf2ebea66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec047ca-867d-42d2-b3a8-7d8d67f040ef",
        "cursor": {
          "ref": "3a5cef2a-62bf-447d-b118-416c7caa91da",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ad51816a-7ece-4d40-9355-43ea4b9532da"
        },
        "item": {
          "id": "bec047ca-867d-42d2-b3a8-7d8d67f040ef",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c2b8e30c-bdb8-4965-83c5-ff830e107afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e16e9de-535f-491a-a004-991acffdbedf",
        "cursor": {
          "ref": "29bed06e-59c2-4587-b2fd-b00a4039310d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "12dc292b-5bc3-4646-8d34-06a501f83952"
        },
        "item": {
          "id": "2e16e9de-535f-491a-a004-991acffdbedf",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "173d6382-eb78-4f99-9618-75bce68a93fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9d396e-02de-4655-91c8-6e8999ead433",
        "cursor": {
          "ref": "78500b2e-02cd-48cc-bde8-8792f13120bf",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3d8afb3e-0818-4181-8048-352af3b8d275"
        },
        "item": {
          "id": "5a9d396e-02de-4655-91c8-6e8999ead433",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2025767d-6c13-41e2-b4d1-fbf9cc3983a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c24e5fb-58a5-4908-8b52-2eec1efdd94a",
        "cursor": {
          "ref": "8e580dac-5018-4f25-8c88-e89cd5aec4fb",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2d55bd49-38c8-463c-8247-d7b88fbce8e3"
        },
        "item": {
          "id": "2c24e5fb-58a5-4908-8b52-2eec1efdd94a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1cecb897-4fd4-4b1e-b360-4b3aecde857d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13180428-7c5a-44dc-8180-e2116403b51d",
        "cursor": {
          "ref": "c49aa7f2-3fd8-4000-9782-7351c9515d55",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b846aa1a-29c7-4b46-bba7-89035882b184"
        },
        "item": {
          "id": "13180428-7c5a-44dc-8180-e2116403b51d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1aeca352-889c-431f-a7ab-323ff8d4c307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec55e1f6-9607-4956-a69a-c5073287b20f",
        "cursor": {
          "ref": "2aa26e16-492f-42eb-a9a1-ca068e3b59d9",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d31f8449-a8c6-43de-b114-45f545b4c5c7"
        },
        "item": {
          "id": "ec55e1f6-9607-4956-a69a-c5073287b20f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a7527cdc-8967-44e0-83fb-6d79945cf3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c64bdf9-8373-4f66-96d7-bc65f79d940a",
        "cursor": {
          "ref": "a3df697f-b729-45e3-b7af-1c42fd4be2a6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "79656c20-b644-4165-88aa-11215e678664"
        },
        "item": {
          "id": "5c64bdf9-8373-4f66-96d7-bc65f79d940a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "130e7c1b-c25c-4ff2-8c29-581ad64bd620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c932956-b880-4fe1-a4a3-89ff9d0f0e42",
        "cursor": {
          "ref": "3f3d93ae-52eb-41e2-ba27-26c0ed5ab69a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "14a39787-ae0a-4148-8de7-0c2201ec5db6"
        },
        "item": {
          "id": "3c932956-b880-4fe1-a4a3-89ff9d0f0e42",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ee524dc5-6daf-460a-bee0-726be03fe8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8692338-802f-4744-94fb-4498f7c18447",
        "cursor": {
          "ref": "1e13df91-39ca-4111-a07f-805eda62e1ef",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e704bf5c-56f3-4837-9ec4-cd6e64089609"
        },
        "item": {
          "id": "b8692338-802f-4744-94fb-4498f7c18447",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2c113e1a-5137-4da4-9a6d-ecae6141fbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056d2669-fac5-450f-afb7-e8fb6448af8e",
        "cursor": {
          "ref": "54cb4092-8450-4f49-9475-9ab216bdfa9c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "56a88b55-79ca-47a5-9143-373610a1d63e"
        },
        "item": {
          "id": "056d2669-fac5-450f-afb7-e8fb6448af8e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "03996c4f-3bce-460c-af4b-abcc71ed8980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132ac748-ef94-48ab-a0a9-de2903f0a11f",
        "cursor": {
          "ref": "f3e3ba4b-b9b9-4d27-8fef-7cbe96d0496c",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d287490a-e611-4968-a907-f1043dbf5738"
        },
        "item": {
          "id": "132ac748-ef94-48ab-a0a9-de2903f0a11f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "dd624923-ec64-4182-bb2c-eb604e764f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68aeacb0-445b-42aa-aadf-1cc6b097b5c4",
        "cursor": {
          "ref": "ddf0f83f-2f39-4335-8b9b-0f4115f64baf",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "36a5ae67-471f-4fa2-9e87-749baeb12f06"
        },
        "item": {
          "id": "68aeacb0-445b-42aa-aadf-1cc6b097b5c4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "501b1af7-030a-48b6-b4ce-172eb78c28e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12eddf41-8c78-4f38-af46-c3852ccb4b34",
        "cursor": {
          "ref": "d4d8821a-39c5-4c63-a821-decffc0cf249",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e9e099f1-4960-4161-a40e-110508044165"
        },
        "item": {
          "id": "12eddf41-8c78-4f38-af46-c3852ccb4b34",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a93faeb5-6794-4a13-b29d-6154f50c3262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8338cd66-5327-44ec-b24d-a08223f28569",
        "cursor": {
          "ref": "34035647-022e-4cbb-8260-5fcdb1c63ce9",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0b543e2f-986b-4830-bd9a-4b5394b7017c"
        },
        "item": {
          "id": "8338cd66-5327-44ec-b24d-a08223f28569",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6a6d1ff2-1c4d-45d4-bba8-6dfd2ced4aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c8ea2e-9c5c-42cf-bc89-10ffec1c68dc",
        "cursor": {
          "ref": "ceea5e49-56a8-4d7c-9887-43f0b1dfaf01",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4e1f38bc-d1c1-4fc5-b429-0934cbe59e63"
        },
        "item": {
          "id": "15c8ea2e-9c5c-42cf-bc89-10ffec1c68dc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ff9f76c5-1349-4b1b-a038-166fa40b6370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00693f4d-9ba6-47c1-baaf-99701d788ad9",
        "cursor": {
          "ref": "b070b302-5bbd-49df-b6ba-97dd46072711",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7571a2e5-be60-4f26-964d-7019f32db5d2"
        },
        "item": {
          "id": "00693f4d-9ba6-47c1-baaf-99701d788ad9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0d85e911-83ff-4292-ab66-d4a129f6fcac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70d57ed-d640-4f4f-9b7c-46c5b2815122",
        "cursor": {
          "ref": "1c42fc78-7be7-4da9-9f23-4db5b018ef70",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "953db1cb-8bd7-46c5-834c-c2e77a61dc8e"
        },
        "item": {
          "id": "f70d57ed-d640-4f4f-9b7c-46c5b2815122",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c8acc0e3-9eb2-4047-a04b-37cd4ae81ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9aa49a-33f9-47de-9cdc-2ca0e8d020bc",
        "cursor": {
          "ref": "1b4c674c-3d08-499d-a461-c09628d292dd",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "58d81d1b-7722-4685-9da2-4b0195ed5006"
        },
        "item": {
          "id": "3f9aa49a-33f9-47de-9cdc-2ca0e8d020bc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3493c2ee-da08-434a-a034-bbd4231a3b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09853dda-0a37-4bc4-be7f-2838a0c2a8dd",
        "cursor": {
          "ref": "b8a54acd-ee16-4ed3-8f8d-e4d52ac37c38",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b8402a07-099b-4431-94d3-c4ee042a8062"
        },
        "item": {
          "id": "09853dda-0a37-4bc4-be7f-2838a0c2a8dd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d07b4645-cbcc-4d69-b88f-5fecad86f83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0162e8a-0450-4d9f-a165-28c5797883f9",
        "cursor": {
          "ref": "18cd8e9a-dab9-479c-af73-ae355b2196b6",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1da06233-dc0d-49a1-a9a2-60ab04612685"
        },
        "item": {
          "id": "f0162e8a-0450-4d9f-a165-28c5797883f9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "937cb3de-fc00-4904-a6c0-e76379173a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70d5c05-f499-4e1b-b31b-e598b17263ea",
        "cursor": {
          "ref": "61866108-df77-42f1-bd62-ec0431a322bb",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d72eb84d-6c89-45c1-9ce4-d315074ad94d"
        },
        "item": {
          "id": "e70d5c05-f499-4e1b-b31b-e598b17263ea",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "160373ed-c55f-47d0-816e-e81130489350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff273582-261f-473d-8ebc-4f9b81b3a48f",
        "cursor": {
          "ref": "3dc9cc66-7dfd-4acf-a371-119be1d05205",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bee70708-8070-4e64-9fd0-c4c062ce0961"
        },
        "item": {
          "id": "ff273582-261f-473d-8ebc-4f9b81b3a48f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "50512ece-6429-4c6a-a1a8-e524f5f2251e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6c8e47-4088-4bc5-a0af-be2c43a5efb7",
        "cursor": {
          "ref": "5aac0682-ba47-4e92-a532-24070f673b39",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "62a768b2-7363-44da-b15c-d3f82757e959"
        },
        "item": {
          "id": "bb6c8e47-4088-4bc5-a0af-be2c43a5efb7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cef47cee-7703-4aed-a03b-842a95912c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea33822-f690-4403-8b93-c625a3f02faa",
        "cursor": {
          "ref": "390694ab-8a30-4be4-b346-db7f732ab129",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "879de490-9be5-465d-997e-13acc5695d1f"
        },
        "item": {
          "id": "6ea33822-f690-4403-8b93-c625a3f02faa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e923b407-659a-4e30-adfa-a76ac1f15b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a73db492-c72e-400c-a9fd-a4c54fd7b6a5",
        "cursor": {
          "ref": "1b7de599-31ae-4a31-83a7-5b6611625a0c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "93643395-4493-4c4c-b572-ea146c2d868c"
        },
        "item": {
          "id": "a73db492-c72e-400c-a9fd-a4c54fd7b6a5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f8d8e05a-bf5d-4226-89de-3775a95e1993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99621a21-7de2-430e-a4d4-8e782c45b635",
        "cursor": {
          "ref": "705b6e9f-913d-447c-abcc-b729c04cef33",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4bace9a4-3561-4857-9d12-cdede0786f65"
        },
        "item": {
          "id": "99621a21-7de2-430e-a4d4-8e782c45b635",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6ad1229f-390b-413f-bf6d-04959de38867",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c7020c-91bf-450d-b00d-fd57c38a5887",
        "cursor": {
          "ref": "68d6e1a6-f9e8-419e-bd42-0c6225244455",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "20527b91-a7f8-4652-8b66-9b28a9208397"
        },
        "item": {
          "id": "72c7020c-91bf-450d-b00d-fd57c38a5887",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dc3d8ce1-b6d1-42d3-916e-a094dd3d991f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4ba67f-1198-4019-8b1d-877e864253cf",
        "cursor": {
          "ref": "bd76e1cf-fd02-4ee2-88fc-c3bed320f03e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9f047c8c-e1b9-4082-b14a-aced8bbd2c71"
        },
        "item": {
          "id": "7d4ba67f-1198-4019-8b1d-877e864253cf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "70b73540-9f9f-4f95-92c9-791bbb3f9805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3d3673-d479-44d0-8361-16edf6fe1502",
        "cursor": {
          "ref": "923d3d35-4255-4100-85bd-5c93791e6dfd",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "428b0cb1-cfe7-4298-abc3-c52b6bca7f9e"
        },
        "item": {
          "id": "3a3d3673-d479-44d0-8361-16edf6fe1502",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cb39736e-f040-4359-81c7-914d9239b3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31b6c15-fa90-4170-bd08-48df67541f18",
        "cursor": {
          "ref": "2e1c3b7e-3b59-4c61-b79b-25c60c2dbb1a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "37813d8c-6008-4bc3-aae1-80e1a12fe12f"
        },
        "item": {
          "id": "f31b6c15-fa90-4170-bd08-48df67541f18",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8138461c-debf-4a17-8047-fd3dbef54f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01362f09-0ee5-47f8-9d8d-c2484862b186",
        "cursor": {
          "ref": "ed1ef640-2175-408f-a83d-e709987d628b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0a5823db-0ab0-4817-bd57-9f80841af1f0"
        },
        "item": {
          "id": "01362f09-0ee5-47f8-9d8d-c2484862b186",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e4fa6386-33be-4d56-ac73-399440944c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42b108a-b43b-4cdc-a1f0-eaca22951d75",
        "cursor": {
          "ref": "bf83861d-47d1-46f6-83c9-fd5ef7142504",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d864a9fc-428d-4895-a897-0bae4b209b61"
        },
        "item": {
          "id": "b42b108a-b43b-4cdc-a1f0-eaca22951d75",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2d6a4f2a-384a-4a98-b3c9-9cc813fc1ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fb74ee-4fd3-4739-a3e1-a34261a568a0",
        "cursor": {
          "ref": "6c9f181f-71ae-4b7a-870a-307533b56805",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "bc85de02-f6e8-4934-8aef-7840f13d1e83"
        },
        "item": {
          "id": "d1fb74ee-4fd3-4739-a3e1-a34261a568a0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b04f02bd-1343-4c7d-b347-0718651bf7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df7f3b9-4689-4639-9252-ff9050612f58",
        "cursor": {
          "ref": "2eb7b788-9f92-4d0e-9bfb-f0c9486f6f40",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1b9fa4f0-3d15-41be-b9b5-7ce5a71e260e"
        },
        "item": {
          "id": "7df7f3b9-4689-4639-9252-ff9050612f58",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3ab64926-68c7-4e38-aeac-dcd6d1d079a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e02dcfe-f20c-472f-ab06-69d5b9cabb67",
        "cursor": {
          "ref": "7b4f0831-4fd8-4c59-8a40-f73ea85b312d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "174c70a7-129b-4915-bdd0-0add15d6ac54"
        },
        "item": {
          "id": "3e02dcfe-f20c-472f-ab06-69d5b9cabb67",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "878ad9b2-0b60-46bb-a93d-afa7a223f4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1cc3f2b-6eca-4d3f-a4a0-4f6e24d9a555",
        "cursor": {
          "ref": "b966348d-fa2e-4259-a3b6-9d473fea52ca",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f624fd29-5b22-4d7a-a00e-39df6cad59e1"
        },
        "item": {
          "id": "e1cc3f2b-6eca-4d3f-a4a0-4f6e24d9a555",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2bd72570-9715-49bf-b1f6-c8186afe590e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6996400-c5dd-4225-8f0c-a362945eff7e",
        "cursor": {
          "ref": "ce15aede-a307-4d04-8899-6dfcd7093d6d",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e5d11744-d79d-4fb0-8eb4-9592686620da"
        },
        "item": {
          "id": "d6996400-c5dd-4225-8f0c-a362945eff7e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "87905189-e5ab-41a4-93d6-fdc4725df8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcc09d1-c947-4c29-bec4-10aeae6d454a",
        "cursor": {
          "ref": "b8ced229-78e0-4e12-a72f-9b82447e8586",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2ac13caf-61fc-4d9a-a4b0-3215dd50ea66"
        },
        "item": {
          "id": "ebcc09d1-c947-4c29-bec4-10aeae6d454a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ca22cb3a-16fe-43be-b0c7-699394e21ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5899385-debb-4a87-845b-b74b5fd640f5",
        "cursor": {
          "ref": "bb0c0b71-15b5-41d2-ba9c-1651d3f805cb",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f6ab6765-dd1f-4ffa-ba3c-bf51d5e68bc5"
        },
        "item": {
          "id": "e5899385-debb-4a87-845b-b74b5fd640f5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f9a43807-6203-43ad-b1c1-f6949cbf3eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fae7ab8c-c48f-471b-8f61-34043a8ed1ce",
        "cursor": {
          "ref": "9d3ba541-1d2d-4ad7-b028-4a0d5ddc0fd1",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "40144053-99f2-499d-b0b1-99ede95ea6d9"
        },
        "item": {
          "id": "fae7ab8c-c48f-471b-8f61-34043a8ed1ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2da9bbd0-dace-4d42-8f16-89056084cc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75505424-98dd-4d60-a4fd-304d0fac3a51",
        "cursor": {
          "ref": "a269b845-7d85-4280-987c-6418aa425433",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c0da6da1-d42c-4852-9b7e-d5de3265bd86"
        },
        "item": {
          "id": "75505424-98dd-4d60-a4fd-304d0fac3a51",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0daffb88-70e6-4e21-b93a-fb4dbc45c4b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782eec84-d779-46e4-8966-dd82d0539924",
        "cursor": {
          "ref": "2b5e2a46-40fe-4c29-a7e7-b02852f10ae1",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d4f52698-f6f2-4025-aa8e-616435d53695"
        },
        "item": {
          "id": "782eec84-d779-46e4-8966-dd82d0539924",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "800efae1-c8d9-4779-84de-3070bff62857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a6d40c-5556-4ef2-a090-190cd8085168",
        "cursor": {
          "ref": "b4cf80ab-2f7c-4f4a-9aa7-cce3c0035adc",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "61e5fa34-2fe4-4b45-8f1e-242c9bbdaa00"
        },
        "item": {
          "id": "75a6d40c-5556-4ef2-a090-190cd8085168",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b4f1f74c-2a9f-4226-8233-3f0e8727528e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8cf105-4562-4a95-8c13-87f28b87b789",
        "cursor": {
          "ref": "fc923442-beca-469a-8ee3-5b1914b361c8",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3b122621-a1ba-4d11-9629-cf942e8eb932"
        },
        "item": {
          "id": "2b8cf105-4562-4a95-8c13-87f28b87b789",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "110be722-03d9-4c31-879e-6ddb523f86d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7ecc12-2207-4984-8a4a-721a55c662d2",
        "cursor": {
          "ref": "df3a9d28-9ccc-4cc8-b4d6-76b3afc24aad",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "30802592-c3c5-4d12-9241-0f42c6ec5958"
        },
        "item": {
          "id": "ab7ecc12-2207-4984-8a4a-721a55c662d2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07da2aea-e877-40e6-807b-2c912c21c617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fb5f75-6ce7-4af7-96b8-7a3c307d1dc6",
        "cursor": {
          "ref": "17ca5f93-8e25-489f-ac83-e175a194a548",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "312a40c6-b030-487a-a71b-f7eeb808398b"
        },
        "item": {
          "id": "e3fb5f75-6ce7-4af7-96b8-7a3c307d1dc6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "881188ab-ed1c-470c-991f-693f9c2d140c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82a731d-8be3-4602-bf8d-cd058b91aa93",
        "cursor": {
          "ref": "c080a641-f837-4876-9426-d34dcff47328",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "72ffd2e9-bb22-457d-815a-f683c025097c"
        },
        "item": {
          "id": "e82a731d-8be3-4602-bf8d-cd058b91aa93",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "13d9c657-44d7-4761-ab6f-114a5c9cf753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab6130e-7841-4a8d-8cd5-12152d59f1a5",
        "cursor": {
          "ref": "9645aabf-da8e-4505-bf63-b62a5d9f6b34",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b779b035-06b1-44b7-8075-e498c01724b7"
        },
        "item": {
          "id": "7ab6130e-7841-4a8d-8cd5-12152d59f1a5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2b854aeb-2eef-4abe-932f-1d78d774a9b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0493981f-2d39-40fe-9f7d-ab089179b866",
        "cursor": {
          "ref": "80a91281-c052-492b-89d9-88fb64e54ea1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5c95c2b4-373f-477b-94b2-412c7101fe9b"
        },
        "item": {
          "id": "0493981f-2d39-40fe-9f7d-ab089179b866",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1c839b2c-b77b-490c-a50f-955dd4651fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aacf506-d3a0-46bf-9c8b-4f8fd22d39bf",
        "cursor": {
          "ref": "b24162f3-8263-4f3d-b773-de7f2c2500eb",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a40d44bc-17be-4c37-a883-461cc3c98219"
        },
        "item": {
          "id": "5aacf506-d3a0-46bf-9c8b-4f8fd22d39bf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "aef95364-8551-45cd-bed7-09fd2d0d46c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd0128b-e7f1-42a2-b8f5-7380f5b83a56",
        "cursor": {
          "ref": "e4f42179-9d0a-41d8-b00b-361a8285fd4d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "5443b3b7-3b2d-488b-aa71-ec801ab0078e"
        },
        "item": {
          "id": "3fd0128b-e7f1-42a2-b8f5-7380f5b83a56",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "18973a89-2ea6-4937-a13a-cedfec362122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404ac64f-c58c-4b38-940d-796ca50a641a",
        "cursor": {
          "ref": "8ac3c0d8-aa89-4776-aacd-c0185c973c1d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "155eb048-0bea-497f-a8fa-3c690ade8378"
        },
        "item": {
          "id": "404ac64f-c58c-4b38-940d-796ca50a641a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "534eed5d-e973-4e94-955d-a537d90c9b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec9320b-3142-44e1-b6be-52955512fef3",
        "cursor": {
          "ref": "9c3bf495-b45e-4e22-aed5-37803113e8db",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "0a9370ed-36db-4015-b3ea-b9e3f8041949"
        },
        "item": {
          "id": "2ec9320b-3142-44e1-b6be-52955512fef3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c1b1337a-14c9-4dfc-be49-620a651ea0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492dab2c-9223-4fab-a247-c35eb81bc0cd",
        "cursor": {
          "ref": "45606da5-a485-426f-ae99-609e02ee421b",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "375b9c83-ff26-4de9-b110-7e2468659c51"
        },
        "item": {
          "id": "492dab2c-9223-4fab-a247-c35eb81bc0cd",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f8c3976d-7559-484d-800a-f5ea07de4b21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0111d3c-7a01-4e8d-8f87-50b1e0ec8df6",
        "cursor": {
          "ref": "a8e71a48-a7cc-4ab0-a3fc-39835a850f3d",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c941b1a4-4274-4b80-add1-2ab020b70d0e"
        },
        "item": {
          "id": "b0111d3c-7a01-4e8d-8f87-50b1e0ec8df6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fb523d9b-d237-4798-9aca-2518759dfd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26049c52-b955-40cd-a015-aefb3bd3b289",
        "cursor": {
          "ref": "579ebf4f-a42e-42dc-9859-6090f717dcd5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b0d03844-1aa1-49f0-b56d-1c211e6fb2ca"
        },
        "item": {
          "id": "26049c52-b955-40cd-a015-aefb3bd3b289",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3bde8ebf-3cdd-4490-a8bb-86d122108cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd77bfb-d5e6-4dc4-bf07-cc3ef7101296",
        "cursor": {
          "ref": "58ac4f0b-bef4-4ae9-8aae-d42e84c0ffea",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1855665e-23e0-40d6-bc95-b57270858250"
        },
        "item": {
          "id": "7dd77bfb-d5e6-4dc4-bf07-cc3ef7101296",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b8f522e0-dd9e-4195-bfe4-15795e5afa2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccde374d-4c17-4366-9f62-9514e15847ed",
        "cursor": {
          "ref": "0590c6ef-b900-4b8e-abf0-859fbfb71322",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7b6755ff-a09d-4c8e-a9cd-37eeb1a951f1"
        },
        "item": {
          "id": "ccde374d-4c17-4366-9f62-9514e15847ed",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ba366b1b-88e9-4a90-8f33-b4228c18602b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a360eaf5-a43f-4aaa-b1fe-727ffaffc483",
        "cursor": {
          "ref": "f7d84d6f-fce8-4fb2-9ba4-d52e29c66a6a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "66e49470-3440-40e5-87ad-428f880c5bed"
        },
        "item": {
          "id": "a360eaf5-a43f-4aaa-b1fe-727ffaffc483",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ad26d5a5-ac6a-4ea7-a717-49787ad7d9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5db04bf-93ef-415b-a7e9-9d2e5d0f9d2f",
        "cursor": {
          "ref": "15954888-c862-40ae-b877-bf0ccf0cdcc0",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e344ac62-419f-48a6-b815-735e2d443dfd"
        },
        "item": {
          "id": "c5db04bf-93ef-415b-a7e9-9d2e5d0f9d2f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "570060bd-d2cf-416a-b5ed-e247ca7bdb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7be7dbf-bf0c-4d1d-83a4-0db63282723f",
        "cursor": {
          "ref": "d9e42f6e-7b91-4e4c-92af-1396126c0106",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8e412841-629a-4e7b-a254-702017ef34b1"
        },
        "item": {
          "id": "e7be7dbf-bf0c-4d1d-83a4-0db63282723f",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a6bc3d37-4caf-4407-8c4d-3878ada397e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d6561c-d3d1-4241-aaa3-4187ebebef15",
        "cursor": {
          "ref": "afddb994-3ec4-476f-a438-7e39832f4e5d",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f8f4aad6-5b5e-4a21-ba62-82011795da0e"
        },
        "item": {
          "id": "a4d6561c-d3d1-4241-aaa3-4187ebebef15",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "42fb43ed-37f8-41ff-a3f8-a56717460f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e9954f-ab4c-4bdb-85e6-52c62ec3d6f6",
        "cursor": {
          "ref": "0b3bd2e7-4a14-40ef-83d6-d95ac56fa35d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "268cdfc5-334e-41d8-a5e6-53331e0012b9"
        },
        "item": {
          "id": "88e9954f-ab4c-4bdb-85e6-52c62ec3d6f6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2dfc53c5-25ee-4b8d-8f6a-876493171529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dde20c-51cc-43a8-b1df-7c5c152629af",
        "cursor": {
          "ref": "53a9a1c7-9c3a-4f71-bd40-21d78e15dbc2",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "72171acf-e3de-4349-a421-4380f68a2055"
        },
        "item": {
          "id": "81dde20c-51cc-43a8-b1df-7c5c152629af",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ff1b968b-39bf-42e7-b347-f9dc5738e17a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8bc86d-00bc-40c8-a4a9-17cfd995ada1",
        "cursor": {
          "ref": "aa3946cf-6b9d-4e7c-9432-f9462bec7145",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f794d656-27cc-4adf-88da-dbedfd605dbb"
        },
        "item": {
          "id": "ec8bc86d-00bc-40c8-a4a9-17cfd995ada1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c2119ecd-4147-4abc-9747-05afb6276b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d87839c-1b14-4a73-bbf1-de531e7cb697",
        "cursor": {
          "ref": "ac019cde-34f8-439c-9b89-777d7e133ffd",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d89bface-6165-4579-8a28-d497eeb148f1"
        },
        "item": {
          "id": "5d87839c-1b14-4a73-bbf1-de531e7cb697",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c2a0c81d-67c7-4b34-bd96-0a6bccccc0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 214,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c356c0-1fcf-4f73-af22-2f0dee992479",
        "cursor": {
          "ref": "c877543c-b3c6-4121-a841-5f8f91c73ab6",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "38db64b8-decf-4088-80cb-e08762663aa7"
        },
        "item": {
          "id": "59c356c0-1fcf-4f73-af22-2f0dee992479",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f83cbdc5-f6e9-4a22-8ff8-5bc2fda48726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79371ed-e26d-4222-81eb-22abbb5e3679",
        "cursor": {
          "ref": "a7f79add-6f57-41b5-9bb2-2b04c078d8ee",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "94b4aaa8-f197-461e-b351-475d2d2c0b21"
        },
        "item": {
          "id": "b79371ed-e26d-4222-81eb-22abbb5e3679",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "be045ba7-b961-431b-9ad4-fdeed7049c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb59635b-0079-483a-a177-2117451852c5",
        "cursor": {
          "ref": "84c4e63f-7868-4766-9113-4cf98ef19903",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a11afbb8-73ff-4c85-8e18-0cdc8eaac0f1"
        },
        "item": {
          "id": "eb59635b-0079-483a-a177-2117451852c5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "34dc630d-805b-442b-ab59-582dc7eb3f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0429722-c219-4f36-81e3-f45726587c39",
        "cursor": {
          "ref": "f5e8f43b-b03a-4808-af00-75a9b8fb5766",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "665e8d81-2efe-48a8-bd0f-7097da3e5057"
        },
        "item": {
          "id": "a0429722-c219-4f36-81e3-f45726587c39",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "0bca120b-bd55-4484-b14d-5d29d127308c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9075ca2-e31c-40b1-90c4-f33f1e906b93",
        "cursor": {
          "ref": "ab58892e-420b-4805-a776-90c967d39e05",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d7a00341-bdf5-4462-b131-b87c1e225cd7"
        },
        "item": {
          "id": "c9075ca2-e31c-40b1-90c4-f33f1e906b93",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6db84494-23b7-4f2c-9a8d-30f07b2fefc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6a477f-4891-4443-a102-1e7e46d01cdd",
        "cursor": {
          "ref": "5f97d7c8-d99a-4ced-887d-c0d5674f42d3",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c109ad90-700c-46d8-816d-74dc1fd299f0"
        },
        "item": {
          "id": "ec6a477f-4891-4443-a102-1e7e46d01cdd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a692af9f-88a0-4a9f-a26a-5d43597a9a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf2dd24-0563-4e96-9c23-4ba44f9d47c7",
        "cursor": {
          "ref": "a8fbc184-20a6-4ada-ae4e-2618a90f030c",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e7480500-1389-44c3-82a2-20ea48d78a26"
        },
        "item": {
          "id": "ccf2dd24-0563-4e96-9c23-4ba44f9d47c7",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cc8b29da-f2dc-4adb-8bc2-4fa887308de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20ff894-5c58-473b-8801-efb335ee9c9d",
        "cursor": {
          "ref": "4b4c9bf4-6af6-41d9-bb8d-5a6e48baabd1",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ec7cb4ad-2e6e-4f10-a799-f32439b4877f"
        },
        "item": {
          "id": "e20ff894-5c58-473b-8801-efb335ee9c9d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e5052cc4-2324-4804-825e-0853cdcdc97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625deae9-7b8d-40d3-8624-6f7a5d565ff5",
        "cursor": {
          "ref": "a8a8757f-a75b-49c0-9732-cc5717d1c4a7",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "50a97bc9-6e36-4a66-a7a2-1feb571d06ea"
        },
        "item": {
          "id": "625deae9-7b8d-40d3-8624-6f7a5d565ff5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5e290ce3-c3a5-493f-ba49-d7d5ed31bcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c85308-019e-4db5-8aac-6440b72e2de6",
        "cursor": {
          "ref": "65b02c65-db9a-4581-9bb9-e95e4968d66e",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6d810d1a-99ae-41cb-bc8c-3076987fda66"
        },
        "item": {
          "id": "d2c85308-019e-4db5-8aac-6440b72e2de6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2e97f8fd-2604-42e2-812c-c41cc6793bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162d0024-8246-489f-b672-f71d24f3dafa",
        "cursor": {
          "ref": "eb6a0702-f11d-4f3a-8c94-ad25bd646cfa",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "44803335-1d8c-4243-920e-1361fbba5bf8"
        },
        "item": {
          "id": "162d0024-8246-489f-b672-f71d24f3dafa",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c454dea7-43d1-4e2c-b1fb-beb5fd98129d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d642d8-e845-4efd-985b-c79804d25603",
        "cursor": {
          "ref": "453bc530-bd67-4ae9-8a68-63a54fe3b4a2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2928322c-d6a5-4dc9-bbf5-1cf2b5ffc708"
        },
        "item": {
          "id": "41d642d8-e845-4efd-985b-c79804d25603",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ca6605ad-d7ef-45db-8117-a9571daef6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454f65f3-952a-4e44-a93f-bf8ac42f9967",
        "cursor": {
          "ref": "2f146555-3280-42fe-910f-ddb342be780b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "a6faf082-6c88-4163-9ced-133f43e7bd1c"
        },
        "item": {
          "id": "454f65f3-952a-4e44-a93f-bf8ac42f9967",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "212b8f69-3760-4522-beb9-bd29b2a43881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8143fd1d-da74-4176-b06a-cb4f99162176",
        "cursor": {
          "ref": "216db924-835f-4914-8b4c-1d1140df15df",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c73e206a-e218-4c4e-bc4b-d071d83dfddd"
        },
        "item": {
          "id": "8143fd1d-da74-4176-b06a-cb4f99162176",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "28fb096b-bec1-4694-9468-355d5ce0950c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "919c6f63-dcf8-4783-808c-ea363e141488",
        "cursor": {
          "ref": "1d87a406-b18c-4bfc-8d87-40fa8c6e0a5a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "83a12140-67ba-4ea2-9029-331785ea7bb8"
        },
        "item": {
          "id": "919c6f63-dcf8-4783-808c-ea363e141488",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bb9ae010-d980-419a-b73a-c62095749652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85d1e2f-6d7f-4871-a0ad-590be546193d",
        "cursor": {
          "ref": "24b5abfb-3432-461f-a358-e52cb5f536d9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4707cc5d-dda5-4c42-b662-c0cbe12f4c05"
        },
        "item": {
          "id": "a85d1e2f-6d7f-4871-a0ad-590be546193d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "096e0b77-01c9-4d0d-adab-2c37c30b34fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992bc33b-f60d-492a-98c8-4b76ff7fcfff",
        "cursor": {
          "ref": "cf0a1613-75ec-46a5-b634-24030248bd65",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4546170e-1bb2-4d77-b062-95b6ba7fe909"
        },
        "item": {
          "id": "992bc33b-f60d-492a-98c8-4b76ff7fcfff",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7e8f6547-9bd0-45ab-9ae0-654718e12267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa25d651-dac6-4cd9-871e-a73e5769130f",
        "cursor": {
          "ref": "1a24464f-0789-4468-803a-afb82e2f2515",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "25c22405-1f56-4b51-a4dc-7a9913ec48d5"
        },
        "item": {
          "id": "aa25d651-dac6-4cd9-871e-a73e5769130f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9aebb3d1-8661-40e5-998d-da63c6293c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7ce6f0-f705-456a-879b-af221cc4c12d",
        "cursor": {
          "ref": "9fb9d440-fabb-4542-a81f-34edf943a654",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a989adb6-d779-421c-b3de-6de06299c0ed"
        },
        "item": {
          "id": "bb7ce6f0-f705-456a-879b-af221cc4c12d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "99f6e28b-520d-4dce-bf4e-f6f5730eb535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f85efcb-e9a9-4944-81dd-c36b3b2c516e",
        "cursor": {
          "ref": "54e2f38b-9c73-4c0e-89a4-2d0956cbb210",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1230c950-b031-42a4-a566-edd70b080f26"
        },
        "item": {
          "id": "4f85efcb-e9a9-4944-81dd-c36b3b2c516e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e3969cf9-b5d7-4766-962d-342b73d97b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f03e0a37-a85b-4308-8690-739005c90686",
        "cursor": {
          "ref": "b2335f6c-9619-4c7e-825b-f7b6207d8b05",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3609c862-fd6d-4055-b178-1ef128728c52"
        },
        "item": {
          "id": "f03e0a37-a85b-4308-8690-739005c90686",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d9fab912-b36a-4597-bbf0-baf1bfff4f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989a79e4-2eb4-4af9-bd90-b84c05baa9bb",
        "cursor": {
          "ref": "9912aa0a-acab-4dc7-b8a2-74e159b86bf4",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1a15c37f-35cc-424b-8dd2-291af1bf5612"
        },
        "item": {
          "id": "989a79e4-2eb4-4af9-bd90-b84c05baa9bb",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "905138ec-8819-4778-bf13-968e4287b713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b1e160-2bb6-41ba-8ab2-72ec4e4726ab",
        "cursor": {
          "ref": "469f8998-aa34-46eb-8cf9-0941473bc61d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9171fb07-ed57-44b6-9cc1-dda226ccf0e6"
        },
        "item": {
          "id": "37b1e160-2bb6-41ba-8ab2-72ec4e4726ab",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "77c269c3-e61c-4247-a8aa-57da1758ffb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311a4b7e-a2c3-4691-978d-6e6bb6b2a58f",
        "cursor": {
          "ref": "bce96eb5-dc2c-49be-aea2-261a9ca09738",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9cc72c84-9c93-4c92-8de1-d2a1aa397fee"
        },
        "item": {
          "id": "311a4b7e-a2c3-4691-978d-6e6bb6b2a58f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a596596e-bada-4974-96c4-c3101ec86987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0c04fa-2098-4df3-9c1a-99bd81448a54",
        "cursor": {
          "ref": "d15cbad8-c26e-4cf1-abac-f8ed13a9832b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fa5aee89-26c6-41c8-b07d-84ef7e1d2345"
        },
        "item": {
          "id": "ab0c04fa-2098-4df3-9c1a-99bd81448a54",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d4ccd878-5386-4c29-9069-94de7c4b1c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f12a810-cfa9-4c67-a16a-a4cc84de74db",
        "cursor": {
          "ref": "1517cccd-26d0-411b-822a-c1397813aa7d",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3be7b473-decc-4557-97cb-5e6bd3ea68df"
        },
        "item": {
          "id": "4f12a810-cfa9-4c67-a16a-a4cc84de74db",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b4491ec5-9569-4a33-ab9e-d32e97a02159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d20e64-a8ae-43c1-95bc-7998a420f53f",
        "cursor": {
          "ref": "ad9a0f67-bae7-410c-bf0e-066dfbe816d0",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ce94a5c2-c3bc-474b-8e61-2afd0f3d78c7"
        },
        "item": {
          "id": "82d20e64-a8ae-43c1-95bc-7998a420f53f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "bc34be5d-4a9d-4a3a-97ce-85ee6265b12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b316fbc5-a3f6-4a09-ba5d-fb2d753e9632",
        "cursor": {
          "ref": "8a050b06-b22c-447c-87d9-054e45bc0234",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5556c683-fe4d-495c-93fb-5e56abd3fbba"
        },
        "item": {
          "id": "b316fbc5-a3f6-4a09-ba5d-fb2d753e9632",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "69fa53db-1263-4e87-81bf-695a563d7bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ad1ef9-280b-4936-b020-6ce85c3a44da",
        "cursor": {
          "ref": "5f3e82f1-c97f-4720-b95b-8b27580cdbc9",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5f488e0e-b744-494e-bf20-00b181588fa0"
        },
        "item": {
          "id": "d8ad1ef9-280b-4936-b020-6ce85c3a44da",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5fe079f2-c646-4ade-981e-0af5ecb68b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e32fa-37da-4da0-986a-4b9f78965181",
        "cursor": {
          "ref": "dd53b7dd-797e-459b-ad22-58d55916aa9f",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "91cfa683-0b96-4be9-9fda-a4940186cdbb"
        },
        "item": {
          "id": "a97e32fa-37da-4da0-986a-4b9f78965181",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5a4bb28a-61e9-42c2-b9df-fc624cc5ae76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16462b1f-f207-4a25-b561-267c63c18776",
        "cursor": {
          "ref": "c3bbe30b-dae0-436f-8d3c-255220782d1e",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "59f41dfd-e20f-4194-9ea4-446e9e35e13e"
        },
        "item": {
          "id": "16462b1f-f207-4a25-b561-267c63c18776",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "cb80fe4c-2373-4ccf-943d-b771e4d5031e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260b24c5-37a7-486c-a3e5-8cfc7b6ccd6e",
        "cursor": {
          "ref": "092e5556-c54f-4636-a1d3-cfaa0335f36a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0290383e-e92b-46ea-9ca4-7e0537ccde36"
        },
        "item": {
          "id": "260b24c5-37a7-486c-a3e5-8cfc7b6ccd6e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e422fa11-2905-4b49-9e64-6e036c826bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ccd23d-dc69-4a1e-932c-3c754533bba0",
        "cursor": {
          "ref": "83428b7d-e830-461c-a4f1-436f8c31302c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d7e33536-8af4-42b9-ad9e-398f43cfb406"
        },
        "item": {
          "id": "19ccd23d-dc69-4a1e-932c-3c754533bba0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "03312446-bd2c-408a-a916-1217c5ab94fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6b7e3a-a2fe-419a-b36d-75f71a378fcc",
        "cursor": {
          "ref": "ce3dc4ee-d09c-457f-b59a-c9fb9536db8c",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "53aaf30c-fcba-4f34-83f5-c572cb79a589"
        },
        "item": {
          "id": "1b6b7e3a-a2fe-419a-b36d-75f71a378fcc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2e2727ef-c2cd-4c28-b8d5-8392b8a46068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06693481-363d-45e1-9c43-aab63734e955",
        "cursor": {
          "ref": "f11ffb40-d36f-4996-9c7e-c864d518a33b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "63a96cc3-8ac7-48f7-bc56-cbdaba4f41df"
        },
        "item": {
          "id": "06693481-363d-45e1-9c43-aab63734e955",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "271fbd71-db9a-4dc4-a71e-10f161b9b235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a304c6-077d-40c2-9f2f-6b6e04b90c31",
        "cursor": {
          "ref": "533e2091-dd86-4e04-85c6-7b2ee7ef33d7",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1372108b-dc58-41a1-93e3-2ab9438104e2"
        },
        "item": {
          "id": "c6a304c6-077d-40c2-9f2f-6b6e04b90c31",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c41f75fd-2f59-422a-941a-204f850a38d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87844df5-a2b6-4e68-b0ec-0e01825f23e4",
        "cursor": {
          "ref": "00ca85bc-98a2-4cdf-904e-890f5a7dc746",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d2b1612a-0a69-4a56-a67c-8f204b65551b"
        },
        "item": {
          "id": "87844df5-a2b6-4e68-b0ec-0e01825f23e4",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a19899e1-60bb-4c42-a9a4-5e3f758c8a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f19c72-bf38-4bde-b5b4-40b4d778fff0",
        "cursor": {
          "ref": "9523cc99-219b-4e26-a220-683c3b6a846b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3c881338-aef2-44e6-81e9-ebe25d1db800"
        },
        "item": {
          "id": "62f19c72-bf38-4bde-b5b4-40b4d778fff0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3b2c3bc9-1bdf-487e-a909-c1c9a43cea15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5b9677-adaa-404a-800a-a5d35d8e85ab",
        "cursor": {
          "ref": "7b1690dc-455a-4c96-8261-ce964e2b4462",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2a184d80-c88e-4c34-b34c-49e715efe255"
        },
        "item": {
          "id": "0b5b9677-adaa-404a-800a-a5d35d8e85ab",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2beda576-4741-4aa1-97f1-065a68eddd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d11172-abbc-4a3e-9ec5-7d0af25551ab",
        "cursor": {
          "ref": "ef7b7667-59f7-4ce1-9f57-66026fb9c3c0",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5f89c21b-5b0e-44df-939a-5b76a4d9f3a9"
        },
        "item": {
          "id": "e5d11172-abbc-4a3e-9ec5-7d0af25551ab",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "78503f36-0ac7-4ba5-8df1-7d2fe5139a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e6aae1-94ef-447e-b342-2ed9cb80fb77",
        "cursor": {
          "ref": "f0cd7817-8c48-404c-8898-1398150971c9",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "53d8836d-5d39-4ed2-b92c-b733fba7a3b9"
        },
        "item": {
          "id": "d1e6aae1-94ef-447e-b342-2ed9cb80fb77",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2b37b671-15c3-4929-978f-7ea1e3356737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c54dce4-32f4-4494-b115-74451d0dff12",
        "cursor": {
          "ref": "0dc1852d-8bd9-48d7-92da-ac5171dc496d",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5212746d-c95c-4963-801b-606a3aa9b6d4"
        },
        "item": {
          "id": "8c54dce4-32f4-4494-b115-74451d0dff12",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b52b12de-c8e5-4663-802d-8499eedcf29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5d25a4-ae53-4c45-9272-5d0a74d5881f",
        "cursor": {
          "ref": "30afe032-87d9-4d47-a76c-706f98525cb1",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fc3b183d-375b-4210-a8ae-530fccd15c6c"
        },
        "item": {
          "id": "ef5d25a4-ae53-4c45-9272-5d0a74d5881f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "380543cc-88cf-474d-9ce2-f111a90e259b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62b2851-6d09-45d6-8ba3-f2492eaedf4b",
        "cursor": {
          "ref": "f0d0705e-9dab-4b05-aebd-879443b764c2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "69bacf74-7921-4c90-b40f-bfed03528336"
        },
        "item": {
          "id": "d62b2851-6d09-45d6-8ba3-f2492eaedf4b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b1b2dc47-7fab-4485-bd53-b4b291095aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cd7448-2328-485a-b918-2453dfe048b4",
        "cursor": {
          "ref": "b5cbade2-a441-4a3b-864e-54a28a2c42dc",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f427bb36-2585-47a4-8cfa-9c73379cfa5d"
        },
        "item": {
          "id": "e9cd7448-2328-485a-b918-2453dfe048b4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c9f5d023-5d36-47e6-a6a5-17d454f548f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a740bd-8129-4bd4-85bb-e0a0b0b1b4d0",
        "cursor": {
          "ref": "77d5e29e-b208-4012-b4e7-bcd7d9677ef9",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f46e08a8-9d84-480b-9662-9c6f1f4939c2"
        },
        "item": {
          "id": "86a740bd-8129-4bd4-85bb-e0a0b0b1b4d0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "366d3900-6e1b-47fb-a654-5b6e28a69558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81acc82-df21-4b03-bf0f-06b0619aa351",
        "cursor": {
          "ref": "1b3bfcbd-c95f-4278-9a4e-203d34e7f11d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "041860c3-d737-4bde-9043-17bce2e65f99"
        },
        "item": {
          "id": "a81acc82-df21-4b03-bf0f-06b0619aa351",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3512975c-4359-4e4a-afcf-474087a174b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa28656d-1394-448b-8074-594fbd175e83",
        "cursor": {
          "ref": "3e426951-a839-43e2-9da8-b74bafe8ae14",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "224af866-2203-4754-87eb-cb2277930599"
        },
        "item": {
          "id": "fa28656d-1394-448b-8074-594fbd175e83",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "08ebf7de-4b8c-4f23-bd25-d26c7c8f915c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0748f1-01f9-470d-836a-055fbf47540a",
        "cursor": {
          "ref": "c5804f91-8418-4e55-9057-54fc0497e674",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f5dcae10-b999-42e0-b1c0-3768de0af2a5"
        },
        "item": {
          "id": "ce0748f1-01f9-470d-836a-055fbf47540a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6d994ebe-98bf-4819-821f-e95ec4969003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b85b40c7-def5-4f87-8242-49e917d1b339",
        "cursor": {
          "ref": "445ee8c8-0c00-447f-b134-70b13ae0b592",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "42a4c06d-145c-4e0a-949c-fe5f3c76d4f8"
        },
        "item": {
          "id": "b85b40c7-def5-4f87-8242-49e917d1b339",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bc179bf7-fb17-4adf-a5e6-4e1720e7c7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cab33fd-6300-4e59-ac88-006020308051",
        "cursor": {
          "ref": "48a8d0b1-67d5-4987-8114-08afb6264913",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f5fd3ba4-ae97-415a-aa0a-6627525e3d32"
        },
        "item": {
          "id": "3cab33fd-6300-4e59-ac88-006020308051",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ba415604-a82b-4649-a0f6-04838f142a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b9686a-2822-4780-bec4-64f4f6fb63f2",
        "cursor": {
          "ref": "862ce0ff-bb59-411e-a804-f8dee2b38def",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d3fe0fa5-3e5f-4152-a82f-a3d6f3933896"
        },
        "item": {
          "id": "f3b9686a-2822-4780-bec4-64f4f6fb63f2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "019cfb68-65f6-4f69-bdb1-b18a0f40cfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba875f4b-aa3e-46aa-98d3-41ea13a9dd32",
        "cursor": {
          "ref": "cd884a08-b1b5-4307-bac4-88a8a268eb4a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "bd8be785-5295-456f-a188-c32fe96ce314"
        },
        "item": {
          "id": "ba875f4b-aa3e-46aa-98d3-41ea13a9dd32",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6f60ac3a-b21b-4bcd-9269-ae1e99b24708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9764176-a16f-44c4-af40-22e61b222009",
        "cursor": {
          "ref": "02e8d4cf-b01d-4ab0-af48-e0ca1f1bbb60",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "12e1e580-152f-4450-9dba-87e8bc322bba"
        },
        "item": {
          "id": "c9764176-a16f-44c4-af40-22e61b222009",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "253baf8a-c8b6-487d-acc4-8f336a1c93c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8627e94-ba49-4259-a8cf-01e9a68abea6",
        "cursor": {
          "ref": "4803328a-6092-4114-b0e2-d3731fb16073",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "03941859-0f7d-4f59-942f-899c55c3a3e2"
        },
        "item": {
          "id": "c8627e94-ba49-4259-a8cf-01e9a68abea6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "16a98b93-2317-43df-96d9-a46fd7bfbaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1d6aca-2dc0-4074-8c2e-55e2e3de4f18",
        "cursor": {
          "ref": "432f84f5-bc07-4a1e-a6e5-d234472c0ce4",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d5fe391f-60d7-4ebd-bd3f-ba6328bbf40a"
        },
        "item": {
          "id": "3c1d6aca-2dc0-4074-8c2e-55e2e3de4f18",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dc91f4af-1b24-4238-93db-623a025fec7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e204fe89-497e-4193-8648-1d7af918774d",
        "cursor": {
          "ref": "8c8e45cb-2528-4df7-ba26-fa5d58458c79",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a97aea7d-1f99-4e5b-b4fb-a268eab6a5bc"
        },
        "item": {
          "id": "e204fe89-497e-4193-8648-1d7af918774d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0eb055bb-fe24-43be-aeb7-8b167c9757dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eaadd72-1908-4522-af2e-f1fb8a2dce3e",
        "cursor": {
          "ref": "93cc3518-3399-4ee3-9a5d-4205eac103c6",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "3a0460f2-18dc-4868-931a-92d775e91a22"
        },
        "item": {
          "id": "8eaadd72-1908-4522-af2e-f1fb8a2dce3e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "54001feb-25d0-4e53-a02a-f817118f5b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153bba73-5133-4448-9158-ca99931e2134",
        "cursor": {
          "ref": "8128638b-6734-47dd-9da5-7686d5789a79",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "15bb190b-b30c-4dbd-9558-adc77be20980"
        },
        "item": {
          "id": "153bba73-5133-4448-9158-ca99931e2134",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4d73d65a-92cc-4a9c-8139-1a52455aeecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "702b7d6d-f667-45a2-bc63-e9c625ccc1e6",
        "cursor": {
          "ref": "464966ad-80af-4fc1-9b6e-263f6de934e0",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0f0ad420-6714-4412-a2e1-feaeb590d266"
        },
        "item": {
          "id": "702b7d6d-f667-45a2-bc63-e9c625ccc1e6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "22c6ca7e-53ed-4bc6-88e0-369d5afd3f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f795aa-5254-49b6-b78c-1f9c2f024342",
        "cursor": {
          "ref": "035b8840-5a6b-4a12-af40-04073e50d0e3",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "4e5403d7-8c68-4a12-8928-f589b60577c3"
        },
        "item": {
          "id": "67f795aa-5254-49b6-b78c-1f9c2f024342",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8366e2f2-bcc0-4ce8-90b1-7a6baa554fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597a3df1-ad80-4240-879b-48fc9df52be6",
        "cursor": {
          "ref": "e0e606ff-ab11-4333-8e6d-28dc3356d5f0",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6a73aa66-91e1-489c-82d4-7e5afbc845ae"
        },
        "item": {
          "id": "597a3df1-ad80-4240-879b-48fc9df52be6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2065c3f5-320d-4f88-b809-0bdc539d4a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b668e5-fb13-4549-8264-9935bb971e48",
        "cursor": {
          "ref": "e5c1ab81-feb6-41f4-865e-1646d412faf5",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e4857833-f51d-4b18-a48e-5eef8b7f4e65"
        },
        "item": {
          "id": "68b668e5-fb13-4549-8264-9935bb971e48",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "361a36e7-1929-42bf-a32f-29d6365e42d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc445fb8-e967-4279-a32e-1a3f0fe1aaee",
        "cursor": {
          "ref": "6d0ec7bf-9f86-489b-ba87-3e57de65373e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fd581538-0f7a-4993-b7bf-2779ee14e241"
        },
        "item": {
          "id": "cc445fb8-e967-4279-a32e-1a3f0fe1aaee",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "36c29f08-d5c7-4b64-834b-7c9251d59f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206c3361-c00e-4f3a-b698-402fa8057be9",
        "cursor": {
          "ref": "2666cae0-9c88-4951-a37a-535e1221dd9c",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b245593c-c18a-4b54-89ca-7160ededfc25"
        },
        "item": {
          "id": "206c3361-c00e-4f3a-b698-402fa8057be9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9af1867f-86f9-4c42-838f-fc503842cb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50689fe6-9f73-41e6-9cb7-3fec188f2645",
        "cursor": {
          "ref": "3ad1eec7-f4c9-49e7-9d09-e314e82805ca",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "34b0f065-4cc1-4fbe-9475-7c229b43fda8"
        },
        "item": {
          "id": "50689fe6-9f73-41e6-9cb7-3fec188f2645",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0acb2244-6bc7-4b05-9775-2d864dd609a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8f711c-3e70-420a-a7df-44fe6ef26ec0",
        "cursor": {
          "ref": "50976d8f-50cf-46c4-a85b-0bdacdf6c51f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "81ff43be-cec5-42f1-b8ba-29dfe4c61cb7"
        },
        "item": {
          "id": "5d8f711c-3e70-420a-a7df-44fe6ef26ec0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "27007fb1-844e-487a-b9fe-f11723a860ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5fee64-ae5e-48ed-a773-095b04a589d8",
        "cursor": {
          "ref": "eff35be3-b3de-4b31-a2a9-3fc11ae551b8",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5dad50dc-dcb4-4325-b826-78dd249044d5"
        },
        "item": {
          "id": "da5fee64-ae5e-48ed-a773-095b04a589d8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9cfbfa68-1178-4eaa-8ade-d0b32eb12daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2a9fdf-3e94-47f3-8356-b84a83c63ad6",
        "cursor": {
          "ref": "171a26ed-a335-45f3-b625-2ee0d708eadb",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dd55a19a-a5a2-45d7-8335-5208b7c65c55"
        },
        "item": {
          "id": "4d2a9fdf-3e94-47f3-8356-b84a83c63ad6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "df666063-01ba-4f39-a396-bdc88f48f5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97c1f1c-6b44-4394-bb27-e1e598a27e28",
        "cursor": {
          "ref": "8f091c2a-6ce6-4a8a-b2fb-d4cc6006fd7e",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6657fd16-695e-4c06-add5-10cbaf4ec4e6"
        },
        "item": {
          "id": "c97c1f1c-6b44-4394-bb27-e1e598a27e28",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c9806235-160d-4038-b9e4-82e07e300d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78aa6818-e4cb-4b71-a4c5-137a41746690",
        "cursor": {
          "ref": "fb8b0af9-a182-4543-b7ef-2fcd5c4c372c",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3cf1d86a-a5dc-4471-bae1-33e731600afe"
        },
        "item": {
          "id": "78aa6818-e4cb-4b71-a4c5-137a41746690",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0e59c2f9-8afc-42b1-94df-f647673d114f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df30acc9-646d-45d3-95e5-98177f69681e",
        "cursor": {
          "ref": "73803990-622b-4670-b25a-637c32118190",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "5e2c647b-e22b-4da0-b58d-db8f42f66932"
        },
        "item": {
          "id": "df30acc9-646d-45d3-95e5-98177f69681e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "94af85a0-5977-4aee-980c-3aab4a949cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fe2dcc-f3ed-4f53-8bf1-39f4759a6349",
        "cursor": {
          "ref": "9ea3f2f9-fe5d-4271-a663-f6c7faf93202",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "555990ad-75b1-4ded-9c09-cd83a2b07e13"
        },
        "item": {
          "id": "f9fe2dcc-f3ed-4f53-8bf1-39f4759a6349",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7234cc30-4d8b-40be-9eb8-f1ba55599f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7c751b-5d87-447d-9fc3-24bab158140b",
        "cursor": {
          "ref": "24196b1f-e0bd-4873-bebc-b50c7b2f6031",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "2d81211b-ff92-439b-8e39-16ffa3e28a8e"
        },
        "item": {
          "id": "3a7c751b-5d87-447d-9fc3-24bab158140b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "33c30a38-9565-4bfd-9468-6efd770e2c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ffafc2-f093-4aad-b073-a39351dae28e",
        "cursor": {
          "ref": "b3802011-bb62-4733-a70d-8584a44a3528",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "8da750da-e925-463d-9236-39b414f32565"
        },
        "item": {
          "id": "c7ffafc2-f093-4aad-b073-a39351dae28e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bd7effe2-1182-42e5-91d3-9f5d9918d5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45101b6-70b4-40a2-8951-f2bcfbb605f3",
        "cursor": {
          "ref": "455e8f08-1c1d-47bd-8b53-b42983b643ee",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "04b7e784-ebe9-456a-8d28-c612a44b4b97"
        },
        "item": {
          "id": "e45101b6-70b4-40a2-8951-f2bcfbb605f3",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6ded6526-29b6-41e4-93d6-33ecd1e6f359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceae6f2a-0478-439a-adac-f459d0ed2976",
        "cursor": {
          "ref": "6b87c3dc-0c96-4ee2-a3a1-b1fc1673590b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6e225bcc-9147-43e0-bc6a-cd71a4f41831"
        },
        "item": {
          "id": "ceae6f2a-0478-439a-adac-f459d0ed2976",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dd3cb71e-b555-424c-bc19-648f4bc1570d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeb8d0d-99f3-4913-babd-aaab7c8ace7f",
        "cursor": {
          "ref": "8c3717a0-3197-49ac-b287-9b412711dbb8",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5c4e5d42-5bc9-44e3-a85f-0cd65db6e859"
        },
        "item": {
          "id": "6eeb8d0d-99f3-4913-babd-aaab7c8ace7f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1baed458-8210-4b5a-8712-ab74c1b8bf28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f21236-75f6-4c3b-9c22-489b44e5e269",
        "cursor": {
          "ref": "49b428bb-2c1c-4aa0-b4bb-dd3873a150f0",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e5bf3b60-3567-4e3f-9e5f-5aaf15ef50e8"
        },
        "item": {
          "id": "84f21236-75f6-4c3b-9c22-489b44e5e269",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6dfe70a1-0d33-44b8-ba7d-100b800c2e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fafec1-b51b-483b-ab06-dc6f66d5fe28",
        "cursor": {
          "ref": "1799eeb5-731f-4e15-a498-5dca0a1acf90",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "7386aa01-fac9-48df-9f92-30d81f0a295d"
        },
        "item": {
          "id": "c3fafec1-b51b-483b-ab06-dc6f66d5fe28",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "89089cb3-3bb7-4fa4-baf4-e8e4df4f2586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e09660-2605-4e22-a7c1-93999b19a568",
        "cursor": {
          "ref": "e7d94aea-a87e-41c0-bab7-473d5ca1b5ba",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6c9d19c2-ebcb-472f-bb33-e4569ccd6e5a"
        },
        "item": {
          "id": "82e09660-2605-4e22-a7c1-93999b19a568",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3a20f7a3-a51d-40eb-bf1d-785f31452103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0407db-502f-46f8-935f-7095f889cbdc",
        "cursor": {
          "ref": "541f311d-b625-4ad2-a730-8e8dc7282f4a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2487d043-0864-43c1-a74c-9af08b9853bb"
        },
        "item": {
          "id": "3c0407db-502f-46f8-935f-7095f889cbdc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "285cf4f2-406f-46e0-aaeb-d8810191eda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8323a0f9-3371-495a-80c2-13959984d51b",
        "cursor": {
          "ref": "d1e43d0e-4d45-406d-a293-8925fe59b7c3",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5ee93329-3b52-4602-998e-25fd0f77e7f9"
        },
        "item": {
          "id": "8323a0f9-3371-495a-80c2-13959984d51b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8af47661-c096-40bd-9dd9-2eafd3391fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96d45d1-66a4-4106-9135-117b2cf9e9bd",
        "cursor": {
          "ref": "b64a98cb-fd6b-4c58-896f-76fa6c7da927",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fe4d320c-74ba-4fbf-a2bf-12e08f6fceba"
        },
        "item": {
          "id": "b96d45d1-66a4-4106-9135-117b2cf9e9bd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "89a76526-a71d-4610-a543-245df7cbc661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7465700b-5c6d-44f2-958d-1220145dda3f",
        "cursor": {
          "ref": "f2cef056-038a-42b2-b0e5-a00b95f18292",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "72a9cc61-cd7b-4b9e-8e3d-eab65a0d3977"
        },
        "item": {
          "id": "7465700b-5c6d-44f2-958d-1220145dda3f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9bd32555-320d-4784-bfdf-dea8a89ed84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb88aad-dd43-46f7-8267-58c5c018c229",
        "cursor": {
          "ref": "cf916f41-7eaf-4f6f-8a40-3feaf6f59b16",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ecb05431-5fbe-49e0-b1cb-a4db61e86e3e"
        },
        "item": {
          "id": "5cb88aad-dd43-46f7-8267-58c5c018c229",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b3d1aa59-3d1b-42af-9c50-662ef8de77ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f778b37d-8693-4047-a963-f5917ed68414",
        "cursor": {
          "ref": "e4353b82-9b8f-4330-9fc9-0626e04415fa",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e4cc7c40-a32c-4cdd-af9a-b44de514ed51"
        },
        "item": {
          "id": "f778b37d-8693-4047-a963-f5917ed68414",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "558d4c14-01fc-4bdf-9c88-3e83670947c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11e4a92-e177-40d7-81bf-95ea7152ea10",
        "cursor": {
          "ref": "152f893f-d139-4986-82b0-26952c0e226e",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4e96d8f2-d627-463a-af56-d7c5bf542879"
        },
        "item": {
          "id": "e11e4a92-e177-40d7-81bf-95ea7152ea10",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "2e88fe13-f7fc-4221-b442-93687b7b3553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f32b2c3-ee32-45bb-85d4-21efb6b1222b",
        "cursor": {
          "ref": "1ab90fe2-90e3-4de9-970b-eb84d507b59d",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e336b912-edef-49c2-910e-d5d657be7221"
        },
        "item": {
          "id": "3f32b2c3-ee32-45bb-85d4-21efb6b1222b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7972a71d-4de1-463e-b8aa-75f62097962d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf825911-7bdd-4634-b93a-33bf285c6570",
        "cursor": {
          "ref": "421cf21b-428f-4037-9159-cb81651a90fd",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bc5017cc-fee8-4820-a685-3f58eaca7ba6"
        },
        "item": {
          "id": "cf825911-7bdd-4634-b93a-33bf285c6570",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3fa58888-8517-4f11-99b9-1af236ae87fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7d3dd8-5834-491e-9c22-d5f5f502f933",
        "cursor": {
          "ref": "991f99b2-db19-403e-8a12-cf9bbd5426ce",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b73420c3-e2c5-44e6-9d88-7f2990f6eb0f"
        },
        "item": {
          "id": "7d7d3dd8-5834-491e-9c22-d5f5f502f933",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "31cf5cec-6bd1-448f-98bd-bca9445bbb68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a28509-7d5f-468f-9a16-40c86dcee490",
        "cursor": {
          "ref": "e570060f-d711-4244-b674-11fcba586757",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "795c26dc-5596-42dd-a098-af386bf95abe"
        },
        "item": {
          "id": "c6a28509-7d5f-468f-9a16-40c86dcee490",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5d73a7ea-34fd-4faf-800f-060490ca4937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508b5c9b-ecd6-42f6-82e4-7de28937569f",
        "cursor": {
          "ref": "092b328d-0d47-4c15-9e66-edd738d1b98d",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "eeee080e-177a-4320-b4f7-4a8ac414d3ca"
        },
        "item": {
          "id": "508b5c9b-ecd6-42f6-82e4-7de28937569f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "62b8d57b-3d5c-4103-8e1b-a83f3e9a07b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd587d9-38c9-4504-98f8-a7c531189df1",
        "cursor": {
          "ref": "4516da48-cb1c-4b83-83cb-d7eb61641c91",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3958963f-e838-4736-86a0-7e8d07af6704"
        },
        "item": {
          "id": "fdd587d9-38c9-4504-98f8-a7c531189df1",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d1a4ea4c-db71-4bd0-b33c-e987c5fe6b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0bdb89-a927-4ea0-811d-7c32935d5280",
        "cursor": {
          "ref": "077a9ddf-6df5-4df2-8cc7-1a1fc1298219",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "cf5811e5-01bd-4bc2-b065-abb6d8a5dfa4"
        },
        "item": {
          "id": "2b0bdb89-a927-4ea0-811d-7c32935d5280",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "849926ef-7a14-4741-884f-f3b4ada07f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3559d89c-46a8-4003-b741-502fc8875ed6",
        "cursor": {
          "ref": "82b9f7d0-0a46-4b65-b6f6-e7162e55995c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "171f39a9-5edd-45a5-affe-2d1d21dd6f8c"
        },
        "item": {
          "id": "3559d89c-46a8-4003-b741-502fc8875ed6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "61c323d4-f564-450c-a935-da8839850cec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6d22f6-49e2-4b21-b74d-5d14e2fcd23a",
        "cursor": {
          "ref": "aa678869-74d0-4176-974d-9d028a27d759",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1e620979-b0a2-4491-bc3c-0096d27a1e13"
        },
        "item": {
          "id": "7b6d22f6-49e2-4b21-b74d-5d14e2fcd23a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "75e0855c-2e75-4954-8281-9808a79d8d6b",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1352e2f-4990-41f9-9523-6769333f9ebf",
        "cursor": {
          "ref": "7d964540-44ad-455a-b952-866433ac8a0e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "89d7114e-71ba-473e-b797-820f77ff6930"
        },
        "item": {
          "id": "d1352e2f-4990-41f9-9523-6769333f9ebf",
          "name": "credentials_verify"
        },
        "response": {
          "id": "51e7b3d8-5919-4557-81a8-1ecc7cd1481e",
          "status": "OK",
          "code": 200,
          "responseTime": 1416,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "442023a4-8748-4ef0-ba66-360633dec9ea",
        "cursor": {
          "ref": "90164063-c0ca-45ce-b98b-04d094e802de",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8de54cde-ded8-44e7-816f-e4bd4dbbfeef"
        },
        "item": {
          "id": "442023a4-8748-4ef0-ba66-360633dec9ea",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ddd3e6d8-8cac-4871-a4f6-e56aeec230e7",
          "status": "OK",
          "code": 200,
          "responseTime": 1479,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1292da91-7a97-4211-b76a-6909996b271c",
        "cursor": {
          "ref": "16d59fc9-1dbd-4ea7-a1f4-6f0a1f8c8083",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "03da84ed-c4f6-41e6-988e-8cbf1c5692ac"
        },
        "item": {
          "id": "1292da91-7a97-4211-b76a-6909996b271c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4aca8141-4f8a-47a2-8d4d-f5a4e9351b91",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1292da91-7a97-4211-b76a-6909996b271c",
        "cursor": {
          "ref": "16d59fc9-1dbd-4ea7-a1f4-6f0a1f8c8083",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "03da84ed-c4f6-41e6-988e-8cbf1c5692ac"
        },
        "item": {
          "id": "1292da91-7a97-4211-b76a-6909996b271c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4aca8141-4f8a-47a2-8d4d-f5a4e9351b91",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a953a64-3ca6-4cf3-9caf-6b902807552a",
        "cursor": {
          "ref": "282ff50d-2fac-4b18-827a-fc88083c139a",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "319a8d8d-2de9-4755-917b-6d7a744be818"
        },
        "item": {
          "id": "4a953a64-3ca6-4cf3-9caf-6b902807552a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8c553b43-474d-4652-bb66-ed9e56d1d6d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865bc84b-b23e-4d99-89ea-e066b7162b50",
        "cursor": {
          "ref": "01639996-f13f-43a0-a12b-24a6bedf7dd2",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "be61682c-9ed0-43d5-bb4d-f65e7cd9a5ee"
        },
        "item": {
          "id": "865bc84b-b23e-4d99-89ea-e066b7162b50",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ba80c571-71c2-4a06-9a42-0a65000481b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}