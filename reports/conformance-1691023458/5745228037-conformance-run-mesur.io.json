{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "64f9c151-5430-480b-8b0e-411ca79b1cf5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4931b195-0f12-4cf0-ac0d-a0ae619d67d9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6cbb8e84-5e87-4c77-b4f1-dec5e2882b13",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "345758b6-e35f-4561-87b3-b1cf3ff3d7b7"
                }
              }
            ]
          },
          {
            "id": "ba081800-5e0b-4a75-ad1c-5be1ff50d9fb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf7d0d82-460e-41a1-bc51-b5a8364e29e9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "57a5e3da-f92e-4224-9bd8-d195d80c5647"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e22df77e-f344-40ce-94d9-efc4e7014431",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6c1dec7a-b438-427f-bf91-afc614b3137c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0757f9f0-7a4d-4b22-96ac-6eb5836dda78",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab9eb4c9-db7a-45cf-b7a5-b47450c28999",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f72b60d-235d-4410-88f7-e7a253b24ff9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b87aa713-9bb8-40d8-91de-f9b2b4460d9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f2fac78-3dc2-4e9d-8124-3dd0054a8ff9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "67a193ab-2a10-486c-990c-21ca83a3304c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "328ebc83-2137-4ddf-9457-2ba353ff585e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d6dbf6b-e9a6-4185-9ce7-36f722395540",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "249722f3-3fa6-4487-aadb-b69fc28c1db9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d241744-9a59-4116-b554-cc3fcde39654",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01fe2668-6370-40bc-a539-f3f13feea461"
            }
          }
        ]
      },
      {
        "id": "e57fa711-7baf-4a43-bbce-c6799a3fbad8",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0cee47bb-b8eb-4667-ba19-7ec4e70c7cc7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "195efdae-ace3-479d-a67c-5e7f771bf6e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0bb3a43d-f6d0-427b-905d-e014228cd8db",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b1604a-251a-402e-a047-4cc97391bee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1958102-1602-441e-8f7e-239ba3d9efdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12879cfa-7b03-4c1e-8efd-2b70a0cf2fbd",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5995eb-32a0-4023-aa2f-d64d9a86bfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a21c74df-337d-4c6e-9c33-5fded97a3f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9f7631-11b5-42f1-af02-57c65686196e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a931b794-9b48-444b-8efd-ece0491341c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "233010cb-abc7-4c3d-b0fe-7c33fe272f39"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56eb6d10-5d78-4cda-a6b4-f5b0ddc317d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a44057c-10ac-4e3a-8fe3-db51eaaa7c5d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25229af-5370-480d-b45b-6b142d3999dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f870a82-21d5-4f71-81dc-ad4b402e8cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea2ad26-c62a-4133-b47c-10549789aeb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07c66dc-8e95-4311-a5e5-1685d44df3a3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "36fa4125-b3b1-4242-afcf-a1182abb46a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d55d284a-4da0-48ec-8eca-3bacb089d96a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c51c560d-56da-41f3-b749-64e62a99dbec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "07d8f313-8edf-452d-aad9-6000e5ba5ccd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "06f97956-4f89-4d58-a6ca-3dc83abdd2bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "80c7cd8e-2328-41b2-8c30-83abde883814"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7c55548-0e27-466e-8d01-547498fa19aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2c85c1a2-c7a2-45f3-8794-147d58cf2318"
            }
          }
        ]
      },
      {
        "id": "bc212e70-ab7c-46fe-8642-58b606a521f7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1cec80ba-2f80-477d-ba34-149df3d540e7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ba84a8c-bd3b-4a31-b4fc-2bf8aae148bd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0603fd05-4595-494b-9764-4b5bf8d0982b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82edf5e9-c649-4559-bb98-2cacf2928639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b6dc165-4b45-4d90-9119-542276b8a1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c88a96f-2281-4f00-bca9-e96ff8d5da45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38c9b65e-a51c-46d9-bd6e-e00fdc078b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddbedf9-3c0b-4771-b22f-35428a38893b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f2903c-aad2-4bdd-b92d-17e625c9fae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d81cd9fe-9296-455b-82b7-662320437c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cdf3b50-0445-47c3-90bd-b5774478903e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9604fdbd-c54b-4d10-992f-ecbc070e9493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f45c12-3e1f-4a3d-8a97-c5725144f4fd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9d53b0-7e05-48d4-89bf-0cae74674783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2dae47-e0fd-4622-8970-b1c5e11fb5e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb32db25-fcfd-48c4-83c1-018e365d354a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fdfdd593-9083-49b8-a421-a1f7121c9f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aff29a9-8542-4f07-a4f8-e4edb4468dc9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85780aed-8f36-4439-b79b-b6d6bad641e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe12981-75d4-40a0-badf-97a861ef987b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ac015c-2f55-4df4-afe6-72e14e05bd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8956f185-3a7f-4f01-9fce-d1ee470a8f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8154f5-60ec-44a0-9de5-7b9b387f81f0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78940f8-74d9-4194-86d6-9a634f733deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9252dfd8-1bed-4a20-9c43-fcf7d8e5f3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43d2014-aa9d-4b5c-8623-8aa0aeba3eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cdc29ff-5530-46db-a0ba-792142820854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cccf2d-3b6a-4923-9fd8-f9a097a61ff5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b587fbcb-16dc-4f12-a006-86d9efebdf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc574af-3a21-4660-8b8f-8dd281a3993e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27467399-c26e-415e-b9f5-a4eaac77a960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66128f59-38e5-4830-bb42-0ac60dc75ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f825879c-4822-4f95-b498-2cd96417828e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c03d54c-37e8-4983-a794-e9ec1bc6d94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb44bb9-c675-4e30-9b06-88f303eccb6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691b4151-d7ee-48c3-a36b-cd7d4757ed81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1814267-8078-43d4-a0f5-49931c9db9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a746bb-2035-4c38-8c99-7211cddd313a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3259acdb-1eba-4bac-8dcf-554c48c5c3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd04a0e-f3ae-43eb-8536-cf6b9becdc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bda0d8-e420-4d05-af09-4ac060e75484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92837531-ed65-4e54-8ddf-361853b4e200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b73734-e673-4069-b0d4-ebf62a5cf5b9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5dd75f-a9d9-405b-ab44-ea7cf41599c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558d39b9-84f6-4454-8774-71f6c4dc6e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ff1a47-190d-4a56-bcae-cfc98f616c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb5851c3-c79d-4040-9a44-8715e0f5cb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb04f9ed-4152-4908-a162-2d7bfb6a8f45",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77727e2-4589-49ae-ba75-d2ccd7fcbbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4b52e0-8a4d-4fcb-b573-dc179dfd2954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ef6218-5bbb-4def-952e-02f717959115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d52cd91f-5b44-42ec-bb1d-f252ff382276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df4210e-bf8d-41a2-b04d-b6256f4a4641",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c22ef1-8393-4aab-970f-583e2eafdde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd90b628-2a61-4bfe-98fc-01383d0ddd58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c20ba0-ec62-47e5-9287-bcec0fc8bbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31dbc842-741e-4772-9d34-995fbcff4df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "239ea6df-819c-4bdf-a862-999374e64229",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff33eaed-f377-4bc6-9990-423d630f909c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e28406-6c4b-42e2-8437-4e55ddef8fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601c701a-e1e6-4994-9d70-45cd41b5da2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9259cf7-bafb-4e98-b8de-94b25f1f162e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544ccb30-08ff-450d-909b-ecf9c056839f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e69d66-0684-4341-b3a2-616b552e4560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a9778d-0e7e-4d7c-8e17-bbd55290a92d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db964956-9f20-46ed-a717-33e5ddc203b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d229106e-dbb8-420a-8af3-85415ea10b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e2ead1-6b1b-408f-8352-317d619d2b10",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a91e84-81c0-459a-b907-b097589fe6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb015a01-565b-4206-82d3-b2932f414d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69854736-2996-4978-a8d8-0f5a413367c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec4e1693-5a47-43f5-ac51-11524b918e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ce06eb-2793-4068-b2ea-54d3f1fc39a4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cceabfe-14af-4ad4-ac62-9c919281fcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "684771fb-41b0-4877-a36e-20db8078edb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b898538b-e0ae-4da8-ba14-4266e480ff0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71beb296-8b2a-4364-91bf-9cfe9a0611f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2406bb6f-1dec-4eb2-a896-d4dbe73da369",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd51f5fc-c422-4c69-9c22-299e3f4082fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2097f13-d504-4fca-9fbc-8d29bee86d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5d5876d-4bd0-47ae-af7e-dac977ecdf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6620bd1d-bb00-4b1a-b7e5-35125e63329f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376009ea-dd44-4040-98ea-a810b7489659",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e1c685-0518-415b-8680-0e0e698b9e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efedce76-3647-4ee7-afdb-713a5d3a0c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6468a01a-1cc6-4a4d-8f90-2e4c89073b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba694a7d-d066-4915-83be-986ed42345b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899faf5b-d6e3-4e58-9c8f-b0cf66b09f34",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8bdd19-0fd4-4a90-9a49-9b54d209d5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17613f1b-9253-4693-9941-910b125ce970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfa2831c-6dae-4d00-9443-42fdd0d7a3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4d7847-a579-468d-8b10-dc86daccda9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eda2e59-ab0b-4fa3-811a-8b7a4d2f8c33",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12360553-06a7-45bf-a3ed-8d66dc5e3c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92587d7-47f1-4ff9-b37e-9d28d87b86de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decb11aa-cad9-4abd-9a1e-d9bd9630d520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddf4902-aa41-4138-b7fc-b30f1cb7060a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e0a320-96f8-404c-ae81-c375b1d0a984",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14ed9d6-7596-41c8-b559-3fbc4bec5e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e4ac5b-6ff8-469f-a35e-a7a585342b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a30ee8b-41e3-4593-a643-dfe6c37286b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f270a53f-ac5a-45d6-bd11-697d4b406b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7682d120-ac08-4701-9102-18c4a2bbb224",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e9288b-2186-4631-8202-6101dd1e7b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f3ae2b-808a-4bbe-8ce5-4c32e73dfc13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97d073e-dbcd-49b2-9bb2-4d63b3f1fa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a2ad1a-46f5-40ed-8e37-5594cc9f9537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64050bc9-9229-4aa6-9603-fc92c8e31c94",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5c8413-f4a4-47d8-8148-e24a18880b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6002cd-e8f7-46a1-a175-19ecf20d587d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f81854-372a-4b15-a925-a0c2b4495530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a94e726-525e-48df-99e0-2921275a0a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f416da7-e790-45ad-a8c2-ef8c641a5f13",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1333baa-1fab-4f04-865f-a432cbb08ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65ad5eb-2785-4ad3-a207-59c526afdc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89cb736-b201-4b27-9654-1131d128b18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7d699edc-f746-4d81-a85d-390a6e0fe9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b62fbad9-e7c1-4318-8bf2-561149cd431b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783d8395-25dc-4114-bf2f-ac4360d8a0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239f6611-8bde-455c-b5d5-2d0557c50d39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ceb870-0ab2-4676-ada3-c8328733955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2819ebdb-59e0-4893-bc74-adec6170b064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "605d7539-5421-4af2-ae83-2760be038e37",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418a6e40-3572-4b09-b792-f437cadf3e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25d401e-cee3-46a4-a383-ae22b82fc1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e612b0-ce54-4b59-af45-6bce6a7a6ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e646687-c259-427e-aa8a-edc5a2be572a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e07a18-7ca0-424e-9054-a12c3c1142cc",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29f2a15-7034-4fa4-8478-777ed0855aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bbb80c-79c5-4ed2-94dd-9a698184c0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0e2478-004c-4132-9d0b-f1997220a313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "542a58d5-cf8e-4580-8cf9-7c0686cec9e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bea556d-d436-4bcb-9aca-b9194c555119",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bbc81a-16d0-41c5-8b08-97380939e7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f7b5c5-369c-4014-9018-eb08f38b18aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735a0cca-832b-4998-976a-9e0f0b6c1c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbe909f-4834-4b2a-882a-20974310d9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8961756a-104d-43f8-974d-8fe8ebb632dd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6cb24f3-3094-4d55-a357-b4b755cfb2b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ee487e-ff74-4489-b9dc-a64c9f4f6490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca1457ab-df03-49e9-ac96-752562ae893e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51335a8b-0374-4d36-a298-5b6800650ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c494482-7534-4ca9-a93d-14e7135cdc0b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "099d5aef-eb33-4d03-a054-6b14db6161f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649a6bc9-3028-42b9-91db-01e6c4d6ebaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f69796f-4043-4251-ad08-8f945a4b1afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc076725-01e3-47fd-8642-2edeed4ca69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c2911b-02f7-47ba-99e5-982221928478",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d370fbdc-d41f-44aa-bfdd-19d418809780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "726d3c56-a6ea-48ad-87d7-d609d171359f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5466e5c2-e8ef-4e50-ab63-60d79482155d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a55a4f9-46d6-4a19-8d88-ef3bdb58d43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55b21cd-c222-46ce-b877-996f78a99c24",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f7882a-0803-4b61-8144-2b6b7f05313f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe700293-0e49-43f2-8de7-dc3ab87adac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de81f6b6-1806-4863-af76-6326623f9115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c12b81ed-8b16-4430-abae-bf215be735cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076f2855-538f-45cb-9c2a-205d9d2e099a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc60f01-bbbf-46e0-8c32-f6af5243b9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa89eed3-f08a-4414-b3e8-0ab99f336a16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46d001a-d96b-4e37-9f99-778fe96705a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa82625-d348-4db7-b79d-96d7451e6335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bc05f5-e053-4d8d-8c6a-9dffbbf38236",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f91dfa-8dad-466d-8a28-1b39219579bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c43b9ab-5508-451f-ba73-7edc153c69f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6d28bd-2ddd-4114-be50-c19c957c95f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b57c00-7aec-4e0e-9613-c27616293a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c662ac-9efd-44c5-a04d-80e0d4b5cabf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c82a96-f1b7-4c20-9341-a49f6bc9e567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d6e91d-b0ef-4295-8dcb-80605537fcda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f22c116-87fe-46fc-beed-47be62912713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b525350d-df2b-41ac-a769-79070fc3755e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a94885-6f00-4b20-ada3-dbe7b2523dc5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd1c108-23de-4443-b9e3-b3768a621564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ce04e0-a0dc-4293-9414-aeccc4d85d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63ba610-23e9-4a2a-bddd-f6ffade10546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7503ae-c2e8-4025-845b-bcefef23f29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becc0a81-d5ec-4bfb-9208-cc7222da637d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a005c8-d559-4d39-bf24-fe8e9189e3dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b388e93-86a8-47ec-ab7e-9d2d17ed5102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8647797-916c-4cd1-8fae-651e3ca2fb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8283d7d-4550-4294-9cea-729be907d8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29136e2f-ee31-4cfb-9a47-b64031abdc86",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb51e53-53c2-4f6d-acb3-43c16b027da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50980fde-f7d9-4a5a-9169-7de03c55e6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb596450-7b58-405a-bd34-64d856fecee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "750f6a25-b22b-4a6b-8db3-96d77d2a1bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0b0ad6-f8a3-47e1-84c9-c443718b0108",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9fa9e0-969b-4ea7-b13a-47814e166ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f89309d-ebab-4c60-bcc5-38ae56bc7e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0a9b58-aabb-4de4-92a3-16c9e88f08ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0178366d-5367-492b-8846-96b09744ff27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037b4db1-32fc-4e85-8fc3-21a91906a5d4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6d58f0-798c-42ed-bc12-abce4450fba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b777561-ff82-4a5b-bd08-3f0937ef16f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a899ec31-8599-4f18-9044-f5c654cabebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cce5cf21-551b-4b67-a3e5-f53f547bde59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c2a236-e971-4aac-b092-156091f9c3f8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ae0692-449f-4145-80e6-3d230b00f6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3891ca3a-eee3-4280-a084-12613a82d329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd165a1-1c0d-43f9-8aa8-33f009c07228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fd40fa-2184-4c12-8e7a-8068d890eb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38124404-af3c-4462-892e-da8c3e1974a9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd415b0-5d35-49fa-80fc-95760ea01d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2dbabc-ff6f-40e8-a8ad-417e1797eaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468a89af-2466-4b68-9c62-b36aa6a21555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "98ad8407-4471-4fe9-9a3d-593841d76d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792ce19a-fbc0-46f0-b9a4-d3b96cba38db",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8794e59-eff0-4d7a-8d27-bc0a03acea17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435d5311-5e70-438d-aa86-d170598140ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bed8471-f3a1-4660-9c2b-1d6f607c95a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cacb07dd-6d28-41dd-8478-230f667aa553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163e30e7-4ba6-4b86-824f-1670a78f9c96",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058fc872-115d-4dd8-af93-6ca722ec228d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023f77db-48a9-48fd-bed7-0318880e544d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556fc833-5cee-4169-a789-fabfd2cf4cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c35c36d-8240-465a-8fc3-6c47efcaf83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "586e07e5-93d8-4d89-9a9e-cf5263456de2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5acd85-88f8-4956-a2e8-bb8a1c7fb8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91084389-05dc-4d4c-9d29-dac215db983f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f2b6d8-e1c8-482f-981c-51fefdd18d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd40a62e-66b3-46b2-bcd1-f05db71d7d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37f67f8-7d2c-46d2-a729-be7688ca25c7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a7ead7-a902-4e6b-bd8f-61e65f89fb56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e4d8fe-5333-4b08-9f0a-9ec53a9e5a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484b388b-35e6-4cb1-b93e-7a3b5f173b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f548a830-28ad-4cd0-9f1c-bae0e5868a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d845d38f-54a5-4279-ac5b-0ba61dd5f44f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8f99be-6625-4df1-a8ed-e24c81b00756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa8f734-9120-4cec-a900-566aae9ee244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fee0377-d1db-4e4a-b7b4-34ca45c049ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccab381-2c44-4323-9d7d-f29069c04c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e62a88-f6d7-44bb-a0f2-528d6563b0a2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adba1372-0030-4794-85d1-52695094be64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33944e04-0b5c-4c95-b77b-aec0a96ab2ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991300f7-e3e2-429f-88ef-00b3f6f53cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac37850-57f6-4b96-b2bc-b7c2a94ca619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67ae12cd-1a6b-4990-9c8a-a12ea45098ca",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746080cc-2558-44f1-9aac-964a9ec28f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dab86f7-7ee1-4ae7-a0b3-ea656739e2b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed5a9d6-a9a6-41e9-ac61-bdde58fe4d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e2e246d-1c07-40b2-add7-f08c0f429f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee0d3f7-7d8e-4d8a-ae99-206fab3b6f42",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e538e4bf-1278-4656-900d-0d72327dc7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ae1488-61b7-49b9-96c4-60cf34cac3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e475d1-5cd7-4bf8-8cf1-be076dd6f7a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "878cbdf8-e572-4c68-905c-67b9442df9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e706489-736a-4909-8f32-3ac3f704e28c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c641d133-a5c3-44e7-abfc-da4548c880d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f12798-6cad-4ba4-9a35-8cf3ecf30479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5afc4e8-0eb5-4844-8e0d-e5715d3671cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13d6abf5-905a-49ac-aa7e-6037685a417d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae01891f-71b3-4abe-b117-aa97e92aa4f6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db23121-5b11-4c48-906d-1ac4678bad53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42c564fc-c0de-4140-9afd-c4b9fd16b1b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0af944-dd6c-499f-9f9e-c08d388bd89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf43056-5c27-4fea-8359-7ee25a002174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45de5bd9-2981-4836-92ae-884a03c682f7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f98a864-06ca-434e-abb6-3195d126743c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd1ce99-c3fe-49c0-b528-fcfc3cf06c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd300c49-3939-483f-8ed9-d5c52acccb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "331de1a9-b9f7-4a0d-9bda-2f32f102d82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48ea5c8-7c7d-4059-ad29-9c49e29a947e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d0052c-fc1c-47eb-a0c5-cfb6d9d4ac02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4506cc4-f6a5-4a19-9358-94ae84bd8603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9900d2d8-4c66-482f-85ac-9cb3768d6408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37215a12-0d82-415d-ba49-9d314aefd7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a88a995-9f5a-4453-a905-79c3dc51a4d6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e4506d-e65e-40a8-8538-3c106a8cd540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc72cf78-29b8-42f0-9244-12916f1069d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79dfe39c-e263-465c-b0e3-0dd143ea543d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2391b72f-2dc6-4e5f-9eb6-02813fb66731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cefd79-e3c1-4bfb-b2ee-77f576a85278",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0df3e28-2c33-49f2-9ba6-a2db4194ae08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f102c883-cedc-42b1-bc7d-35036198aa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fdb5b7-f0d9-4fca-9212-b80aa58036ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb0f2866-8b43-4861-a92b-cab76273892b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c333d42-6b80-41cc-9ec0-507bcb28ae62",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d055b7-c844-401d-ae8d-eb3f7a58bca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b22d9f8-6fe8-4bba-bdd9-a802c5d48547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ae995a-b8e0-48c8-aa99-be00dcd53927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "13366fad-ebc6-4afd-91b5-456517e8651b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42db549-1d74-4b1a-9834-db1255aaca09",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38004add-99cb-4a3e-bd47-2f3df2dcc994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9308af1-82c7-4a12-a166-70791b9c9c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5fb1e8-96ab-4139-8223-d80e7da5db50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "76f5abd3-ed73-4336-a7f4-28b5fe8a2905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03a3db9-979c-483c-b6b7-620945abd25c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61495276-06fc-4dfd-b54f-0d4b95bbed54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b5398a-b407-4961-a553-0d4b7f7e72fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd371ae6-edb8-43c1-a0b8-6e73a0500617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2034938a-1e77-4a4a-8b28-cdad6074ae5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0261e2b2-89b1-42f5-8e20-d080c0c263ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2c5a9f-b113-4254-a41e-ab4f7ee71eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943cb19e-8f60-433f-be93-8d5c81d13fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec65f2a1-bfa6-4287-9938-d4e1d6b073f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a005df19-a7a0-4334-b1ad-dedac803a885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60526223-b010-447e-bef5-85de74aae46e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c5e885-b931-418a-9617-abdd547fb0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab3628c-716a-4407-b294-1881bf1c3a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874fb208-52bb-4562-8ed3-92a84ffd284f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f2db2d2-d585-4178-a945-2342e150db20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "679b9fea-4339-4176-9aad-77a953a98796",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0084a97-5431-492d-ba97-5f4715a6f5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6467b16c-fa83-41c8-a162-ef538ed52fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64437cb0-297e-4864-9f23-9666a79601a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c351a45a-9109-43ab-bacc-5ec5cf544d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8866818a-4a1a-435e-bf94-0271a291b259",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7817f4-4df7-4bb9-b097-6eac8fa30acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce32f75-8764-400f-aa83-56af787f384a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207ff7e5-6829-4a6e-8db2-9ca195adf429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6aa01c7-fa3b-4e69-9759-a646cf6715b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4764ac9f-5eca-4483-9605-fc43f8578c03",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25314440-965e-4892-961b-95a460dd6d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3536db4f-c421-4eda-a33d-8c1b03791ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bf1a99-058a-45be-840a-90a120e08cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "17029a6f-bd0e-4b82-b1c4-9bbe11cc48f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d8480d-2d51-40b5-a51d-c398d5c44d64",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac85d45-97e0-495d-8402-cf75ff599a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca946c77-88e3-4134-ae41-2a9d284f0124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029ecfeb-f528-4bfd-9a4e-77542ae00244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3434e808-3222-42ad-b5c3-44389aa39aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd12d4d-05c3-47ee-80ca-c70b4d9ecf8f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff06684f-c2f6-4178-8339-dd14b5f49c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd30097-9f5f-46e1-b97e-acd2e2896daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca60184-6c4a-4872-9f67-1ceead4dd6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f779e04-1679-43a5-ae63-9cfac161d193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf0a9e0-2da4-458e-bf5d-525786b1623d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d348036-0150-4971-bc5c-b5e2b019de47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6328d15-d664-4837-a009-574931938778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e429563-7824-443c-b04c-1ea81bf87015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1cd45af-5335-4a38-b612-879388d71bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfcb743-acba-4c18-b802-6ab8e6602e04",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e4abe3-cc30-4412-b193-e53e8bc7effe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15c0ac03-deb7-4081-8125-d3c7bf4218b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53033ca9-ebf4-4f6c-9013-e9be72338272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "951c7931-ab83-46d0-a2f7-337d7edfa85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f5b780a-d2d0-4167-8b74-382636fd51cb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bedeb1a-a5e3-4e5a-80cf-c91601ce2bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191daf4a-fe0c-45b7-95b6-dcfa07373646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d2b94b-7584-42bd-80b3-dcd4f7298d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "516f1da5-0b49-43cb-bb72-a89e6deaecd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f9fde42-2f6d-4313-9660-3a6c592f06c9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9d0727-d08b-494b-a99c-07d174c92a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5cc8d4-74af-4d63-ba77-65facbc08277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0067c89-9be2-41b7-9a75-1d760bf73a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b707fe4f-0563-4a82-8981-f21dd9e7e14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7cb3b0-be9e-450e-abd3-4b80a8606d65",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ed1e8f-fa08-4947-86f9-627821606b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77dd8e8-4173-4f02-ac02-e42a8411e955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc71978-1a6e-40f0-9eb5-d10d2637caba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfbe5cd-bcb6-4604-b9c1-eabde3e3b910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6230bb6-b49c-4ab2-9708-e5aa04edf6e4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2505a9b-d54b-4d0b-bba2-dbb18c0a2116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b362b76-3480-406f-b23a-813aee119a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa427026-03e7-49f1-a63a-a4733123d0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad75ecff-8fd0-487e-91aa-ced45c95a215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7389ef91-9654-4f2a-a202-c3b9e6e8a318",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6707751d-07f7-4a43-aef6-7da90989e19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6dac5d0-47e7-4c94-88d9-73fa92910197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6413b4eb-de7d-4166-9bea-f707508ff444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c574a28d-5fd3-46bf-9053-da751d773c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a278fe-b9b4-4dc5-843e-ba28138efb0f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e1e9ca-3137-4665-8546-d142ce3e85ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68abac5c-1976-4eda-9731-450bbf0bc6bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55663809-1a4c-46ed-8ff0-24dd928c1ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0300c73d-da8e-4bcc-bb05-d01f435d55f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0d45ce-d914-4019-a97a-92501019baa5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24780536-2720-46de-be64-a11dc04dc2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4409d07e-45c0-410b-bf74-24cdfc509eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51308937-d434-41a5-80b5-649356c16f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe94b9d-9c67-4926-a888-ae20ac54e6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9568e6-65bd-48f7-99af-1af9b19d5176",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a267c47-1648-49e1-b9f9-8b8e84b4b5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f63763a-7353-4026-b73b-898f996809ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d557e04-c67d-43c0-941c-c16602f7a5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3b0a4f-5b93-4bef-9e7a-69c632f86509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f5b093-ac33-4ebd-ac1b-4150a63ba46a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37809bb6-081a-4346-8066-6674b9689aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "083729bf-2cfd-49dd-b20d-fdbe4f010697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115d83c2-d914-4406-9e97-22f2dc6d5fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6c97e2-5877-4f91-b9e8-17ac8a88675d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8588e610-782e-4c36-8d21-2341a8fbf3c8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d223961-9356-4ed6-a616-f87e2728d297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f04234-468e-4aca-9852-066f11de322c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e1c159-80b7-419a-89a3-fba4edaa7952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "64b33176-9975-4a20-8afa-e5a7739836c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91bdc41c-b8c4-488b-b531-b13a75c02846",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7b5fa2-01df-4778-adbc-03d83b16a44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39df2211-97f5-44cd-818d-0a7ed3b2cbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b8e01d-77cd-4cd5-884c-503ac509d64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f506ef0-bada-41ce-9c56-279f6831aa1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cf6126-689f-4ff8-8ea4-9e9d68b38fab",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6797352d-42fc-49a2-a60c-93c58f060a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad51824-72e9-49a9-85b8-fcb007650703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c50f85-2a96-43e8-8262-1452f113b38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f6c920-8595-4430-b514-799659649ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb7d573-37d4-477d-8f34-796a91759fa8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea383c29-90f2-453f-a1cb-25fcaa664a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0e58b4-c3c2-44a2-8898-c37246fc50e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fa16f3-d1f5-479c-8a76-1501b529e9fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77eb1c0f-b438-4d72-a78a-1d431fe7d9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5c3fff-4323-48e8-9ee9-76a268cbb787",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7fc502-b62b-4394-ad51-e8084c42b8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db26be8-8e7e-43d2-bd6b-5daa0a04995b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ed6c9c-c4b6-43c4-800a-9ae7242e840b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6e7675-67f8-4258-bd67-8dccd2dabdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685f7850-1d8e-4b5b-8cd6-694dadf7e9b3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea25d2eb-82c9-4e93-8cbf-eea929ac01c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e368f608-7d3c-4ded-898c-21c375289482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a179ba42-9022-45b0-9290-375379af9e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca5cf5f-51cc-43bc-b485-85615ecb85da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429b397a-0d1d-40ea-be89-15f6ffb8e1bb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2c1a6c-05da-4b42-afa6-2c9a44a8e8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11044977-81ef-4f49-9f39-d5ba730f989c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd98c70b-153c-4918-84cf-0471cb315b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3710e632-0cc1-46ce-a3a9-f290f5908560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733cefc8-6424-4af5-b372-2ea12ff1b3e5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b2ca1c-c22c-40bf-be70-d709e08f1472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670b1e51-6ebd-42a4-b96d-3d05de7f0dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc8f227-5e7e-403b-8720-6dfadbf1295e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad3de1c4-7997-4f1e-99d9-94c65271b461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d296f19c-b036-4a8f-a7e9-14c3b9e727c0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c43c51-2e5f-4dd1-b731-9303a2285381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a9ff1c2-d06c-4369-85e7-16a50dc4f643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc163f8e-7a3d-462d-bff0-6265130384a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1502170d-f26f-49d0-85c1-0f45b74b40e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419d3517-41b6-4058-b620-cba23593f739",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b870569b-8834-4099-9172-a15283f510c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749d7425-c644-4b1d-af2a-169bb042dc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18010b92-97a1-4420-8aca-a978d68b455d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e319250a-a9b3-45ac-9102-3ddfbca5352b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37fc48d-920a-494c-beff-c5f675c03d04",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64af4f96-50fb-41e0-bcdc-fc59b3292ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "883f2cbc-aa40-4fae-841a-89a6815d60c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4b8dd4-c54b-4339-9d81-8c85dc70ff34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "53fd3183-9f8a-420a-a1b2-8e68d8270948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f55b9d5-86a7-4306-88a3-c383c67ea659",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cba40d-e50d-4ce9-865a-71c1aed15d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c576e2-a9d4-42b2-92ee-a1797cd8875f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9538fa69-ec1a-442a-baca-34294f69997e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb5018c-c770-40a5-9348-5ecf81f7f24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a48e85-1108-43e2-8f4b-c3f420c4a8a7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76897df8-c161-4b9a-86d1-e9845838d8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1c37e2-f459-4860-9b6b-026654d24bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa0a3ff-aa0a-4bf0-8dd3-8f88c9768c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "93a447f7-2521-463c-83b4-1dd3e9ef980e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90551651-655f-4ad4-a235-a0ae938ff6b7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2cfb6a-380b-439b-8fd6-a5cc49609a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1428c9b7-9a1c-4135-8c3c-014180f3e291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d75ec0-be08-418b-b362-13cbe671adb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a744991-dba4-4519-b61e-5403b318a6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b31caa-1dc7-420e-bdf5-439d03087f0d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd58849-e981-4d6b-ae71-0e803d45fe6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603d5295-0ea3-485f-b427-6fa354a24cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff5d612-bc96-47d0-b738-d63fe2188d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "738ced75-1251-4476-8c8f-5f5b3837629c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4b10a1-c319-4191-915d-a518f31de98a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b91a3d-82bd-4d29-9075-3d9d3f22aed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "db4f378c-c968-4922-bd1a-40ac342b94d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d40abc-2777-47ec-ba79-4a546e3996a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "034f3bbb-f7f2-46f5-aa2e-d7c11dff7983"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d70d10f4-5421-4983-b507-7ec2c808592b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e371bf6-1b8d-4a56-b9f7-29e28f567e1b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3fd032-1688-4032-b0b1-7e0f175cff6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2932a78a-920b-4b0b-a8c2-1168a725cbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5cb745-7fc2-4d18-bcb4-b8859e510113",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cffb4440-e83b-44d8-bd6c-c1879a03b839"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88aceb8b-4fb1-447b-92bf-8d892defddfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83797e8c-be07-4d49-bbdb-a6667701c7af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "38b320d1-ba7c-405d-9198-543f9cebdb26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d6af72b-666b-44e5-91cf-d7f01a37d88e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5f897d22-cd86-4d71-8add-dac495aa2e90",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d755609-34ea-46ee-8cac-97e463fae45c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1b59b6bc-df00-4e04-b8eb-11f50dc08508",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7ab79bcd-bde3-4fbc-94aa-e30d3ff1da29"
                }
              }
            ]
          },
          {
            "id": "a4d2bfdf-c347-43d0-89bd-17cc1bb7509d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ed1da69-73a4-4c8d-aff3-d33118b64c6a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e49db67-0a83-4f53-9a53-40f97d5961cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7fb784b5-06c7-41f7-a8ae-87b025cc4f6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e0cfaf3-7151-458f-87bd-ee199d7c6b21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ffaf2bd2-21de-4a13-98af-eca274daca29"
                    }
                  }
                ]
              },
              {
                "id": "75d37dd1-3549-46cb-9264-61084c06a05f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b26e39a-3a25-4a76-b799-ca0dc78268db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82884f2b-f66f-421c-8973-686f37f7fe92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "befb74ba-913d-4071-96fc-afdd473a1a41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34997c80-54f7-4db9-a834-45cf59768d47"
                    }
                  }
                ]
              },
              {
                "id": "91691d63-d9b5-4aaa-80a5-fae41d21aca7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37c6a4e2-13e8-4b63-95bd-1bf81a1b5ce2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2fa2ff1a-6820-4b03-9cb2-f8c8f071e356"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89d194f5-6017-4c3b-9a99-ec3f29fd590a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e29e8454-72a9-4722-940c-a3e2649adb64"
                    }
                  }
                ]
              },
              {
                "id": "e809a793-464e-45c9-b623-d0d717a36850",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "203ad319-7963-4d4a-9ddf-5128f81768db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ac16064-1e4f-439e-bccd-e7906f9c63e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd5cd94d-2714-4140-bdf7-71b025819beb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "aacab567-2857-42e5-b3a3-8d71646c5ffb"
                    }
                  }
                ]
              },
              {
                "id": "dbfa1d74-98eb-43fe-9e67-c069346af1d9",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fe2b47f-4a3c-40db-8f9c-65bb0d2c2468",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b210279e-0012-4bd8-8482-814031a98ff7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3f325ee-b751-4bf4-8141-d40210b46b65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4a8f1c5b-e1f3-41c9-87bd-cbb11171b84e"
                    }
                  }
                ]
              },
              {
                "id": "b9d380df-9ba8-4259-83c8-4dace3911ace",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f37f7fbf-8a74-4c12-b6b2-e99071192a02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6dd3d88f-d5b0-4586-9561-05f42e6a190a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f01b5eec-f8f3-4c62-b064-a734cfa72b2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e53bfe7-af93-42dc-873f-44c2f30c6d3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "472b1b93-ff1c-412e-9783-05b8907c0171",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "037dbf28-40ac-4a96-ae76-646a88cf0afb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a004baa-1be8-4e7c-ae70-554e1b9eadbb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d23e8f4-c161-43a8-a317-34fb414a2cdb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1ff3666-d051-465b-8bf4-4234ed80a4f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "045297ba-a944-449f-b8e9-9d050e234529"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62765b49-872c-4ddf-b954-faeea67b8bf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8eb3b9e5-4250-4b27-bd6b-bc5628197415"
            }
          }
        ]
      },
      {
        "id": "a1024300-c3b6-4930-a18a-3871176db969",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ee64db26-cb46-465d-8f05-493f9c96b8aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1967a4f6-60f5-46a7-970b-3af78333cfc0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3104ebd9-6c78-406a-b535-a59b10eb6aa7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a960d5-199d-4c32-8efb-137e547302e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc539cba-3e23-48e2-ad2d-9c6675e759b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aee7f2d-5d16-4b96-8a55-4772f90e98a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eea5e37-fe39-4465-8649-7f4a58eeac97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf71b1be-9210-4724-8169-b6178ee68be6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df27bbc4-6a19-475a-8ed3-d803b1d6e808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ba578c-3686-48f1-9428-28e920952c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8ed45e-8978-41f1-9010-5b68549aef3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ec4af4-c63e-43c7-9987-f2b9be98770a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a21f62-e6c5-4990-b54f-c90040cc975b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c2648a-8719-49a3-ac24-f84485e199fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f5df48-0ee7-4e64-ae6b-e1c40c6da660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aaf0291-22a2-47da-8e1b-45941e5ee69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba5aa71c-3082-4074-a725-48e4ac9f1d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97afce82-aef7-465c-86d2-2f69e84f319f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "490ade0c-6640-49fe-8ce8-6683e40a83a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2270aacb-3224-4b70-a76e-b27bf8fbe8f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d863cf57-b96a-4784-b152-be1af9a5a966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5fb346-64db-448c-8797-2ee64d3b1fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530b81e5-3c6f-45cd-bfdf-16540ff085fd",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e94d29-5e2e-4f09-b27f-1c55eace44d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538c6c9b-8552-4308-8d91-278e6252ed7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb9650b-3be1-4b1c-b3bc-4b6d47cf6f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02848517-6599-4ef3-84a7-73971bb32926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3c01be-2391-479f-9ee4-1aefcb4ec2d0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d223fb2f-2fd9-42e5-83ff-eb033bca1150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197bd31e-9a05-47a4-919a-d04ae8a63bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f972ef1-6761-4983-9073-74736896f1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7f9fc5-5759-4840-9235-a6c0497c15c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70dca1b-580a-4527-a895-a641cf4dd391",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39445c89-7ac5-41d5-afd1-e17934f1e254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee917c9-cfb7-4a48-9fce-4d68cdda0106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80eaa60-0a92-4a51-97c9-4d3cb508515f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d8c70d-3db1-4c66-934e-1adb627ffb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594e6b56-e3d1-40a4-b918-d591e2515440",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d77d4b4-d48c-4495-a60e-32af1caae883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473f079b-5f59-4c55-bb16-fa4160b9c13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2d5d22-a84d-4158-ae80-4c6d6f5133f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5001675-2a31-4786-8759-547be9549d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdc4c57-df7f-4caa-a9c1-55791422c69e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df80773f-0ad1-4540-aff2-6efc7405d1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458a63a8-d9ff-406b-bdb1-b2772b64828f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dcd8482-0eb6-4e8c-9996-1deb9f2bcdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95df125a-2496-4d87-b090-2fd589490ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92dca798-c8fa-4e8b-be48-393331b43454",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fecb68-174c-4cda-889b-250988564248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "822742a1-9925-497b-9460-b7119f644600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1486ae-f1b6-4f27-97cc-d7c6858e106d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bfb9a2a-f72f-49b8-9f78-118580aa60c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ebb3333-e2e2-4c31-927d-60164577c2b5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1c905f-eec2-4f0a-92c1-75e8141116df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5c7a3f-6309-4467-a9f7-e59144fbfb42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3458e59-2052-4ff5-addd-6d84b6b3372e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "95b446ce-f79f-40f5-acc0-d85791396bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e42fbe8-7181-42fc-978d-d99efec1c790",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540a483b-eec1-45d4-8e12-63f758a683b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0b5d7c-27a8-4fa5-8653-1b659e7851b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d80f392-5afc-4add-9135-60de989e4dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5356804-d5c3-4e2a-b693-fad709e51849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2b6f07-e7fd-4b29-8e69-9561159f7ef0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fcc60f5-c326-4c9e-89e3-8565e644815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "955b08dc-f790-40f7-9adb-2f8b6e20c9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d93db59-cb13-4ebb-8d66-cedbdab9c4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43b11277-6555-4592-aa9c-4e401ef482cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a0e451-b574-4783-874e-a81f9bb09ae3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47db6ba-3823-43a1-bcfb-13cf4c5dc544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a5295b-98e0-4090-a05c-dad48079084b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0155888-4980-4521-98af-a425e2dda739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e2872d-7dbc-4b3a-8726-cf68dd71a2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592a6198-393e-4879-a7b6-3c752879db4a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91794c34-ebf5-416b-bc4d-9f8ba278077f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92079c25-082a-4a8c-99c5-3d016f1b0bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cefd4e4a-7a89-467c-aa23-701a255cca5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2045db05-3953-4417-9070-5118a35d352b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a5d243-a22f-4196-b322-6e02c2291adb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f392fc27-c207-438a-a1aa-119cffe7c5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fba74e3-d011-4cb6-a4ce-2b576329a2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de62215-db91-4b8f-a8dc-51eb3ac45812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0df83f52-c1c2-4fdc-809b-d6f35cb7673b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533dc7d5-2800-42d3-a88d-5e15eaae8f88",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb30929-a844-45f4-a273-f9beadbfba13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5f6b5e-6526-4502-9dd1-f4a0369257b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001cc035-26ad-40fa-a63e-16bac5c68647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc7794c-af1b-45c2-9afd-304bee020f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da9d4ea-921d-48d4-8627-d81cb311770a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7550bac-3ef9-4249-871c-24279bd44643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2bc1aee-92e7-4f40-ac29-dee6d057d68a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f99725c-8a2a-4373-83ed-72654c73d86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eaca2f5-51fa-4feb-a014-4f816e574a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb771782-596c-4bb2-85f2-1be9c9b8f030",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d33d1a-4589-4001-9737-569739bfd0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4fed186-6829-4cd6-84f8-2dce241788cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d66f62-f62a-4e51-80bf-8ee8829f5b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f47b766e-3afd-4ce2-bac1-af4117c16e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80946783-0070-42ed-8f40-55504258888b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70f75b0-0db3-4399-a561-a6a2071ea2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63bfcb9b-07aa-41d6-aafe-55a3c9956ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d01685e-df67-4c40-be06-90461751b46d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2aa650-1652-4ef2-821c-9723163b92ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7555b477-e8df-4518-b65f-82a778eb47a0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b197d4-f614-4ba8-a782-34886e5d8edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161943ee-89e8-49ca-9f49-a7dc04d9da66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8104b0c0-abb7-46fe-9152-efd35a69ae9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0749a58c-4f69-48b1-82b6-6347098b97d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7f4723-016a-499b-be9e-e74360361daa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426e2afc-65e1-4455-8c09-7e19f4d8e567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2620acc3-0840-46ee-8b1b-4b7b44cf0a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef01fdef-f925-435d-a883-70fd4d61290f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2709ee56-8e35-4598-9178-e43227522d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94dd45e5-2d9d-4e75-b2b2-df426b05aae7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf067ed-7266-4ba4-a487-f1ef69356031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef3fa9f-f847-42db-8e7c-ffa723d293de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4751bc7b-fc9c-4fde-8d4e-4fe72a04fdd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c781dce3-b070-4583-b384-40397972912c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff91484-c29b-412d-b0ca-1f0e37b29a23",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1d205d-9193-4cd2-9687-89436626e72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eeb8496-72d8-4382-b0eb-cdc250a8d310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5740136d-6134-440c-b15e-9e2c4bb44647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f644f802-3f15-4362-8586-16b49dbade66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5b032d-468d-4a62-bd34-3c6249bf1cf1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f9ffe7-0f5d-49d5-8327-836208297124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ae21cd-95e5-4eb0-9592-20f6c6704789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac09c49-1ff1-4fc4-ab63-227a6f59e02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c798aab-cac8-4603-8afb-6f9dc559f2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77457c0-1e33-4d43-a721-b13bfa1f7f28",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6703a7-ddda-4b23-b017-2a2164b434c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5b985b-9cb8-4b57-854c-38244c2b5fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9077d273-67bc-42ee-83d3-fa6d5062e7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01adc12c-3d55-4581-999e-30b8c199a112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa09f9ac-c094-4e9f-80e2-a93679bf9bdd",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d0e156-2ee4-44dd-a015-b2b7f2804f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d54a7fa-2c61-4b48-8103-ebcd7c48209e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bff34e-a900-4b98-9a55-236cfdfb7531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e49be893-5840-4e03-b86b-85bbe0cc39c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a31384-8b78-4d2e-b883-513c8eb06eda",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fab8b92-5419-43f2-9207-8feae2bc8208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e523b7e-6062-40a2-a50e-3670e43cddf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9950a6b-3a5d-4555-a260-06912ad79ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efb406f9-6629-46cd-9b66-3d20333c2793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82d6c18-c30d-4b15-b590-12f8616c8dc5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfdb5ba-b7d3-4fb1-996e-42ac5065a765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e51dfb3-a1e3-4f51-b4de-65f690a62f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67152817-071e-4109-9aac-3e7aeda302bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d446484-4c3d-4887-a52e-6f2a0487d8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec388cba-d31e-45ab-8ce7-9c9d09c591a3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4116994-c570-48e7-89bd-6e08a4822277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c64fd1-9667-4e32-a7c6-bd8eabbd2052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2566b91d-fea8-4e79-8820-0019b9b1539f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cabbdfbe-7d9a-4739-833d-71ceae5e2ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa75c449-2a96-42d6-b3bb-873383074583",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56228424-c510-4858-92de-c4d1eeea5e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c17d831-6762-4685-8c9c-0fb93e212e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8125a7a1-ab88-44e2-ae8a-26d5b8ad79ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7872e895-858e-4ab1-85bd-eb64d1e77e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1103caa3-4780-4d20-8991-919a9bceb135",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a215603-174d-4f90-94dd-6137314f6d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6334f8d-b9d9-459a-aa45-6cb89f3e9240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dec673-6aeb-4d3e-a00e-f4f8e2c25914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ffbeda-6d4e-4069-ae34-a6453094a0dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ad3052eb-a372-4e4d-957d-9d02c714398e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f66f7d2d-5996-470f-8492-bfb0ec5febbe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde37e5e-45b0-4229-acd5-8bfbd41f3a16",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0de48d12-e7b1-4d10-94c0-dc68743fd763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402dc2ff-2eca-4a65-90d3-7915afe87ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3fc10161-4742-4231-a04b-4c6ee50b7a27"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d46642d-7757-4eed-ad5c-45b62cfe3471",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c445438f-f5be-41d8-bdff-0fdefd691b58"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "900ac600-6912-47f8-9c69-b18879693700",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2270a9e5-71dd-4b7e-b717-d6ae99a94e66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2cc60ad-bb6c-4909-9201-81b97969b206",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3837565f-29c6-4f80-badf-c3df2d3501ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21e3f781-7827-4bda-bd73-029404d04033",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f9d7ad1-76a9-4c19-9e7f-f7ab572267da"
            }
          }
        ]
      },
      {
        "id": "4f89dd32-df29-4bc4-bc30-c6048b8bf37b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d489acb7-6481-4677-acaa-0e183e33e40e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fef477f9-75cd-4318-b8f8-3e6d6c8e912c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9dc573b-c356-46c6-b945-6789e5d9737b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ab866b-85d8-4c39-996f-2f5dae83a314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c39ba1-e208-40a3-ad3d-2c0d68f20af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1755af9d-ec0c-44ee-81a8-307fd2e502f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4e2d71-4ecd-4cef-a6c6-f056f50f219f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de0c23d-f5e2-4f43-bad7-53f175c22ce5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576648b7-8df4-4b30-9149-3395c0cfec4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a596a463-e85f-4b95-a51d-a26bd21f9950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f78ab0-d011-48eb-b2ee-bc91bad3ffeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5df53065-0b1b-4088-aa28-64689d49c4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e6ddd2-777c-46cd-8c0a-f31bd1567f8c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484d6632-3a4c-4517-b951-42f0a8245e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5696c638-9038-41f5-86e3-5f4c53b88f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4806663c-bd20-4b8a-bab1-a773a25772a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0d3499-bcc9-45da-8808-c08583e2adb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789425f4-2137-42de-8b2f-d3090ad38264",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73909379-f73f-4e67-9e3f-2734f6990f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85965090-2922-4594-afc7-e4dbcdeafbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6239b77-0a7b-42d4-8e71-c9b4b18ebbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c43c16b4-b02a-4235-83c1-a0c0f4a4cca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a857e121-4d11-4d08-8975-be507c6cdff6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8602ba26-e667-4294-b73c-73591cb89cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb28d2a1-2a8d-42d5-8bb8-4373dd8bdcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5a0044-e98a-444f-8a76-5d9982a23f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a33bc2a8-a7e3-4664-80d0-1469076652b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed6d214-2ec6-472d-b88f-ebac33a114ee",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a746aec-5e8b-4d85-955f-8a773ad96ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90544498-c446-4c2b-8fd7-f6b444df8c24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ecd1342-e466-4c7c-8e69-d27679386bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b929bdc-ce95-44cb-861f-7218e23eaeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22df746-37be-439c-86fa-da7884413d11",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9561f69-5161-433b-abec-0b283ed76eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5be83d1-5f8d-463a-9d65-2f7b37281648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72428031-fee1-4caa-b755-ec1f36b4ca70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8302c8fc-f464-45a7-b22f-64272812848c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cf7475-cfcd-4a2e-bd39-5f6b2e5c191d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4dd3a8-9d2e-464b-a490-1de7cad51c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "841c3bbf-8ef0-431f-9e06-214a5052a74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b918ad98-12d3-4634-acfe-35576bea90d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1123b75b-a5bd-4013-b5c6-8bfca536a037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7ceb2f-5e4d-4129-beb5-4a359028243d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb37d9f-8ccd-4aab-ab78-555b28ce16ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0515458f-d2c4-421b-ae0c-9148763f758d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb470ff-9937-47db-907b-31a404c2d413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "988aa943-6680-4971-aebc-bcd4a8ee46f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db9e7f6-44ce-4a59-8c30-974b49635a94",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa065708-836f-4b7a-96a5-221555bbf033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f705d4-f036-4918-a491-724818e2f69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee1ead9-5d4c-44e3-ac07-b4e02fa96794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8353981-3463-43d1-8da0-19d94aa6ad81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dda894-173b-4dba-b359-789e97252fbe",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a5845f-3b5f-4626-bfa8-3ca3a8cd734e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e62588c-d035-4e70-af76-74f261b8eec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eb08dd-a3ce-4685-8115-571e31e9d1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0f34b16e-5f40-4dd4-a498-73d3f3f4797a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d69609-1aba-4f3c-881b-8ad36b348872",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911882d2-9c07-4ee7-b3de-9fbd1431bb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9500f2ab-b71b-4911-8491-87afbfe68ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980fe630-5ad8-4b85-95be-65867bf5967f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b4f908d-072a-436e-904b-6ed8d8165cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f180916e-532f-4a10-aaaa-c343f045f21c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b342a0-afb4-4f4e-94f2-a7cfcfe77d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0d0264-49c3-4e63-ac77-90647cb41043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a7527d-3023-433c-acce-e51c20cb3a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d83219-a4d1-4c0a-98c0-10c34cbc98e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3aae46a-ba7e-4c86-baf7-c1041065cea7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bf1887-cd4f-4574-8f31-d8d0835e90ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3495453-9c44-4bb9-997f-7caf5e95227d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afc5b57-f508-49ef-af9f-c4b4acc3104b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e029f0-6eb8-46eb-8d19-8fcb949a6d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00d4a7b-dd08-4589-abcb-f710d8570cbb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34f09dc-c819-4725-8e82-951039ec677c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ce7caf-de87-4b69-ba94-e7596cebbc48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a9f61e-c3e2-4bf3-9eca-51f5dcfb89ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0964c4-d510-475f-a493-7e15e0f01124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffc4228-ae29-4fbf-a66b-c81d7a489e50",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4c7491-ce42-4c87-b596-87256a06738b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f95aa3-7204-42c3-85e3-4325718318b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3ea6c3-2917-4bda-94a7-b539dca6d5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c06831ef-0a2d-4eba-8b24-fb94d61eb5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99187a69-1269-40e9-86f1-2f3f415300da",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fb0388-be42-4f21-bd4f-ecc526213cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "118ee0a5-265b-4bb9-a4f5-08d660a5e08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3014cf-199c-4f82-a57b-39c6bb720fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa922b8-c9d6-4851-aab5-b6321fbe3ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef0e362-3579-4c07-825d-1042146d7ab0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2ff37e-2972-4b2a-8a14-500f4958dbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c67c031a-305b-4d2b-bc53-7f5c0b9d907f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0f8187-39c3-4c53-8961-64ab766f66a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0562f2-5c28-4088-9f19-907c37a548ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeadac76-1f05-4e69-bda3-709690dba439",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9e1979-b5bf-40c1-80eb-ac494d2f2e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fbe1de-8001-4eaa-b5f3-fcba85acbbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafe4e98-742e-48e1-b25e-34a55eda418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "934fdd4c-f3bc-44b0-a8e4-bdd30af317ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611d6699-fe54-4dfe-bacd-e180e11cd194",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db562758-7db4-4cc4-80a1-419bd94d1696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86689595-98d0-4e0f-a008-15472f67fb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2be0da-590c-48cd-a5b1-9a47bfbce96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "953dae69-1023-414d-b295-ab2515875313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb68ff0-cde8-4957-8695-29155cc629e2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6221cd-f055-4bb7-bf92-d5f3e44d1c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d12cdae-9192-4ead-95ac-5e26380da8f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ef75a5-a516-4b39-9ca8-b0af118a96f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9db66f74-52ce-4818-95a7-22857d3e4cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12529778-bd7d-4280-88b0-23da8437a60a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee95f28b-08c5-41b6-9485-bdd2ae085f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798d182f-ada2-4580-ad85-fb2ce1df3400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ee0a3d-93d8-4c09-b576-0a33f5d8194b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8abf5e3f-94bb-4787-95d2-80b9067cc7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116815cf-bd94-4896-b259-c2faa7ceb40f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1747c1f-d3ed-40c1-8615-6d7f9b6a8d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23a338a-b5a1-4849-8a13-d7ef3e151f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52d5dea-69bd-4602-a6e9-0ca1019202f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c41eab-04d9-4454-b421-0e797b507a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4577cd-d9cc-4cea-9c6b-105bf895e7cb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95fd1875-17b3-4b56-80a6-f816773e3906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2775307-d662-475d-8f36-227befb65ec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4555bb-8f27-4a8a-8af1-782b3bd48a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "356f6724-c560-46d9-a857-5087061bdb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36263097-6a30-446b-8abe-366e60b09093",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9e4216-fc02-4f16-bcce-4b79dd47c02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7a9f9b-c014-459f-9f73-5eb8f1c9300f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cac53c0-1ed7-4e0a-a3cc-99377a66cfbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a18660c-3923-4dd0-b58a-d150d602587d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5b9791-e782-4f03-913c-a0388393b382",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dc33b5-e35a-463d-bfcf-b108f2a34daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b18d86d-65eb-4af5-b81e-20f8e538bf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8d823c-1ab4-462c-b237-2f1493b259dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78631cea-9b1c-433d-abb7-28aabfb4f04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a2ee9d-72d8-44e7-a60d-8299d7617744",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f4e7c2-9613-472f-a782-6d80d89cea7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e850707-c66d-4e8d-99e8-066a6bf8b338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517c2870-cad4-449c-b4d8-6aff62734454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b72de9d-7b5a-4d6c-8ea7-d1fc3901b9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43094ba-8fad-446c-b751-432151dd819f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac549cd4-ef1e-4670-a147-b8efb9b7ec78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa327f1c-d1d9-4ec0-a473-eb6de870505e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f8dd58-a819-4135-a3be-2d81e9aab179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1a14aa3-0fc7-4637-81ec-5d068a0bb889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1134839b-c05d-4894-b25f-c8ba66ec90ef",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edec4ab2-123d-428e-b6f7-1685019fc49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc208169-6b05-4bae-8063-8c48433c29a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aebca9b-d70d-412a-8579-4d4affce6317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c153a1fa-093d-4736-b979-b6459ba8afd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ac6e7e-06c8-493a-8a3b-1a7c4e6c9b44",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bd259a-863b-4553-8098-3623565d716b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10f27d0-cab2-46b3-966d-9f2b8c0547b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fe8e8c-96c3-4074-812a-665d22c345df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f38af8fe-2b20-45ba-873b-5e1166ef76ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57808a1f-5b41-4656-bcd5-9fbc849d656f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92d2dae-1964-4e7b-8864-bf143be5c72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a5c53f-b0ee-4e69-a675-8992b685db77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc36231-e395-4766-925c-783d62638305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c9d8a25-e86d-4170-8c40-7f18ecbf6cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c97486-c616-4711-8202-46a7acf26b44",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd90075-9da7-4fcd-b5d6-053363d305a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d660c18-990f-4d2e-baae-ac74ccc037c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6cd1cc-3b8e-4881-be22-a130a1760f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc4934e-9a13-4d48-b5a7-d210c3d571fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d259b93b-8a5a-46da-b4e0-058f704abb2f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82c7999-4190-4a7f-8baf-48902aa4a5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac52551b-af82-4f96-8e5a-90448bec06b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63902009-0675-40b4-bcc1-62ab1e3ccd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8895634f-e8a4-47c4-8f10-65c51f395fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f70191-bf4a-4c8d-8afd-d70042d4988f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff566d7-1265-4dff-84b3-fc52a66b2573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d301e90e-d824-459b-8637-72e95c03e30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b765420-7f39-4d27-a4b9-0289f961ebc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5721bd-3d14-4e77-846c-7dac89b9c759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455ebb38-90c8-4bac-b751-6ce78f93dd16",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cd6c43-53ae-4409-b55f-6db438afa2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0775eb67-47c4-4fc3-ad05-b4a382ff748c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460ef39e-345c-4e68-b593-daacac218b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5deb6531-53ad-4ce7-bdea-f1389a8353da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79086ead-4674-4a37-9f2b-930e7a87e676",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc156c9b-58ee-4d44-b0eb-34f043009789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4d24ce-f5f3-4826-b181-f7538494dfd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2328d91-e910-4143-ae24-71f28cd71d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0bb2d9-62ce-428b-b59d-5e6c0dd9c9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30a998f-81f0-451f-bfd2-748c44d55f05",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "589ce7af-ebb3-4149-a034-c1d248059c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbde5ff-6c78-4f66-b0d3-f0ef08419d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0bed5b-2444-41c9-8924-ddcc2a7a10ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b91c8094-ac76-48aa-aae8-e7a106be185a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c11bb0d0-d4b8-4bd5-8121-0adb82bdb1d2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bfde223-c065-45f1-bdac-2cf0b7e5ec50",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fcb29d-4e56-4a87-834e-4794cbb12f60",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "594ccf23-aa05-4d1f-9d4d-80a32e514174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ebfff5-beaa-44e5-bc69-c1d23a60f9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25ec3f17-a9de-48e5-ab5a-0f069474124f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76b1acd0-9fa0-4257-89ae-b4513c587592",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7b72e77-42d6-4ba5-a309-d07c87f1b0b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df322e19-b593-491b-aa37-f894ed5abb8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d437f080-0df5-4068-bd79-cf409e8cf716"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b1593f5-7e86-4ebe-8fc1-e720420cec67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9729b40-d0b4-46dd-a487-4442305ec1d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be52e944-76ff-4ab8-bbe3-9cd6e8a9e5e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c60d739-6226-4ca9-a675-62fc6a446107"
            }
          }
        ]
      },
      {
        "id": "b0ac9829-7720-4c58-864a-1a8a2b047ae7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8e3201b1-d763-41fa-a521-f19bd7100f3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "605e6d15-4829-4608-8542-6249bcd3c806",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0d3ceefe-7e1a-4ebb-b3fa-de6fa7607637",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f385e36-3353-4d2a-b51f-973206bfff3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cbcea7-3bf4-44d1-bc50-1c7693dd2873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f4d74b-dd4e-46cb-9789-c5b7071551b4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f11552a-9c66-4e29-8309-98a450beff37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69804531-fe28-42a0-a472-d090c61d210d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b944970-cde8-4bcd-9726-fdde55374abf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a7e85f-a9bc-4e82-a318-bda7d10214b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5210a5b1-a28d-4846-a31f-f36e0559729d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f25ace6-0505-40d9-aee5-2983cb8a8178",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33dfb20b-733c-4051-b34f-d5df03fb1aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56f43da-8c62-4d29-add9-e2ad5eab7d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9049d962-a52f-4e7f-8d16-640abb9a9ba1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f52392-f0a0-4dc1-a035-baadfc4d40bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c8bbb6-7aa2-4966-a436-d0e0484ef91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce9fbc9-0736-4860-9da6-cda65fba222a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733ef4a4-df06-451c-b68e-5b9ea4efc4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd20704-5539-4d71-aa10-c0bacbb7c4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5966205a-2795-4902-bd83-8bcf48d3c764",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c01fd9-326b-486a-929c-a13c51476ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9a6814-468b-4eda-91a1-86312ca30401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a537d6d-44e5-4c70-be94-ea6628b6c733",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4adc9f2-abf5-4f40-bdde-7e7a8c7ddddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eda9c8-7d70-436f-9697-219d9f6556d2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d34b990-9a70-43c0-a19a-c9f2e3e36f19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e28a7275-65a0-4c60-a3c6-fede9dbc1e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec66374d-5367-4aae-a2ca-ccf59b49f3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a150d79-3f3c-4d5f-b567-ccb5f6b46d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aee32aa-8889-485f-9d93-a7428b3160a8",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fc310d-b5f8-4037-b805-99f5f7387fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c57fa693-ac0c-4f41-b743-f571949b722f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221de7af-6db4-4891-901e-3b536116dfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1c14737-b4d1-4532-bdbc-1cf4bfe6bd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c196c5f-2a92-4bb9-ae52-361b01361db7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03509a3-205c-489a-a026-e2b7c2e2c78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6cb216d-5605-4556-9f86-213f94753d75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e3a177-13f2-490b-9f76-cf2c7edc210a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd688256-c2b1-4bd0-aa2f-b2e506df9c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e3b769-3113-446b-b7ed-82196d65140d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58ee0ea-d1be-45a9-8c9e-a652782e2db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0f1cdb-8d25-4f3b-9785-b9983ce68033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "459fab08-63a7-4690-89ff-589c9793c7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a804f857-696c-412f-968c-1d95673f2591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14d9273-b635-4802-8923-5173aa5df3c6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa438004-59fa-4cff-8f3f-1aaa465a34cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d3f777-cd45-400b-b01f-a8c62199a265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73d80f7-4138-483a-9b7f-5df257b6db85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835c599d-83dd-430f-ab54-4d3e46cff208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5eb880f-1f6d-4193-9fa0-addded950f34",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ef043b-82a6-4d0e-98ad-ce8e7fd21a12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f7010f-f14f-4438-9d78-157648312214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a27d8bf-0ab9-48c6-b274-f29ea03527d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700b0e29-82c9-4cca-b108-fe36e052aa61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78fd0b5-bac2-4e39-b7ab-c8bde28169a2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d3d876-53fc-43ea-9b30-62a3bd7b591d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed8b0e6c-131f-4b8b-a570-c3a0fbfe9d5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7a00f8-ea19-40a2-b14d-ef667681df1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e27b4e73-f3fe-4190-81f6-cb0c38e9df46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307cea03-e319-4d69-8242-5bfd2b74f045",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8877b14-b59d-4610-97b4-4a95e04b33c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3b40421-3fe0-43cd-917e-7ef2a1573626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06b5831-7fa8-4892-a354-8197187ce148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3d76af-b81e-4894-805a-8af9e6f5f534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c0f335-e01c-41b7-b430-e39125ebce5a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ce83d7-c315-490f-a3d4-a021c4d444bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48b37e2f-e7db-40a3-a88b-fecd04089422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21cbb56a-b485-4206-86f0-87098ab42154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6acab6-73fe-445a-b9e9-801d6c46b8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23064646-b9ae-4e57-833d-656ae2516145",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908f07d6-27a3-4e31-8664-28768c6efd69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6d205e-3eca-49ad-bf6e-a7960af9c7f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdf7247-6d5a-4624-9984-35709e8c9304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9efe6c8d-76cf-4f1c-90b1-37d694e36381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ffe5b8-facc-4f34-8b54-e5bdc6762327",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe374687-a95b-4fa7-aefb-e85f9d85192b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da4ab193-9654-41b5-a2ab-6f8e49e9b97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e58410b-cef0-46e1-8bef-74be48dd99a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8666db1-8441-4517-bb70-2f91bda9c2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8af7355-72bd-43b8-9510-a36737a7f403",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b7a02b-48c1-4840-9303-395920c573a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4001d2a5-719e-4f9b-8db8-bb601e870604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144295b3-4eb9-428f-a440-db6cb1dee3d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea7b5b3-b7a4-465d-8453-3127dac4cd5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2fa2ef-0a42-470b-82e1-b84d9908cde3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a190887e-022e-4ae7-b834-8a23646e2ae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3cb7ee-cfb9-4928-af0b-a78fc24ed61c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f432c92f-2e86-4287-9cfb-24da9af2541d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5113411b-a0c5-4fd7-92de-d0873fed3dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f5d98d-3cbb-46f5-9a8c-8eecac1a0226",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a7d0f4-5fe0-49c2-aaf8-f259297a51ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef27b804-2c78-422a-8825-36463ec1d877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5117637f-addf-426f-9a65-b62c6bd2e408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e699bb6-19b7-4279-9b0b-97dbc068d819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5bd0e1-a3bb-4c34-89a9-d4f3bf114bfc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c898f66a-8b2d-4b76-adf9-af00540431c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d342f7be-b11c-4512-8d01-cc30df4de8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bd3c20-3443-4a06-8420-8da9bba3bd7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952ff1af-c13d-4f4f-aa0d-8fa1d4fb7cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83be34c6-271e-435f-9f48-25dade4dbe36",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf91cba8-0e6b-4592-8ada-12e5b0465a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855ae29a-20e4-4d12-8db4-e3a1c46e2552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8dcb99-a760-4768-ae2c-8f6cd43fe46b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b27c72-fe37-4e16-b2ed-8f7f936bcdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24343b0b-e29d-4539-be2f-d1050a9febb7",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306fc05c-fbc2-4205-a1ac-7016727fce77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5117b46e-b781-45a5-8bac-f2c83098dab0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb6228e-2143-4f2b-b24a-eea5d3521fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bea286-74c0-409d-aa8c-b9be78fe30b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48275cf3-e8a5-4051-b8c1-a49b00a82b3a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8329c5-07fa-4a95-a652-8f6479f2cab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8e7b3f5-a1bf-4aad-ac5c-0ba38b31aea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8fe3bf-ed55-4812-8343-f4babcb219bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04efb07-fc10-454a-a263-3904de51b45f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d4a6af-fdda-47c1-9b0f-406ddcdc90d1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8529d04-a6da-4f29-a970-1e28a84d3c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "694903d2-1fe1-4f55-aad1-86c44a1899a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04a1d01-a65a-448c-ba0a-2af6dd82ee53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da93f0bc-5da6-4661-a368-02b363621213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444601ec-5be2-467d-9b8f-daa4a47a9dde",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f94664d-1b51-4b36-bc4c-32cfec9c5c43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7758cb08-7640-42aa-b767-53923ef12bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efdcac8-eddb-443f-b8d4-7a4e85e5aea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cec91e8-17f7-46bd-aca6-c27094e8dfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1652179e-3693-4748-9edc-3224c4ce356e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b6fa43-7b4f-4e33-8e2e-7ec31842bc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac6aed0-5beb-464b-b9b2-bd7fcd82e9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ac27e7-9c7f-43ad-ae9a-3e2616fd1266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb2628f-e5a7-4dd4-9428-75dee005b2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5948a48-4726-427d-aff8-c1ac2b919871",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09be9ca-cbc9-4c40-9da3-5575f57f01a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e2211d-3535-4a53-8934-fb5239637e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a23bec-8b3f-435c-9b45-2a0691c78260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8297b317-6910-434f-b5b5-18d6bf8c9211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13049d00-acde-4949-96a4-ccab50b1ca41",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ea5591-304b-4b4c-aae1-5f5ac772fb04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb0ee9e7-ad21-417a-8ed5-f8c1f013ca73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea88264-a789-422c-b563-0f7a0fa8c17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d231178-ca21-4353-810b-12a11cdfc139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5338c130-4d16-4aa3-acdf-c7cf710df503",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cf8280-a6b9-4c94-acfb-2148fb589c08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e88b475-e9e3-4d62-8967-8cff25dac1c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0875a3e8-4c2c-4df4-ad9c-3855f094f41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca69702-81cd-4dda-aaee-71a62e2df6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38d523c-a156-4573-bcea-642a2cbf876f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fc2f17-caa7-46d0-b4b3-3a30223fc090",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57543d95-0c12-4853-a755-760f69687dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d487fe3d-5c05-4a18-a82c-27f643bc0e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e6ee26-3f69-4fd3-b6ff-fb95e5b58c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a01f6a-a0d2-495f-a058-6a2fa66524d7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f3ec68-0142-4d04-9f16-0a48dbc8563c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d8216b-111d-41ad-91ec-1a022911a28d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9bdb04b-95c0-4741-92d0-321a21ad1c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d633b9e0-6ba5-4d44-9482-624585bae329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8399f0a7-c4c0-4b09-9518-d577ff671b43",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c2e4db-fbd0-4a05-b330-861e30476da5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f178b7e-a39e-4f38-8d40-7c20d867b5db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0d5740-f045-424a-baa4-dea45fa59424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bd704c-9168-4a14-ab31-386ff83aa01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b42cef-3b21-4eae-99f1-adeff24bc385",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99205186-bcde-40ca-9fd5-9e1806197440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58b46e3-461b-4cd4-baf0-af10bab1f675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775bac00-f990-4df6-aa5c-0106b7c1ae54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e474707e-94e2-4d1f-812b-07413176d3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866130b9-654d-41f1-ae8d-636e176c6d86",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ddc5d43-bbbf-4e1c-b9f3-ac13fd6a5f4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9bd9bd-9ba0-47a2-959a-4a0c7a902d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09993ea-9cb0-45bf-ada1-9772d18e9b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befc0adb-0373-4fec-bd0c-44c7a8a61c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1ee9f5-44c4-4104-84f4-425e790d6fb7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ae2d0f-da73-4273-9f20-20fd704f1803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "352d0a8c-9e96-46e5-8847-a03254600a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae42f4f2-55f8-4980-a107-49fd578b10d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25358e03-45f1-400f-b99f-42d11685f126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f412d99-752d-432e-8fdc-9a369eec759f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a46fc63-6789-4341-8cf5-571f2a665958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a1c97e4-1307-4676-84c1-4725774eac91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d77f0bb-2656-4824-8bc5-eb86fdcadb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fb2a50-9315-4c31-abf1-95154f87f80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61835ba-30d7-4fe1-b3b4-f16ffba3a254",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc8275e-5c40-44b1-a199-443a5002c720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa07053-04ed-431b-a66b-49facad62660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd91239-3a54-4426-a5dc-6e4b367111d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b586ddeb-9246-4904-ac78-a66c56b6ab8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7faa20de-8525-4ce6-86a2-67614d0c5f19",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3a4f65-304c-41d4-b988-9910e0670814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c5915a-c838-40a0-badc-ebb5af24a84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dc06b7-ba1e-4a3e-ac19-e4171aa078eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b9e958-46a2-4b05-b428-5509b8ae94aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52487517-05a6-432f-bcec-8ec232116d05",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fb63b9-6f5e-45f5-8f5c-6565810541be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb05cf8-6350-4b39-b77d-e30d021c5cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fb65e1-eaf7-468c-ac9f-ca064c2227dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d337a893-e385-4d6d-96af-9598f25893ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c97b01-1158-47b8-a88d-b68a3a02247b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f169fc6-2798-4715-82aa-205d4be9838d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd854966-116c-45da-a0a9-9b7de605d99a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78163b8d-db5c-4b8d-8bf7-f2408b99adf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc70bf8-f260-4c15-9a2e-d3deabb68bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f74346-fc95-402e-8af0-f0367d4da51b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e9395f-7339-4491-a22a-446fceb4e3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce98271-742b-4ee2-9ceb-b5356e4eabee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97412480-4d50-4c9c-8243-f8a0f8f1596a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9381760b-5e64-4a87-934e-9db3a2af0f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc5a36e-6e49-4985-84ed-d325b73ba439",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69094a5-eeb8-4b41-b196-16bbb9788e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738e3656-da1a-4572-a915-1b4226c2fb34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bec5a0-bef7-4e94-ae73-a646e7856dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dedf475-4d6d-476c-9971-59f6cb41b1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed0a0a8-2f8e-4ae5-b4ea-d3bab3d810f1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4ff302-0385-4fb1-8879-cdfa4ef1de45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065078b5-68de-4c03-a39d-f851b60f5fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca75b85d-e004-4358-b11c-4b0d155a7b2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02857722-1370-4c1d-bcd4-5554727c4677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca200020-610b-4477-b5e3-acbf934818ab",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b08655-7b56-4e76-8627-1a0ca3b6ad11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fcb6fcc-8f9c-45ca-bc58-8c3bbdd50c44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab9bd33-d16e-4839-904d-fdb50d2b917a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732e869b-81e8-4596-a0d3-f65e5b809376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5fdf9c-f1e7-4e54-b46f-79b856cffd51",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef9a5b9-6f12-4854-bf6a-f2cbb2b1282d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01013fd-7661-4249-bca4-6a501a70164b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97519251-70c1-4021-be2c-ba7c07f722c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fa1f9f-1cda-445a-bc25-7ee403af2c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fabcb83-6c87-4f26-8d0e-7a1b4429f77d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1330d01-129b-42bb-98f1-7fe0d6968c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924c7a5a-d609-4d5b-a819-047d1989d085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcd18d1-2cd6-448d-84d8-1d3a7310c9ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7290f0-2294-4633-8ac9-5b84c4e12253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ffc2af-ee5f-4254-a94c-35d64862acfd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408eb87d-9405-4ddd-b96e-157d2bff30aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f861ac-d8df-44f3-adf3-888d150a39b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d650d4-4b9f-4f85-a640-b1eb78c1a325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d7a77b-f9f0-474c-9de5-a887fa3d31fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29204e5c-295d-47be-897e-22a28abe367b",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fffeccf-658a-48bd-8fad-50133dc1dd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e828e2-a792-404f-b65a-dff3006c5a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96dc578-de16-4d5d-b04e-d388ece601f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834b70b5-dd8b-47cb-abc7-02a121a0d23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afc2848-83d5-4451-ae14-29f45c26c3ee",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c83786-cd9f-4b91-b455-8a2386f7b620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f760a5-7b42-435a-9af9-a5a4a9b1e276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "782b4095-266d-4116-8bd3-59052aa139a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60acfb60-4515-4f3e-9c97-0e3599cc4689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f94ca80-8688-437d-b052-1477a02d5b5a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e99a78e-82a8-4308-b32c-eb35cebf50eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05919611-79f6-421f-8406-065992893dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db931fb1-e0ab-479e-8350-f091f6bc5e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5042d1eb-8a91-4a39-bb64-d6e6a597dff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b434e0-796c-4198-a788-fa976eedcaf4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193899eb-10ba-4780-9245-69e2ba4ca39b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6a230c-6682-4e57-80b2-add951d565a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51aeaaf6-c334-4333-9dc3-eb3f7c769581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f96eaf-36e0-4217-8df8-a402271725e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f82b4f1-c8de-4109-b97b-1575a2932d19",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29f6d3f-9e57-4d81-b480-3284d93b6583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7ae141-bca3-4ef5-b3b0-9b8b67877538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a84fdf9-b8f7-477c-af9c-fbc073d245e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a71dbf-b44b-4346-9917-4de4ba29001a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8defc1-e150-4e60-b155-39d7fa862d9d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c5d7bf-d762-402f-ac75-3f60cc23bee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83006935-93c5-4a93-991e-d47716c6284c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8128c0a0-f34a-4335-a035-2b6f7e8601ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb7d115-2f9a-4e0b-a67a-ec96859aa953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e127fea-0d93-4d9b-925d-13c3fed427b0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54027c5-c099-47a5-a5ef-110d1eb52847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b273b695-9ed0-4b53-bc05-ac5c8e04bef1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691cf64c-ab07-4b81-98fe-7662b7babd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286073ac-6c47-4d51-a569-0fea82133091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66042be6-a217-4e7d-9ca5-9190336b63df",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "374fc50b-b169-440c-a585-a62b7311f86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40781ae0-0bce-48e7-a0d5-2bf9396f6ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe6e90c-2abb-4726-a6ea-72de4746bc01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb203b42-da19-4cb0-bf78-66b102726ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363f5eda-0ad7-45aa-841d-ca62a2430cf2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15171ed-c22c-4b80-ac63-ccd160dbb6b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "779c5299-93f9-47a0-bf26-d264b08321f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfa145e-9a8d-48f9-a4ff-a3955a6999aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7977d28-0a4e-4cd8-ad76-e69319dcd488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1719be87-8af8-4b59-ad48-044bc34aa391",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3273e350-7053-4101-8a8d-9b1f5ddc2f07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc79e290-c868-47e2-907a-45d050e51bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae207138-81f6-4f3b-944d-4dc144bda5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958c6068-eb8d-4974-8df0-373a65171c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5eec6e-86cf-45be-b914-aba94251f473",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157a7b9d-0487-4f82-bb5c-ede582a01633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6069810c-712b-4cd1-a768-ebd399843dd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73d707f-ec7f-406a-b575-45564d7c99bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b41e47b-ebee-434e-9a3a-5fa17cb9b005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06831585-1655-414b-b5e7-777602c1377f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dbcc47-c874-403d-bb95-e57e3633ec5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b18051-b28a-417a-8b95-e17151b2c1ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba4b9bb-c6bb-400c-9fa9-195ba75d776f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3960d452-874a-4682-a3f9-fb87937d4395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ac9e3f-85f2-4daa-8a5d-ff415ee58046",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc540c1-bab4-4de0-aa3e-f0f22a98d3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b310c9f4-fe07-446e-904e-329f1bbfd076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9760ec7-2fa7-4894-ba26-1eb80acc6c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abc67a8-ad3f-4975-9e1d-db6c45926188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e951478-5e01-4c9e-a8e0-8d2f11e922b3",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d30d4ec-4ae9-4bbc-8e9d-0ec51ff32c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de92176e-cdfc-4bda-a717-d88b1d49b4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee97bf0-5b72-4544-99d2-922c3329a6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38756b49-a18e-4c46-be5e-c83e85a07bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5c67f6-7621-4c04-9348-7b04985e27ed",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8854b6e-fede-4f50-bd34-483f6672b8a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "321f6ef1-8873-4f79-8af9-3dd4457bd07f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5683ef2-de2d-4fc4-a454-64a1af57e73a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbae97f6-df66-42a8-a6ae-262edee58ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eaa5658-6fb0-493f-9b66-cb5043cf5315",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d25b56-bcd0-43a2-b9a8-beb99bd7e867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd61a50-411f-48b8-b26f-48c00e9dff50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080ebd75-d26e-4e2a-b8b5-e4d0d40e13bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2318f40d-fbca-43c8-9929-29a366874414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc1336e-5c88-4bab-ba69-ffbb25b495b9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cced0f-3b1c-407a-af27-a7bceabdc1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d7f83e-43f6-4888-b580-e20ee42de7ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f961140c-d0d5-43d3-993a-786d57d73f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4a8733-66e9-4c22-97da-4b8e98adb8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2a5acc-0936-4b99-83f6-f16ba59869c9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6de2d96-7878-4b27-86d5-0e51523f09d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "874e35b4-03e6-487c-80cc-e60795eb4c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56be5131-a76b-47fc-bbbd-ccbda8b12b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "921f3398-0467-4886-9e39-31ef83ba9edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00aa7480-d3d3-4ebd-97b1-476e1ea192b4",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f65a24d-9667-47a4-962f-7dc661ab1543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81f6da45-bdd5-4453-8180-5ea7bd242ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d62c08b-0461-4871-8274-23f0e71bf507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05249702-da01-4b6e-a458-32082443543f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb578fc-a5bf-44ee-b500-4afe9197b126",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21a125e-0b7c-47d6-96de-afb5a546a53b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e74ffe6-5014-420f-9312-4c7b34a08cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f1e919-9109-48ef-9a08-6e818dee819a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa89a218-8746-4366-8f98-cfcee8d55940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f77b981-a3d2-4f7e-9930-a9c89770350b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da64f552-4930-4bc5-9c27-4533afbcbbbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6528c3b7-3eef-446d-a8e8-f0b7a938e5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa6caa6-5c97-434d-9e96-b94f2b6974b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f140cc93-87a8-49ca-8ef1-587067f12940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492c6b4d-529b-4bd6-be9e-ef0c98b44087",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f839508-1aa1-4b69-86e4-5fe3325aa746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ec299e6-6094-4901-94d0-4175356a1433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c3fce5-4129-470a-b4ec-c2f322da59d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74dade99-5594-4796-b876-b5b9a500f16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba618656-cb9f-4380-bc7d-8a79b2c096d8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8d38fa-6891-4f2e-ab6d-e73b01648b5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cc765b6-f306-42c3-9dcf-07e3102460a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e91971d-4fd4-4024-8c82-576aca68e429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12dcb9e7-aec5-406a-af71-e0b7923da445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b05d76b-3d95-4e19-854a-8ccf5bba4edf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698a85e9-b059-4337-b21a-60b772160aa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298a3bdc-fb03-4637-addb-39e442b8db6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127811b3-6427-424b-a8ba-d5d3a3163977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06474e74-b852-452f-899e-71ba0ae54e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059dd69c-fcea-4616-8613-de4ee5ed1445",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105005e2-5118-414a-b58a-2545bf6543f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3d59a14-3ab6-4612-840a-dec48aaddab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368ea9b0-c71e-4064-b9ab-4dd1af711a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fa36ee-a2b1-4b7a-9943-3a3502fd557e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1ca7fa-86b2-4847-a42f-f923c3ebb6d7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ffaa2a-3e39-4f4a-8765-0b676a5fec02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33984a99-df8b-42a0-a7e2-40305a94dd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2416b840-6cb7-4c36-b5b4-ecada45f6a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88c25a1-71ad-4bd0-ab38-4f98a273b2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82a6009-05d6-4b47-9d00-5c1311997194",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56389b14-d431-4cb1-8e7a-ea3db3ba329a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8590330-9ea0-4b1c-94a1-67c7a16cc2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e7a18e-ab8a-476e-99c5-58eb362b2f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3949ba0-f849-47e6-a070-34f01ab75b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed26052-3a72-49d9-b7df-c6a1ab890cb6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5041b736-be5b-422d-b97c-f0d7313fd408",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93bb7cf5-5518-46b4-913b-4352676bb84f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4a2f57-38b5-474a-ae54-e1cbd8b8bd0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cee64a8-611b-46bf-a67a-efa2e5a89fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b291cff-94dd-4c90-b2d1-c63e515c6a40",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd8580e-f53f-452d-8a1f-70d2d22407b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61dd195d-d931-4e56-b1dd-99698ef31502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fe84a0-5595-4c3a-8c65-2554d4c9f3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c0144b-ae6e-4eab-ba99-06f52ed8c164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d498fd1-cf22-43cd-89c1-70fa65b35f19",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66bb27e-1553-4b15-aa03-894c9d3b328c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a622e4bd-384e-4eef-bc16-bdd90346a150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedaf698-e10e-4137-8b74-8b77ed93dcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35928e26-876f-4727-977b-a0aaebaa5ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd77638-77d5-439f-bd96-7de8bd986214",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d94601-b3a2-4ead-bc9a-046575ede72d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d04d25d9-e5e5-42f3-8f7c-53f8ebdb308e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe2191a-16bf-40fb-83e0-ce3e125282a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81420e36-8fca-49d0-94ed-03e3db11293a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73427964-1721-4f64-b7f5-2a30ac240003",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe783471-c20a-439c-8158-541005454105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2dd135c-e622-4ad6-906c-aeb076346551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdea32b-753c-48c0-8365-a9cecd6c6bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c4f77ee-b6b5-46d9-866d-c24a7d0a8d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914de01e-4a64-4f7c-8532-838bf8f20d48",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8c15be-4840-4795-bca1-82e4403b2568",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8e4dec9-62cf-45c0-9519-1806647cea41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1659ed5-b625-4b9f-935c-6a6d25d78957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25669b4b-4041-45cf-ac02-bd8beddd40a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e882e0-f112-4216-bdb0-22a88a91212d",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b3d01d-17b4-4f74-bc09-12e72619605b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e3e6bff-6bfd-47f2-a751-5abf7cb018dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c7d8bc-666b-4220-80af-6af5c3377de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f32574d1-e960-4a12-a6c2-09651473b58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6329f704-a84c-4db9-8a9d-07d45a33762d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc63630-7c18-43e1-8114-4ff7cf02460a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f13bfe3f-7d36-43e4-85e9-d7dfe5e962e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f19b70-7f65-4858-9147-4967839c9d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3956252e-8a6c-4093-84ec-3ccb1fdeff72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625a6f91-3141-4307-bfce-eedfdb7cfb0b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b78caf-849d-4c77-ada2-e4054cfdf49a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e326ad1-b30f-4ac8-88ff-46695728a817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b794784-382d-408e-9cc8-74afecfb2ca3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9437bc-441a-431b-930a-04fe56f48f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10459c56-8997-4dc1-bd74-f97a752032a1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bae2d1e-4c67-4aa8-b973-e4bee3e1d8c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59bc9d27-efc2-4510-93ac-2b1561b8d571"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6183c72d-fb78-4d67-a2fa-41ca2dff30bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec54f3e4-79b6-4df6-8c61-bd83d26e5a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db95277a-f980-4ed3-a879-59ea24b2cdf4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b96f91-22df-4d33-b783-6474b32fb55b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "597d754f-7bb2-491d-97cc-d336c7572811"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d514314-3ed2-47cb-89c0-f54312208ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7caba756-ed93-40a7-b342-24b3e24d12d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5208cca4-96b1-4cfd-8114-82bac6c9ec73",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106dbace-8b7f-41d2-be74-99c706571bad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff271e58-604b-43c5-b3d1-3917b4efbc98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45743016-5312-45a3-86e7-34fc305dcae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5aee58c-aa5d-45b9-baa1-e6c8f1d98087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748772a0-531d-4405-8258-e968d3e86ba1",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e002f8-35aa-4668-ba57-d1b49c0a3801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a3c8ad-536b-47c2-9e2a-eb4343df747c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd439c06-4daf-403f-a0f5-664d62fba4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec4e6e9-606d-425c-8798-350ad3848445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337fe495-3692-4252-834e-457eafc541c1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a66cef-a6ee-472c-b8e2-9935711b1963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e793aafd-250d-42f4-9273-160523504a93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ceca6c-5dd6-4fe9-a887-5683ae3bcf0d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b568e4f-2a3d-4695-a6f9-e503e4f081b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616cba06-47ab-43b3-976e-a4971b08e5ed",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323b5e1a-4c79-41e1-9cb4-2c3913a28a93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9640e9a-e042-4dcf-97bd-f64cd0eab325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b921638-6025-454b-add4-9b6b0e38925c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45576205-13fe-4558-9ceb-e348922a75d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aff3ae-53bb-44fc-bcfc-d10baa2b8a09",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f7f8b6-e054-4325-8fa6-8299d48f8192",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d358119a-44b0-49a9-bb3c-c2e3e77538b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b88a0b-92a2-43e1-ad32-6503e53661fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53c598a0-5d86-4faf-9e01-88bb285da712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e24f8a-c5ae-4097-be40-cc33ce8e6b83",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743302d3-38fb-4301-812d-8ed198abfff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca1ab7d-c1d9-4cd7-be0a-455029570745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad40eef2-625b-4f5f-9e83-ed8b510757c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e66ad0-fc54-4773-84d0-1242dba9e1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e255cb-3df6-43f4-9960-b6eed4e48fa0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee58e7a0-dce7-46c4-b232-1cdb9ad307b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb72c42-e606-45bd-bcf4-a7e739efe703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdf76a1-94c2-48f6-9634-9a30417855d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26a4676-864c-44d9-b10e-4e7a70c41a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec6d38a-95ec-431d-a7cd-0bd428ca9f2f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5329d8-c172-43a2-9c6c-99ffee812ed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f47864d2-521b-4206-ac6f-7740816dc3c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb548ed-cf47-4680-b636-5eeaa4d37ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b25a7a9-4544-4522-a6e6-3bf8db2b1dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff103ab-5751-40f7-bda8-458c7ac55080",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae1eda3-e225-42f0-8a84-f73ac5ba42d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "940635fc-b839-4ce2-afa3-0885d59764c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ac062a-db81-4948-9886-96c3c68cb4aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39065065-9672-49d0-be2c-cc602f2823b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448a5dc9-4721-4a7c-9fa5-adb499a92aa8",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0443569b-a14a-42f2-b42f-0ca3b1e1eb1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab8182c8-ac78-45bd-98b3-521f88a0166e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740f6916-fcfc-4fa4-937d-9ffccd36d4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ab5d05-bce7-4395-8662-3a5ad7aba6e3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e87b8c50-88f9-4672-a26d-5369a56829d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb27bdb9-d58f-479f-b3e6-0b235e54e5a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acea7f6e-79df-4392-b8a4-df41fe99e888",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d46d08d3-e4e2-45e2-9153-67c0c2eaaff1"
                    }
                  }
                ]
              },
              {
                "id": "bfecf40c-6d5f-44de-8c5b-626bdeb9298b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19167c4d-c515-414a-9cd8-417d9298d9ff",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4980a33a-1f53-4329-8d2d-041165139b01",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b5745b15-6703-499d-bf3f-7282b709622b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98354200-b0b8-4b20-adb4-97edccb5e47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9738cf14-6f0c-4e4a-b02e-0bb672eec9f9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0e8ba08-f3ca-4f37-b95d-84a6d6be82ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9048a4fa-a4bf-4f92-a4bb-cb521ed7c455"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6acc354c-7ece-4efc-ac99-a2b3262c39e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9cdd68fd-aa8f-40aa-9c74-ae5494b58411"
                    }
                  }
                ]
              },
              {
                "id": "69bdfae0-7ce5-4f7c-9da9-e6619c4741be",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9b521deb-7b6b-48c9-bf94-22521c4cb90e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec2f36d-9516-4087-9e9b-d0ff936dfc81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "209de0c6-1a29-4b46-9be7-19177a4d923c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9160f5-9ff0-47d1-bd06-0fbfbfc8eb1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f85ba6-22c7-4e6f-a064-28a253465626"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cfa1468f-9878-490a-8092-0bbac9a2b2ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02a32bc9-8f7f-476d-b3c0-e80b92959d41",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16eedb02-f26f-4264-8c48-91e4dc3fc00c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "29f5e166-e905-4b3c-8cc4-7bef06c437da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7321e21c-7628-4248-8eec-916a440e5aab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36f994c1-a62f-40a5-8a5d-ca7451119a32"
                    }
                  }
                ]
              },
              {
                "id": "60ae4a13-ddf5-4b4a-a159-404c195d4b52",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "485bc804-5eb7-4515-8d50-c0ad4c30b5a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30debad9-ecae-4666-a968-89a7e45ec76a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6c14f61-55f0-41af-8cf2-8fa9bb00db32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e127c754-4b2d-41df-a1f5-449270189c2a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6a6fa0a6-ccf4-4b0f-8cb2-7564923ca8b8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "176bbc9c-08bd-46c1-9a0c-c99925f84d44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f9b2c4c-bcdb-4522-b3c8-70e22295811f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f30c811-80ea-4793-98ec-8644193532e5"
            }
          }
        ]
      },
      {
        "id": "6955d913-ca07-4ade-ad17-c5923ba0a52e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "57d066a1-f437-4a2d-8d9c-d70c64a21889",
            "name": "Negative Testing",
            "item": [
              {
                "id": "369262f3-4f23-4017-9b04-01314ebe898b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7caacc96-4fe8-4e80-856c-d455aa3dfa6e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea4897c-63bc-48e9-a619-ea7c83c185bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "dac23c5f-ed13-4edf-81ea-8836982c4402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be7a29d-1952-43f3-a212-734563629df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d095c8da-a77d-4ad3-80a2-58002ad28744"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db2a1fac-83b0-462e-b7d5-b25be4ba1efa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70683a0f-ca80-4061-afd9-5505df58c81f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "890b547d-d862-43b1-9088-b2da4c26e1eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bcf6da58-5a0b-406e-85a9-b53813932fe9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecd2717c-687b-4a11-abcb-74e541a2dc36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "807e8820-6bed-4a89-86b0-a0bed41026c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14c45f7e-49ae-43f5-88d6-73ed061d7527",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70ff62b6-1515-4b90-ad17-5db418912896"
            }
          }
        ]
      },
      {
        "id": "04032de7-efb6-4d59-8cf6-c5665f0a3f30",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c6924708-df5f-46ec-a10d-ca164920d3c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb05b10e-60cf-4631-a41f-7cc2c2c62c5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ceff304-9801-4500-8efa-24cfa785d995",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e21bde-d963-4e49-8388-35711b00a15d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe5a43ff-b64d-4c52-81b0-d58ac595644d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db82f22-df80-4638-9b2d-90fe8c32502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6b198a1-fd7b-49a5-8c8e-2db37f914597"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab0c91e5-7781-4dd9-ba4d-8e65bdb1f777",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23e120ee-7218-4ce2-bb09-105cc278456d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84feea99-e953-41fb-a261-b42b54476ce4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9dd4d21-123f-4a31-a48c-aa3fd8ef208f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a0ff1861-c3f5-49cc-b66b-58f4560c6629",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f5326508-1d23-4558-a91f-fc51276fd28b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ee85a01-1ef3-466a-9558-cc1766a0ba9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18bfb83f-51cc-49d7-a211-f03bb46f1045"
            }
          }
        ]
      },
      {
        "id": "87f801b7-78ee-424f-bf02-be29172c46ba",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8a98fb92-5a79-484d-9944-9e73b30e7c24",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f82221f3-4948-460a-998e-0613de659d4f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bfc0505-7ed3-413d-a710-9acd0189c9f3",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d0af80-9114-4bcb-b2ba-8fb1b5cb25d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e58b6a34-bafd-4099-ac65-969492746b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad9bd29-9562-4cf4-9272-0f1d0eb0c12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7a4624a9-944a-46a2-b971-04d80fffb5ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "193b5f8c-9ec5-4b12-9cab-3554b9121ec6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52d6231e-a3ff-4ae2-8408-49632ee48332"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58eac15b-addc-4813-83c5-14efd9689af2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b59d8bc2-7182-4861-bb82-43890090ff90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e515540-125d-43f1-8b7d-c62f54188364",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27d2ce4e-c063-4d1a-b1e1-7978debf1022"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ccd26c9d-a63d-49e1-a210-b2e4e1b1399c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef7f42c0-4d84-4467-b959-376d139ff9ef"
            }
          }
        ]
      },
      {
        "id": "ea25111e-a910-49cb-adc5-9aecbe5c2b26",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4d05e68-96f6-46d0-bf02-56e717e36118",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "545ba543-6320-41c2-a5ae-cb8d79d09e11",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a60da18c-64b9-4c6f-829a-3df90fecf1d1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c645b517-1ac7-4293-8c39-e63a102b5294",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eebb37f8-b3c8-4916-88a3-34343f127273",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.992957746478877,
      "responseMin": 3,
      "responseMax": 257,
      "responseSd": 22.877504936002193,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691023187361,
      "completed": 1691023200884
    },
    "executions": [
      {
        "id": "4931b195-0f12-4cf0-ac0d-a0ae619d67d9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "686e4143-f010-437c-906d-80b0a455d1af",
          "httpRequestId": "3191b65c-b027-47ec-8fd7-a88bf4aca7fa"
        },
        "item": {
          "id": "4931b195-0f12-4cf0-ac0d-a0ae619d67d9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9584482f-fffa-4cd2-b3f5-f1cc09d22de7",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 0
        }
      },
      {
        "id": "ba081800-5e0b-4a75-ad1c-5be1ff50d9fb",
        "cursor": {
          "ref": "3d65073d-26e4-47c7-bd57-a8c70cd3cce3",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "74eb2167-4148-4cbb-a816-dc154d27c876"
        },
        "item": {
          "id": "ba081800-5e0b-4a75-ad1c-5be1ff50d9fb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "2d9da024-5ee4-4691-9474-abf29b68c95a",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "0757f9f0-7a4d-4b22-96ac-6eb5836dda78",
        "cursor": {
          "ref": "abc5d80e-ba69-4c8a-8c62-e20a97b2b9dd",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4672d124-dca3-43ec-8903-e14fa3da0265"
        },
        "item": {
          "id": "0757f9f0-7a4d-4b22-96ac-6eb5836dda78",
          "name": "did_json"
        },
        "response": {
          "id": "35b304ed-5fa4-4d94-aeda-b31f2e5ba61d",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb3a43d-f6d0-427b-905d-e014228cd8db",
        "cursor": {
          "ref": "1705f630-7b5d-4f48-8d6b-03b4761866c4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d13a4db1-169b-4cec-9267-974d0f9c9d2f"
        },
        "item": {
          "id": "0bb3a43d-f6d0-427b-905d-e014228cd8db",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca4ca004-5291-4f8d-8dc0-2baf33b81fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb3a43d-f6d0-427b-905d-e014228cd8db",
        "cursor": {
          "ref": "1705f630-7b5d-4f48-8d6b-03b4761866c4",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d13a4db1-169b-4cec-9267-974d0f9c9d2f"
        },
        "item": {
          "id": "0bb3a43d-f6d0-427b-905d-e014228cd8db",
          "name": "did:invalid"
        },
        "response": {
          "id": "ca4ca004-5291-4f8d-8dc0-2baf33b81fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12879cfa-7b03-4c1e-8efd-2b70a0cf2fbd",
        "cursor": {
          "ref": "2d696509-7c70-410a-bdd3-4883a130ba1c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ab6a443c-ebea-4e79-8d80-457350ac8f70"
        },
        "item": {
          "id": "12879cfa-7b03-4c1e-8efd-2b70a0cf2fbd",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a772fa74-4fbb-49e8-8f8a-29842fc9d340",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9f7631-11b5-42f1-af02-57c65686196e",
        "cursor": {
          "ref": "7f46eeb0-0998-4db3-9846-db200827f584",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "bcfe2c5b-032e-494a-afc3-0586694b2453"
        },
        "item": {
          "id": "6d9f7631-11b5-42f1-af02-57c65686196e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d9ca65ee-9cb1-42b7-b0a5-4272b3279947",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a44057c-10ac-4e3a-8fe3-db51eaaa7c5d",
        "cursor": {
          "ref": "10867b69-01f1-46bb-b3a7-406ff69787e7",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6d5007fa-98c5-40cb-964e-592dd3e77390"
        },
        "item": {
          "id": "0a44057c-10ac-4e3a-8fe3-db51eaaa7c5d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9ab1c974-8ea6-440f-a653-251194e78615",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55d284a-4da0-48ec-8eca-3bacb089d96a",
        "cursor": {
          "ref": "1b10ae86-f420-4b2c-ab68-ae2586bac39d",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "abb66c86-bde6-4813-b3f1-47e66571a84b"
        },
        "item": {
          "id": "d55d284a-4da0-48ec-8eca-3bacb089d96a",
          "name": "identifiers"
        },
        "response": {
          "id": "eece2363-a94f-4636-9f07-aa06a38ba002",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0603fd05-4595-494b-9764-4b5bf8d0982b",
        "cursor": {
          "ref": "cced86e7-78b8-44f7-b8b2-1d2ec816c8b9",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5011f44b-494a-4df5-b1f9-eecdfb573981"
        },
        "item": {
          "id": "0603fd05-4595-494b-9764-4b5bf8d0982b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c55ef7c0-3b46-4177-b5b4-eabd4c57f5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddbedf9-3c0b-4771-b22f-35428a38893b",
        "cursor": {
          "ref": "f1f677d3-109f-476e-b335-5539ca795cfb",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d3a3093c-3b94-4204-b766-20b4cf6ef086"
        },
        "item": {
          "id": "2ddbedf9-3c0b-4771-b22f-35428a38893b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "56068173-122d-46eb-a002-8d438943ac37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f45c12-3e1f-4a3d-8a97-c5725144f4fd",
        "cursor": {
          "ref": "d3521540-538b-4434-a517-f1f3ea5759b0",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ed4e1e65-f27b-40ea-9b9c-b8780630547a"
        },
        "item": {
          "id": "e9f45c12-3e1f-4a3d-8a97-c5725144f4fd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5c74d583-da58-4187-9c14-78d5a39cc2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aff29a9-8542-4f07-a4f8-e4edb4468dc9",
        "cursor": {
          "ref": "44b6db2b-0dd9-49cd-8e53-ffc97b6d19f9",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "97db5342-d39c-413d-9c2a-6466472111a0"
        },
        "item": {
          "id": "0aff29a9-8542-4f07-a4f8-e4edb4468dc9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f0a2bb00-562f-4dae-a6c4-6bec3d815295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8154f5-60ec-44a0-9de5-7b9b387f81f0",
        "cursor": {
          "ref": "e8b346c2-47b5-4009-a2ab-f904ef4e8d5d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "27ce113e-7b3c-457e-9a27-5c91c9c3d33a"
        },
        "item": {
          "id": "9b8154f5-60ec-44a0-9de5-7b9b387f81f0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fda5aeb9-e559-4682-bf95-d5b97f392dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cccf2d-3b6a-4923-9fd8-f9a097a61ff5",
        "cursor": {
          "ref": "aee578fa-2946-46ed-9c65-0f8e4c25f75f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c6f8a79c-5de6-4366-9cd6-d8f6db49a62f"
        },
        "item": {
          "id": "c6cccf2d-3b6a-4923-9fd8-f9a097a61ff5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c1ad822d-409c-445f-a021-acda1cf4e60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f825879c-4822-4f95-b498-2cd96417828e",
        "cursor": {
          "ref": "a06e05f0-5a63-41db-b213-af2896f3b352",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ccf10761-bf30-453c-bb40-13941d035f4e"
        },
        "item": {
          "id": "f825879c-4822-4f95-b498-2cd96417828e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b5af8b14-48bf-4ce4-b066-08e9cf02927e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a746bb-2035-4c38-8c99-7211cddd313a",
        "cursor": {
          "ref": "d3f482cc-d677-4fac-91c6-fe2b278e2def",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "780e0d68-316d-40b3-92e1-8fe5cea2558e"
        },
        "item": {
          "id": "13a746bb-2035-4c38-8c99-7211cddd313a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "e98c6a8c-7f4f-4002-a5c8-0b4ea3a57df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b73734-e673-4069-b0d4-ebf62a5cf5b9",
        "cursor": {
          "ref": "a9e9e706-4f2d-421b-aa42-898d2777f1db",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ceb71291-0fd6-466a-8e92-1e05e85011f0"
        },
        "item": {
          "id": "f7b73734-e673-4069-b0d4-ebf62a5cf5b9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6408b1ce-428c-4fca-9dc9-83f99f6445c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb04f9ed-4152-4908-a162-2d7bfb6a8f45",
        "cursor": {
          "ref": "31dbe6d1-ad28-44b8-b718-997912749f57",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e23816bd-737f-4880-800c-51aa0c277fc0"
        },
        "item": {
          "id": "fb04f9ed-4152-4908-a162-2d7bfb6a8f45",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "50531e5a-eb5b-44de-8360-362ba5fbe22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df4210e-bf8d-41a2-b04d-b6256f4a4641",
        "cursor": {
          "ref": "d7ca4a58-7a40-44e4-8f59-3eb43fa98b7a",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c920ca80-61d8-461a-b062-54725d544bf5"
        },
        "item": {
          "id": "9df4210e-bf8d-41a2-b04d-b6256f4a4641",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "78699e93-d54a-4578-9c6d-592d2559bcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "239ea6df-819c-4bdf-a862-999374e64229",
        "cursor": {
          "ref": "f2de5ae1-1fdb-41d3-9902-32050a6cfdf4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dae2648f-c88b-4672-af77-ee4b789dcc8f"
        },
        "item": {
          "id": "239ea6df-819c-4bdf-a862-999374e64229",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b267cee5-c371-4f7d-81eb-dc3cf9e2094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544ccb30-08ff-450d-909b-ecf9c056839f",
        "cursor": {
          "ref": "5b47c3ea-b028-4c81-85ad-b13420400b1b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "36dcc274-9412-4b73-9b4e-276946b06086"
        },
        "item": {
          "id": "544ccb30-08ff-450d-909b-ecf9c056839f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "49f7cd22-6ba1-42dc-a0fd-761d66c525d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e2ead1-6b1b-408f-8352-317d619d2b10",
        "cursor": {
          "ref": "ab514831-e641-4158-9112-25deed0cf39a",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cfdf3bf5-da30-440b-96e2-5ffe89fc792f"
        },
        "item": {
          "id": "02e2ead1-6b1b-408f-8352-317d619d2b10",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5b699de9-1dd3-4bc1-9e0d-e98f70f087ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ce06eb-2793-4068-b2ea-54d3f1fc39a4",
        "cursor": {
          "ref": "224faa7e-31ce-407d-b7e2-39b9b04e4ac4",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b996aee0-8157-45ce-8432-95be8aabd208"
        },
        "item": {
          "id": "d3ce06eb-2793-4068-b2ea-54d3f1fc39a4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a6aff21f-be2c-4028-981a-4257bbe6f17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2406bb6f-1dec-4eb2-a896-d4dbe73da369",
        "cursor": {
          "ref": "777faad4-e8a3-44b1-9447-11f9a904e92b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f006a12e-558e-4c74-9eee-37d62c975ba8"
        },
        "item": {
          "id": "2406bb6f-1dec-4eb2-a896-d4dbe73da369",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9f4db90e-38ce-4af8-9812-29fad685b69f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376009ea-dd44-4040-98ea-a810b7489659",
        "cursor": {
          "ref": "9bc4b91e-52f2-4636-8c06-36d7ad4b7a24",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "6e7fc141-a3a2-4d4f-b4a4-62afeb7d5bd4"
        },
        "item": {
          "id": "376009ea-dd44-4040-98ea-a810b7489659",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dab5458e-2b00-4ce1-94d9-9e094591b984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899faf5b-d6e3-4e58-9c8f-b0cf66b09f34",
        "cursor": {
          "ref": "7976ac7b-a197-455b-99a1-8f51e203b8cb",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9f0b61c8-2433-491a-8170-9f801543b988"
        },
        "item": {
          "id": "899faf5b-d6e3-4e58-9c8f-b0cf66b09f34",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0456da16-2c1f-4aae-97bc-876c2c7730f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eda2e59-ab0b-4fa3-811a-8b7a4d2f8c33",
        "cursor": {
          "ref": "0062216a-0cd1-4c03-9b41-769f7aec271f",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0b7bc90e-af66-4540-a94f-ddf957301a51"
        },
        "item": {
          "id": "1eda2e59-ab0b-4fa3-811a-8b7a4d2f8c33",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "fd38f8ee-874b-4cea-91b8-bd7c3f9020d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e0a320-96f8-404c-ae81-c375b1d0a984",
        "cursor": {
          "ref": "d437916e-2cc6-4401-a85e-0be67d32d342",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c5f2e50b-4fe3-4042-b263-3b0212b0c9c2"
        },
        "item": {
          "id": "a6e0a320-96f8-404c-ae81-c375b1d0a984",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6c5ff1ef-2a2b-420f-a057-c8db800924e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7682d120-ac08-4701-9102-18c4a2bbb224",
        "cursor": {
          "ref": "c3166406-eb1c-4739-b49d-d2afabfa2fe6",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b4e9795b-769f-49ea-9f30-fc419f2f48b2"
        },
        "item": {
          "id": "7682d120-ac08-4701-9102-18c4a2bbb224",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2e9cc5fe-260f-40cf-b24c-bedc1222f4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64050bc9-9229-4aa6-9603-fc92c8e31c94",
        "cursor": {
          "ref": "f4fbc013-80c8-406d-8d90-ba122418f5dd",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "a12c5687-f24e-4b86-8f84-aaee4b2b251e"
        },
        "item": {
          "id": "64050bc9-9229-4aa6-9603-fc92c8e31c94",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b5eff610-b1bb-4cff-982f-dc7335b31afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f416da7-e790-45ad-a8c2-ef8c641a5f13",
        "cursor": {
          "ref": "d090d30e-1298-4568-a57c-5022af26511c",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e1453a20-19fc-4899-9c34-c9c374aa4522"
        },
        "item": {
          "id": "8f416da7-e790-45ad-a8c2-ef8c641a5f13",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0fb41e98-0a52-45ca-8c08-1993768ba7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b62fbad9-e7c1-4318-8bf2-561149cd431b",
        "cursor": {
          "ref": "8aa8a4cb-594f-467a-bb20-e08830e6ac15",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1bc03021-7957-4b97-9e1a-114f7a44c0f6"
        },
        "item": {
          "id": "b62fbad9-e7c1-4318-8bf2-561149cd431b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e354a6a0-b2df-4dc8-bb31-06ba2098ae95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "605d7539-5421-4af2-ae83-2760be038e37",
        "cursor": {
          "ref": "aafee0bc-c1c7-4a8d-bd69-d61e635793cf",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6505ff41-7c74-4348-ba88-d53bcdb8e1a4"
        },
        "item": {
          "id": "605d7539-5421-4af2-ae83-2760be038e37",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cabd758d-ac37-41ba-a14c-774f8b489a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e07a18-7ca0-424e-9054-a12c3c1142cc",
        "cursor": {
          "ref": "623c1d9b-ef7c-4bfe-81c1-a575788bc27f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7eca4768-c30d-4154-8089-d22558276c7c"
        },
        "item": {
          "id": "b5e07a18-7ca0-424e-9054-a12c3c1142cc",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f12cbfdb-52c6-44ee-a85b-14302178a974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bea556d-d436-4bcb-9aca-b9194c555119",
        "cursor": {
          "ref": "efec80d1-cbe0-4d7c-a590-b2e9739cb128",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5e43a9bd-175e-4343-adab-1a53e35e61b5"
        },
        "item": {
          "id": "8bea556d-d436-4bcb-9aca-b9194c555119",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "1d02fabd-7bbf-4532-8cba-fe1070c83998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8961756a-104d-43f8-974d-8fe8ebb632dd",
        "cursor": {
          "ref": "f8eb1fbd-9d8d-49c3-8aa1-12fa4f12c1a0",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f91dc4a6-dc29-4052-9ab8-63805a5d4681"
        },
        "item": {
          "id": "8961756a-104d-43f8-974d-8fe8ebb632dd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "945f54be-2145-4a4a-96cf-dfbaaccb7e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c494482-7534-4ca9-a93d-14e7135cdc0b",
        "cursor": {
          "ref": "a07beb19-b619-4237-9b7d-169e3382755b",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6f9914fb-44fc-4972-a582-fa2072ad295b"
        },
        "item": {
          "id": "7c494482-7534-4ca9-a93d-14e7135cdc0b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4ab83a51-acf5-40fe-9ca8-c87da2e5ecfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c2911b-02f7-47ba-99e5-982221928478",
        "cursor": {
          "ref": "abfb84a0-6940-440a-a279-c242f0306038",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "083b2956-cead-4217-bbe0-549bd6beb2a5"
        },
        "item": {
          "id": "93c2911b-02f7-47ba-99e5-982221928478",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "24c08c09-3d22-4715-b82c-3680f404c607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55b21cd-c222-46ce-b877-996f78a99c24",
        "cursor": {
          "ref": "da73ca1d-aaeb-4fd6-8fcd-6d9586b75f11",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ceef7afa-010c-4e5a-9d31-f42f1c9442a1"
        },
        "item": {
          "id": "b55b21cd-c222-46ce-b877-996f78a99c24",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "90de367d-e428-4f5c-b41f-3222169c7d4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076f2855-538f-45cb-9c2a-205d9d2e099a",
        "cursor": {
          "ref": "e79f41b8-a58d-45a5-b79a-411a9dfd0340",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "75dacc22-72cd-4d5d-a8e4-a49c1c95744e"
        },
        "item": {
          "id": "076f2855-538f-45cb-9c2a-205d9d2e099a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "985d9cf1-e381-4606-b2f9-b623df6b3965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bc05f5-e053-4d8d-8c6a-9dffbbf38236",
        "cursor": {
          "ref": "48f17c89-878e-474a-a03a-102cdb2cee5b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "448f6819-6328-496b-b3a3-e250735b6e16"
        },
        "item": {
          "id": "24bc05f5-e053-4d8d-8c6a-9dffbbf38236",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f732bf3f-2966-4ba6-9850-c018e3cc4d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c662ac-9efd-44c5-a04d-80e0d4b5cabf",
        "cursor": {
          "ref": "4dd7375b-d0c7-4dd1-abfb-1b19a55e9a99",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "07afff74-6c83-41e1-9d43-b8e166a083d7"
        },
        "item": {
          "id": "f3c662ac-9efd-44c5-a04d-80e0d4b5cabf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "19499527-d4a7-4fde-a3d2-93083fc80c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a94885-6f00-4b20-ada3-dbe7b2523dc5",
        "cursor": {
          "ref": "447a6d50-c389-4a33-89d2-41ee045d8e08",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a775e40e-878c-4178-a0f4-6134f27513ff"
        },
        "item": {
          "id": "a1a94885-6f00-4b20-ada3-dbe7b2523dc5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ccd49733-3c9c-4566-87e0-28e8057ff79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becc0a81-d5ec-4bfb-9208-cc7222da637d",
        "cursor": {
          "ref": "9f338cb7-5ddb-4444-994d-b91e20b3969f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "29594c7f-9e18-4fd3-b128-0f6c810b9d49"
        },
        "item": {
          "id": "becc0a81-d5ec-4bfb-9208-cc7222da637d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dfd65869-1299-405b-b9e6-8ee196bb69e1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29136e2f-ee31-4cfb-9a47-b64031abdc86",
        "cursor": {
          "ref": "95a4e53f-7b5f-4a6b-ada1-a19b2e85687c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0cd25d24-2176-4175-adc7-813703eccbc3"
        },
        "item": {
          "id": "29136e2f-ee31-4cfb-9a47-b64031abdc86",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c78f0fa1-a51b-4706-9b73-036e2db7c54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0b0ad6-f8a3-47e1-84c9-c443718b0108",
        "cursor": {
          "ref": "1e689c6c-774e-42ae-87b2-4b9f876bf317",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "69e5e174-4df0-4fc6-af26-15aaae9ce10e"
        },
        "item": {
          "id": "5b0b0ad6-f8a3-47e1-84c9-c443718b0108",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6bd81cc4-ee57-44de-9c8c-d04cb8f3c0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037b4db1-32fc-4e85-8fc3-21a91906a5d4",
        "cursor": {
          "ref": "7cd7452a-c1b4-4de1-8589-9852adf92a1b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1910ffaa-a5da-4f22-a2d3-0b9930a0b1e6"
        },
        "item": {
          "id": "037b4db1-32fc-4e85-8fc3-21a91906a5d4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fbcca86b-5350-48f0-b0fb-49d305dabf29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c2a236-e971-4aac-b092-156091f9c3f8",
        "cursor": {
          "ref": "2107d6e2-eec2-4a87-bb55-1fe588fb97c6",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9c827ff4-8f78-4c99-bdfe-25dbf42e63c5"
        },
        "item": {
          "id": "76c2a236-e971-4aac-b092-156091f9c3f8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "45dd11fa-ff76-4012-a049-b083efe358d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38124404-af3c-4462-892e-da8c3e1974a9",
        "cursor": {
          "ref": "a003b8d9-81e5-47af-a67a-2eae7bc1bd90",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8f05d1f1-9536-4b42-9283-6bd581ed0f1e"
        },
        "item": {
          "id": "38124404-af3c-4462-892e-da8c3e1974a9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "eb01043b-f250-4ba9-9a75-1b8feae199ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792ce19a-fbc0-46f0-b9a4-d3b96cba38db",
        "cursor": {
          "ref": "20ed893c-b1bb-4b7a-bdff-437688195077",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b4a3a56d-8228-4085-9605-eac1cbad1d64"
        },
        "item": {
          "id": "792ce19a-fbc0-46f0-b9a4-d3b96cba38db",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "882af9f4-6b50-465b-8140-a71926b2b975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163e30e7-4ba6-4b86-824f-1670a78f9c96",
        "cursor": {
          "ref": "8b1b5c8a-21ca-41f6-a102-63f9abeff18b",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "469546b5-9bbd-4164-b22d-8a3c84fa5aac"
        },
        "item": {
          "id": "163e30e7-4ba6-4b86-824f-1670a78f9c96",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2ff4e7fd-3e65-4d70-a8e4-861fd72538e4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586e07e5-93d8-4d89-9a9e-cf5263456de2",
        "cursor": {
          "ref": "afc9e0ff-0580-4068-b4b0-d3d4df49afcc",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7b28dbcf-e2f8-46dd-847a-1f8d7d7a0864"
        },
        "item": {
          "id": "586e07e5-93d8-4d89-9a9e-cf5263456de2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "91c6a79b-9ef6-4479-86e3-d5bdfa575e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37f67f8-7d2c-46d2-a729-be7688ca25c7",
        "cursor": {
          "ref": "8c1fae29-7efd-4563-b80c-e85b0981e604",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c25011a7-f644-44a1-aa2c-bc3d655bf39e"
        },
        "item": {
          "id": "d37f67f8-7d2c-46d2-a729-be7688ca25c7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b37c76ed-bea4-429d-afbf-f453e62e3e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d845d38f-54a5-4279-ac5b-0ba61dd5f44f",
        "cursor": {
          "ref": "0c1d7626-4354-46e5-9f5d-c976333b3f32",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0acea2c3-65e0-49f2-8c22-c0f0f0c7cfe8"
        },
        "item": {
          "id": "d845d38f-54a5-4279-ac5b-0ba61dd5f44f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b9de8021-be7a-4490-85e2-c5cbf40d9d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e62a88-f6d7-44bb-a0f2-528d6563b0a2",
        "cursor": {
          "ref": "7a81ffe2-1796-4094-9017-a6c53dd23000",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "564f01e7-93b6-4362-ba97-36f515752e38"
        },
        "item": {
          "id": "24e62a88-f6d7-44bb-a0f2-528d6563b0a2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7dc98199-8bb8-4ac4-b020-93cc5da0fc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67ae12cd-1a6b-4990-9c8a-a12ea45098ca",
        "cursor": {
          "ref": "9af3a9dd-f4f3-43ad-9e66-7f17749188e6",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "70870b3a-70ac-4a0a-8aab-71ee211abe58"
        },
        "item": {
          "id": "67ae12cd-1a6b-4990-9c8a-a12ea45098ca",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "edb07bad-7a6f-4dbe-ba1c-1a4bcdba8f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee0d3f7-7d8e-4d8a-ae99-206fab3b6f42",
        "cursor": {
          "ref": "f8b84803-0eba-4e40-adcd-6a62e4adc94f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d4e77713-842b-4d8b-b541-36e67983414e"
        },
        "item": {
          "id": "eee0d3f7-7d8e-4d8a-ae99-206fab3b6f42",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7aa07bef-4e40-4365-9fac-3a1325b68be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e706489-736a-4909-8f32-3ac3f704e28c",
        "cursor": {
          "ref": "bfa5f30d-d23d-4321-8558-5dd77a84eab7",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2dde912e-d7ac-4407-ae32-e7b30c9a1cd8"
        },
        "item": {
          "id": "4e706489-736a-4909-8f32-3ac3f704e28c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6f2eaa1d-e2b2-452b-b2f3-70c7fcfdf5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae01891f-71b3-4abe-b117-aa97e92aa4f6",
        "cursor": {
          "ref": "ab2cf924-edda-444b-81c2-6440d15b13f4",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fe07e01b-80af-47a7-9f5e-2af70f114e06"
        },
        "item": {
          "id": "ae01891f-71b3-4abe-b117-aa97e92aa4f6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "d4a0efa1-a61d-4d18-8049-29c85166e1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45de5bd9-2981-4836-92ae-884a03c682f7",
        "cursor": {
          "ref": "f38273b6-719f-41e3-bef8-ce6c55183951",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "733b96bc-4197-492f-89a4-d69d5ffd0f47"
        },
        "item": {
          "id": "45de5bd9-2981-4836-92ae-884a03c682f7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "359366b5-d908-4d8d-a192-ea2d4e226ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48ea5c8-7c7d-4059-ad29-9c49e29a947e",
        "cursor": {
          "ref": "3f408bda-c265-4b63-92d7-6fec0bd9258f",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "cc4d835b-5f92-46fe-9073-1d22c8b560d3"
        },
        "item": {
          "id": "b48ea5c8-7c7d-4059-ad29-9c49e29a947e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b0e7b5e4-3783-4f16-a952-308161e6d8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a88a995-9f5a-4453-a905-79c3dc51a4d6",
        "cursor": {
          "ref": "2aae37d3-47b9-4622-bbb0-e3928eacbd7b",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4f0dd65d-d9b5-41f9-a766-008a4fd7c90a"
        },
        "item": {
          "id": "2a88a995-9f5a-4453-a905-79c3dc51a4d6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0f20a038-215d-4da5-a974-21b086436efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cefd79-e3c1-4bfb-b2ee-77f576a85278",
        "cursor": {
          "ref": "cff87274-e9c5-46d5-bed2-8e6a44add783",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3d3846a2-8eb3-4e60-8468-806cb37ea244"
        },
        "item": {
          "id": "03cefd79-e3c1-4bfb-b2ee-77f576a85278",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e4b5bdff-2101-4573-8d50-e6885a5ed324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c333d42-6b80-41cc-9ec0-507bcb28ae62",
        "cursor": {
          "ref": "bf42e38f-63f8-4be4-a241-863f50f4880a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fb77b469-01c9-4d6b-b0a5-6003e6ee47c9"
        },
        "item": {
          "id": "9c333d42-6b80-41cc-9ec0-507bcb28ae62",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "32ef6f36-348f-4418-9060-8ef52a008c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42db549-1d74-4b1a-9834-db1255aaca09",
        "cursor": {
          "ref": "5a902b55-54fc-4208-baea-47852859b85d",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e7f8fc9a-61c5-4517-9d24-8ca661c1b468"
        },
        "item": {
          "id": "c42db549-1d74-4b1a-9834-db1255aaca09",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "db732158-1d92-45f4-86a6-e742b7da754e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03a3db9-979c-483c-b6b7-620945abd25c",
        "cursor": {
          "ref": "fbd53f63-fba7-491a-a261-02023448701f",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8fca7d3c-916b-4a4d-98e7-5247b9b8d006"
        },
        "item": {
          "id": "c03a3db9-979c-483c-b6b7-620945abd25c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "48bca22a-75dc-49ce-9ccc-e92cab10baa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0261e2b2-89b1-42f5-8e20-d080c0c263ba",
        "cursor": {
          "ref": "55cb605d-554c-4d8a-947a-12de6022bab3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "efa94ed9-3a1e-422e-a378-61ca25a9fd75"
        },
        "item": {
          "id": "0261e2b2-89b1-42f5-8e20-d080c0c263ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "52fb95e5-a916-4910-8ebd-232f76734812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60526223-b010-447e-bef5-85de74aae46e",
        "cursor": {
          "ref": "64e457a0-7f07-458a-8a21-e24acc3032c1",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7d449227-cb7b-4c21-8431-8710e7579b29"
        },
        "item": {
          "id": "60526223-b010-447e-bef5-85de74aae46e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6f9969cc-a0e0-403e-a221-5432546c2f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "679b9fea-4339-4176-9aad-77a953a98796",
        "cursor": {
          "ref": "0001dae6-0a73-4c1b-8b3b-afa3b375e9c2",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f2123cfc-5389-4ead-8452-19e1efc0b092"
        },
        "item": {
          "id": "679b9fea-4339-4176-9aad-77a953a98796",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c3e30cb4-04e6-4d43-9d55-da72d1f40b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8866818a-4a1a-435e-bf94-0271a291b259",
        "cursor": {
          "ref": "1a7f8d4c-1289-49e7-b2ef-0b6342159c91",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9ff51725-1cb0-4736-be29-e1e54563e3d3"
        },
        "item": {
          "id": "8866818a-4a1a-435e-bf94-0271a291b259",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a8d60c82-8995-4f32-a559-ad34d6dcec2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4764ac9f-5eca-4483-9605-fc43f8578c03",
        "cursor": {
          "ref": "8a98ca7d-35e5-429e-92d3-1bd09626b244",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "fa3bab3b-c316-4809-b1a5-5eee71803160"
        },
        "item": {
          "id": "4764ac9f-5eca-4483-9605-fc43f8578c03",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6ba2128a-0e2f-4414-9ca2-ffed3036aa5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d8480d-2d51-40b5-a51d-c398d5c44d64",
        "cursor": {
          "ref": "64cb800d-06cd-4af7-869a-e7388b1dac56",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "067be716-43e4-4211-b145-e3ad584b3894"
        },
        "item": {
          "id": "c8d8480d-2d51-40b5-a51d-c398d5c44d64",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "066db576-6a69-4ee1-9a34-37d9d52b252a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd12d4d-05c3-47ee-80ca-c70b4d9ecf8f",
        "cursor": {
          "ref": "f54bc8d1-3315-4ee9-ab3d-7f0040f490c8",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "24256881-13e6-4e9b-8529-57d6913cefd9"
        },
        "item": {
          "id": "4fd12d4d-05c3-47ee-80ca-c70b4d9ecf8f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "36ef06ae-6233-4008-b734-d29030ed75a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf0a9e0-2da4-458e-bf5d-525786b1623d",
        "cursor": {
          "ref": "1a25721d-a6a8-416d-8317-737272ef89ef",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "575edfde-7fc1-4df0-905b-9e3b3725d5ab"
        },
        "item": {
          "id": "abf0a9e0-2da4-458e-bf5d-525786b1623d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "eb31b5d8-eefe-4d43-a7d3-1146ce48645c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfcb743-acba-4c18-b802-6ab8e6602e04",
        "cursor": {
          "ref": "112e6318-435a-411e-8cf9-a99b95a104dc",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f42c2079-2fcf-49b7-a38e-5f6e5a217008"
        },
        "item": {
          "id": "2bfcb743-acba-4c18-b802-6ab8e6602e04",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "61a194cc-3535-438d-a90a-8ff386f8017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f5b780a-d2d0-4167-8b74-382636fd51cb",
        "cursor": {
          "ref": "b88fa85b-ac0b-43b7-a7a9-2dd5b32ae709",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a9b38c7f-67fa-41eb-983a-40d6fc36dd16"
        },
        "item": {
          "id": "0f5b780a-d2d0-4167-8b74-382636fd51cb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "32f12293-ffbf-4fdb-8d2a-c402de542a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f9fde42-2f6d-4313-9660-3a6c592f06c9",
        "cursor": {
          "ref": "4265e3b1-518c-46ea-8433-8086e39d7557",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c649ca81-7923-4b63-bff8-fecdc528cfa5"
        },
        "item": {
          "id": "6f9fde42-2f6d-4313-9660-3a6c592f06c9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e583fb8c-57a8-47ee-923c-39497deba24b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7cb3b0-be9e-450e-abd3-4b80a8606d65",
        "cursor": {
          "ref": "f726f99b-7491-4eb9-9a5e-64db52b2f560",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cf7254dc-93e5-4365-8d22-cbdb6e592cf1"
        },
        "item": {
          "id": "0b7cb3b0-be9e-450e-abd3-4b80a8606d65",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "78085c6f-cc50-4544-b7ab-20cc0bc9da77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6230bb6-b49c-4ab2-9708-e5aa04edf6e4",
        "cursor": {
          "ref": "2f9df21a-0e1f-4878-8654-126843be18a6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "619eaf12-a788-439b-ac34-a49aa48d9180"
        },
        "item": {
          "id": "a6230bb6-b49c-4ab2-9708-e5aa04edf6e4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f0957d6d-5e64-420b-b14f-78d1d60314c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7389ef91-9654-4f2a-a202-c3b9e6e8a318",
        "cursor": {
          "ref": "887efb3a-0396-4256-84b0-4f67dac067df",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "35d6fc6a-8219-4544-94e8-aa30229c0ac8"
        },
        "item": {
          "id": "7389ef91-9654-4f2a-a202-c3b9e6e8a318",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "609ce17f-c9fa-4586-b5a6-09f9c6e12a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a278fe-b9b4-4dc5-843e-ba28138efb0f",
        "cursor": {
          "ref": "72580e9e-ffb1-414e-8310-cfeab6b587ee",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "53023caf-1376-4904-9e92-60e323907d8f"
        },
        "item": {
          "id": "80a278fe-b9b4-4dc5-843e-ba28138efb0f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "18491bc2-4b32-4147-bebd-e3fdac004f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0d45ce-d914-4019-a97a-92501019baa5",
        "cursor": {
          "ref": "060be59d-dcba-4531-aeb5-794055a30aab",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ec65ad4b-30bc-4235-89c1-62050b3b69da"
        },
        "item": {
          "id": "2b0d45ce-d914-4019-a97a-92501019baa5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b41e8ca2-5c54-466d-99cd-e558e7cba37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9568e6-65bd-48f7-99af-1af9b19d5176",
        "cursor": {
          "ref": "b0064db4-0fa6-402c-a6e3-7d509faf0e43",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0e49bc42-003d-415d-8967-ab6df1dcfe1a"
        },
        "item": {
          "id": "4c9568e6-65bd-48f7-99af-1af9b19d5176",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "86181a37-b6c2-4b6d-94e5-4fcada0a5555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f5b093-ac33-4ebd-ac1b-4150a63ba46a",
        "cursor": {
          "ref": "14b44894-bde3-4b77-8c8d-aa4481832ba3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "49dbd52e-d985-416c-9e28-344a795b89da"
        },
        "item": {
          "id": "24f5b093-ac33-4ebd-ac1b-4150a63ba46a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "94fd86f6-4232-464b-a918-5ee52b1fad76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8588e610-782e-4c36-8d21-2341a8fbf3c8",
        "cursor": {
          "ref": "ae46b5be-594f-4218-9107-cab1fa29e4af",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fb58098a-ec8e-44d6-ae97-59f31ba93c12"
        },
        "item": {
          "id": "8588e610-782e-4c36-8d21-2341a8fbf3c8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2a425d03-15bd-430d-958a-a79e6226ae89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bdc41c-b8c4-488b-b531-b13a75c02846",
        "cursor": {
          "ref": "0dddecf8-f035-4572-8f26-db22b56a6b2b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7b2b7c4b-4ffe-4d2f-9a5f-eee9b5ed7e05"
        },
        "item": {
          "id": "91bdc41c-b8c4-488b-b531-b13a75c02846",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bedf86fa-fe17-401b-b575-eb20911cbe66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cf6126-689f-4ff8-8ea4-9e9d68b38fab",
        "cursor": {
          "ref": "93b5d220-a417-460a-80f4-bf33e68ba56b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7b0d1c66-a1cc-42cd-9c61-ad5ee5122c72"
        },
        "item": {
          "id": "69cf6126-689f-4ff8-8ea4-9e9d68b38fab",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f645ccb5-07f7-4527-95f5-b8d13403951d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb7d573-37d4-477d-8f34-796a91759fa8",
        "cursor": {
          "ref": "4d0a22ea-3aad-4914-bbee-479eaf6c50de",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d90457d2-5c66-4f85-b24b-6dfa47bf1cb6"
        },
        "item": {
          "id": "4cb7d573-37d4-477d-8f34-796a91759fa8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2e055725-a2d0-4f43-9068-baa5c758a304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5c3fff-4323-48e8-9ee9-76a268cbb787",
        "cursor": {
          "ref": "355fddca-2c25-4dd1-901c-986a584852a6",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "888b2e5d-c8ef-42c8-a747-c80facdfce68"
        },
        "item": {
          "id": "4a5c3fff-4323-48e8-9ee9-76a268cbb787",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f29be52d-401f-4f50-b869-ce91b10ef975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685f7850-1d8e-4b5b-8cd6-694dadf7e9b3",
        "cursor": {
          "ref": "f27c2a64-50cb-4d9e-a1fa-3c179cdbca0e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2deb1d4f-759f-4624-84bd-f4fe1bbcc79f"
        },
        "item": {
          "id": "685f7850-1d8e-4b5b-8cd6-694dadf7e9b3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1691e3d2-5ef7-46fd-9f13-da9662023d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429b397a-0d1d-40ea-be89-15f6ffb8e1bb",
        "cursor": {
          "ref": "6ab79844-0d82-40e8-9548-bc223e2fb5f0",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b0c02228-cd61-432e-bc37-990f6868d493"
        },
        "item": {
          "id": "429b397a-0d1d-40ea-be89-15f6ffb8e1bb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5336019a-6487-42a0-b63c-fac9115a84ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733cefc8-6424-4af5-b372-2ea12ff1b3e5",
        "cursor": {
          "ref": "000cccb5-009e-44d1-bdf9-bfe0cc967c99",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e8252e5a-2821-40df-bdc5-3ef00eca7c7a"
        },
        "item": {
          "id": "733cefc8-6424-4af5-b372-2ea12ff1b3e5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e603c771-b613-4605-9ea4-83a9c9a415fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d296f19c-b036-4a8f-a7e9-14c3b9e727c0",
        "cursor": {
          "ref": "7d24be56-fa89-4c21-a3a3-b4bd4571e3a4",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c9576b52-0085-4091-a005-589c625cf287"
        },
        "item": {
          "id": "d296f19c-b036-4a8f-a7e9-14c3b9e727c0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "104d836e-cb11-4985-83fc-b5d3aa46de59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419d3517-41b6-4058-b620-cba23593f739",
        "cursor": {
          "ref": "04b7600e-cd52-4367-884a-311b93143096",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9a70fdf7-fb50-4214-bf07-127d700fa91e"
        },
        "item": {
          "id": "419d3517-41b6-4058-b620-cba23593f739",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "89e0d640-35f1-4b3d-a6f2-e40bf88a8575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37fc48d-920a-494c-beff-c5f675c03d04",
        "cursor": {
          "ref": "fa2836af-2fe5-411b-9a00-579bc679c135",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e8e0414e-ab59-4e63-ad03-d44d9b3ef1da"
        },
        "item": {
          "id": "c37fc48d-920a-494c-beff-c5f675c03d04",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1ce6db09-81e4-4513-8aac-ba09a1d92ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f55b9d5-86a7-4306-88a3-c383c67ea659",
        "cursor": {
          "ref": "ad77a825-2e7f-4854-a4c9-44c8b1145721",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "75f48d12-b1c6-45a0-a5dc-40922237e674"
        },
        "item": {
          "id": "6f55b9d5-86a7-4306-88a3-c383c67ea659",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e4062603-5946-4fd0-a27d-25c7201e7d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a48e85-1108-43e2-8f4b-c3f420c4a8a7",
        "cursor": {
          "ref": "91e4e915-fb84-49d1-ad3f-80a9e7057694",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "589a97e5-af51-4e3a-bbc8-980aec3d301c"
        },
        "item": {
          "id": "b2a48e85-1108-43e2-8f4b-c3f420c4a8a7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "97044ae8-0f75-48ff-a4ca-b0970efeb2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90551651-655f-4ad4-a235-a0ae938ff6b7",
        "cursor": {
          "ref": "4e211207-2771-4c3e-8e47-e93d0d346bb6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "78efc52e-5a76-4e07-827e-ee2ace4e1dfe"
        },
        "item": {
          "id": "90551651-655f-4ad4-a235-a0ae938ff6b7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d26384a9-0873-4df6-a9c1-3b14d0cbd71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b31caa-1dc7-420e-bdf5-439d03087f0d",
        "cursor": {
          "ref": "6a0e3e30-3c64-4949-ae2c-e705b11d9eb1",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "173a38d9-5043-484c-a8bb-9c1fc788ad9d"
        },
        "item": {
          "id": "a4b31caa-1dc7-420e-bdf5-439d03087f0d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "57a59839-407b-48cd-a002-be653278f842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4b10a1-c319-4191-915d-a518f31de98a",
        "cursor": {
          "ref": "1a7adef6-3a94-4c86-b444-5f24899cf40a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "42424fa4-6a12-42d2-8708-20d2b32a32a1"
        },
        "item": {
          "id": "ce4b10a1-c319-4191-915d-a518f31de98a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "3b2fcc17-c245-46d7-8c48-b3ab217d22cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e371bf6-1b8d-4a56-b9f7-29e28f567e1b",
        "cursor": {
          "ref": "46e7d6b4-0781-4e8b-a08e-fae0cb73d25f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "17f60838-7631-4ef6-ae14-70dc5a113b99"
        },
        "item": {
          "id": "7e371bf6-1b8d-4a56-b9f7-29e28f567e1b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f7b21125-8a82-475f-ac1c-ae7643894354",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed1da69-73a4-4c8d-aff3-d33118b64c6a",
        "cursor": {
          "ref": "f97c20fc-11bb-4a95-8eec-82926e04fb5f",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "044f4d7a-629e-4795-b0e1-40ab5d2a4578"
        },
        "item": {
          "id": "7ed1da69-73a4-4c8d-aff3-d33118b64c6a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7a78f8d2-afc6-402a-8051-7bfe3c7d0347",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d37dd1-3549-46cb-9264-61084c06a05f",
        "cursor": {
          "ref": "db6440bb-aef4-4393-80b5-27d0d2aa10d3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7b468190-bbad-48ac-86bc-ba45a1f64ae8"
        },
        "item": {
          "id": "75d37dd1-3549-46cb-9264-61084c06a05f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6ea15884-e7c7-42e2-a20d-9aaaad3c2895",
          "status": "Created",
          "code": 201,
          "responseTime": 187,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "91691d63-d9b5-4aaa-80a5-fae41d21aca7",
        "cursor": {
          "ref": "4054dee2-eabe-42db-8d65-8735e1cf971f",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4148f132-7780-4b1b-95e0-1e5d9969fdfa"
        },
        "item": {
          "id": "91691d63-d9b5-4aaa-80a5-fae41d21aca7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a3d2996e-9f21-49eb-ab0f-73b1587bd4e3",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e809a793-464e-45c9-b623-d0d717a36850",
        "cursor": {
          "ref": "6a3079e3-1c8d-4d99-81a1-1c1b0e71c1de",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6f8b2c65-b2e9-45df-82fa-d03d09233974"
        },
        "item": {
          "id": "e809a793-464e-45c9-b623-d0d717a36850",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ac010931-36f7-4a6d-b67f-d7a9caffea7d",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfa1d74-98eb-43fe-9e67-c069346af1d9",
        "cursor": {
          "ref": "f47423f3-c378-45d3-b2e1-3c577f18cbd6",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0baffa66-7c5a-4b22-a8d2-01a521f9c6ab"
        },
        "item": {
          "id": "dbfa1d74-98eb-43fe-9e67-c069346af1d9",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d393e627-60f7-4aac-989a-8f959ce0a737",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d380df-9ba8-4259-83c8-4dace3911ace",
        "cursor": {
          "ref": "c44e4475-189e-41f8-a3c7-5ba0a07ff3ef",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ddf31e75-08f3-4c4b-8a5f-4552bedbe821"
        },
        "item": {
          "id": "b9d380df-9ba8-4259-83c8-4dace3911ace",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8788c786-a772-418a-b487-052fb4b8eba3",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3104ebd9-6c78-406a-b535-a59b10eb6aa7",
        "cursor": {
          "ref": "775821ce-6e47-4639-9e39-3846b8217146",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c8889bba-8a60-473e-ae84-59834f90cd36"
        },
        "item": {
          "id": "3104ebd9-6c78-406a-b535-a59b10eb6aa7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "90600fec-a64e-4d5e-a08c-51db3ba5b276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf71b1be-9210-4724-8169-b6178ee68be6",
        "cursor": {
          "ref": "5f48dba5-ae0e-4f2d-94f7-e25eeda1fadc",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fa86409d-3244-4f59-ba26-443274a20cf3"
        },
        "item": {
          "id": "cf71b1be-9210-4724-8169-b6178ee68be6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "368334ad-34e1-44a4-9a30-c5c807f3af67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a21f62-e6c5-4990-b54f-c90040cc975b",
        "cursor": {
          "ref": "71e73338-c652-4488-a49e-27b84291ff35",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b5c61fc5-3c55-4483-a793-acf9fb57a3d3"
        },
        "item": {
          "id": "d6a21f62-e6c5-4990-b54f-c90040cc975b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ab806be0-c148-47f1-a1d6-169ef4b2d77e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97afce82-aef7-465c-86d2-2f69e84f319f",
        "cursor": {
          "ref": "2771acf2-988c-48d3-bba9-d59ac5b28fdb",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9ff007cc-bed1-4358-92d5-40b9bab6c8f3"
        },
        "item": {
          "id": "97afce82-aef7-465c-86d2-2f69e84f319f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9bc29f65-5601-4033-a26a-4b42ddca89f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530b81e5-3c6f-45cd-bfdf-16540ff085fd",
        "cursor": {
          "ref": "ce9c4929-ca06-49ec-a349-d1806cc61ed3",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0864d109-37b1-4ea6-9a71-7a75d4a50592"
        },
        "item": {
          "id": "530b81e5-3c6f-45cd-bfdf-16540ff085fd",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "558f79a9-e84c-4b90-b9b5-5565e372962d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3c01be-2391-479f-9ee4-1aefcb4ec2d0",
        "cursor": {
          "ref": "80b98336-d728-4e50-a695-a2c0a934f483",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "831c6aa5-a4e0-48a7-9be8-381e05393dc7"
        },
        "item": {
          "id": "aa3c01be-2391-479f-9ee4-1aefcb4ec2d0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fb5dc79c-46cc-4f84-8c56-8020a1982e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70dca1b-580a-4527-a895-a641cf4dd391",
        "cursor": {
          "ref": "5679e2c3-d315-490a-85d8-6749f66d280e",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "96b6564a-0e61-4a17-9ff4-fe59d75edfa4"
        },
        "item": {
          "id": "f70dca1b-580a-4527-a895-a641cf4dd391",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "897c2b8b-6929-48f6-a9e3-42ba344b7294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594e6b56-e3d1-40a4-b918-d591e2515440",
        "cursor": {
          "ref": "5cbae785-ad7f-4f79-8fe1-3c0dd3d4b2df",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9f4afcaf-dc3c-41d4-b4cf-3755df12fc45"
        },
        "item": {
          "id": "594e6b56-e3d1-40a4-b918-d591e2515440",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "843d8316-f9ea-4834-81bd-890c1845a41b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdc4c57-df7f-4caa-a9c1-55791422c69e",
        "cursor": {
          "ref": "d0a46615-c017-4638-9e29-bc2ec8c80936",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "75e56beb-ae88-4996-89f1-9b10d3ee982d"
        },
        "item": {
          "id": "ffdc4c57-df7f-4caa-a9c1-55791422c69e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8d98df52-5142-412b-8430-e61a1b7f4bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92dca798-c8fa-4e8b-be48-393331b43454",
        "cursor": {
          "ref": "e7c08044-02cc-4141-875e-7ce6cdec1ad4",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "7f199b98-004b-4337-b758-95ea45308345"
        },
        "item": {
          "id": "92dca798-c8fa-4e8b-be48-393331b43454",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e28cbd0a-28bc-498a-84c9-3fe6c93f5fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ebb3333-e2e2-4c31-927d-60164577c2b5",
        "cursor": {
          "ref": "2bcec9b7-9ea1-4956-9d37-5fca440ff223",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "803d9976-a30c-4271-884c-d82851865170"
        },
        "item": {
          "id": "8ebb3333-e2e2-4c31-927d-60164577c2b5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b556626b-e51f-4ba6-9d23-421843ac29de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e42fbe8-7181-42fc-978d-d99efec1c790",
        "cursor": {
          "ref": "354d8f39-6b13-4e5f-b1af-14e7f30d64ba",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "49cf037a-5fd6-4768-a849-8b97fbfc13fc"
        },
        "item": {
          "id": "7e42fbe8-7181-42fc-978d-d99efec1c790",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b17655de-baaa-4cab-b736-c270fe672534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2b6f07-e7fd-4b29-8e69-9561159f7ef0",
        "cursor": {
          "ref": "650aa72f-5c42-4f26-8918-bff5847dc813",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "48d9ec60-6ec3-409f-be16-eb33099443be"
        },
        "item": {
          "id": "ef2b6f07-e7fd-4b29-8e69-9561159f7ef0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d0ad79ef-d058-4b0e-b54f-0ec9b690f933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a0e451-b574-4783-874e-a81f9bb09ae3",
        "cursor": {
          "ref": "b519f0b8-38ac-4a46-9624-f9462ab6f710",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f920739b-6b77-4551-8125-980414caa082"
        },
        "item": {
          "id": "d0a0e451-b574-4783-874e-a81f9bb09ae3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4ff9eccc-2f48-49bd-b479-3c220fe98120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592a6198-393e-4879-a7b6-3c752879db4a",
        "cursor": {
          "ref": "f39a4ba0-87ab-43b6-84b2-e8b225874cbd",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ad54ad76-5997-4f43-ab1f-3319abf25ac4"
        },
        "item": {
          "id": "592a6198-393e-4879-a7b6-3c752879db4a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4657782c-14af-414a-9750-8a073acb9523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a5d243-a22f-4196-b322-6e02c2291adb",
        "cursor": {
          "ref": "e1eba820-2405-43f8-a599-df97206dea04",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "df10eb43-ca0a-4633-9116-91869ba8c7ae"
        },
        "item": {
          "id": "f5a5d243-a22f-4196-b322-6e02c2291adb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "55493736-20bf-4a4c-9801-dafa048e2a69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533dc7d5-2800-42d3-a88d-5e15eaae8f88",
        "cursor": {
          "ref": "6fcd7e86-5cf3-4f9d-a58d-ea6f9651c6ac",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c03aa864-64b4-4cb6-82a6-c51e3174471a"
        },
        "item": {
          "id": "533dc7d5-2800-42d3-a88d-5e15eaae8f88",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4ba11b9a-e9ba-4f52-8c92-e3059e14929f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da9d4ea-921d-48d4-8627-d81cb311770a",
        "cursor": {
          "ref": "09785873-eeac-4fcd-90ee-e084b65d140b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2dbae58e-4b26-4e41-9a73-be09f8546cb2"
        },
        "item": {
          "id": "0da9d4ea-921d-48d4-8627-d81cb311770a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0565bceb-5b0e-4046-a542-50b835762456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb771782-596c-4bb2-85f2-1be9c9b8f030",
        "cursor": {
          "ref": "274e06b6-99d1-4665-a8b5-2ffdc6734e47",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "10bbe04d-aeef-47d7-bcf8-53f0bcf14084"
        },
        "item": {
          "id": "fb771782-596c-4bb2-85f2-1be9c9b8f030",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "59e43a23-5abb-49a1-8aea-1c665fe5de22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80946783-0070-42ed-8f40-55504258888b",
        "cursor": {
          "ref": "3a34620a-f0ae-4fd3-b279-8c3a0ac96181",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e37d1ea2-6137-44ea-8bff-ea710538c367"
        },
        "item": {
          "id": "80946783-0070-42ed-8f40-55504258888b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8b53d7a3-1a79-45f4-96c6-f3ffc1188532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7555b477-e8df-4518-b65f-82a778eb47a0",
        "cursor": {
          "ref": "f3ee14e9-ad9d-4b77-9d78-4468bbec8f6f",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "69a15810-52fa-4948-a28d-5f42f0d5a19e"
        },
        "item": {
          "id": "7555b477-e8df-4518-b65f-82a778eb47a0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "90b8512b-701c-40dd-9ba3-9b2314ccd8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7f4723-016a-499b-be9e-e74360361daa",
        "cursor": {
          "ref": "e35b8ac1-6dbe-47ba-8676-61c6a2a25861",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "192f21bc-25d9-4b4c-9cf9-cf842423d9f3"
        },
        "item": {
          "id": "8d7f4723-016a-499b-be9e-e74360361daa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dcd5cd12-9e30-4fcc-87a2-6650334d33a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94dd45e5-2d9d-4e75-b2b2-df426b05aae7",
        "cursor": {
          "ref": "f2b7ac06-2a1a-417e-8000-a4fe01ca93ea",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "304f7a2b-6c0d-49de-8bb3-61f5a9aa6df3"
        },
        "item": {
          "id": "94dd45e5-2d9d-4e75-b2b2-df426b05aae7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "86af75fe-a97f-457f-8813-53edc47fb8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff91484-c29b-412d-b0ca-1f0e37b29a23",
        "cursor": {
          "ref": "b65cfdb2-8c9a-44ab-a2df-c5e0d4d51508",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6deacaff-b883-4555-8567-56a5b0e0f27f"
        },
        "item": {
          "id": "6ff91484-c29b-412d-b0ca-1f0e37b29a23",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "96793d74-32a2-460d-b189-d8dba18f463e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5b032d-468d-4a62-bd34-3c6249bf1cf1",
        "cursor": {
          "ref": "d5421c73-bb3c-46bc-ba47-e2581739c57d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3aab5683-3f88-495f-b9a7-3655771ff045"
        },
        "item": {
          "id": "0e5b032d-468d-4a62-bd34-3c6249bf1cf1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "42484939-1689-48d7-a931-86d88abb1e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77457c0-1e33-4d43-a721-b13bfa1f7f28",
        "cursor": {
          "ref": "d4f4593e-9536-4fa0-bd4e-53f47e1e6f50",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7cbe6a9c-a35c-4212-bab4-cff08e195969"
        },
        "item": {
          "id": "c77457c0-1e33-4d43-a721-b13bfa1f7f28",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "20b28eed-1d69-4e37-914f-08d65c9865e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa09f9ac-c094-4e9f-80e2-a93679bf9bdd",
        "cursor": {
          "ref": "049f9ef0-7030-4db5-ae55-07b303b05b39",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "c4c09fa0-d5fd-4213-9319-7145d354f877"
        },
        "item": {
          "id": "aa09f9ac-c094-4e9f-80e2-a93679bf9bdd",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d2b098a6-0eab-4258-a2bc-7321711656f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a31384-8b78-4d2e-b883-513c8eb06eda",
        "cursor": {
          "ref": "1c9d113b-7cd2-484b-8fce-bf0c2a93690c",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1d79fbe9-0e23-4415-b3bf-441eec4eb236"
        },
        "item": {
          "id": "d7a31384-8b78-4d2e-b883-513c8eb06eda",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "05217f9f-167c-45e3-ac47-fc94357a93ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82d6c18-c30d-4b15-b590-12f8616c8dc5",
        "cursor": {
          "ref": "a3ecfcd7-a1dd-48a2-8658-1808e8483c8d",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "98a36a2c-acb5-471d-88a8-9311edc2ba07"
        },
        "item": {
          "id": "c82d6c18-c30d-4b15-b590-12f8616c8dc5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "277a327b-1d00-4670-a832-0762dca4f267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec388cba-d31e-45ab-8ce7-9c9d09c591a3",
        "cursor": {
          "ref": "c7a27336-fc1a-444a-a0eb-c183d30d9be5",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "209980d6-f241-4bcb-b744-e4836cc82438"
        },
        "item": {
          "id": "ec388cba-d31e-45ab-8ce7-9c9d09c591a3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0e9205d0-d64a-4429-876d-94dc4a2438c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa75c449-2a96-42d6-b3bb-873383074583",
        "cursor": {
          "ref": "1cdb349e-f5bf-4495-912e-2883891da8d7",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6b28978d-397b-4993-a518-6d337a76228d"
        },
        "item": {
          "id": "fa75c449-2a96-42d6-b3bb-873383074583",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b6efa2b0-416e-414d-a107-dede12021b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1103caa3-4780-4d20-8991-919a9bceb135",
        "cursor": {
          "ref": "dcc46891-e6a7-4989-9c6c-d499891d1ca5",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3826b5b4-2558-40b5-ac87-64d055a7c38d"
        },
        "item": {
          "id": "1103caa3-4780-4d20-8991-919a9bceb135",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8d25a5fa-0d0f-49af-a23f-2e459f2cb618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66f7d2d-5996-470f-8492-bfb0ec5febbe",
        "cursor": {
          "ref": "ef86e90c-2f5d-49a1-af2f-17fa32a36c91",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bbbb3599-bb08-4605-a9f6-21aaac30dad6"
        },
        "item": {
          "id": "f66f7d2d-5996-470f-8492-bfb0ec5febbe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4cfd5684-e7c1-47ea-8f55-c18ae6017a3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9dc573b-c356-46c6-b945-6789e5d9737b",
        "cursor": {
          "ref": "eea7166c-7ee0-4dc1-89cd-19742dde39cf",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "87f9b5f3-dcc1-45aa-b47f-f2b97e0d7cfb"
        },
        "item": {
          "id": "d9dc573b-c356-46c6-b945-6789e5d9737b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e1d8e2da-bedf-4fe3-9895-96d062d1c84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de0c23d-f5e2-4f43-bad7-53f175c22ce5",
        "cursor": {
          "ref": "5d1b7f86-cc2a-4905-87d2-2e5270bcd68e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ed2a701e-25be-4d40-9491-545b9c24d2c0"
        },
        "item": {
          "id": "1de0c23d-f5e2-4f43-bad7-53f175c22ce5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b257a3f1-25ff-44ee-a804-d1c5b0246f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e6ddd2-777c-46cd-8c0a-f31bd1567f8c",
        "cursor": {
          "ref": "6f9e441a-f21a-4ec7-8a51-65667431967a",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "708d533a-1e32-435a-83d6-b3d814d89f5d"
        },
        "item": {
          "id": "60e6ddd2-777c-46cd-8c0a-f31bd1567f8c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f076b01c-042c-4859-82ff-e703af018194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789425f4-2137-42de-8b2f-d3090ad38264",
        "cursor": {
          "ref": "df1f22b2-175f-48fd-b723-f2c59d626004",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "370531a1-6b8a-47af-bb32-495f17612089"
        },
        "item": {
          "id": "789425f4-2137-42de-8b2f-d3090ad38264",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e2134bbc-da0d-4730-835f-4c3ceb65f12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a857e121-4d11-4d08-8975-be507c6cdff6",
        "cursor": {
          "ref": "8253be48-4ee5-4ecd-87f1-c55830aba29d",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d246e211-c74c-4593-baef-06ae5049ceeb"
        },
        "item": {
          "id": "a857e121-4d11-4d08-8975-be507c6cdff6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a510f958-0452-4091-9acf-4ab44d409a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed6d214-2ec6-472d-b88f-ebac33a114ee",
        "cursor": {
          "ref": "0e78c84b-1bf5-4802-a928-cc4fae2b3baa",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "8efb5e52-f8f1-4236-8061-9c82b780cd34"
        },
        "item": {
          "id": "4ed6d214-2ec6-472d-b88f-ebac33a114ee",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a7845859-b7d2-4c1a-a115-f425867f82a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22df746-37be-439c-86fa-da7884413d11",
        "cursor": {
          "ref": "edd9d5ef-9f14-4aae-9865-fe6e4f9e3c09",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "23e194e6-3ee4-48d5-a67f-35e4685361bb"
        },
        "item": {
          "id": "b22df746-37be-439c-86fa-da7884413d11",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0fb2d7f3-97cf-46e0-8fcb-e452ee29be82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cf7475-cfcd-4a2e-bd39-5f6b2e5c191d",
        "cursor": {
          "ref": "c156f005-7391-419b-86a6-34f264695379",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "621d1073-09b2-45a8-baf2-804feddc4e0b"
        },
        "item": {
          "id": "56cf7475-cfcd-4a2e-bd39-5f6b2e5c191d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8604f1d6-9616-4ead-8a09-ba6cd82745e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7ceb2f-5e4d-4129-beb5-4a359028243d",
        "cursor": {
          "ref": "291a0426-02dc-48aa-9219-3d633054aaca",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1eb7c0dc-bb8a-45e7-ab5d-1de124382ded"
        },
        "item": {
          "id": "8c7ceb2f-5e4d-4129-beb5-4a359028243d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e4f44872-9a87-40d1-b9e8-886941c895c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db9e7f6-44ce-4a59-8c30-974b49635a94",
        "cursor": {
          "ref": "5fc7bb8e-39b5-493e-8a60-e78355b5133d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5104d0d5-adb7-45f6-8daf-c869dfc17b1b"
        },
        "item": {
          "id": "6db9e7f6-44ce-4a59-8c30-974b49635a94",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8058708c-d236-4c5c-88a5-a7a3a658836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dda894-173b-4dba-b359-789e97252fbe",
        "cursor": {
          "ref": "b54562be-5dca-4660-b8be-9d93399dda91",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "88cd6b5c-0d16-46a1-8142-a2037c886f35"
        },
        "item": {
          "id": "a9dda894-173b-4dba-b359-789e97252fbe",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a03790af-562f-45cf-8a07-c5b176a15f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d69609-1aba-4f3c-881b-8ad36b348872",
        "cursor": {
          "ref": "fd63ec53-8ae6-488f-8513-bb119d2dadb0",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e12180ac-fe2b-4c81-82fc-4052a16924a0"
        },
        "item": {
          "id": "87d69609-1aba-4f3c-881b-8ad36b348872",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a5d7d3b1-fd6e-4e7b-a50d-d1e41eb3ee70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f180916e-532f-4a10-aaaa-c343f045f21c",
        "cursor": {
          "ref": "fc947855-8165-4f60-9588-cfc4d7e8b58d",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "686f0ec9-e677-422d-bac7-c4b7703c205b"
        },
        "item": {
          "id": "f180916e-532f-4a10-aaaa-c343f045f21c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e507cbc3-e664-4b1a-996f-fc87cb4b375d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3aae46a-ba7e-4c86-baf7-c1041065cea7",
        "cursor": {
          "ref": "e90a07de-2362-4473-865b-f161cb1fd564",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "690fa98e-cf8a-49ec-bae7-69106d3f104e"
        },
        "item": {
          "id": "a3aae46a-ba7e-4c86-baf7-c1041065cea7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a63e28f9-549a-4cc3-a617-0e63c0eb5371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00d4a7b-dd08-4589-abcb-f710d8570cbb",
        "cursor": {
          "ref": "926c24ed-22f5-426b-8373-b32f50ac1098",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2dec89aa-d4aa-4b99-b456-1a2cab1289d2"
        },
        "item": {
          "id": "f00d4a7b-dd08-4589-abcb-f710d8570cbb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "02770e8a-232c-466a-8c7c-5faab9c41b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffc4228-ae29-4fbf-a66b-c81d7a489e50",
        "cursor": {
          "ref": "d4e3954d-33e7-4bb2-a6a8-68cc273e182c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dd2be677-f076-408b-adcf-71239e128328"
        },
        "item": {
          "id": "0ffc4228-ae29-4fbf-a66b-c81d7a489e50",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d5f77105-6246-42fe-b140-02147f6e777a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99187a69-1269-40e9-86f1-2f3f415300da",
        "cursor": {
          "ref": "475c7e16-5bf1-4988-bdf3-0acfd5704ba5",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b2fd8891-ad1b-476b-b0a4-f1a9a7e2f1df"
        },
        "item": {
          "id": "99187a69-1269-40e9-86f1-2f3f415300da",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a47a8d61-e7c4-4b8a-a1db-0c1e6bc14fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef0e362-3579-4c07-825d-1042146d7ab0",
        "cursor": {
          "ref": "4d986446-e410-47df-8515-b47314586d9d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "50d1eef8-d71a-4564-a90e-7468a6f8cdf8"
        },
        "item": {
          "id": "1ef0e362-3579-4c07-825d-1042146d7ab0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "60a5fa18-c875-4feb-8bc6-25cdd3235bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeadac76-1f05-4e69-bda3-709690dba439",
        "cursor": {
          "ref": "6094a39d-cd91-4d8a-888e-51c2c0330c10",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "689973a5-e35e-490a-b46a-656f1fdc975a"
        },
        "item": {
          "id": "aeadac76-1f05-4e69-bda3-709690dba439",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "992e0d3f-3c94-46b3-beb9-741b50b55ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611d6699-fe54-4dfe-bacd-e180e11cd194",
        "cursor": {
          "ref": "b3858d0c-0aee-4a56-ab68-47085e318863",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7b2e56d6-567c-41ea-a232-e3788b507f6b"
        },
        "item": {
          "id": "611d6699-fe54-4dfe-bacd-e180e11cd194",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "75494fbd-dcea-415c-9c8c-adab2de5d61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb68ff0-cde8-4957-8695-29155cc629e2",
        "cursor": {
          "ref": "98fefbf0-ea3a-40cc-922f-3a0d551fd1d6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a799db2a-7b93-4a3b-89bf-513e37b5719a"
        },
        "item": {
          "id": "7fb68ff0-cde8-4957-8695-29155cc629e2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5b6e0bdb-58e8-41ec-a465-fb426420b238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12529778-bd7d-4280-88b0-23da8437a60a",
        "cursor": {
          "ref": "df4809e2-3733-4fdb-8a3f-55ca86a80e71",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "719f0fea-2f5e-4d2a-9114-906de70ce456"
        },
        "item": {
          "id": "12529778-bd7d-4280-88b0-23da8437a60a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7460fde0-2918-4498-a28b-4cf7b8d8d6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116815cf-bd94-4896-b259-c2faa7ceb40f",
        "cursor": {
          "ref": "6c27eaef-9984-4ce2-8d36-ac950af3a8bd",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e38497ea-d55f-4ebc-9061-b58c4cef6bf4"
        },
        "item": {
          "id": "116815cf-bd94-4896-b259-c2faa7ceb40f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e7fd15f8-13bb-4f17-94fb-6afa73c91b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4577cd-d9cc-4cea-9c6b-105bf895e7cb",
        "cursor": {
          "ref": "770a7f12-6da9-4422-a5e7-a71c26140487",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "80abb056-8224-4fcb-959e-5e730784a5fb"
        },
        "item": {
          "id": "7c4577cd-d9cc-4cea-9c6b-105bf895e7cb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "19bd4187-a165-4e13-9d91-ce9b78e1f42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36263097-6a30-446b-8abe-366e60b09093",
        "cursor": {
          "ref": "dbb4b589-5d6d-40bb-9a76-d36fd359a84c",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "941a1fc7-b17e-4a86-8060-00ac65c0efa0"
        },
        "item": {
          "id": "36263097-6a30-446b-8abe-366e60b09093",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "484ace44-8b95-4427-8e58-9d566b0bb6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5b9791-e782-4f03-913c-a0388393b382",
        "cursor": {
          "ref": "3cbffac2-ee33-4aca-8901-b715a85dfbf1",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "92306481-8380-42bf-b32f-6c47bdd06ae5"
        },
        "item": {
          "id": "0a5b9791-e782-4f03-913c-a0388393b382",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6af163a8-93c6-4175-bfb4-e12efac81eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a2ee9d-72d8-44e7-a60d-8299d7617744",
        "cursor": {
          "ref": "9da03a4a-f5d5-44c4-8fba-c86e36aff80a",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "40fa5734-bcd6-4185-bda1-3c3ae55d9926"
        },
        "item": {
          "id": "a8a2ee9d-72d8-44e7-a60d-8299d7617744",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c1571fc1-2ad9-4419-aae1-c5a821c2438f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43094ba-8fad-446c-b751-432151dd819f",
        "cursor": {
          "ref": "477206ae-efac-4929-8342-3932a5208448",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8769f930-2e24-406d-97b4-dc21c4b365b4"
        },
        "item": {
          "id": "d43094ba-8fad-446c-b751-432151dd819f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ede1b1af-4a08-4dd4-b8e8-529afdfb399f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1134839b-c05d-4894-b25f-c8ba66ec90ef",
        "cursor": {
          "ref": "4828945c-9ca9-4c1d-bf23-c5808522fdf2",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9aaad810-69f4-4213-921b-e0613b9f43b8"
        },
        "item": {
          "id": "1134839b-c05d-4894-b25f-c8ba66ec90ef",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c2785bbc-43b5-47d5-be10-d9d9a47c6e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ac6e7e-06c8-493a-8a3b-1a7c4e6c9b44",
        "cursor": {
          "ref": "f902d53e-db2a-4a54-a8fb-d508acda8975",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "36e019bf-3bb9-4d62-b042-a852b03fa763"
        },
        "item": {
          "id": "e3ac6e7e-06c8-493a-8a3b-1a7c4e6c9b44",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e49eba9e-2678-4c4e-9313-728aa7308dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57808a1f-5b41-4656-bcd5-9fbc849d656f",
        "cursor": {
          "ref": "51ddbf71-3938-4614-a80d-27b084ed9547",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "933c53b5-9d83-4675-a900-8ae104d23b20"
        },
        "item": {
          "id": "57808a1f-5b41-4656-bcd5-9fbc849d656f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b2d1a074-1965-4498-a567-1aeea3576ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c97486-c616-4711-8202-46a7acf26b44",
        "cursor": {
          "ref": "b6e2398a-c9f2-4161-97e4-c63ab628a23d",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7784d1d6-89f2-42d0-888b-e9c648416d22"
        },
        "item": {
          "id": "a4c97486-c616-4711-8202-46a7acf26b44",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1b1212e2-76b2-4de0-9e11-290eee985aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d259b93b-8a5a-46da-b4e0-058f704abb2f",
        "cursor": {
          "ref": "c4a1eb18-0645-4ac0-a212-352807124e7f",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1a4ed4b6-fb31-416f-9aff-5e56422acc32"
        },
        "item": {
          "id": "d259b93b-8a5a-46da-b4e0-058f704abb2f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6d6f7af8-8606-48f3-b19b-4e8745b37b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f70191-bf4a-4c8d-8afd-d70042d4988f",
        "cursor": {
          "ref": "c0cb0f5d-443d-4801-81cf-6b5ccde5f6fd",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9dd2fcd9-7384-4880-9819-928814496e59"
        },
        "item": {
          "id": "27f70191-bf4a-4c8d-8afd-d70042d4988f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0bc37ec0-6c37-42b7-8989-76c1db5fd1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455ebb38-90c8-4bac-b751-6ce78f93dd16",
        "cursor": {
          "ref": "045d68cd-284c-4bf8-9fac-2ed841602db1",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f6c264bb-bdf1-4c36-8977-248821beefeb"
        },
        "item": {
          "id": "455ebb38-90c8-4bac-b751-6ce78f93dd16",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "dd26ad50-9848-4a16-a75a-0c34cf1383bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79086ead-4674-4a37-9f2b-930e7a87e676",
        "cursor": {
          "ref": "0c0ac1ea-eb17-42e4-8bda-3c3009d46aa5",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9b3f0d10-b072-4b30-af7d-c9c92e79bf70"
        },
        "item": {
          "id": "79086ead-4674-4a37-9f2b-930e7a87e676",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0aa889e6-7226-4c99-9dd6-e16501092f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30a998f-81f0-451f-bfd2-748c44d55f05",
        "cursor": {
          "ref": "d74529f0-6095-49a6-bd45-1a691c031a81",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "205a2d5f-9104-4169-9374-3a217003b1f2"
        },
        "item": {
          "id": "f30a998f-81f0-451f-bfd2-748c44d55f05",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e04cea77-5b27-423e-8a7e-9e310235e869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfde223-c065-45f1-bdac-2cf0b7e5ec50",
        "cursor": {
          "ref": "41cb9614-2bac-4e7a-ba23-42bfdc672f25",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a760de9b-ff97-4e8d-a03c-9db6941196ce"
        },
        "item": {
          "id": "5bfde223-c065-45f1-bdac-2cf0b7e5ec50",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2829d683-6992-4a27-be5a-8e7dadb4f8db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3ceefe-7e1a-4ebb-b3fa-de6fa7607637",
        "cursor": {
          "ref": "3220a4ef-8305-4505-927c-dd42204ab1dd",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a1778ef7-c3a4-4d5f-8534-8696bb8574a6"
        },
        "item": {
          "id": "0d3ceefe-7e1a-4ebb-b3fa-de6fa7607637",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3808dfde-ac32-4e77-8777-397fb0831725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f4d74b-dd4e-46cb-9789-c5b7071551b4",
        "cursor": {
          "ref": "596d8e49-9d69-42b6-ab37-45f158612af9",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "473f472c-d9bf-4097-96fe-8be89b462d4a"
        },
        "item": {
          "id": "91f4d74b-dd4e-46cb-9789-c5b7071551b4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b7a4ba45-9112-4f3a-bc5c-cd345412775a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b944970-cde8-4bcd-9726-fdde55374abf",
        "cursor": {
          "ref": "e75ed059-8813-4e8d-a339-2229fb26c16f",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4bf17c39-75d6-4ca7-af9f-c593a742aecf"
        },
        "item": {
          "id": "0b944970-cde8-4bcd-9726-fdde55374abf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6d192cbf-e917-46a1-b67b-b60e8701f9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f25ace6-0505-40d9-aee5-2983cb8a8178",
        "cursor": {
          "ref": "bece493c-007a-4f71-a6cf-1f15c095bdb2",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "43f5f379-037e-4d00-9be1-882ad9f58fb7"
        },
        "item": {
          "id": "7f25ace6-0505-40d9-aee5-2983cb8a8178",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dc3df3c3-6af2-4c10-8376-889ebca20437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9049d962-a52f-4e7f-8d16-640abb9a9ba1",
        "cursor": {
          "ref": "04f19fb8-6c44-4672-801d-8b229236fbb6",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "879bcba7-01ba-4875-931d-e7f7de4810c6"
        },
        "item": {
          "id": "9049d962-a52f-4e7f-8d16-640abb9a9ba1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "38b404cd-5004-4fa1-b35e-0634e5cec477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce9fbc9-0736-4860-9da6-cda65fba222a",
        "cursor": {
          "ref": "c67877dc-43eb-4e84-93bf-ebcf7104c46f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e31dfece-e7db-4946-9e06-7eaed2a0cae3"
        },
        "item": {
          "id": "8ce9fbc9-0736-4860-9da6-cda65fba222a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c5ef5a6b-1406-4eac-8d0f-51ef8fdc992f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5966205a-2795-4902-bd83-8bcf48d3c764",
        "cursor": {
          "ref": "f0f38341-d768-422e-8b13-b58d0a703948",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8d58d078-ea29-4b06-891c-05481506501b"
        },
        "item": {
          "id": "5966205a-2795-4902-bd83-8bcf48d3c764",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ea1c2c30-fc02-41b7-9be0-e3ad6a8a9dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eda9c8-7d70-436f-9697-219d9f6556d2",
        "cursor": {
          "ref": "8bce1086-2d3e-49f5-b49e-f6690beb3198",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "984131ac-45f8-4647-8a82-b2a4de8d898e"
        },
        "item": {
          "id": "01eda9c8-7d70-436f-9697-219d9f6556d2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e17436a4-8e06-429f-9573-ed95969dd85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aee32aa-8889-485f-9d93-a7428b3160a8",
        "cursor": {
          "ref": "f2e36e14-4b78-470a-a5a9-fd4635f89a38",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f0a52b59-7b76-4cfc-8652-07518e2a2ce5"
        },
        "item": {
          "id": "0aee32aa-8889-485f-9d93-a7428b3160a8",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8d407d83-e4a7-4348-8859-e05fa151d84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c196c5f-2a92-4bb9-ae52-361b01361db7",
        "cursor": {
          "ref": "ab42bf71-8659-45c8-b1db-9da63e73ed83",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "97eca98c-ebe1-43e6-931b-5be1c00a8336"
        },
        "item": {
          "id": "5c196c5f-2a92-4bb9-ae52-361b01361db7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "50daa6cf-9f6e-4a99-b080-e0d5715379c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e3b769-3113-446b-b7ed-82196d65140d",
        "cursor": {
          "ref": "91c007de-8c97-444e-b55a-1fc32a8a4077",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ec984546-0395-434d-9e02-413ceb09e188"
        },
        "item": {
          "id": "86e3b769-3113-446b-b7ed-82196d65140d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "37250ab1-ce1d-4547-bc58-126ef1c0395e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14d9273-b635-4802-8923-5173aa5df3c6",
        "cursor": {
          "ref": "a3bf97e3-26ed-4cc3-aa4f-dfc97ce3d519",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cd7cfcbd-860e-4d77-a71b-eb8198623a67"
        },
        "item": {
          "id": "b14d9273-b635-4802-8923-5173aa5df3c6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f03568cd-fd7f-4370-836a-d8b91de1c62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5eb880f-1f6d-4193-9fa0-addded950f34",
        "cursor": {
          "ref": "9357caf5-9b45-4b28-8d9a-5388b04721d5",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1dbd474c-4ae3-4944-9fbf-3f05b19259c3"
        },
        "item": {
          "id": "b5eb880f-1f6d-4193-9fa0-addded950f34",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3b82dbd1-5667-4ed2-975b-8809abe29c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78fd0b5-bac2-4e39-b7ab-c8bde28169a2",
        "cursor": {
          "ref": "5dea72dc-a824-4461-88c7-8a9ac165659d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "85df3777-70b8-4496-861d-3bd30012cb8f"
        },
        "item": {
          "id": "d78fd0b5-bac2-4e39-b7ab-c8bde28169a2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2897ae44-ef58-43ae-ad8e-844ce4f11b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307cea03-e319-4d69-8242-5bfd2b74f045",
        "cursor": {
          "ref": "334a9089-5b2d-4cdb-b606-734639fb1faa",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "85932969-4771-423b-a6c8-d75919ad88b2"
        },
        "item": {
          "id": "307cea03-e319-4d69-8242-5bfd2b74f045",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e5d6ad46-e814-430a-88d6-91d32494124b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c0f335-e01c-41b7-b430-e39125ebce5a",
        "cursor": {
          "ref": "5d181aff-2ec9-4881-b0b4-e47e993110cc",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "be6d86e5-6011-4333-a025-3e24f9e2a2e9"
        },
        "item": {
          "id": "36c0f335-e01c-41b7-b430-e39125ebce5a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e777ec4e-7303-427e-bf35-a5d238d2b7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23064646-b9ae-4e57-833d-656ae2516145",
        "cursor": {
          "ref": "183132fa-bc5c-44ca-8b41-466588ac4484",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "91e73320-6c79-4f83-b05d-4446272dcea2"
        },
        "item": {
          "id": "23064646-b9ae-4e57-833d-656ae2516145",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e6f62410-97e5-4464-bee8-927113e7d87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ffe5b8-facc-4f34-8b54-e5bdc6762327",
        "cursor": {
          "ref": "cf13aac1-3e6a-44b4-bd55-cedd13a147e3",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c908517d-8f38-4f20-9752-d928212f3087"
        },
        "item": {
          "id": "f1ffe5b8-facc-4f34-8b54-e5bdc6762327",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "358dbc13-c87e-4590-bb71-b47a6da43470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8af7355-72bd-43b8-9510-a36737a7f403",
        "cursor": {
          "ref": "81a23275-ddf7-452d-8d7d-ff05f327bbb0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "400152c1-3bea-4c5e-91f6-9d31b380b034"
        },
        "item": {
          "id": "c8af7355-72bd-43b8-9510-a36737a7f403",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7c203b5f-598c-4708-9bad-875e39e3025b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2fa2ef-0a42-470b-82e1-b84d9908cde3",
        "cursor": {
          "ref": "9fb0d777-ca94-4001-a753-1e1db9e251ae",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "87cb0a15-432f-4a71-824f-746801cf3020"
        },
        "item": {
          "id": "da2fa2ef-0a42-470b-82e1-b84d9908cde3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9c4b519e-2035-4625-8ce4-6403189e3529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f5d98d-3cbb-46f5-9a8c-8eecac1a0226",
        "cursor": {
          "ref": "ccd767dc-a679-42ae-bb2b-6952d46b6f06",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "219b4c34-1177-41bf-9038-dee62d7c9373"
        },
        "item": {
          "id": "d5f5d98d-3cbb-46f5-9a8c-8eecac1a0226",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1af335e8-dd30-49fb-af67-f3456ff15c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5bd0e1-a3bb-4c34-89a9-d4f3bf114bfc",
        "cursor": {
          "ref": "6f13c4f8-15f2-4b17-93dd-406047d9192b",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ef41f6a7-12ae-4660-9acd-570bb4135a6a"
        },
        "item": {
          "id": "bd5bd0e1-a3bb-4c34-89a9-d4f3bf114bfc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b611e30c-53fd-4909-b89e-97dfc5a73316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83be34c6-271e-435f-9f48-25dade4dbe36",
        "cursor": {
          "ref": "9e7df661-6df9-4a88-b1af-9bb3f8fa3c01",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a53fc2ce-f5f7-473c-94d8-74e5c86028b5"
        },
        "item": {
          "id": "83be34c6-271e-435f-9f48-25dade4dbe36",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a4ce68ec-5cf6-4e6c-a21b-9493d759a988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24343b0b-e29d-4539-be2f-d1050a9febb7",
        "cursor": {
          "ref": "c4b0b5b0-d561-4f79-a7c2-6d125792b225",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "57cbd3fb-9e6a-43cd-9987-48751f3ba407"
        },
        "item": {
          "id": "24343b0b-e29d-4539-be2f-d1050a9febb7",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "50a1cca3-db3a-4f7a-aa4a-f0bdf7ba118f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48275cf3-e8a5-4051-b8c1-a49b00a82b3a",
        "cursor": {
          "ref": "d967a9c2-f312-487d-843a-a06bc019a869",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e08d7775-2337-4e07-b418-9bdd3edf06ea"
        },
        "item": {
          "id": "48275cf3-e8a5-4051-b8c1-a49b00a82b3a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fadaf000-9a5c-40c9-bdd8-263aeb6a31c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d4a6af-fdda-47c1-9b0f-406ddcdc90d1",
        "cursor": {
          "ref": "2823bb58-946c-40f4-af01-c4fdb4f0e3da",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9953f12b-28f3-438e-9df2-1538d947e431"
        },
        "item": {
          "id": "18d4a6af-fdda-47c1-9b0f-406ddcdc90d1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "427af8a8-ed81-4f09-a007-36b327158b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444601ec-5be2-467d-9b8f-daa4a47a9dde",
        "cursor": {
          "ref": "32243b40-c32b-46c6-aa4f-7238cabf8245",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9c856418-0501-48b2-a70d-6df2ba7c4798"
        },
        "item": {
          "id": "444601ec-5be2-467d-9b8f-daa4a47a9dde",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fc108de9-8eb9-4b7f-bd22-bae7122f7143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1652179e-3693-4748-9edc-3224c4ce356e",
        "cursor": {
          "ref": "546e5788-8a50-484d-baf6-1f5a0cf5fd2c",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "775819b0-95a7-47a2-ac99-4767fb613a6f"
        },
        "item": {
          "id": "1652179e-3693-4748-9edc-3224c4ce356e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b88ac2b4-cf86-4fa5-b53c-4b0cc4783b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5948a48-4726-427d-aff8-c1ac2b919871",
        "cursor": {
          "ref": "98a3c433-650b-4c9d-8fd0-8474d2b4b21b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "97d61676-3559-4576-bd0e-ed2e5c3c7898"
        },
        "item": {
          "id": "c5948a48-4726-427d-aff8-c1ac2b919871",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cb6ddbc5-4407-41ec-96c6-ae194553fe83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13049d00-acde-4949-96a4-ccab50b1ca41",
        "cursor": {
          "ref": "9ed6ceed-f5ce-4a91-9a84-4c98bdde0166",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e75c58bc-99a3-4cf3-99e8-f007950176f7"
        },
        "item": {
          "id": "13049d00-acde-4949-96a4-ccab50b1ca41",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c45c0427-4b44-4b05-8803-66147bd31c0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5338c130-4d16-4aa3-acdf-c7cf710df503",
        "cursor": {
          "ref": "3d098ef1-f317-4e60-acf2-27fd2d476ddb",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "76c2bba8-1b32-4f6a-992a-914252de1def"
        },
        "item": {
          "id": "5338c130-4d16-4aa3-acdf-c7cf710df503",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "338e7993-0996-4f03-91e7-9984c0c1bef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38d523c-a156-4573-bcea-642a2cbf876f",
        "cursor": {
          "ref": "c162d07a-a790-471c-8f3c-dddd3bde28c3",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7b147727-6cce-44f5-a462-5dbbc2630dc1"
        },
        "item": {
          "id": "b38d523c-a156-4573-bcea-642a2cbf876f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dbace2c7-aef7-42bd-b25b-64e747fa52d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a01f6a-a0d2-495f-a058-6a2fa66524d7",
        "cursor": {
          "ref": "a77efb6b-c7d5-4d9e-8b26-26a4066b510d",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "882f9892-4945-422b-ad13-5a81d38fc0ba"
        },
        "item": {
          "id": "e6a01f6a-a0d2-495f-a058-6a2fa66524d7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "aa86f4de-0059-48cc-900e-bbc05f3e705f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8399f0a7-c4c0-4b09-9518-d577ff671b43",
        "cursor": {
          "ref": "fe980af6-6780-4400-9e1a-e1ac1a0d8535",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "06e009c6-5619-4f08-8463-da8441a40d60"
        },
        "item": {
          "id": "8399f0a7-c4c0-4b09-9518-d577ff671b43",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "db3142fd-f553-451d-b0ea-32e56946c6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b42cef-3b21-4eae-99f1-adeff24bc385",
        "cursor": {
          "ref": "03a61ef5-3b4c-4958-8b3c-93b3bdeb222e",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "723b3744-3cab-419a-88ee-d922adc89cdf"
        },
        "item": {
          "id": "a2b42cef-3b21-4eae-99f1-adeff24bc385",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "511ca05b-6f97-49fe-975f-78f231750f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866130b9-654d-41f1-ae8d-636e176c6d86",
        "cursor": {
          "ref": "674e30aa-d27b-46b8-a81b-ffa5ccefc309",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b06ac85c-d994-4942-b802-3211e661d09a"
        },
        "item": {
          "id": "866130b9-654d-41f1-ae8d-636e176c6d86",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "306d149c-4d70-46f1-a5ce-2cebe49b5c3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1ee9f5-44c4-4104-84f4-425e790d6fb7",
        "cursor": {
          "ref": "e09b5c72-b823-4940-ae32-262d09077cd7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "58eee8a7-7ef9-43ca-9373-b69da496bd9d"
        },
        "item": {
          "id": "9b1ee9f5-44c4-4104-84f4-425e790d6fb7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "01c30cea-50eb-4fa1-9073-10a0de541721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f412d99-752d-432e-8fdc-9a369eec759f",
        "cursor": {
          "ref": "6cae9c2c-36a8-49ab-8d08-0866d2a63678",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "86e90cc4-dba7-48f1-afa2-c3d3201c847e"
        },
        "item": {
          "id": "1f412d99-752d-432e-8fdc-9a369eec759f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5acbaf27-cdee-4500-93dc-2d34e57cacb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61835ba-30d7-4fe1-b3b4-f16ffba3a254",
        "cursor": {
          "ref": "738b0a28-4aa7-46ee-a087-b0c4acf26e61",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "30be0197-22d0-4549-bba0-d137267fbd95"
        },
        "item": {
          "id": "f61835ba-30d7-4fe1-b3b4-f16ffba3a254",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "68620423-158e-476d-8b4a-b7ab25fd73de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7faa20de-8525-4ce6-86a2-67614d0c5f19",
        "cursor": {
          "ref": "2b013dc2-e74b-4759-b0c7-185f75589179",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "683c1a82-7ac4-4cdb-b1d0-d21fb16bc42d"
        },
        "item": {
          "id": "7faa20de-8525-4ce6-86a2-67614d0c5f19",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c28a026b-8d3d-4f77-ab3a-059f4d771230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52487517-05a6-432f-bcec-8ec232116d05",
        "cursor": {
          "ref": "0d7d4214-f9a0-41a4-bc8d-3dad1c30ee51",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2600082f-96a7-4fd5-9d91-ba1502f3c8ce"
        },
        "item": {
          "id": "52487517-05a6-432f-bcec-8ec232116d05",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0f8b233b-7d28-4ba0-a6df-f90cf7835288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c97b01-1158-47b8-a88d-b68a3a02247b",
        "cursor": {
          "ref": "0054db7d-3230-480d-95bb-446bc88f9b3b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d2e2b522-6030-40ec-9b0e-cf4a382e26cd"
        },
        "item": {
          "id": "09c97b01-1158-47b8-a88d-b68a3a02247b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f7ae3a93-f9a2-41d8-ae50-1dd66903d17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f74346-fc95-402e-8af0-f0367d4da51b",
        "cursor": {
          "ref": "dffb744d-3150-4e6d-9a9d-5a187929bda2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "14d15aa9-36ee-40c0-b47c-af9aeda9cfaa"
        },
        "item": {
          "id": "c6f74346-fc95-402e-8af0-f0367d4da51b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "95f8773e-2894-49a4-8e7f-0f59b0d77941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc5a36e-6e49-4985-84ed-d325b73ba439",
        "cursor": {
          "ref": "baff5c2f-52f2-432a-a8c9-28e2843ccd62",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dcd55ddb-70e5-4b52-bb43-f54bb9216de3"
        },
        "item": {
          "id": "0cc5a36e-6e49-4985-84ed-d325b73ba439",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1253e274-9ba9-485f-bee3-da05bb4cc8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed0a0a8-2f8e-4ae5-b4ea-d3bab3d810f1",
        "cursor": {
          "ref": "f1cb927d-b661-47da-bbb3-184a5c9d8a2f",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cd1bdd4e-07e9-4397-9371-8b266e08ccc6"
        },
        "item": {
          "id": "3ed0a0a8-2f8e-4ae5-b4ea-d3bab3d810f1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4a0ec501-9bad-4d67-b48b-c7f1db99b0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca200020-610b-4477-b5e3-acbf934818ab",
        "cursor": {
          "ref": "e37caf61-b9e6-42bb-b850-6e4c849405e6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6a4c4089-2248-4c46-a48d-9d18a326eb36"
        },
        "item": {
          "id": "ca200020-610b-4477-b5e3-acbf934818ab",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "426bfbe7-1926-4695-9117-41e0054954dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5fdf9c-f1e7-4e54-b46f-79b856cffd51",
        "cursor": {
          "ref": "1265ffdd-57f3-4073-a4f1-d7f870a8d239",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "50d25a0d-29ae-4ae1-8498-c480a220c577"
        },
        "item": {
          "id": "ae5fdf9c-f1e7-4e54-b46f-79b856cffd51",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0ea62b21-2b81-4efa-a7d4-4432f22b0c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fabcb83-6c87-4f26-8d0e-7a1b4429f77d",
        "cursor": {
          "ref": "333fc6ae-cdc4-44f1-bf7d-69c7356fb4b3",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "02906e01-2542-4192-a114-823ce3fc8cbe"
        },
        "item": {
          "id": "5fabcb83-6c87-4f26-8d0e-7a1b4429f77d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2e215863-d7c8-4ac9-ba34-1d04a78f62a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ffc2af-ee5f-4254-a94c-35d64862acfd",
        "cursor": {
          "ref": "15ddb001-dc23-426f-aa40-ab01a60ded13",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "49a47375-cee4-45fb-881c-5946da82d4c9"
        },
        "item": {
          "id": "85ffc2af-ee5f-4254-a94c-35d64862acfd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "84850993-86d6-492f-b917-46a9184a87b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29204e5c-295d-47be-897e-22a28abe367b",
        "cursor": {
          "ref": "892c267f-f1d7-45e4-85ba-62116e779aeb",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6a95a8a7-6f4f-4f77-beeb-616e768db6c7"
        },
        "item": {
          "id": "29204e5c-295d-47be-897e-22a28abe367b",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c62a2fb2-ed52-411e-a962-ba230b92d526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afc2848-83d5-4451-ae14-29f45c26c3ee",
        "cursor": {
          "ref": "ee4e23ce-6f83-47d2-8765-fe60a6956161",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "abfd7a4c-57f1-425e-8bb0-0dd7b6ab98f8"
        },
        "item": {
          "id": "6afc2848-83d5-4451-ae14-29f45c26c3ee",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "be841232-6a51-4b15-8cec-20abb9154fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f94ca80-8688-437d-b052-1477a02d5b5a",
        "cursor": {
          "ref": "331c43f6-7bc4-4cb7-826c-0377408c467b",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9a399865-a754-4272-86a8-0bc948f0bdab"
        },
        "item": {
          "id": "8f94ca80-8688-437d-b052-1477a02d5b5a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7add2c7f-0e15-47de-b00b-6a1045a339f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b434e0-796c-4198-a788-fa976eedcaf4",
        "cursor": {
          "ref": "aa3eecc7-acfa-4172-a02e-3645f9770c8d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2acd003a-e628-4af7-ad22-1f96bb02b032"
        },
        "item": {
          "id": "72b434e0-796c-4198-a788-fa976eedcaf4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "155d715e-0430-4993-b9ce-ca5f4b6449dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f82b4f1-c8de-4109-b97b-1575a2932d19",
        "cursor": {
          "ref": "eecab3b3-eff1-45f2-a892-f9a30be470fc",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f3cd3527-a70d-4c37-a532-fb52835e6738"
        },
        "item": {
          "id": "9f82b4f1-c8de-4109-b97b-1575a2932d19",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2d9877f2-f7d5-4cb1-8a9d-0f179aee9db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8defc1-e150-4e60-b155-39d7fa862d9d",
        "cursor": {
          "ref": "b7c132fb-bb38-426a-b3ea-40e4bcf5f3b3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "604054a2-4fdb-4817-86b7-f10b6cd89800"
        },
        "item": {
          "id": "0c8defc1-e150-4e60-b155-39d7fa862d9d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7c1b7afe-2515-4e7c-9c0d-636b754a6877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e127fea-0d93-4d9b-925d-13c3fed427b0",
        "cursor": {
          "ref": "e549081b-a96e-46e9-849a-a35cf75bc813",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8dc66201-4a5b-4994-bbb4-2be2c884d3dd"
        },
        "item": {
          "id": "1e127fea-0d93-4d9b-925d-13c3fed427b0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a97ea508-2677-4b3c-9bd0-ef8510bdb0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66042be6-a217-4e7d-9ca5-9190336b63df",
        "cursor": {
          "ref": "71df126d-1ca2-4600-844b-1c51dbc88214",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a803123d-eea0-4887-bf5b-e3cdbb0e4093"
        },
        "item": {
          "id": "66042be6-a217-4e7d-9ca5-9190336b63df",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3c862b72-4d6f-49c4-a87e-1507f4ad063d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363f5eda-0ad7-45aa-841d-ca62a2430cf2",
        "cursor": {
          "ref": "72c8baf8-1cd8-4b63-b1f6-8a2f66e1e7aa",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b822adcb-e1a7-4f33-9e3d-ff1c9f1e6c15"
        },
        "item": {
          "id": "363f5eda-0ad7-45aa-841d-ca62a2430cf2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bd10575d-8724-483a-a401-c89c1dc414d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1719be87-8af8-4b59-ad48-044bc34aa391",
        "cursor": {
          "ref": "6d645ab6-4bc4-4bd5-b3ba-171ceba3733c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "793ff770-9b1c-4cff-9bf7-293a3a1c5b94"
        },
        "item": {
          "id": "1719be87-8af8-4b59-ad48-044bc34aa391",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "adaa5883-8879-44db-afb3-76bcdb96b996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5eec6e-86cf-45be-b914-aba94251f473",
        "cursor": {
          "ref": "97ca391d-61a4-4671-b45a-d2ff623b5d3d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ac57d246-08cb-46c7-a3bd-fd55dc6b527e"
        },
        "item": {
          "id": "7f5eec6e-86cf-45be-b914-aba94251f473",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "60e28226-c3f1-4701-a140-8b2174da0399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06831585-1655-414b-b5e7-777602c1377f",
        "cursor": {
          "ref": "63e8e23f-09b7-4851-960b-737f9f7682f9",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "663734b7-b021-4140-9213-ee2f0839af66"
        },
        "item": {
          "id": "06831585-1655-414b-b5e7-777602c1377f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7cf126f8-84c6-459a-9ebf-c2be5798c3a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ac9e3f-85f2-4daa-8a5d-ff415ee58046",
        "cursor": {
          "ref": "de6d1fda-00a1-4ddf-aafc-495808dfbcf1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "027b09ba-f22b-4881-ab17-db69ec6cea6f"
        },
        "item": {
          "id": "44ac9e3f-85f2-4daa-8a5d-ff415ee58046",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "73e2ad10-1de9-4301-9651-f85af048bd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e951478-5e01-4c9e-a8e0-8d2f11e922b3",
        "cursor": {
          "ref": "1b1b39f9-e477-4812-8b25-39e641f8acfe",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ef76da26-9f9f-4955-9e27-f3f887aa9761"
        },
        "item": {
          "id": "6e951478-5e01-4c9e-a8e0-8d2f11e922b3",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "000d3626-5328-4661-9236-19582376de39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5c67f6-7621-4c04-9348-7b04985e27ed",
        "cursor": {
          "ref": "ee4efdf3-c96c-4e15-b7c7-c1885da6e788",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d189eb2b-3084-436b-80a3-3a83e17462b1"
        },
        "item": {
          "id": "4d5c67f6-7621-4c04-9348-7b04985e27ed",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "faa197c3-032a-4cc3-b118-1159a6cf3dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eaa5658-6fb0-493f-9b66-cb5043cf5315",
        "cursor": {
          "ref": "9cb22f89-2f16-4891-ac8a-7b43e12356a2",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "36556680-7ddb-4d9c-a40a-46441f49ecd0"
        },
        "item": {
          "id": "8eaa5658-6fb0-493f-9b66-cb5043cf5315",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "433ea8f1-d490-4080-b96f-e2c559ae706d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc1336e-5c88-4bab-ba69-ffbb25b495b9",
        "cursor": {
          "ref": "356fdb8f-1a41-4d7c-b64b-53ff5e9b1e05",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0e3823bd-0d78-4ea4-98b2-23fae87e6a11"
        },
        "item": {
          "id": "4bc1336e-5c88-4bab-ba69-ffbb25b495b9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "578400f8-6e23-4879-8973-1a98432c078e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2a5acc-0936-4b99-83f6-f16ba59869c9",
        "cursor": {
          "ref": "d463cb4b-60fb-4601-b876-51ea3ccd26ac",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5fc8735a-9554-4252-8c13-e7ae61835650"
        },
        "item": {
          "id": "9d2a5acc-0936-4b99-83f6-f16ba59869c9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5d2bbe42-92a4-41da-b273-32049183e1e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00aa7480-d3d3-4ebd-97b1-476e1ea192b4",
        "cursor": {
          "ref": "047cef6f-4849-4522-8bc5-1e6c6afa1f34",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e27293b2-1442-4a18-91fb-c5c662253821"
        },
        "item": {
          "id": "00aa7480-d3d3-4ebd-97b1-476e1ea192b4",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0d17bccf-bad0-4dad-bfe7-5f514bfa6e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb578fc-a5bf-44ee-b500-4afe9197b126",
        "cursor": {
          "ref": "f4704cbd-b3bb-4c8e-ac51-6f595f1bba50",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "90f576bf-1805-4b24-a9e2-8cc3c3db2a67"
        },
        "item": {
          "id": "dcb578fc-a5bf-44ee-b500-4afe9197b126",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eab3146f-1ebc-4e38-b26b-b8e3d6b26da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f77b981-a3d2-4f7e-9930-a9c89770350b",
        "cursor": {
          "ref": "d7c5f631-d25d-4934-9b8f-92e6e38feb61",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6770f0ca-b065-425a-9f31-5ef099bed299"
        },
        "item": {
          "id": "0f77b981-a3d2-4f7e-9930-a9c89770350b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "265b7d46-3812-4aa4-8f7e-29df8e57c59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492c6b4d-529b-4bd6-be9e-ef0c98b44087",
        "cursor": {
          "ref": "03d46963-c9ae-41d1-987c-d6bccf565f0d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "42435198-a723-41c1-b9f6-b105eb167fb9"
        },
        "item": {
          "id": "492c6b4d-529b-4bd6-be9e-ef0c98b44087",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e3ccfa4f-496e-466c-9a07-0da8b3bbed65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba618656-cb9f-4380-bc7d-8a79b2c096d8",
        "cursor": {
          "ref": "4f58f8f6-b334-4b9d-821b-56b0fbf0a355",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "97b95b5c-03ac-44c9-9952-e3185e165bd7"
        },
        "item": {
          "id": "ba618656-cb9f-4380-bc7d-8a79b2c096d8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7bbe8295-6725-4653-a067-f826d27655cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b05d76b-3d95-4e19-854a-8ccf5bba4edf",
        "cursor": {
          "ref": "25ad2770-e07d-4829-bc3c-254e1da05116",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5eb1d88d-5674-4465-83b7-1005b10f214d"
        },
        "item": {
          "id": "7b05d76b-3d95-4e19-854a-8ccf5bba4edf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e077a60b-9bb2-4d43-b73c-868d81c126d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059dd69c-fcea-4616-8613-de4ee5ed1445",
        "cursor": {
          "ref": "0feb91c0-feae-4544-b8ae-694c9c9910f8",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0f2f09fe-c8d4-4d74-aa7e-8b3f5822b2cf"
        },
        "item": {
          "id": "059dd69c-fcea-4616-8613-de4ee5ed1445",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c34381f4-690d-48d0-9a5f-adeea5784488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1ca7fa-86b2-4847-a42f-f923c3ebb6d7",
        "cursor": {
          "ref": "72eb355d-cafb-499b-a6fc-91edf3b3facf",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7ba4f1fa-b9db-4d0b-a2cb-68cf55d2c41b"
        },
        "item": {
          "id": "5f1ca7fa-86b2-4847-a42f-f923c3ebb6d7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "021a32d8-c7e7-4d34-a137-10247b0918b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82a6009-05d6-4b47-9d00-5c1311997194",
        "cursor": {
          "ref": "d169395e-607a-4dbb-8f32-91d3e3d0de9a",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7d301e7d-2aee-4a7c-881b-168bd0b1f0df"
        },
        "item": {
          "id": "f82a6009-05d6-4b47-9d00-5c1311997194",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9adc8689-afc1-47c5-8a0a-c5487ca42c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed26052-3a72-49d9-b7df-c6a1ab890cb6",
        "cursor": {
          "ref": "004b2ce8-df94-4601-86c1-b9b2f4db45fe",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "70e84cfb-5f45-4434-a01b-1ee34f82451f"
        },
        "item": {
          "id": "7ed26052-3a72-49d9-b7df-c6a1ab890cb6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "63277e5b-380c-4c8f-bade-3a4eeb5930bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b291cff-94dd-4c90-b2d1-c63e515c6a40",
        "cursor": {
          "ref": "933e23a3-3daa-4869-a71d-9553aa148a2d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "514d669a-60c0-4ec6-94bd-d8f22e9e944e"
        },
        "item": {
          "id": "0b291cff-94dd-4c90-b2d1-c63e515c6a40",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0b6a570d-6184-47dc-bdf7-fab85020d8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d498fd1-cf22-43cd-89c1-70fa65b35f19",
        "cursor": {
          "ref": "a8b35907-405c-47a8-81bd-d295ac8c5ecd",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c175131b-0e86-4a8f-9bcc-e083e530c706"
        },
        "item": {
          "id": "8d498fd1-cf22-43cd-89c1-70fa65b35f19",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ee466e24-bf8e-408b-be8a-c5aaa5dc2bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd77638-77d5-439f-bd96-7de8bd986214",
        "cursor": {
          "ref": "feb5d861-9ffe-48c9-9bf8-66fb707a6801",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b31730c2-4bfb-45a3-8a4f-5c2695cf66a1"
        },
        "item": {
          "id": "ddd77638-77d5-439f-bd96-7de8bd986214",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b34c3833-9cef-4923-bd4c-bdd0403540d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73427964-1721-4f64-b7f5-2a30ac240003",
        "cursor": {
          "ref": "d4624657-b7d2-4cc6-b4dd-7a77a8e33f28",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "992ca797-8944-4d56-bb45-cfce2ef09b0f"
        },
        "item": {
          "id": "73427964-1721-4f64-b7f5-2a30ac240003",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "da9b8d52-82ff-4ec2-95e2-20c0578eeb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914de01e-4a64-4f7c-8532-838bf8f20d48",
        "cursor": {
          "ref": "542bbdb0-ab6f-4c66-b668-88ca6ce3b649",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5eb2041b-90aa-423b-8663-64ccf6f5b4d2"
        },
        "item": {
          "id": "914de01e-4a64-4f7c-8532-838bf8f20d48",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "899ad2c2-52d9-4335-8367-df6fec7ecc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e882e0-f112-4216-bdb0-22a88a91212d",
        "cursor": {
          "ref": "8f618e3c-9122-4d04-9fa5-7cfd94a85940",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f9a36fb0-1fa4-4026-aab1-f872711cc908"
        },
        "item": {
          "id": "f7e882e0-f112-4216-bdb0-22a88a91212d",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ba58970f-00f3-4829-922e-b2368e0b6486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6329f704-a84c-4db9-8a9d-07d45a33762d",
        "cursor": {
          "ref": "de3900e8-95dd-4638-ae55-9eb66dfc8d4d",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "836f31d3-dd44-47d9-b575-52ad6492d7bb"
        },
        "item": {
          "id": "6329f704-a84c-4db9-8a9d-07d45a33762d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "63378333-1fb6-4e2d-bf19-becceee7d8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625a6f91-3141-4307-bfce-eedfdb7cfb0b",
        "cursor": {
          "ref": "d9fc92b7-9c92-44fb-ba6e-e6f9cf6fc7a0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "08add520-ad73-46f2-9221-261948a5cfdc"
        },
        "item": {
          "id": "625a6f91-3141-4307-bfce-eedfdb7cfb0b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d193f04f-ca7b-48d1-9882-a285ff2da9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10459c56-8997-4dc1-bd74-f97a752032a1",
        "cursor": {
          "ref": "40eaded7-e19a-4b3c-b118-60020efeb6c2",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "6143f9ce-4c2c-4516-b2fd-810cc5013c54"
        },
        "item": {
          "id": "10459c56-8997-4dc1-bd74-f97a752032a1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0e247a58-dec6-4af4-bc63-80ad9cf277a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db95277a-f980-4ed3-a879-59ea24b2cdf4",
        "cursor": {
          "ref": "b309c0b6-7c34-447e-a245-8d06fe17b04e",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8c713842-cc09-4e46-ae4f-f02be4e2371b"
        },
        "item": {
          "id": "db95277a-f980-4ed3-a879-59ea24b2cdf4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bdd9dd09-e74b-4777-83ef-e38e3e3ba2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5208cca4-96b1-4cfd-8114-82bac6c9ec73",
        "cursor": {
          "ref": "657de4ba-73f3-4e62-82ff-4d250562e330",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cfbbeeb5-5bba-42e9-99fb-1346fddfc3ea"
        },
        "item": {
          "id": "5208cca4-96b1-4cfd-8114-82bac6c9ec73",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9c315b67-71ca-418f-8b93-0ac14e395773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748772a0-531d-4405-8258-e968d3e86ba1",
        "cursor": {
          "ref": "c21b77c7-f27b-402c-ae51-4981cc044d84",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "46b5a6da-3ee8-4341-8dcd-bb91f772b19f"
        },
        "item": {
          "id": "748772a0-531d-4405-8258-e968d3e86ba1",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "955aac7b-a2e6-4da7-8b61-cbfc54aeaf5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337fe495-3692-4252-834e-457eafc541c1",
        "cursor": {
          "ref": "96ae6ae7-56b4-4fc6-b1b8-5723a78ea635",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "326da06e-a1ac-4d8e-a03d-875629258162"
        },
        "item": {
          "id": "337fe495-3692-4252-834e-457eafc541c1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ed414c53-502f-4299-9bf0-e80d98ae2e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616cba06-47ab-43b3-976e-a4971b08e5ed",
        "cursor": {
          "ref": "848dbb0c-07e5-437d-9c95-9c7b1c81d95b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "dd74fbd4-51fa-44a0-b830-56950fa98a96"
        },
        "item": {
          "id": "616cba06-47ab-43b3-976e-a4971b08e5ed",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "30c7526d-5f7f-4fac-9890-2063bd05f90b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aff3ae-53bb-44fc-bcfc-d10baa2b8a09",
        "cursor": {
          "ref": "fb9f8184-d197-4648-b808-fc75683299ce",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4f3dcb9c-6755-4082-a51c-0364df1248f4"
        },
        "item": {
          "id": "10aff3ae-53bb-44fc-bcfc-d10baa2b8a09",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "53c17524-f419-4923-9bf8-7c90f5d9b680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e24f8a-c5ae-4097-be40-cc33ce8e6b83",
        "cursor": {
          "ref": "b80824b4-f7c6-422f-a3f6-7a0c32fc7a06",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f3245066-b83a-4a16-993e-3a5f3e88361f"
        },
        "item": {
          "id": "a0e24f8a-c5ae-4097-be40-cc33ce8e6b83",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d1363866-d797-4c48-a242-8d7b5003c89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e255cb-3df6-43f4-9960-b6eed4e48fa0",
        "cursor": {
          "ref": "54564942-f3a0-4fde-9154-09b91a6c75a8",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "aac9a9a1-fa6e-465e-b330-753b1d43cc83"
        },
        "item": {
          "id": "51e255cb-3df6-43f4-9960-b6eed4e48fa0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f0d6244d-9992-4d51-bf78-85880fb5e4ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec6d38a-95ec-431d-a7cd-0bd428ca9f2f",
        "cursor": {
          "ref": "fc177249-efb0-45b1-a447-8a45540f7722",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d18d5d3f-aa1a-4363-9048-1852b0ccf392"
        },
        "item": {
          "id": "eec6d38a-95ec-431d-a7cd-0bd428ca9f2f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "dd5d9d45-95a9-4162-8d37-f6838f4633ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff103ab-5751-40f7-bda8-458c7ac55080",
        "cursor": {
          "ref": "3610dc9f-3049-402a-9777-2f9044805da0",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "94c1c31d-c3c1-4198-b920-d93d4cf87576"
        },
        "item": {
          "id": "7ff103ab-5751-40f7-bda8-458c7ac55080",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0cce2a19-e54a-483d-b563-de217c21d54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448a5dc9-4721-4a7c-9fa5-adb499a92aa8",
        "cursor": {
          "ref": "f162a764-07c7-4241-9ce0-f4b74db54f8f",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e5822866-3ae6-4c40-8dd0-c352b24d46c3"
        },
        "item": {
          "id": "448a5dc9-4721-4a7c-9fa5-adb499a92aa8",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9c7ab604-7f00-44e3-93c2-d2b537b1e08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19167c4d-c515-414a-9cd8-417d9298d9ff",
        "cursor": {
          "ref": "22fe970f-8bbf-443c-87cd-382170bfb155",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "03362a0d-2798-47b0-8005-225eb86f7c20"
        },
        "item": {
          "id": "19167c4d-c515-414a-9cd8-417d9298d9ff",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "af02e0ae-c12d-4ec0-9d93-ea39d6a4c2b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b521deb-7b6b-48c9-bf94-22521c4cb90e",
        "cursor": {
          "ref": "7d7c9acb-faaf-4928-89b1-c62787a50cb7",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "14ca761e-bdbe-4090-8b24-0c020d978076"
        },
        "item": {
          "id": "9b521deb-7b6b-48c9-bf94-22521c4cb90e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "36f74d07-a529-4701-bb49-96e1f6546158",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a32bc9-8f7f-476d-b3c0-e80b92959d41",
        "cursor": {
          "ref": "4724745a-e006-441e-b149-e0f9b37f017f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "1090b642-d1a2-4358-91c2-466ac0947e67"
        },
        "item": {
          "id": "02a32bc9-8f7f-476d-b3c0-e80b92959d41",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c51a4fe9-72b8-4016-a3b7-8985082f7272",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ae4a13-ddf5-4b4a-a159-404c195d4b52",
        "cursor": {
          "ref": "dd99a109-781a-4fea-8660-1baf96031f51",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "251724e8-34c6-49bf-b187-28662b5e136f"
        },
        "item": {
          "id": "60ae4a13-ddf5-4b4a-a159-404c195d4b52",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e4688694-61ee-4110-9a80-816787f97709",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caacc96-4fe8-4e80-856c-d455aa3dfa6e",
        "cursor": {
          "ref": "83dca43f-3689-48c7-8b3b-3ccd08bd774b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ce0225e4-3e4c-4a5c-a731-998f64c58f28"
        },
        "item": {
          "id": "7caacc96-4fe8-4e80-856c-d455aa3dfa6e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b36e948d-9d07-4973-8f7b-78987ffd6977",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7caacc96-4fe8-4e80-856c-d455aa3dfa6e",
        "cursor": {
          "ref": "83dca43f-3689-48c7-8b3b-3ccd08bd774b",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ce0225e4-3e4c-4a5c-a731-998f64c58f28"
        },
        "item": {
          "id": "7caacc96-4fe8-4e80-856c-d455aa3dfa6e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b36e948d-9d07-4973-8f7b-78987ffd6977",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ceff304-9801-4500-8efa-24cfa785d995",
        "cursor": {
          "ref": "f06e5bd8-7ebc-40c7-8cb8-641ec3b98549",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6fa063e2-78ec-449b-82ba-0e7cc209ab9d"
        },
        "item": {
          "id": "7ceff304-9801-4500-8efa-24cfa785d995",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cb79bc66-7d4a-45e7-a2d8-e3b089a70ba1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfc0505-7ed3-413d-a710-9acd0189c9f3",
        "cursor": {
          "ref": "ed5d83ae-ef4d-40b7-9c3f-27dff9ddf88c",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ffb29e2e-2ee9-4905-81d8-1a557d1e2114"
        },
        "item": {
          "id": "4bfc0505-7ed3-413d-a710-9acd0189c9f3",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0bf6d005-2bd5-4889-88b8-8ab5c5dc5e72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}