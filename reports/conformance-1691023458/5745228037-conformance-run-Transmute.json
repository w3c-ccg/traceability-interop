{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "19ff389a-1df8-4b2f-9d98-c9a110902460",
        "name": "Clear Cache",
        "item": [
          {
            "id": "602f55d0-e98b-47af-bbee-576b520d551e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36fc9edd-65fb-4552-a1c0-708cb32aafc1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3d2c0605-cc5b-474b-beb2-51c3ca8264b6"
                }
              }
            ]
          },
          {
            "id": "335c9e10-a433-4015-94ce-6403cc4a58dc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f83c77e6-3a71-4c63-a0d6-a188792e14b8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b982fbdf-a88c-4f59-9894-b5a720477068"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3f2dfe81-543d-4f5c-a6bb-75d5631e7153",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cc851ac9-7d38-4f74-b27c-087edbd482a3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0978e5cb-b6ba-43da-96f3-501edbaccb1d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "128511f2-74d6-429d-81de-9f9bb2a00e36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc9aed17-6c14-4263-aea5-fabcf0284773"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b96e2582-a0a6-49b8-994a-261f93916a8a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b824de8-1fc2-4660-a5ed-42a55e204d7d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36062d4d-6639-4a8f-aa94-69fe6d732b0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c0ed00c6-32b7-4476-9fcf-0ecfcf057199"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8e37288-e634-49a6-89c3-98f82135f338",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "0ca1dbf5-37bf-449b-af86-5c6f7021bb79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "787de4b6-734e-4bf1-996b-8ea0b3600bda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58d287b7-db0c-41ee-8907-3cb02428864b"
            }
          }
        ]
      },
      {
        "id": "9fa1b3b0-1eeb-4ed2-b3ae-0fecd723ef0a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "721246f1-ff8e-412c-aede-8e2f45c4372a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbf64683-d250-4b49-9909-5c211e039e86",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be08a838-72f3-40a3-84e2-8f4b1089165f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "310f7104-a7d8-41c0-9f39-0719359e25e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9985114a-7f5d-40c7-9006-63e5cbb59ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71627f2-f666-4b18-bb38-1e9fc0013f40",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab488f6-1124-4f62-a1c7-6746f6257895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9f472a9-2480-4440-9438-8a63bd31ec42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee548b3-098d-42ea-ab34-eabc86ce62d2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d057a651-92d9-403a-9a99-b4d627de50db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c87b787-3b08-4667-ba9f-7c64f4ffc34e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6af037b0-bc29-40f4-8f50-39b7a67d9a57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1df7a080-bcd4-402d-9901-9db004db22d7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad2ae5e-ed48-4c59-a018-fb9b763844b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6bb30c4-4a9a-4a3d-a99f-478f7d6dabcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745ee828-674d-4f01-8b95-21d70372c451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ea53f8-36e1-4a44-b915-9223b7713197"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "458fe003-dc99-40ad-af39-bc35f4386f4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96e07795-6650-44c1-b3fa-c49d8da1d1a2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "187c7cb2-7735-4c10-b734-a8904aa3bb0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8f33194c-cb1b-4265-9ac5-cac4f12b5e07"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e099a4d9-a1bd-4faa-9121-aaed0af24449",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d5a3ff55-d72a-4074-8cfc-cc514272372b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "663f580b-5bb0-4ca4-9f7c-46625cde3e9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "475172ca-0257-4da6-8654-7e1c6ff50a1b"
            }
          }
        ]
      },
      {
        "id": "32dcf016-99d1-439c-a54d-76bb15f20a85",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3a869a07-7e94-4dc8-b155-505ef6bf6a39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "76c58f79-9705-4f87-b74a-6fe25898f7e8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7e79049a-21c3-4c7a-a4e7-e5a31d00ab38",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3661b62-21b1-4e3e-98cd-cc158090f81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3640add8-df7a-4c0b-b7ce-c3184f6947d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a902aad-2d9f-40ac-8829-e1a452887174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a73745c9-eaa9-4eda-9042-f26a1a0553c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa2bde4-540c-4ea8-950f-0b49e6ea0dea",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9154237-696d-454f-ab9c-4aa4de40ce73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24537f0-2f89-4fe8-8013-ffaad78cca2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6219429-5617-49f5-94bf-2ada0f049075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e224d7-6fe1-48cc-80ea-76d0a18755c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d87b572-1c3c-42e5-9fbe-19deed8e521c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fb1183-333c-4291-ab73-d6a4f00f1d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4331030a-f551-440b-abb9-b1a60be761d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02aef5b5-aadb-4c4e-95fd-3ce4ae1d91ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41e105b9-4d5c-407c-9ebf-2b2079640804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47491b4-13f3-49d4-baf4-a3ab93aaabd6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6623fbbf-3ce2-4e43-809e-62c254d6eab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a965c4-4260-4477-94c4-291c91b20576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd507b7c-fa31-4532-baeb-62615f3a1ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc541b8d-e4fa-4e76-bc18-1949f1d84f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22541eae-176f-47b8-bd85-dc6b26826f88",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6381de71-06ae-4849-87d9-92a20cbbf591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6e0c16-85aa-4347-8edd-3d54065b1360"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73efc8c-25c2-468c-9bc1-751174f74dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee12b696-42bd-4932-9da9-98d66966fab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bfc93d-6794-4300-a65b-7b05bb1c9520",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c5e1bb-04ff-4a4e-89b9-fa970dad0bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d99b57a-3445-4b69-8962-c8da34440252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64eb02fe-4c52-494e-b8f3-07b91dc8addf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd4b1c57-8753-4347-a33d-68937b2b2a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda9bf45-4f22-48d1-b60c-b48d7493dcf0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6524f2-0d64-4138-bf7d-f3f4fea11648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cc3879-b918-4a40-af8e-d4f8c3e59494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7da569-5709-499e-a9a6-a68abbd19f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4d8a60d-d241-4c4a-a9c7-7a8baf9beddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b97a0ec-4121-4a56-bf73-395ef02458b6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c73550-27c0-45ec-8422-82c4891250bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b916ee-d6b9-4b5b-8134-0aaf7501689b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f413a0c-e340-4dee-9793-35a0dab4ba81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd996299-2eac-4edb-9288-07e9e9fc0b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd800ca8-0e79-4ec6-8b55-d24c15be6f86",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87eb404-91d6-49b4-9e97-272b37615df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d76be38-45fc-43f8-a68d-3f00a8a91e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4910b259-b786-4e7b-b9f9-3430ac372d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68aa358e-9c90-4d29-816c-3b68ff4cab89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4c6d28-7073-4c8d-b5ef-c482ac2d8ce9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb8650c-9f3c-4688-8168-df29dabdd4f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd3ef64-ce11-43af-bebd-4710adae595f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be18e324-aa0b-4f7d-91f8-f0f5da12ce77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3118706-6e0e-406d-98b4-1b0aad01355d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a0f756-917b-47bd-955b-e809e3392020",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd341140-7e2b-4b3e-95df-0e942dc5f7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0547f9d-2d52-4cf9-a29e-4a8fa6e8860b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006cd891-47cd-49ef-8d36-69e81c75f1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07f1944e-d444-4d2a-9473-519fc523f5f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0334fa3a-6e23-4419-afa5-a5684c8b8045",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9df9f33-b584-4f97-9717-c91b070e1f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477fbe18-1890-48b8-b439-3de955b524de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32cf490-fc04-4d50-b0cd-2711c2ff4e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26def189-df80-404d-a4aa-b973ec524f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6490eae2-f47c-4935-8d0a-eedf5ec43c8d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eac3349-6c57-430b-9222-2670bbbfae66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88617f35-17e3-4f3e-a993-a9b8cb83450c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8994324f-29c3-4b3c-b46f-41ff9b9b5e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1910160d-ed56-4c3f-948b-b249dc13f856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e093b5e2-f822-4d4c-b895-a85c4984ee28",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0d1e81-30f5-4be6-acd8-cb4588ef354f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b906eef-a01c-4405-8c71-f3d18447459b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13721059-f9c9-434f-83e0-24d26e883a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2f7657e-4e60-436f-a9a6-e1ca46e1e4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ca4ce4-157c-4e10-8343-1405df3505e9",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67795194-c3c4-4c01-a4bf-3eea828bda7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1be00e4-f5e4-4b05-a7a8-8b94216bd63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741f0d00-cd59-45fd-9edd-5792e65162a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1b6281b-739b-4f19-88ff-83eb84a7db7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd15e0ae-628b-4e64-9f78-e0bf335a94a5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecad9900-f485-46dc-bba1-dbb9f53efced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466b7c3a-7498-4462-baf0-c73b29463433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05218b5d-0761-42b3-b577-e979adc0afa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30800c3a-50d9-4352-bb6c-99ba90d0e02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66621303-446a-42f7-a4df-e7c1025a8d80",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57cf403-8dce-4c1c-9e2c-644f5d9e9cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80a66ab-77f0-4637-a8ca-d4d1362b707f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7186615e-b907-422f-84e0-3ed1db692ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58b3edca-625f-461e-a2ec-6c62f2bda254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40350af8-f6f7-40c0-8e43-ceaa3c0b2c61",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7580ef0b-dc34-429e-a42a-0470657a7ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3718d07b-d023-400d-90c5-3735500b29c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a590825-9388-4049-998d-6950ac0442c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "bae55714-bea3-4540-8dda-24883e6c983f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f6afba-cf32-4034-bf65-2ae6ca4faac3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20f6073-6b23-4fa9-a2b9-fb2b366231b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94184cd-5399-401d-b6b5-c60815707d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a515014-b236-414e-ae03-647f5f90971b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2ada1b-2d3e-486b-809d-b22246b609b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dded252-3bf2-491e-9190-b4e626f9f668",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb6a6ad-c575-4b8a-bd95-502c65a34c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5209dff7-69e9-4c53-a661-a3eb27166b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be66ff6-4522-409c-a5a1-b10c307aa862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0afc476-0724-437c-b893-e421af5ff850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2356347b-b437-48a1-82f8-aa56912b9005",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f68a46-434c-4092-a364-501de304112a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2fb2fb-8be1-433d-9b21-d4740f9ddab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987d0c50-53b7-4ef3-874c-e13a046fd3bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8c1459-3e63-4b8f-8530-d7a541442fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc24df42-c27a-4ab9-9791-446957ada4cb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400f6cb3-7c61-441e-8428-d69a4598068f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9b54c3-de78-4e81-8fe7-faac2194033f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5280c4f-fab7-4f01-aa50-6d76af4cb2e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73f6d5b7-841b-4900-a953-5b89545639e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1333c1c-4c4d-4549-a7d9-8033055b2fa7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e200983-7afb-42da-9571-16d35ebd1dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add5768b-ffbf-4473-bf7d-fab872c0c802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26dc9442-9ba6-44c6-89e3-db77b6312d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b44afd68-91ce-4d41-94e9-452679f88b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409525e4-cfa3-464a-86e7-43b1279eda78",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ad54fa-10a0-48c7-a4f4-0c79a0c464d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa387b9-9165-42f4-a816-938a993207ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef56fa93-ca54-429d-8588-e5724f42a34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "33ec96c5-2ebc-49b1-9785-308f5a2a51c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0efcf245-7eeb-429f-b640-4dc67828cc64",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049280b2-c77f-420f-80a5-7e7a8b6e31bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2b722b-4133-46ae-b3cd-8e4d6f873585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7e55bf-cccf-4755-a940-8c524f08ba51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61cb6ca-05e9-4bde-962e-c4591ab17581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bf67a2-737a-416b-9fe6-0838fe23d1f7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead88fac-1c68-418b-b5dc-66ee793a6b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1731a38f-8610-426e-aff4-7c94738992dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d0ffb7-1d0b-4b3b-b253-735a861567dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a7b47b-5080-47e9-9e8c-c0c23cf50bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701f1b44-8ad5-40f6-800f-0bd46f60f739",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ddc7c8-25fc-4d3c-84ee-98d8d10219b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851fbab3-5e89-4a12-b63d-f71fb9f1a06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023cf04a-30c9-4e4a-9fe8-27d20f134390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d703bc5a-91b7-469c-94ff-17cdea4d768a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a376930-7335-4652-8a3c-ab99d9674a2a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe7854e0-6f5c-4273-b3db-535f3162f1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2722d2e2-bef9-4913-8e68-41693067f90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ac8b54-c7b6-4b26-92e7-cb0af1648b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a10dfce3-b747-49c0-b82d-83e44d0ab8b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae76597-1f7c-4b6a-b541-a7b9567fc501",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a73f1b9-0bbd-49fc-ac69-43fe0cf63630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fad895b-69d3-42b5-8b90-cd874e0dec69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c060d6bb-0a94-445c-bbe9-e62515dd1d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94bfc2a5-b563-4cb1-b5b2-67b86bcba033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19680be7-a940-47a2-a015-81bd43412e7f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f345a764-244b-4035-a100-1b4010529fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861d5cfb-92ea-4fce-acc4-cffb2177f78b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aaa52a9-7325-471c-94f6-9670e9bdd57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6384c7ed-0d7e-42fd-861a-3323fb269d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138782c8-af11-4ec5-a24a-36c214cd32c4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add83060-49b2-4861-9715-e37f3f7b71af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b003d80a-7471-4b2b-856d-818c252ab9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99839a1-4186-41f4-b4d5-57a7459cc140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c777200-4803-4f40-9859-41129b53c0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167c4bf2-2999-4d86-8ee8-05eec725f55d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b7568c-df5e-4e8c-97f4-eaae07b0f34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fab21da-c980-4355-813d-dc6c3f9e5571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2432434a-884a-4bab-8fd1-9782568893cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8804ca16-71df-4387-a7ce-e63b34117f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d087f416-91df-4a1c-9750-4ad57db09217",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9770ed3c-7a67-4f85-8b0e-19c6f9e6da08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5019ba4a-b764-4638-9e34-c655507709ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97523c57-668a-4ec2-8892-90738fbe9891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67c3271a-4bf7-42c7-8ed7-2ffe7ea4cb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b19128a-e03e-4ef8-a75c-80103fe404bc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc88068-3ea5-42ae-82d7-1748396acd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3db54b4-317e-484d-915e-6844eea12a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09639ddd-b702-4eb6-b4f7-2c2ee11739d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "516ae407-2628-4f8d-82cf-721b2f01385d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65637770-3982-4e65-b7d1-6f41d142b6d9",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f498cffd-0014-44c8-b226-02e23f5908a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33a22c30-2cb5-4369-8dd0-3b3ce9261386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d3ff63-70e4-4983-a091-57bb5f4d72e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "00ffc603-f915-44e6-b2db-cf3d1aa7bb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caaffd6-1c94-44cc-b3ec-b187547a10b7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7bfe76-5f46-4a47-884d-6dbc6e201ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22821d6a-f85f-4a15-80d8-b038d6fd9ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca67b5ac-f5ab-4f04-99d5-da2da50adb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fea23368-944d-4973-a714-9001310dafc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c4e76a-152f-46f5-8875-09d1b385b37e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8447ee08-23d8-4395-90cf-da7ebaabfb6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3bef92-2a44-4304-b049-e16db5a4b305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c43bb1-75b2-4bc8-8433-5386fb04ac3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "523fa0af-dfb0-48ed-aa43-7732751368d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae9a4aa-d7c9-42b1-8d88-73772e11ed1c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9e281a-7b6d-4f21-9344-230df0b86dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088b1be4-a346-4caa-bb9e-1294dbb43356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1576fb8-a524-498c-b567-be1f3f7ab54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e36cd26c-60b6-46da-874a-b0420f508720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1788a58-234c-4f66-b963-7cdda6be3db4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414add0e-6b2c-4802-bfd2-a8f90676465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ce4656-877e-4d81-949c-5674c6df561b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3d1651-210f-471b-89a9-ca895c7d187b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "857585dc-a1c9-4693-87dd-66596992ec19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f204aa83-23a7-4352-a104-3f167973c04b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51a7d4d-ecfb-483c-b709-ea02fbb88a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae7c3d9-f701-4ce2-af2f-b7dc215b7b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4c194c-6cfd-4da3-a9f5-a1c311d4a68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f57689e3-3fa7-4fe7-8b4e-f838626c75ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37dd0e30-974a-43d7-b1a2-11945e89a5df",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313536f5-c9bb-482b-9c98-6a28261f3e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe2cf6a-4e25-4323-b574-f72254c19917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a56d7d-f809-4c98-a1c8-c445ddfcd2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4d0b57a-d6bf-467d-966b-194ba1a3b571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f28245f-c655-4cca-ab5b-3b09bc2c44f0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e15d7f-0f35-4fd3-90db-6cf6cabbcca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b42fbc-968e-47f2-8be8-80b85abed693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2599246-5df4-4f4b-8fc9-ad680ee2a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "74e5042b-d9d2-4f6a-8689-606180cd5bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f378067-b2ec-4f25-add1-8e25c7e584d5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e144d53-7679-42d5-838b-9552a868c7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c61b439-1a64-4eba-a8b7-1f3965897110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5163335-40cc-4cbe-9490-b98a76359d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccae444-efc8-436f-95ed-87d7de3d1a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f0f0c5-7530-46d0-9405-2989257138b8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2016cde-f5e6-4d3c-8270-117ea13ad894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc718d2-1d17-47d8-829d-362dda5a5fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75b4e3a-d91d-4adf-acf3-8f727755f743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2760064f-7f1b-4a8d-8a3f-9a3cec81c773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba74ac5-a184-4e14-8b59-9c27c2f67ac7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf54c40-37d6-4c32-90eb-13a686c01b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2517fca3-9483-4c22-82a2-6310be0effcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd7ec7c-24a0-4e7f-bb90-762c46570192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6878300-af4e-4c99-9787-f7ec736517a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85f540b-2f49-4957-8dca-b79aec86fd76",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f689e3-9557-4b47-80b5-319967fe2413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4484cc4-31a2-4813-bfe0-e10eda4e6372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff705e5-2122-4dc5-acb3-25058915de58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "166a03e6-96a8-4c40-ac25-b62ca6079559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcccebe-89d2-476e-a78c-bcafb13d2ab4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0310d4d7-061b-48ab-9a23-191d3b0e38f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8208429-ccc2-4929-a5ae-912234ed361c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da1d523-781c-4ce3-a50d-c54a9cee241a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38cdc9d6-78c3-463f-999a-20e56d70bd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6299a8-e83c-4174-927e-059c88883f1a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba7fbcc-436e-4b21-9099-0cf358cb69b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee26e18-d428-4d67-aed5-6284fa544ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4d6952-774e-42f5-ba27-1cd3ea555d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94ac67c2-88d0-49a3-85c2-36d279c1859b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f630c8a0-38e5-4e17-b022-78c8a47ead28",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c70dc7-24a2-43fc-b988-affc80e82de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90477145-9be4-444a-a703-3e118020d374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cf62c1-f18f-4a38-bfd2-daba96010467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d488ce-cbb1-4aa8-b49d-e7d47d7c02dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82677bed-0058-4d77-9df3-ea44130ecca1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a2fb33-f9ba-4902-9917-1f9513d569a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bcba2e-94c9-4e28-a70a-ce5a5d83dbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a75de9-6c7f-45a1-b2ee-b942694966f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d449f0-e371-4912-a9c3-9765bb5d788b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b95dc75-5c06-4064-af25-a0124ce1617e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3d4d96-53f4-4f79-b4ea-c188b8adb956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa3be88-a84b-4f66-a795-54a12853205e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbd8653-dde5-47ce-9f48-d906c4c8a66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "55dc5f76-ecd3-4513-880b-319aa59694cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63aba13-8257-48f4-9da8-b1d122db2549",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909ee4eb-4257-4fc7-9629-9f043c64cc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6625d74-14ea-4482-b6f6-562a816ee8c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccb7329-ed3b-4a98-b0d6-9ca91bde439e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43731b7f-0e10-4a2d-8375-317bd0f3b5ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcef730-1757-4803-a626-61eb69d48ac9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb6b9ab-7987-48a4-ab8e-7012b8cf544a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e459d5-9e9e-48c8-a0eb-34a2a8dc4004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e8353a-1896-4913-b194-c8dd48cafe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79ee10d7-e4d3-4331-8e90-14441698eba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207a679a-6241-42cd-b890-d623b8b8fa67",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e17c44e-3e0d-4344-b028-b0586e7e349c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fa478f-8fd7-494d-913f-7fe40102dc56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0664d3-fc89-4d2c-b876-404ffea45dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60f8cd2-c8c2-4a33-9b58-8c0f890906f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ad5e75-3147-439f-8f27-39e5769addee",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9259f60-0b0a-409f-bd9d-dcd15c04b59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8476fa68-7823-4aad-a308-16baf2af4cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392204d4-b735-4f0a-b0c4-60d3c5b81a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fec6253-321f-47c7-8b1f-00c9a4b040df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab8cb66-73c2-4b3d-90c8-b91fe77760a2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338d6f09-dce9-472f-bbda-171e93fa3c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909836c6-5890-45db-b9a9-6aa6d0c37118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d218f501-735a-4a93-ba4f-830fa28b8c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "572cba9d-804c-4050-9835-224bbae4a87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8556f2-49ce-43b0-b906-9442e8e3b737",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ef963b-ccdb-421b-b7c2-66fea863ede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5d6e1e-86f3-42c9-9d52-666818378646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28362a2-dd92-4808-ad6c-9164c6a0764d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b948d596-5129-419b-a32b-a130277ee545"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b50600-3fd7-49f0-8f23-a2ed2a81b0b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72219cc-b564-42c6-b6dc-feb85b2b33b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0cd9ade-7687-42de-b3aa-8b158843911d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afd2ba7-5d78-4032-ab19-b1c1739fad26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c183e83-58d3-41fe-854d-4f688ec7a476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419e92e6-1f09-4cb8-afda-d198b712ab56",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f639594-56c5-43b2-bdbf-8ca6e6b15513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf789fd3-9a4f-45ac-8abd-a34f82e72709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b90f8e6b-06c8-48ee-9420-16ba235f0a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c99d8d69-3f64-4ab1-8922-7d5c3cbdc93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d672e6-7f6c-4342-934f-f2240436d697",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c086f37-ebf2-4a9f-8270-b0936f12b8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ef3a27-9145-4cf4-b937-13130acb8fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70900d63-fab7-42e7-a6bf-d2bf03de0dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c62f6af0-7dc4-4e69-96c8-80084f8b842f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8700ba-6d3b-42dd-8379-f062307cf3ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3e9675-81ca-4e24-9d8d-e186c25099ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0252e60-ee90-4b1e-8a29-d5e5cb509fd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f679fa-482f-4f3f-9d88-b0d2fd1b2a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8b3c34-739b-4731-a274-35de1cebb173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc27ca4e-aa6c-4b0e-bace-111672af44a0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e4735e-83e1-48f4-b0f2-8aa0a2c4640c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e86173d4-d241-404b-b2c4-bdc170fe2bd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1bcc71-a2c2-4f88-8fa4-2e155f45534b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f65fb82-d6a0-4570-9b4f-726d47098fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d67be6-b96e-492b-b129-654d72b2c2f6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d3a389-a552-47ba-891a-f0fda37929b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e800cfe-799e-4c2c-a929-104f27a99723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cc9d06-52bd-476d-a8a9-ed6010e45752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5efac6-c02a-468f-9041-72006ba0eb0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516d5041-10b6-4879-a7b9-3815fe9a4c34",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ec874d-d7b7-487d-87f7-c4efb5185593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9c80e0-d212-4cb3-bd96-47ed274233ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ca9ecb-d629-418a-9b0d-41221b85357f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "02f962a1-839b-44c2-8c31-d8dabb061169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e514e5df-70b6-44fa-a341-337cd4a09354",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74cf1bb-2660-4167-8160-277d7cfffdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91096fae-bcfc-4cd8-b2c4-70af988245a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a749e2-4ed7-4470-9cba-70991f3841f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8241d2e5-58ab-4bd5-bf47-dd25d681b011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa58bc78-7829-409c-b0f0-78c241dec564",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9a0ad7-8b2c-4043-84e9-ec69d4242884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995ed91d-ae26-4694-8c60-69d4218d7a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f61a467-b117-48f9-b93d-890f2e41c7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30afc949-bbf1-4a3f-a900-1cb9d855d10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2344e3b-7a96-4717-a2ce-693269f80055",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f44e7161-7afe-4cc6-a2c0-c5495be398db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1fffec6-0fd7-4b73-8dea-af0990ccf75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564692bd-62fb-4059-acdd-495923fbccd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b6436c4-7a21-4201-a996-f87a9eb90384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0a1d66c-c5fe-486d-9574-b1cb08aea2d4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d92d7f9-0fae-4892-b6fd-b548d4b965b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d03354-25e6-4d51-9667-f12844addee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529de8f8-daa8-4ff9-bc29-07b7f7a958fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c7811f4-abe0-45f0-8199-a077463d529a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b365be60-6b8d-4156-89fb-a2da1e64f932",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca73a97-85ab-4611-b817-7b211f581479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da296a17-9616-41af-b300-255469eee33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e277b3d-683e-498e-be9e-50928729795b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eabae3b-e1ee-42c0-b95f-9330f0acd21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434dc978-bfbe-45d2-be76-8fb4ace34e56",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1b8615-d2ae-4ba9-9009-bf2f72cbed9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdba6af7-6275-4e2c-bc65-c0495e76b240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd0f9f3-24a0-43af-aa66-402e7d314eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "100bebc4-edee-4983-b5a8-ae6777845aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07441e11-db6c-499e-a00d-b56468b59189",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "628b1f93-9968-4b12-b660-d5c2b504b041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74f21cf-680d-46a9-bce3-b7f6d49fb542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4c9fdf-d798-4616-82a6-68fff3b39cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2beeb36-4636-4a39-b7e5-99f1ba5d0302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6be6f49-0d1e-4b86-825c-348ca3751ef2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ecbe46-91c0-4cba-a3d9-80119c03ee88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d96225-aa8e-480b-9517-b675a7c1ca6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad7ae7f-402b-43b8-887c-a77ad7bb476b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0a00b5-2790-47d6-8c70-d9d7d4b3636d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970f4353-8918-4eb6-b5e6-5ca76d7a2158",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57603ab-7ce6-4a3b-9d31-6ae224d6021f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a308aad5-4b10-4368-9604-4bc1d065da0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead34877-0aa6-4d99-adca-17d0a24435b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "443ec097-7c96-403a-8077-b83dbb42b776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5beb454f-7728-4843-a2d5-bc91e8ad7405",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46ea1a9-87f0-4149-bf57-514d31695d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bba693-618b-4026-9647-6a1d379fad5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd8e8f6e-306d-47b3-b170-bb766ac47d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "016e503f-2501-4507-82fb-24ab1acad559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a876df48-c4ee-41fc-8c85-f7fb86039a4d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dbfd00-7681-4ba6-b51d-0938b212e2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f258c22-623b-40ff-ad8b-87d53ded08df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca7ac18-6327-446c-8ed0-ef1d6cca46c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "129f0f7d-98b3-45a0-bc91-38b88b45723b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d520f5a-e70e-474e-b357-9a6ea5b1e900",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efccf9e-7155-4263-be48-a02a919b148d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e48f376-06d2-4f5f-a340-e23962c1581c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5058f5c-b878-4973-81ce-350acc976561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6d4aba2-3bcb-4083-8b81-510e17605c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c1874c-9092-4d69-94c8-3fddc7fcb77d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f438a53-d0c2-4822-8e84-94f4b436f132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8de5b02-480a-4c0c-b738-9a1cf0fe6267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe873e8-07e6-4d1d-a0da-774b0b8bc7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f93d2707-9180-4d92-83ba-1f5d68d0788d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5499f95c-0dfc-41f8-89b3-ce14a2d604d0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73753dc4-dde6-4ee0-9f83-31d958485488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4c4b8e-c126-4ded-bb38-383566652a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0c025b6-c919-42a8-9162-1a3f91d0b522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e22a3001-650c-48a7-a580-5393b515efc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3688f84-7f9a-4688-abfd-f233ca8c3f90",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae322a9-1ae4-449a-8e0d-f3ba8d51c663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82eec192-6281-44bd-bb08-c2e6fb8905f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfbf7c2-a7d2-4daf-9d50-4d1e1e331e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "800ec394-cdea-44d4-a278-127c78caf506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb89b20-fc47-450a-8429-4d99f7abd082",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8290ae-1b65-4694-ac14-efd7c0e2c1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea82331-5a6b-465c-b1be-e31a7a763a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397ab5c8-fd38-426d-95b3-9a4af09a7e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c2e41f3-9f5c-4951-95d4-6e6e71a29049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbfede9-8e0f-4022-8e4c-1762a55b6502",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdf4718-e879-471a-b229-a71303c133b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e88827ea-ce36-4c24-be8c-3f369a7c659a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74979fa-cd0c-419b-ba36-cd9fd46a3416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba374c0-65c3-4505-8644-4faca857f865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508d4513-ed57-4889-ad1f-13cc1cd88caf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbf450c-9098-47cb-899f-345eacda5eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a94454c-5af6-47b5-a8fc-7a174365f368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5625ea21-71c7-4195-a251-f60c35f01e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d583044f-8091-4084-8259-5c93c72097f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7fe065-a6a2-4fcd-b1a9-2e544d354621",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4d6efd-93d4-47bb-aa98-64f050618c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e54cb5a-8989-429d-a353-ebe32f6dc596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e94388-e562-4d52-abe6-58ba0ab2da69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "025ac97e-1ddd-4525-8338-233fa7dd6420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0414d4-9126-4e55-aef6-5e21fc27854d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765c0274-a54d-4ee4-81f5-413dfb34a23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b3eddd-3523-4e94-bba5-03d8cc546178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a101df-fbeb-4688-9d93-fea259851f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aca7c5d8-a470-4367-9213-1ec4a15f9eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f48de68-4a4b-4b8d-bad4-8238e6b96b47",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5874cd-8d37-4ecd-8f9b-72478ee00aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "519ecab7-e469-4ae6-a546-84b8f7d5bf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58a4f79-fcb4-4317-a0c6-385f088db4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "707f0983-ce21-4917-aee8-996e260d4eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55072065-4b87-4e4f-975f-d75539e01986",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2297958e-9bab-4cea-a9cd-55da4f6177c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec61c599-9a9e-4109-88f7-f8e3b2eec576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddda10ae-cdbf-4938-b007-e3ba8508f4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd0945a-c069-41bf-9318-9e23f58a701d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa07b18d-6e95-48a2-97fa-8ecf90ca87f1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1849328-8ca8-4fba-8899-3b891db4e164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db90cd9-7845-4abc-b85f-a1ed8c58fdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143a4d60-0085-4c79-94ee-0e36580de20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "da6b57b9-81c5-419a-9979-2e61fe68e4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0ad9f3-786e-4652-9088-5490c6f97c8a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa6db2b-db79-4d1f-ab51-c154507f9151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ec214ff-7c4f-4146-8ff7-b0f121c6b340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4083a5-1d04-471a-92fb-1c9b2c624896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b20a52d-2f8b-439d-8b65-7fcb37b530fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b8fa192-8496-47ff-8036-4824ec05fbfa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3a3d67-432e-4758-8164-3827a8eaa26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d581d5-ae0f-417c-8973-5f5346d448f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735f5658-a36a-419a-a6db-073ddd0eca8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "87fe294d-2c91-4380-9d1e-bff2a27ee106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db72d84e-293b-45e7-a3f5-80f2ffc3421c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28711a2c-2c9a-4d5a-8b1f-0b522321570e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0327e44-2661-4e8a-b79f-d576d1ececd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a18450-06e5-429f-8808-e04490320c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d744a486-39a7-4b8a-9caf-19ac96c46cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b826c2a-f851-4b2c-805e-600622d8c2f4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c12852-ac2c-4cda-9f77-0187c9969b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862c4222-ba96-4073-93b6-c73ff11d33ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dd08506-adb6-46d6-891d-9037cd405803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1810a09-2483-4d5b-a1cb-1471aefbc7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1668cb9-a4b9-4eef-bcf5-70c79a64817c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac84f4bd-bc0e-4fb0-8eb7-59329c2adcf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2cf04012-be19-455d-8af5-cce24498173b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e65312-4467-44a0-8c70-6df3a1ee9900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "39fd22b8-1ebd-4966-8438-2caa924d600c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "31e07199-ceda-48b4-8e66-5e6640fe4ae3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7abe209-581d-4265-928e-5b63818276d2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0ba1e5-e7df-4907-9f9f-0b4666b2f145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0c5d78d-9dac-42c4-9b6c-006d6c080dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c66a7f-c385-4453-a931-cceb696f5522",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6452be35-1b53-4a78-b698-8cfae2f9b300"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57083dc4-7d86-43c3-ba85-4ce36de65989",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c036ae39-0371-4475-8811-dc798c287f50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffc1b68f-a5e6-4ec6-a888-de16a78c12ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea53344c-850a-4105-b4f0-96a6d496d008"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61a6a50b-36f2-4431-a483-76835ed3ad38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a582fef6-2308-408a-9a00-068af76f1a68"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02815308-0491-4474-9877-0ccb2201263d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8bf70c9-b5a2-4154-8c30-9f7216194919"
                }
              }
            ]
          },
          {
            "id": "880607cc-2aa2-47d4-b2d0-c86bd7e737fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e209975-5721-4eee-a483-b5c836c3e7c9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2859f734-2511-4cc5-b8fa-0749ea78e4ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9282f83a-50da-4df9-bf91-7bd1bb1b121f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ba6f555-28fc-4ff0-94bc-e1470459d728",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0bde96a8-4d2a-4366-8736-93a498a72159"
                    }
                  }
                ]
              },
              {
                "id": "7deff427-9cc6-43aa-97fc-491c2b273cdd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "30b9272a-ded3-45c9-8e60-42ebd4ef3132",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4fc2e9ad-360d-4b3d-9553-d93fd72e0206"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71b5a947-e91b-4ce9-a1c1-c10d23b400c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c1c8922c-980b-444f-9f37-ab9fe4e3d12a"
                    }
                  }
                ]
              },
              {
                "id": "9dd3a904-e47f-4ec6-83e4-98ddc6455a91",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e964657-7880-4116-a391-3c85fc75f100",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70e07117-4838-4b54-8957-6ca64850e082"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ec17481-9b66-4683-a392-e1319a93d040",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f33925f4-9f89-4574-8422-79b81193712d"
                    }
                  }
                ]
              },
              {
                "id": "6ddd6b9d-1872-4412-8322-5ec2a5a7b288",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab24233c-b25d-4787-b033-b435af7996f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24fe5f8b-44b5-4c5b-96f2-46ff238c5320"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd10ac5e-ff02-4cca-8b29-376d5091ac24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f583207a-df10-420e-80ee-4d11a64416d4"
                    }
                  }
                ]
              },
              {
                "id": "cf7c19b7-8472-4453-bc6b-ff9f43cf9cb5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a1feed3-b368-4afb-a965-cf4c0f8abf04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "565614fd-db6a-4310-9422-c60dcda28fa3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62e08491-2e6d-43f6-affe-3075a397af5c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4084f21b-ea2d-427f-bf5b-22b5bab45c61"
                    }
                  }
                ]
              },
              {
                "id": "1c3d76ed-220f-4113-91b0-d477f7e06a73",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47af5701-713e-4941-99fb-84787547dd40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "408e8e85-250a-4f3e-be4f-3558cab3fbad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7314e1d8-ba81-42de-a187-0fe90d16f32a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0af1815e-0861-4917-849f-080b2b84e9ed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b7d099eb-e093-4a5c-b15d-978b27bddec3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dbce5844-e5e8-4e9c-900b-0d5a4fdc95b4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9a6d64e6-d6ef-4cca-bc1c-e8ec71aa4071",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac2da304-829b-4975-bbe0-520642ffdd6d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2c70113-5112-4477-b346-3234c2d657b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "83c560a2-6367-45a5-a6e2-feda009e6e29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22c67e78-d973-42a8-afe3-857e596d2080",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adbad02a-3320-445e-adef-4197c3599d90"
            }
          }
        ]
      },
      {
        "id": "bde5e95d-112d-4d22-8fd9-d645114bbe33",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3315e811-d0b6-43e6-9ad3-c2c8736221cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c41b4a42-ab78-4643-8a96-4a29f81e19b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a54f2ba6-2cc9-4e1e-97df-60af62e48a13",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "451ab438-a37c-4978-859b-cc04af836c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f206d861-8ba2-4928-9f7a-3fcdac9564a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18163a42-d1bc-4f07-8e3a-faf33a0ccaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a8121a-2620-46c5-8bf5-90895a17ab3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02df4411-ee8b-453b-85d2-86641384670f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f6b4822-619f-4f47-a53a-93f21d9e4aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce60f731-b482-42a0-83b1-8f8e80cbe776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276a19ba-3660-41f3-be4b-6f9bf728070a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc57a5ea-10b7-46e8-b777-224cbf908668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8212febf-d7f9-4774-916d-07035eae00e2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ec8349-3b98-483c-9396-38070d55a1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cccf550-2794-403b-bf56-75c15d10af6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd46408f-19f7-4fc7-bce0-a3435f44f07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9281a68e-ad61-48fa-83cb-d5fafc0b130a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f89fb0-f649-4544-8d79-59b5ba3a7b17",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f31d55f-0c48-45e5-abf2-cfb61b133483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a442c783-c7bb-4171-9fd9-c8f976c1880d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74241328-3cc1-4e45-ba0d-b30b8d56d120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd630eed-0266-44a9-98c8-bc6d16618431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4385447-ac63-4a21-b33d-993ef8a519e1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2639cd6c-c06d-4fdb-a3cc-79c5872dfcff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c067227-cf1e-41fe-aeb4-107e600e1b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86021212-d875-43aa-8a6d-9d3938ed4435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd9802c8-f8de-4a20-9e06-1afa6c46ae19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ffb90e-5682-4efa-88f8-c487ead7413c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1d81f7-1a2b-4c17-8e7a-abfaba60b332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff070f2-2fde-4af0-b48d-2283f356e169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f71512-1de7-41dd-8d91-6e9268062af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b424369-9d07-4c7c-91ed-c36a2b1132a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c8c074-7e75-469e-bcb1-dd32b88fefa3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e8fac5-0640-4b06-a3fe-e37a15e0fab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b94985-9259-4e8b-98c3-efc117934ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6878d3-f3da-4d41-9802-96b1bc9ce88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0119e9a-588e-4005-9e57-6b48003c7b78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0da23f-55ec-4b27-8bba-cf4f8634f62a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b37b7f-1fe2-4781-933c-65479f034ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ef3b83-dc81-4d3a-9121-6bb40b4958bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debeaf83-0930-4872-8093-61f1902efe62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12561a33-2609-4363-a924-f4ce55b029e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e25d5e-4a7d-40b2-82d5-84820a5875aa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f9ff20b-f05f-4c62-94f8-e4fc3e81d338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba705ee4-cb90-4a69-b909-a525b28e5da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a0f86d-9347-449e-b614-b1eb413736f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e55b054-6ea9-4261-b407-7ded7b5e42cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c122dc8a-cd9b-461c-a259-6da91c98b3d1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "747a349a-f015-4ec1-b02c-9ee30dc9892a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bbf6dba-48ba-4b32-a517-dee7c35653f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e78ceeb-8ee9-4deb-9557-db471d7e1f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78cdf3cc-ea67-493c-b941-696ad0950233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b9b135-28d1-45b4-96a0-5b0a6cdf554d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc81e476-2662-4d0d-b2fc-26083929fb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a64aed-fd54-4841-ad62-0f8f261a516d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718b0e38-7899-4fb4-855d-3fd4bd27d10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "98e9a9ca-c12a-4397-b33b-29aa1723df51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf8eebe-f420-4641-8c9e-1641700723fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa756d8-d417-4a67-8449-523b40ac7d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660e4196-7320-4c81-8b8b-8e2a112e626e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe5b4ad-b8db-4bba-8d94-07424b10e12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e09af8db-a8f4-45e3-92af-bc8b67445f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21c3f2c-c5ef-4fb0-ac32-95f03f8bf40b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a253472d-d061-4772-941d-e745a74ccbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cb57f9-2e6c-4ff4-82ef-238a33238b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1dce0d-ccad-4186-8036-2e0210a392fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb160a3-94cc-4516-81b5-734fae247de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9333fb-73c5-47ae-8ade-664e271ace7d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82e3434-602f-47f9-8562-0e55545eb41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72e4fb0a-c79c-453f-b296-5caf79e19b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68302d34-20b6-475f-bc4f-dbcee14cef54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95562b5-7b93-476e-818c-f5b23c041a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea40ccf-6dc0-45eb-af97-8be71a9832db",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6048282-f33a-4c0f-8687-7e002b9ddd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c6cecc3-f2ea-4a50-94e8-a5c8c95ac279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eef2621-965a-4656-8b09-46349db50412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d258a9bc-c2d0-4118-acee-d38e28476428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520281d2-e134-4905-8528-d9bd43bb07f1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c009b5-7a3e-4d98-a5b1-9f6ca6288344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb40be60-b11f-4b15-be6f-f211f8a719f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00784508-4cd6-4335-a0c2-dccd0979600b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "853381f8-beda-4000-8121-9870f1521c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3277d2-1376-4bda-9dca-e449e6146c19",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a43973-297f-4150-947a-641ef5fbb6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a70e5f-4447-4559-94bb-ccecb34cb146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d300fd-0530-4457-ac2a-fdeac0d1e536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97dd0dc-4b6a-4140-bc0d-4f18b4334901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e347d9f-1a9e-4560-8b27-e3625a5d1141",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605f43fc-d3a1-4a94-bbc9-f2acfc3a52d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aacd290-e2b5-4e71-8e50-c777b03a7fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33f5b87-5a31-4fae-9a69-0e517f9abe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c1fe90-839f-4219-864f-b55378f86116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e1e85c-2731-45db-acc4-c31c5000268c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25900aa-d846-4a18-973c-2d2fb9efdd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43983f5b-500f-4ff9-b411-a9fcee427a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9cc0981-bfe6-4179-8908-fcbcf0032d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69f3d4c9-3b33-4d9d-a575-de3766f412f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a5f39c-bd15-4b60-b446-db37c3a55413",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6033801-17fc-458d-a140-a34857f1f111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f632cd-5ea3-4c43-9d5a-761891c36093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8844e2-a62e-42ec-82ac-7b1b182148c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31b0cedc-cb79-403e-b62f-57e5c52f2164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761d5c12-7c62-4b01-9b0a-14eb98f75660",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1a6725-afdc-4c6f-8be7-03854455752f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8d8919-0dec-42a9-b890-90ac65e35a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf8e1c1-dc4c-4b62-be1e-370a7711c29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cecb6e-4103-48ca-a1d3-a4bd12fc211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158593a4-ef9c-4d78-9558-17dae68c3f2a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f525654-42bf-4929-909d-44093590633f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ef3f59-d345-4b78-8a36-90104c675b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef09a22-e7d7-41da-96b9-424aaa19896f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d92a2ca3-2563-4950-971e-063079ee1185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bf7f39-c7e5-428f-a596-68dc4c2ce82d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021c6205-bf1f-4213-af88-47e18492cb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42a91268-439e-4752-8f6b-f02691db40a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6010e9-24cb-4ab3-b7d3-9316a7392179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb1095af-ea9e-4096-ac9d-059fc985c56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4fe185-88ec-4129-a5df-fcb20c5c98e3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23889c3-845a-4330-9c75-825f6896ef1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85e9e560-bd84-43b2-817e-54012dfc188f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9649fb6e-45ae-4b73-8f27-f09fc068a51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68a1cf5-5cb4-420c-be6f-342c05b991e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c52be6-fff6-4e59-8742-79b7441f312f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7c2319-be20-4477-b8e2-35a9c0898fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c77fd8-589f-468a-859a-1ae36ac07d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9cb1d8-5fb8-44b6-ac12-e0d455deed3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb88c7c7-a14a-4be6-90f1-1aed9b9bacd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8010626e-7ac9-417b-b3b3-10d8d8b33675",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f4858c-7ab4-4bce-984b-bc0ba69b126a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d4a6b1d-53fe-444b-bc55-82ee88cf4215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb826f9a-c83d-4523-a2b0-48c9b8ebeb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d860b1a2-11cd-4a5e-a5b9-b6afc27078fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e504a3-8daf-4a25-a329-cbfc7f10a8c1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5c840e-4169-4a81-b252-67cdb5ff68b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20f28e1a-bc7c-4fb2-9ae1-6444985144ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce515f6-78e8-4991-a10e-fc4618518ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f277b11-3ee6-4d39-b5c0-a09ce4265317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f583c4aa-adf5-48f6-9537-b17eb7563b7c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d150a3b0-3abe-4e77-9fbe-0a0ddc51aed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69774e14-60cb-4122-b306-5708bd6897fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbad7e43-2d2f-4a8a-9d31-734c994c3cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7610b766-8fd0-418a-abdd-5675505c5a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cc6773-76a0-4601-bcc6-ada6f89679b4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9959cbc-99a7-4556-ba28-1786a6de77b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9865e06-c968-4425-8e59-7edcfe367bab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb65246-bc48-4fd1-8084-06af7c6cf23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "059e24ab-5ab2-4d84-8a60-18d318294471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cba4bf5-b31f-46d6-b1c5-257b68b5aab0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d793e613-7244-4ea9-94cb-8768721f303b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5af53a-1704-438b-91a4-87fb0232a68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e273a342-ef03-47b0-bf94-fa888f99a1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "700c2c4a-cdd3-4971-ba72-d54bb738a0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f35d148-87b7-4c12-9377-745838b951c4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef151d4-ea54-489f-b6ed-ae498d0fe18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff38205-0fa3-4acb-af18-0a436c85db46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d01c6ac-8748-40d9-af0c-467c3c31c78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b248f4-3152-4ccd-86a2-f0fb3cfe00e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3362ea99-a34a-4351-b5d9-ba0a82c4daa6",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226dd32d-5328-4f41-a302-c5b43682567f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327ae5c9-eca9-402b-9464-6f4d8d731559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8a292c-05f3-4645-92cf-447a2fb75d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d131ded-f12b-4368-baaf-6bcc9a80c4b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3fbb6041-ba77-48d8-9dc5-0b201bc0b2f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2a2f24d-68a6-422b-be03-b5758d636260",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5e7cda-0c33-40ba-8d3b-db4a000d90f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cca1944b-de6f-4b66-9693-3f326bdeba5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e50a50a-5555-4886-89e0-5648b188c19e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6bbbd54-a3d4-4443-a443-9b85a4888e8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f9ff1e7-5648-41f5-8e7a-8ae039cc0182",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63783f90-e63d-44d0-b10d-200496874652"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d95e9616-6dee-4607-a4d1-100195465bbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4121bb2-b7d1-4770-88e1-f198c94a2d6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6889381f-0c65-464a-9569-4696dd189984",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f1fcd56-7dee-44bd-80a5-d363449f305f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58a98fac-5e1f-4a31-abf8-b814f33a9c0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a1774b2-b85e-4101-be85-95fab38b53f6"
            }
          }
        ]
      },
      {
        "id": "0b7a225f-2605-4b71-a10e-36e29e381263",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b7148e4f-8811-45af-a5d2-d59f0d840cf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "edd0f920-c144-45da-a4b1-def4789924c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53bb07db-1ad8-4c1a-8c70-8179b1edbfe7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f3b054-c181-4b59-ae48-ff43fcfe2e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb99418-ebc8-4ca1-828d-04f93220e054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5becbb4c-847f-4b66-af23-357de6b0afb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc7a02c-f75f-4e91-9e5a-036eca85ef1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55a6c6d-7098-4576-ab2d-770de28304a2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2934980-080e-4588-aaef-9288c4c0b88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77eeb52-80e5-41b8-aa63-55229d11ceef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02aa23f3-42bc-4279-91ac-ce5ad05f8f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "35caeb4c-a7e2-4cc3-bacd-6aea784775fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aac7306-5fe7-4ea4-af21-97d232340a92",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470fbc5a-130a-42b7-9e2d-2f40c67d0cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64dc3b5f-53a3-45e0-913f-9e68137d8fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ae9d4eb-e0ab-49b6-af0b-25a9a8d9c3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83e964d8-652f-486d-91d1-5a5863452065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726a0d0c-bdac-42fd-bf02-3894c3e17909",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9845d9e-33c2-46e9-b384-19f7c724e59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6195e09-1296-45c8-b865-da2057c6f55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6c8528-bbb6-4951-8d16-37c34e9e7b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f459565d-206e-4df8-b5ca-477bce9fab52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacfef91-1d17-4402-8591-ce2bfd169b16",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fddcf0b2-6cd0-4ab7-a167-93d038a00236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f60e9f1-a10e-4c47-af7b-b02794d836b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "588c4757-67bc-4852-9f34-831065a778a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc363421-8e51-4ced-b4c4-52ccfb9d1812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e64a6e-25b6-4341-b523-bc9f2624d1e4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36cd1ce-2325-4626-b95d-65562da4c709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea6e98ec-9f6c-466c-95ca-168ff265cf0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdf88b0-acb5-4c59-a7ed-073b1fa9f2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "343bacdf-b624-4f2a-8f84-17d4bc9eefdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed979f3-930b-42c3-af1d-5a375bc289c4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8560e1e-12a0-49e1-9aa0-ccd79a65f1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a179552-09f8-4370-8a45-9125b4f07172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0821d266-16be-4b1a-aa15-9e2dcfc4af0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2dfb2ea-60c5-4a8f-b9f9-96599ca19ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c99f45-1e75-42e9-a24e-b35e1592c5bd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45032431-225f-45ed-b6c6-eb6e1a8d169b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b590905d-044c-441d-85ff-0aede0b2b962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d148a36-2c98-4827-b023-d1d35b59f7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a00d3eb3-63d6-4c87-83a2-363222cdf205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a142b211-0a9e-40e2-92e1-4bb4af92ecd0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fa29b2-3267-425e-8054-c5e908bc3469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "595ed72e-8528-4995-a138-3ecdfcf0b7dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56b59d2-e389-41a6-bdb0-0685022af718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5e67a34-5db7-4238-abb5-9790be6e51b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c583480-1d87-42ee-8ba6-8cff939d7e44",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ffd733-2297-4479-bfb1-608f1e52cb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da8d5a6f-e9c5-4e03-9a31-d64e30f80218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db432662-bb1a-4a96-89cc-fdfb480ecb24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9256ec75-850c-4f58-81a4-1e3aa6d5b104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca639c1-4105-4fec-8540-73e31dd632d6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6561c972-a28a-4668-b824-7c23a953f4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45eb701f-f104-434c-8630-82b985778279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4e7cb1-d44a-4b40-a578-7d68314b657e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a53c13-f416-4a7f-a158-20176ab0d769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f940f185-2b89-49b5-b59a-93e99fabeb02",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf30680-da76-4a27-8bb1-0650851c0849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eda9634-3938-4840-a890-b89ff12e5a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f72e33-7d28-4a6a-aa25-323145c6babb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30aff549-646c-42c1-a3c8-9811eb51067e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ba99a3-8c57-4ff9-a665-99348fa80d68",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a144e9d-a506-4de7-8176-11434f61655e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e73e09-f116-48db-b82a-e39f44291e57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62b8ece-ed29-43fa-8121-23c3459b61dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5989287-bf80-4ea3-b702-ac48acb3e01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52aa3ce-3fb0-48cb-81a0-66e55ec8d6a7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95eab71b-def6-4d65-bdcf-53659436b45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b155b782-d0c9-45c4-895c-2013fb8f85ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93511c04-97df-42df-ba0d-3a270e31c519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "82e58e63-676d-4232-981c-b6ee38974509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c810398e-877b-4697-999c-e18e8e39d22c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5440d137-1599-4e33-8897-d051022795f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc455c10-bcb4-4782-b21d-a25562eb2e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5147e238-8a36-4334-b70a-bdf5b3e51337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "97fc9911-bc6c-43f8-9237-0af07514466b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1c1e82-719f-413a-9982-25a3d1cf12b4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91908a3-32fb-4f9b-97a3-d3a27497d63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11426c89-8c97-4c0b-8d4c-d8b5e22217c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a26b12e-ea08-4659-aefa-698a32f07625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "35709210-6749-4c19-a97d-90d93deec450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f82adc-8fcd-40c8-b9dc-0f8ad9522003",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54168480-d827-4b59-9c4d-b2bd1588c8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "147d11b8-ca0b-41cf-b1c3-4167df3299ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e64943-5fec-4d55-935a-860f7b7d235e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4644c9-72f2-459b-a7de-ec2240fad32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dc4b03-010e-4bfd-a9da-d98b415f1718",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67bd8e3-cf9f-4220-8e4c-367ac68a385d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40730e68-0906-47a6-93c4-fcaeef4c7446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f4ff69-bc52-465d-9cc7-767bad2d71d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0f340b8-c3f5-4bbe-895b-d5637f9d7e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bb4b72-fd37-4f64-b918-f885764c7887",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d601ca9a-bd01-47d3-ac7b-9c6b4b37973c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff643af4-4bcc-4456-8b71-2a076ec8326e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179d596a-697f-4c98-9f9f-3057cceb401a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f456a31-74d8-4fa6-927e-be8dea16dcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d01d1ea-6fc7-4e32-981f-cf96588d6df0",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b7c576-c018-4109-825d-398f4643568c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f03bba-cf89-4391-8deb-483360a3ace3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c98d020-2e4d-4eed-8b34-5992dfccfb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e29c2e-c6f0-423e-a5a1-216ae1a92b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd08e44d-5578-47e0-b7d6-197fb762440d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ad89dd-e7ef-4c84-a1df-e4fff62785d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45a7e668-b156-4d2b-9917-14ec6a3b2952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830fb920-f834-4fee-807a-95975a25a485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f13ceb-ef4d-4108-8409-1c0c0ea0eddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4579dac6-cf91-4ac8-bb40-70ca5777287f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aa9c0e-be81-4285-a822-6d7678967b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef49390-ea6b-4289-9005-3e7e9360180f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5696eb36-d3d4-47af-810b-ca0743091214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6225c55-c6fe-467b-8d93-bb361159e002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5da656-62b8-4b5f-b34f-d3d15eb24036",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f539fe-4175-4ca2-b5d4-45ea7c83ac15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5348450-dbd4-4293-a24d-90dca249a5ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8549c749-d0f5-47b7-8b9e-2076f151a784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c40968-348d-4ec3-a8b6-77d7d4fe917c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8204ec-38b9-4c2a-b595-c50c74a694c3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "409b2e8b-a9d2-4756-b2eb-a7228c1bac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6b3f42-153e-4417-b987-c06f16462716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "161a0ccf-ba60-4a2d-bd88-f1e5b330e934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe93152e-4db4-447d-8022-397477a29ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841e38bd-009a-471d-a992-bf45c48b25e3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5633b1-900e-4bd4-a985-a6e477539e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a03bc7-e174-42a7-b6a9-da8e92c6b41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7731be-221d-447b-868a-5727df25e8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38dac880-49a3-46b7-8a9e-dffe552c047b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659fcbd8-6915-4e74-9973-b30fd3d5b83c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1b453f-6ce2-4418-bd42-71372ca2b507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d9bf842-a03b-4137-a436-938cda8c0252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1435c149-0ece-43a1-8b79-fcdb79f21a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc97f4f-3b88-40e0-aea2-75fa9984cdab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64778bc-892e-405f-b1df-40db6888f199",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a670e3-041c-4bda-8e2d-7f30bccc12d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b1a90a0-61d6-45fd-a2b2-98685d33045b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d9605d-351e-4ac4-b6d5-f5a0d33b1876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9dbf361-dddf-4879-a174-9a4e3bd8e52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37731f1f-77b8-4bc9-b954-155da9f5068a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676b977a-2bc9-4262-9eae-cad4bc635c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edf131b0-a5de-4002-8c0d-d121e7a2ed16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7081dd9c-60ae-449d-a793-7d5470851044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07048cac-4b50-4fbc-af4c-1e6f1af942a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c415bc4-f7d0-47e7-a49d-e1d9e7ba0c18",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75163189-7b91-40fb-8227-bd52451b9b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e67b17-45ca-4cd0-b347-f320416e8958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c68ca68-30ee-40da-a271-b8243f5f3cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b30df877-3144-494a-987c-70804901e84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5479f2f-b553-4b0b-923e-bf5a9a719fdf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d333fc0f-2866-4f51-9596-07ecff0ba284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c332cc5f-db7b-4de0-9cd9-3c83eef8f98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4978bce-9039-478a-a9b6-0b83b60fadcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45a4122f-2d71-48c3-a7f4-b08491003a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a60f66-6113-443e-bdaf-29a91817b58a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a040a2db-4b95-43e7-9c4d-527c74f518d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ca1806-593e-4a9f-abb4-e5283ad829f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fbbcf5-7401-4b23-bb4a-191c16d3bd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f44c94b2-1e70-403a-8767-dd2ec47feacd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7d86e8-e59d-4f76-bc6c-5b9d0f7b6bd8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c167ccc-9af9-4075-b637-fdc514cd1216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4299e25a-3e89-4a66-9abb-8eddacb322eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3334ee-1624-4a7a-bbe6-b7fc1a2d6bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9904951-f39d-4eda-ab18-30332c8ba4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f2857c-c1ee-48ea-b6f6-bf55554eadbb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995f8fa2-e72a-415b-a1c8-c57d0392ab12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8f461e-1cb2-4ffa-9f5e-e8fd5e674197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cc4920-0ddd-4d7d-8278-2297fbeed128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5523186f-6a20-4caf-954c-1e118c72ce17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74c4935-897e-479a-ad4c-70fa41530441",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cdb328-fb50-4a71-b83e-b768e413e171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad897c35-0f19-496b-bb2d-3958f5ffe4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9edb9c5-247e-4f75-bea3-13e6163713f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1297ba7d-b8fc-4efa-b73a-2c703c367abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6445d942-d3db-460a-8854-850539cc27cd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec08e3f-2064-46fd-8d87-53e14d8560f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d7c734-04ca-4411-9d11-129ffca27b85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaad315a-770c-4410-bd64-a601fe321668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8083af90-8204-43e5-b181-4b10f70389b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3d71aa-e53e-44d9-ad79-2cc16ea97a1b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8123e2d-e9a1-49c8-9360-8713576f64f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f778e6-855b-40f5-bd12-56b28c875f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9058ef7f-d962-4915-9b8d-b4ad2ee17b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c133a0f-a31b-4cec-832b-82cff6538d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1b643d-dc61-47d5-9187-d21ba1158b14",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8d4297-422c-4240-ae7d-b0251cce7870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d0cdaa-7ce4-47f5-9b99-da85bfc805fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f4f7d0-5f73-4aab-b9ba-a978ca7e941b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "807b2a30-fe95-4b79-8a67-6caa23441c93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e4fa521-b893-4923-b8ee-32224a293644",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25180700-7828-4643-8cf0-993ca62d23ef",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bd06e4-85bb-4f57-93fa-999acd158617",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "644b2b8f-ab78-4730-9951-c40a51683f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe9dee6-d64e-494d-9618-a8fe08d5240f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8359ddc3-3fc4-43f4-8340-ae5620dcc276"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "759176f4-0b95-4105-8c1f-115829d9a294",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ba71b37-ba4a-4905-a13b-079f614b4a2d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bc54f10-006c-44f0-af8e-c919260b054d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce28f5e3-fed1-4d88-b054-192889449f0d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "332d0b1c-75e0-48be-9d8f-084c403e0693",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f587097-d928-41e2-a448-53017830733c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ae42901-80b2-4cc5-9507-5eec0842a25b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2d576137-5fdc-4f3a-bf9d-ca3acf105fdc"
            }
          }
        ]
      },
      {
        "id": "fbf09c0d-2d52-4301-863a-67a5a1f5ba25",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5126aca5-704a-4369-b75d-aa307b25255b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a3ab121-9835-478c-8633-ffe081db36ab",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9390a6d7-3b1f-4cef-b318-bde14cefef6a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9d19a7-a239-4753-89d7-c0a9cedbe5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201ff9eb-6a33-4a28-931d-2af2781e7693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e984d9-fa44-4e93-b1da-a8d7fb2bf45e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8390f2b1-9140-4f91-bde0-76be79e33bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d988293f-8286-409b-a310-0410f2db1d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4ab74c-88dd-4d96-abce-078ca8688d11",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea3d94b-3cb6-4b4e-b4cc-cac2481b0cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3dc2baa-f398-4bfc-999c-d0e92ece5cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1933e4da-cbb8-48a1-974b-5a1d89ecaf84",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2b3cd5-0d85-4a3c-8416-13e9bd1c2831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62fc5bc6-d25f-4896-83ea-5ec972cb01a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e325383-6198-441f-bfe0-f706eb3c5856",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c930e5b9-7be6-4615-8bd6-364960208074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cd165b6-5e66-4faf-957f-233c17d113e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea0419f-47a7-4655-8f49-09e79b7e3aa9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4075d589-ce25-4a1b-a52d-62826400aff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9068919b-d83c-4474-8f7a-fbb5cb3d8fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa025df-cc1b-4624-ac9a-d898eb73f273",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8a09cf-3858-4a42-8425-a5c114542958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f29f25-07a2-4909-b323-0e35c5bab0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001217f4-aa8f-44ec-874d-49c0f090495c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad92dff2-a91c-4eab-9a39-e23bbc5faffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8414ee63-bd18-46cc-9521-7a85dcd837df",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1030707d-e50a-49d9-adf4-ca5b52cb2570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b582f14-b820-4278-9e03-bffd20dbf166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f537f628-aa03-468e-9988-fbccef4f3bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d34e3f-8716-49b5-b30d-5822a1ae6753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761d6f9c-f800-48af-be41-2b90d6d12a50",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81e2fb7-1689-4ac3-880d-846a203a2b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bdc279c-eadc-44e6-a503-189a94ccd97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51cb26b-8a3d-4abf-97c0-1fe41bdbe85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb571853-77be-4470-9f03-1a804fc81672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9024a2a-f54f-400e-8f39-8ce7dd00a307",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2cf94c-0dc9-41f4-bac7-51df81c95253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3544d57-bf1f-41ca-aeb5-bcae01609036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0f9b8c-73ec-4e30-b07f-1c2d67bee4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c25b8f-2b01-4d5b-a675-2b93be7203f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7c2ad0-496a-49be-b1df-c2993e7fa4ef",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd946575-e27b-4e3c-aeb4-87a3245f44bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994a14f7-b421-4433-aad8-e9db206147f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73d7314-f73f-40c4-b2f3-ebc6f6bc2d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21728d49-5b4a-412a-a779-1060c9bbba7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ce92a7-c2f0-4315-9d45-114e7e230820",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a315f3-30af-448e-b69c-3bc03cb5c658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07667f20-7756-4465-9c88-ec5f5fd27c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413d5898-ebdd-476a-badc-61f7573c751e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d92e46-6d9d-4271-a65e-0a33c6314169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c715f8-0d19-41c6-a5fb-31d5bb205281",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ba39ea-ce25-4789-b33c-c1834d29b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6362bb34-3af9-46cc-b6a9-93244dd82029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b3fd7f-b2ce-429c-8773-d440ee9649a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf46665-6b0a-4249-8bca-9cb4a14b291f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b3ea4a-3862-477b-abff-21855387de73",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5110c91-99b8-45e5-a2a5-bed0c3e9a49c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3a080d1-7deb-40ca-aa3c-7b0ad95951a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c0e50e-a00e-4cdb-8b51-87a25e288512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cfafb0-024e-43ba-b750-b3dd616a9e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1899a81d-c3e7-40cd-bbd3-09b8c6dfafab",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb50f983-5d81-4d21-a5c6-e66abe91a941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "259e9cea-2a84-4c12-9faa-6816932b9c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78274c38-4676-4c03-af00-023cabd3ce73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3359ac91-7f11-442f-89d7-3b32bda22233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1fa244-cacb-4efa-9eba-3292adfe0635",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba9365e-7eb4-4f3d-9b22-313d0b57e3d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e12d22f-c742-425d-ac50-7bbdc3121459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4545135d-712a-493a-bd23-a8c0df612c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e42e37cc-2e20-4496-a4e4-d8ac5cbf3bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accef8ef-8a83-4a48-80c3-e82c726cb333",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd71a33-6123-4a73-b1a6-8e905c13c40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e1a255a-6462-4bdd-b84c-7e249c434f18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368f1ee8-311a-466d-b84e-f31b464d3665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f78f1a3-efba-43d3-adc6-a2c11f001bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5985a556-1e6c-4ee1-a655-fa57371e13c5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f441d396-84ed-463c-8cbf-5ee64b414aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c68085-216b-4345-b134-ff0d36cbb4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395781a7-70f2-4b2b-807d-656885b01f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8132e1-87d1-4625-b87a-d8a249d5cdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ee3a31-0dc0-40f7-a319-e8095390996a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ce10fd-9f87-452d-a6e7-ad3392110856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850f036c-e4d4-46ae-af12-f4628ff43fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a9647b-b5f7-499d-a2ed-4fe04c3220ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130a898f-42e8-493e-a78e-096f8232a0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbcc22f-083d-4e99-afe2-08dae08e14f5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33174409-6919-4e3e-a34f-c25bbaede945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301cfdd6-633a-47a1-89ab-66899d378955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f930689-3ab1-4043-876e-1efa525c4180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73b9b8f-a99e-42cf-9a40-1116cb0af39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94568dd3-9387-4f8e-bd5f-f9a1dd1e7aa2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916aa4be-d4cf-475b-9283-9a26135a6384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7581320-ddb5-4960-affc-63b691b151f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1732a621-056b-4b12-98cb-ffd02618dc5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0e12b6-94c3-4a7c-8c8e-07295bc0a4bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068a94e3-3ec4-4833-8d6d-e4c052dbfb65",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a845058-786e-4a1f-83bc-56881159b517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe0d96f-7ff3-4d72-90ca-9900fb7f1018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cfa589-47bb-4c95-905f-1fc5b0d52f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdae5445-a2d5-4126-843c-8b9d7f69a117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a963a9f8-e3e4-4ae4-b46a-62fe92053f71",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad32f51-3d41-464d-92cc-2a101a30e6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a0ba21-7e39-4d05-9558-5d3c0443b269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cb5550-f6fa-4baf-85a2-1714fa546989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59bf450-30b2-4815-bf32-489d05ecd6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f5c9d6-ff35-4321-ab07-ad4ceb3b7fc4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84555ce7-627a-409a-b94c-c9bf2cb61e2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5118deb7-d664-45f2-b633-4718e94049bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28263c2-731c-4dac-9084-cbdba388825a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2876bb5e-1126-429b-bca3-dfae97e7e509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7888c02c-e800-47a1-b2e8-eccf00e06e09",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16e1cc8-fef1-46e1-9d0a-f9df36738ffb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc2c5b5-3932-48cd-b03e-1f9c4025aa40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eded0a8-ef1f-4bfb-8939-1d582a681d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5529304a-c11f-49dd-9500-a7106246492b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df64a59f-83b5-4fb5-9e6e-831a7cdffb39",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee41109-e526-4672-8a7d-b85d97226650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3836dbd3-84d2-4419-a6de-d302665f68af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa2fc54-7724-4d8c-8982-5774d17b2957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d94db12d-98a9-41eb-8d1d-33c944a226e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86becb1-77b3-406b-81d0-3d4c53102c68",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d32784-b02d-4afa-9aa7-061e228fa7b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca508331-0690-4814-b1ec-0e03e01f1670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2e6dfe-6678-490d-af69-557e57883856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25763302-390f-453a-8cb3-76684c70c6ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb889873-98fd-4660-8cdb-2d07928451d9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344f5b11-88e4-4fd9-8f94-3a7d136fad9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edce4d7-45a3-457f-9338-03aa73f9d6f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2498ec4-dddc-48f5-b25e-d12f5bfdff7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd994293-8620-42bb-9a46-ff391930685c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26d269a-3e84-4c76-acbe-fe4c01f6dbc2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44001d7a-b60a-4dcf-aa26-b4e9ce76e62a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c22e39-ebe7-4e1f-b1cb-e63574c5bc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676679b1-3082-4288-b1d5-245ee47f62cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b1b323c-ac18-48d4-bbd3-e8421c4c8652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3810c1e0-9c66-4614-b5c3-1a9b4cbf69ef",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9152cb29-e81d-47eb-b456-07323677ea53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b9ce73e-cf52-492c-9c73-5ad7e142c5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df23f818-d493-4266-ba92-57c6ccf70ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15910640-2da6-45ec-960b-202a5df22a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978d30db-12bc-4d66-84c5-7fe48490c322",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95704ad-3df3-4e6d-b383-c2e37b36d40f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e04b891c-92f8-4fd6-9a0c-53052172c411"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14268ce6-4569-4f0b-a0b4-9410153bc0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe2a8dd-3930-410d-9d56-85ec83beed00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0e057e-dfb5-423d-aff3-78bfc7431313",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74705968-9cc9-491d-ba16-d8c01b81a6a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e06389-e34f-497a-8370-8f7a13e7a84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7a720d-e5f7-4736-85b7-8e5f7c9acb1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32171247-88f8-49dd-9b70-a9194ca33e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879c833e-60e1-4da0-92f2-9b779c662e8d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3613010e-1627-4634-b172-ef60c8e0c1f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4360bea4-060f-4ee9-b653-b2aea7cb19e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101eafc4-62b4-4a18-a4e4-227d58b5550c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513b659d-529b-4f21-9b55-f2ce9d2c2d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8ce66c-0410-40aa-84bd-ec616bc2bba4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3abd74-cc3e-4fbf-9fee-964e279d9e58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c27ef58-af5b-47be-b110-0c8efc1baf94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df88a1a0-62bc-4615-9ade-bdcab28dbddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dbb6df0-71d3-4608-a6a5-c753a3645090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff057da-5ec4-41e5-85f1-0a2c6aa28807",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6301963e-7486-444f-8561-5fa9c4ee5695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c742250c-6f4a-4464-bab4-1ed8aedb6b93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d0e907-3d81-4125-9acd-1adafee377c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0cfc06-a653-4b91-9c31-d03e0bf93608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1205c8bc-d979-47ba-9f4b-8984bc4c7456",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f01932-8473-4f94-afda-e418a04a3fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e5d433d-975b-4b53-bbc8-fab6460620c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4175e0f1-44b9-4a82-94ec-926c624f41d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911548a9-536e-45d6-bb8b-befaf6d5e60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79798238-5033-468a-919d-8f275c54dd8d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2840ea2d-9b31-4f56-a5bf-6558189571c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3fd64e-813b-40e3-a449-5c7121b941eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1e4d1b-e241-4a0b-a4ae-2c6a46966278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2db6899-3a01-448f-adb2-9346fc6941fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4653dad-34c9-4b46-bbdb-f974303f0590",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13963364-951f-4a2c-9786-5a7379c44223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c78b7d-e5a5-4f06-9291-d75120a74069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1876a581-cf2e-4b74-b873-fe38581c4d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e3f69f-1a66-4308-92b1-aa9f06ec8b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8326d32-e2aa-410c-8e1c-fb9f1052f340",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b0dd9b-2035-45f6-a515-0bc72996b4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07eabc93-c9fe-493f-8265-6cb612b5dfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e938bf41-a86c-447e-bd53-adbd9defcff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f1f3bb-a8b9-447a-b64e-657de2c167f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bab6b3-96f0-477b-bbfe-17e705abe431",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1326f3-6c79-46bb-b871-ec6277fc76c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e2ae6f-6ec5-48ba-a8ef-fd23472020e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3a3ba8-5412-40d3-837d-f68ef7738f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182edd11-1798-430a-a86b-ad41cf43b140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff105a8-127e-4d84-8999-7481aee2f9be",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a93fa14-3abc-4dbc-bb82-c5f49245d2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e8fa8e-cc9c-4688-8708-8ddbe9f75445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9357a3a3-0848-430d-afa8-7333d0306442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e456c28-44cd-495b-a4f6-0fe58b86a735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780da83a-f556-4a5e-ac99-38d18da5bc4a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72460720-f739-47f4-93b7-9ece584c0f73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258079d9-24b7-44cf-bf26-5ca67c2f1abd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f2335a-08dc-4c97-9584-9b7a5f817c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336e7c14-3474-4cce-adfa-4eddd43f6dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0b31ef-8243-41a4-a76f-189142626cf1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abee635-0717-404b-bf51-fd46a8eeb100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603eccf6-5bbe-4cd0-975a-0f45122783cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52320564-d4a6-4e0e-a6a9-1adc1acebd25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f33dfc-48fd-4e04-a3ca-8a829709c98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe50844-0f68-4881-b96e-1c1cc555caf3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa4f629-0886-495e-99ed-e8620ab3b9a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55328b8-3876-4829-98a3-0085c1f75cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850823d8-b38c-475b-971c-a0321ee1447d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3cfd02-d044-4b15-9be3-2ffb0e09a9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52faf197-4bb6-44ae-8e2a-27fae1399555",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754ff0a1-dc8f-4d46-9344-aa4cb483de0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce17dd34-a38e-49a8-9083-0299398fbf61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13828526-d5da-4471-8fc3-6ce756deb6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8bb4e6-722e-4389-9ee8-cdeaeb8bc26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f846dd-e62a-4835-9730-f6159fd859d1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ba1263-f95c-4fcc-b10d-19e5c1656543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3290f8f6-1ece-43f7-9235-80110cc875f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f009d6-837f-4386-8f73-37fa14097492",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f9c6ce-5c8a-4856-a8c5-40ad7f97471c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe29d26f-3767-48e5-a13c-d6081ddd03bc",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752203a4-ae0d-419a-9a76-53488ae49880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a3cd659-c2b4-4014-8402-98e6dce9b7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b095ae8-9370-40cc-aa54-fe0be8420498",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b34f4b-11c9-4c42-91ac-6bc08b654621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daafb245-8570-435c-8849-7f1fecc8776f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01117c90-2899-4fc9-92b0-a2bfe8c7214a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3a2a52-a7e0-48d7-b94c-9667bbb94749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a7ad6-2283-4692-96b6-f58c8b5a811c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4366fbc2-4f5e-47cc-b2b1-7c0bdceb8243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487e8146-19cb-453e-a023-f1fec437f31d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aca6606-655d-4478-b322-dfa206450b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0908d3-db4e-49fe-9c9b-62b8599f8058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bb0508-327c-40cd-bd6d-7c2a39244b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a94488-1746-4ed4-a4f9-a35535547a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddaba2a-f10c-498f-b4f1-ce2a630d9d09",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6e2653-fec3-43d2-a5bc-0926c03131a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0556ce54-ec16-4e13-9b5f-d63312ab97f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac509bf-aea9-42e7-94f3-369af0d7eb00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5546838-9bd3-408f-a2f1-7373e47d4402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bdf33f-c7ac-44e0-b54f-471dc3f791a9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fcbcc7-95ea-48f9-8f29-b3957b534590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73872147-ea93-494a-8cbe-91fd3d00c95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a7b24d-560d-4d3a-a2fe-4cf0f722c04f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285c5f73-6d00-4f8a-bb3e-8f2f7a5650af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa6173a-189f-4852-9b71-6e6586ab5e72",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36cf520-18bb-4445-b396-7b9decb86bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65521d7-ddf4-4053-9e90-4fd7e39ede90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409d583e-0bc0-49a2-bc6b-34b0367e94fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5664b74b-7385-41df-9e47-534352d7d02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6401df37-153a-4e88-b5ce-e17388d900dd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317acdeb-43f7-436e-9b2d-1127e58f8a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b5bbbd-4c20-4b3d-be77-62bf683c655a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2feca9b8-f0bc-42bb-af7a-4b15ec93b40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a3604c-5316-4184-8a96-2267d9359017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d73000-33b6-4eb2-b2d8-6b1c57d59639",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3da6dc-e522-4984-a89a-c0bc03925792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403db513-6853-476a-9fbf-df9639577789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81d3820-793c-4e4d-97c1-a71ac299132b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd9b570-ced5-4ce9-b51f-42683ae918ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3055255b-4465-4f18-a201-1c69b4459d1c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d49adbe-8b90-49c6-b275-74540473a228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7845095d-8afb-45be-b450-c74a649786b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac22f5e9-0dc7-445f-8d29-ee1efd36532d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5371fc98-d707-4b08-9d0d-71de4689cf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c67372-1009-465e-a3e4-6ebf105922c3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9084a38b-6e39-43f4-a4b7-a9101303d5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efaadd1b-899f-42ff-8d43-76bb1ae68bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b52c0f2-d560-4e4d-81fc-cac70b6c9467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8829eb-08eb-48ab-8961-e3b351f6d7be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28d4a79-bac9-45e1-87b3-5e1c4984dc4c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd69d6c1-b409-4650-8a79-436eedff7e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "808a5700-a06f-477a-9893-0ad83ca1f360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebc8ae0-7571-4c86-a3dd-5be61e07241a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f60b19-07d6-41a5-8d7e-b75e13ba9165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d7a97f-081d-4e83-8178-8b0ff3ab7a30",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55af2d8-6bd8-47fb-8c5c-ad9897fb6bd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176b24d0-352e-4576-8d12-f722219a24f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45467524-4b4b-4f65-9f6b-b75f42a9ef8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a40742-174a-4edc-bdcc-a6f9010ee647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f2be1a-555d-4953-8e77-6045fbe8a8ee",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94184650-a1ce-437f-bd43-04e7d7c16b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc2d5c4-a9b2-403e-82bd-f30283b464b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c56632-8769-426d-96bf-8dcf7f1a7add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9e062f-f30c-49a0-adbf-be93b38e2dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92d3b4e-b2d2-4ac1-ace1-2ab802bf926f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c03da55-32d9-4ad1-9a40-054809d6ab11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3faee86-eea0-41e9-ba06-c0003f62fcba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf47c77d-0c3a-4f11-9f22-49f36ae85491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c24adef-d78b-405f-ab3b-dee7f6a9861f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f035dae-b9aa-4000-98e8-cb181312d6fc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b649c8-7945-4ace-a34c-d964584e9977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931e8cdd-0db6-499c-a6f9-b6a50c6715ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27a263e-12a7-4761-96d4-de2bebf05d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b5af01-c786-494c-960f-35fe4da85790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e63e41-84bb-4d7d-9f37-2a3c2fd50c93",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20a1cf0-e729-4be8-897e-869845c53385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f01f8c-5605-42e7-bad7-492248624dc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6f927e-5744-492d-95f8-3b06a347b945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb59fb7-d1fb-4d4b-ae20-4a4a6710179a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f757c553-c0cc-4bd9-aac3-1aa17d54ade5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d769afe-c131-4e98-bb96-138067bef881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea63f75-97e2-4665-8021-27bcdbe7c4e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d74604-21de-4b5a-bdd7-b13abd416182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c776e736-57ec-4681-9345-1d5869e94ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839c10b0-7141-4078-8b3a-9c382d636f8d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76bb79e-e1ab-4c1c-ae9d-0366dd439e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7258629-5d9d-453a-bce9-d82b9955ba01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "504bf39e-b61c-4371-9bfc-6b1cdee84e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386e712c-c597-4383-8c1a-8cf2bdbd483d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0ca611-ef51-4866-90f9-68dc7c29ef59",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b79942d-c74d-46c6-836e-f72ee0fcf25e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52fde2e8-72ec-4cbd-ae1f-e84d034921db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc890510-6891-46d2-a84b-0e9751b65c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94421f1b-5780-406c-b1a7-9cd8b11bfadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c8ee10-e60d-445d-a0b9-3a35bb14e574",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e05fb8-12ce-4b14-960c-28b63d77e3e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceede894-e6ef-438f-b66d-f0633f28abc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3f1e40-d80d-4dac-8fda-3e4d66b83d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da44583b-2fdc-4afa-825c-b7e01b8993f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986bd95f-fa6d-4e3d-a900-e7212c59eb09",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f45761-1c6e-41d3-87d9-a889b0e73a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce96241a-7de2-40b9-b0aa-27843d9dfd90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83eca4fd-71d0-4140-bab4-ba140afb3f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c36d3d-f709-4a13-890a-b75d2301643d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644f2288-c6af-4fe4-bd06-765c9b4fc7b5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d40bce-b20a-4da3-a1ec-a050fcf99f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3084572-fe89-4ad2-9cec-a023425bddfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c445feb9-a33d-48b8-879e-6f2a283bafdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90557d1f-28b3-4966-9b35-6cfa93064e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6880a4-6254-4305-b9e4-87f709e89720",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ccb68b-1688-4ab5-a3c8-858072fc2429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01949fa-53c5-4e8b-8bea-f5c8c70caab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7056c5d7-c188-40d1-aebc-76c984e4e249",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a764a3-19f1-4061-a8e0-805467f000be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e689693e-099b-4ebb-b8ff-be31ba51e8ba",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17860980-e846-4c1c-beeb-51fb321f684a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67dc4cb5-6f71-4787-93ed-70c772b7bdbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00bb892-9052-4896-aff4-6ab3812d40e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade99c6b-1a36-4c7c-a3a6-1ac1c9df55b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb1fb58-3799-476f-b0fc-276737276d5b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d0f98e1-c10c-4c53-a3eb-3f0dba20c7c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "227cd8d4-6a29-4926-88fd-99aacf653210"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e0ff52-6262-464a-aa66-4cf4556fc395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec1e764-d7a5-4e34-910a-e5b1de5dd4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fda32a8-8041-447c-880c-eee052cce66b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9cc9e0-0e15-434c-a1cd-43bfc9406225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd6003a6-d72b-473d-8516-b99348c01801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "567237c3-9040-49ed-8987-b1759494dd53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfdd106-f7ae-4f8d-8750-a690bf13fe7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a8e9b8-5722-4a75-893e-4e971d1c326d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039b404d-a837-4cf2-ba3d-a37662037a80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312d699b-2e41-4484-973b-7a6034e13618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "291984cb-3a7a-450f-8a10-096212425366",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0bbf28f-60a0-4da3-b3b5-1ed2480e8b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cd65f6-3b8e-4793-ae92-e843b245f439",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec56a55-65a2-4bec-a84b-256701736bf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6e7782-d953-4e27-addc-c39a73125dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c92b44-7251-4759-a187-988bc63de07a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aac8b16-26a4-48ad-bd3b-7460348291c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64de786f-ffc7-42e6-afde-d8e26d28abbb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f9d1e3-ee99-4a94-a0a8-659176609f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cdfcecb-9cfe-4136-a184-7c18658575f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc86fad4-2809-4ded-b925-3a6bfa2a3810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32d562b-0fb0-435c-9b48-f9c63e776e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363dec5e-3ad7-49b3-8e30-39f1fa6574a1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea65df63-bf36-4c42-a0f1-7ce75f388d14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a89802-d1e6-48a0-a8e5-599e74cac084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aca97ad-f3f4-4d1b-ace5-c305ee693f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50233b8e-7e05-44a6-bd54-c442cdef7088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c562fe-cbe1-48e7-8fbb-0c9f53f6cbf5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba28995a-192f-48f7-ae46-4f604c6c5ba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e753136a-91bf-44d8-b726-19b8d32564b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c4cd79-e0f9-482d-ad0b-0443f6d24e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ecc9cf-8dcf-49e0-a95d-d93ae4c4747d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baec6b18-1062-4990-b7f7-3ecbd54470b9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69de249-1d59-40d5-8a52-dd51a922477e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e5bb27-250b-4cd3-b5a9-18f1546c692a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a209ff75-6bec-447a-8a5e-a8705ce908ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7add96-05d0-4748-b966-55f19e625cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a0e721-8006-4b04-bff1-3058c3229fd5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12f589a-fe02-46e2-9a20-1c1e6650b3b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b6b978b-7516-4a7a-8c5b-88488aa290eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d666f4-b0d4-4cfc-9a75-11f332612e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00bab273-f5f5-4923-86c3-978ee5e0a2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbfddf6-1daf-44e9-a205-a50a94b7e13a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5352b69-85b2-43d0-9fed-b55584ebc295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1da0c03e-31d7-4767-b37b-858d6e835425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b799bfad-8a86-45e9-a494-962394f5a2ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4946d3c2-1185-4496-acb3-638ffc28db85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a8964a-b04b-4af2-a598-ca34c4debf5b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b5bfd4-5352-4c1c-998e-0255c03eaa7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b721b0ab-72db-4ac9-9fe4-677b93133f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749ae69a-fedb-461b-91bb-3b0103a8ff2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbc5db7-f7a6-4d9e-a976-1c5aeece1ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f679e4-27c0-4ba2-9eaa-aec6c1249567",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2203f0b9-0f3d-4a9a-9561-55aec339e4a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "223d3a08-0da3-4c75-8e45-3b1b8913f97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc74777-94e9-4d3b-9814-27e0894f6e02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d6dd01-d38c-44ca-ad30-e21775ec5a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa11d1fe-04a6-473a-a708-2913aabbc9e2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85152848-1323-4cd7-8037-e337368ae721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d13ee964-f4cc-4941-b89c-9cfa7f6c09c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "269b6b01-c117-4401-b5aa-e64a52021d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e224ec9-bed9-4a15-8ab6-c3c24c7e0e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171d1726-4e5a-4233-bfb9-1fe9488151df",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12487283-bb2f-4f63-9aff-d419bf31e26a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "686f7894-4657-4412-bdc7-721c156b8484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb8b5f9-f16a-49c6-b7e2-05b0eb373b20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87dad4a-cab9-4647-8bd2-cd974639a898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c73064c-f1e0-4ef8-a206-1f6027cce2ec",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c030ea9-887c-4aff-a82c-8e6a02965b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8494a58-414f-43d1-a9f8-eb8a8e8ee329"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "590aeac8-2bfe-4c7f-8bf8-b6d5baff379f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa4c24a2-203d-4650-8aa2-f47b9a300f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4e557a-feb8-410d-bd47-937d5179375c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a78388-69c0-48c1-a347-a13e7e755956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c4092e-5d2e-4190-82de-bcfd3556e2f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6129dd7-76ae-47a3-bbd3-50bc73a007f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3adbfcbe-ec63-4a43-9de2-86f18b6a0f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f6ee33-c498-4e53-85f8-b62f86a9b5f1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac6d674-a6bb-4e71-98bc-e923ff0c0411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1036c5e7-015f-474a-b39a-a16a109227d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9386a641-7bcc-4b9b-b0d7-3fd59d0b4c6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8b912ee-ee89-42a9-ae0d-ad7f856e649d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1d994a-93ff-43a6-8fd5-d76f27c29ea9",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956b3b12-8ca1-4bee-9d13-65dda9952030",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d416a345-d1dd-4d54-b901-ce3e3b5620d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ae8096-bc31-45f4-9cf1-c14d7cace98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1d8072-e38c-4d87-ab68-60bc5d59a509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc5f8d09-25c8-4117-9baa-507911c8b8eb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddce91e-8e25-4ad7-9780-39c69ee1b327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39179e65-fb53-411f-b9f4-3f0fa8161bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f1d452-02d7-4f69-b957-0c804301f736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf63337-62e8-426c-a68a-78fe65ff0635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a636f04a-354b-490c-93b5-479de86078ab",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d594548e-ebcf-4c75-9718-908e269c593d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad5708e7-f249-4d0a-89a4-57eac9766a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedc5569-aba8-4f26-a262-f24743a36b16",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5536eaed-7605-4a98-ba3b-ee8519cc2c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f37e0c-b30d-4e45-948a-ccda6ac91fa0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a807cf31-292d-4a92-8791-25f8f6420dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78cdbbc5-08d1-44f7-9ea2-3b85bcb1213f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7602d64e-7dca-4894-8b2d-5ebc7edbb933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9435b8d-f6f0-47ed-b170-2e89721b7359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ca56d2-87a8-4a23-9962-550afb90b2fb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2481fb4-5002-471f-8113-12ecf5269ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aae901ac-8565-410a-89c1-725fa8542480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c35a0b-08f6-44de-9758-b827a16ea2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a19f09-15f5-479d-b4c9-8ac5fd02add5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00fa779e-4048-4225-a781-19bc94a15258",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892e2186-133d-48aa-860c-35201c769fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "933c9b79-ec23-4559-b1ca-a2822b8a7ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c417ffda-6467-42a6-9fcf-71e95a6037e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23995ea2-4b81-49c9-816d-620eb3df1d79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0f282f-f503-4fcf-b8e5-fd84067028ba",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c92c24b-3923-453b-bf1f-406ec42a387e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf4c40d-89d8-454b-af6d-6eabc835ea5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8dc825f-8ef8-4a0e-9da7-d4d59ee6bb71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4931b7dc-47ac-4027-978e-e652abb21577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18af65d-7d32-4fd2-81a5-baf27ef2f0eb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6658e3e-ff18-46b3-ac5c-34d26578e18b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd6c6d6b-5283-472c-a73b-aaa545236d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b16adc4-7a5b-46a0-829e-a8fc57eae6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b8680c-95a8-4217-9acd-3a82fca4acb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58217055-7f5e-4a7e-bf30-287a0eb09ec9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a88f72-03f9-45e2-9339-4e28ee0784b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75701d04-bad8-4154-a78f-31ca81bba7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7605b1-8bb4-4f05-8507-54db19dabce9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49201432-a451-4f8f-85b1-fbfc3404b573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41dfb442-fab7-4e7e-a2a7-ca11c24a80da",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d3307b-dd64-4038-9759-a45c6276398d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7da4f00-6fde-4daf-bec8-978445b6efd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72d160b-a0c9-4ec5-9841-7b51b1303391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc2ac8d-61d0-4599-8a9f-172239a8c7f1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e83bc1e-6d25-4602-a73d-f627284adef4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "418ecdd7-e70b-4552-be3f-03b2e2495ee9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "189706bc-292b-4f1e-b1a3-7dbe4a2493d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9c350a6-aad3-4064-9ff6-6a0bf26eeed2"
                    }
                  }
                ]
              },
              {
                "id": "84e1a4f1-4cfc-4d53-9cd0-76534b1f3410",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "59a78743-31a4-49d5-ba07-3faec1e35809",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af135643-e56f-4d47-9447-5c905e7c46c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "079cb06c-76aa-4e34-83e6-a5aa61fe380b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cd9498-7ec6-4d96-9002-e8d90ca48df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f514ba7-6280-4830-8a79-acec48bc8f04"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7d1bb00-d40e-4318-9fe8-9230119382d2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e830366b-661c-4088-a64c-e9b055b8bee4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a18b049b-9b78-44df-a83c-c237a4735a24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c711c619-acce-4b61-b37d-a4f2903b829e"
                    }
                  }
                ]
              },
              {
                "id": "9c96177f-0bd7-48d8-8911-4daf64bf52e4",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "75ed4f7f-4a80-45ae-ab43-346d4df3e5ed",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3d4f41-7f9d-47ac-ad84-173286dfe4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "99132c05-eb27-4972-a09a-419b5e480a7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9492fb-3b2b-4112-8694-e41490e3a7b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e4b7d8-77c8-4ddf-8693-fec7e6f6118c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f0e24955-0d66-443e-8697-844fa4d5ec1d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f1ac3940-44b9-4ee9-93bc-e83bb267e438",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90f24571-1913-4bb2-a247-e2af41e05f47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a9fdde6e-6b6a-4aa8-b58b-3e7b47286d56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abba5d84-c1bb-4a78-bb11-b93c08826545",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d79f00f1-11e3-45ee-a8a9-b882b63eb746"
                    }
                  }
                ]
              },
              {
                "id": "078b02a8-494c-4e03-b2d7-40a67d273283",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cac3cb40-dc59-4757-9cf3-9acf9b0c4c4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "30cab461-7c05-4f45-9874-0552f509bfc3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5edb3599-b6ab-4a30-970d-509e79cf5c54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3cb3c20-b118-467c-b424-0ee174d81506"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79a50e64-f183-496e-a8f9-b7cb7426ce17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1540062a-6cd3-4c08-8daf-32a86b0beb7d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71645d22-bc03-46fe-8bc8-d5712fed3cee",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52784fe9-d381-4f0e-92c6-8c93b49cbc61"
            }
          }
        ]
      },
      {
        "id": "e43c61e9-b5d1-48b2-af8a-001c7f0e6a04",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b7dd23dd-71b0-4551-b0fd-b5c6a849a557",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b04263a3-9a1e-47fb-93f3-897c612a0b27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4838d0b0-aa00-47ef-b083-d46f132179d7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcebea5-75e2-4ed0-8c87-6ec11525cb9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e401dba6-62d2-4f85-9e98-a7e848d79dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d462c046-3b77-4e25-a3d0-691ff7946aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63f3fd85-fdb0-4725-86f6-4eede1a57f0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e93a93f-6fe8-4651-8a84-95cef8730a8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1dbe595-b7f4-411e-8157-d880e92ce51f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40e535bf-1219-4edd-adf8-7ad9a52e79e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20057791-35c1-456e-8923-b982491cf525"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "241b1b2b-494f-4420-95f1-222690f30d37",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bb0f8118-840f-41d3-9e3b-41bce1192005"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e9c6ca1-c8fc-491e-a967-860de509ba22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c0df589-3a28-426a-bdb5-3c8248b7f738"
            }
          }
        ]
      },
      {
        "id": "23978e39-a8fb-4c63-950d-0fa589b0e1b0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c12ec35f-c62a-4e33-84d9-52dea9983c1b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3aee90a5-1c4f-4fff-bd8e-f96f834e7626",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9fe8989d-8130-4d8c-8a5a-71e8ba215e96",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeb127e-ed89-4459-ab57-96d63f705c08",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3445ab1-729c-4227-a9ae-b63e5ea50c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e803238-a159-4057-a704-f0b2a29cd13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aa80ff7-e7e3-4e91-83f5-71eead7385fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1cc3051-731c-4cde-b187-670f36a1f42b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01c4059b-56ae-445e-8958-2c2927dfe6d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "750219b6-89e9-494b-b2ab-adf85102ad12",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6749b603-a262-44cc-83e8-cbf94864fd13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d00e61a-39d8-4399-9c04-e59684ae133d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c8879b45-e2c0-4876-97f9-62bc87fe68ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee4c6e2a-365f-4bfc-8a49-e6b39f8a5110",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f01cd09-a2f0-47ea-a6f6-42463da4ec98"
            }
          }
        ]
      },
      {
        "id": "033c43fd-2b52-46f9-a3cd-b07ec858bcdf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bf63bd2c-15f1-473f-9fd8-6bb354b721f1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "411ea09d-22e5-4d81-ad40-474197b95284",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a083ef38-e5ed-4341-a0d6-7b8bf266738b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e10bb3-e025-4d9b-b710-ad9e2406b0ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed6aebcb-f9c4-4a5d-b426-af088ec61288"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf303ad-ed15-43db-bda8-bdb4679f1da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07e77312-431f-4577-82e2-877c10c7d240"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "037c21fb-58d4-4862-a38e-4c942fe005f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ac6b08f-d6ee-4a9e-90b3-0ee3ef1f5eb8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a590b4dd-e988-44ac-a803-11e2aa915783",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb3b461d-7bcd-45be-9901-1168e6a36990"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67dd9357-26b0-4150-9056-228edb4d3746",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c4204dd2-3c2d-40ae-abe7-44763baf616a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b62fac86-e4ee-4196-b805-d4980c43d657",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ccf741f-a14b-4c7f-9c15-f678d58bedb3"
            }
          }
        ]
      },
      {
        "id": "a6d23bf7-0545-44e9-8f70-0699c1267a73",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63451304-1e93-46c6-9948-ff739e57314b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa708bea-8348-415e-8420-1f1ce16c7029",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e67d87e1-59bd-4e11-a89f-8ac1703f2f3e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d631d2b8-794a-4a4f-8caf-0f9eb9accd51",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e7d0486-435b-4c8b-9e1c-b4e69dd5e862",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 217.2922535211267,
      "responseMin": 5,
      "responseMax": 6129,
      "responseSd": 403.0037952105124,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691023190884,
      "completed": 1691023264555
    },
    "executions": [
      {
        "id": "602f55d0-e98b-47af-bbee-576b520d551e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b014edc0-7e4d-429a-8e5e-317ac378b2c2",
          "httpRequestId": "e6ec4e73-0ae5-49a3-9ffb-4d93b21f43cf"
        },
        "item": {
          "id": "602f55d0-e98b-47af-bbee-576b520d551e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b4e58c84-88ec-4a29-b7c2-6c93fbfc004d",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "335c9e10-a433-4015-94ce-6403cc4a58dc",
        "cursor": {
          "ref": "9792c9ad-b5a9-474a-8c1e-30fec153354b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "52e3b4d0-f8a6-4db2-b883-5c2021283207"
        },
        "item": {
          "id": "335c9e10-a433-4015-94ce-6403cc4a58dc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c2fa27de-3c26-4538-8f50-fec1fa4684e2",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "0978e5cb-b6ba-43da-96f3-501edbaccb1d",
        "cursor": {
          "ref": "2021fc19-2fcf-4246-93b9-9bedd2ec6510",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bec7b62c-ee80-4746-a9dc-c5767fca5f9c"
        },
        "item": {
          "id": "0978e5cb-b6ba-43da-96f3-501edbaccb1d",
          "name": "did_json"
        },
        "response": {
          "id": "7ab606b0-aa23-4fe7-ba9a-331b37ee58b1",
          "status": "OK",
          "code": 200,
          "responseTime": 1399,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be08a838-72f3-40a3-84e2-8f4b1089165f",
        "cursor": {
          "ref": "375ae858-9aa3-4ab3-a2fd-8e5bc50525bc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "46d27031-c17e-4dec-afde-b63fd64ecb74"
        },
        "item": {
          "id": "be08a838-72f3-40a3-84e2-8f4b1089165f",
          "name": "did:invalid"
        },
        "response": {
          "id": "e310a747-f0d8-4eeb-8351-b7bcdc4786c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be08a838-72f3-40a3-84e2-8f4b1089165f",
        "cursor": {
          "ref": "375ae858-9aa3-4ab3-a2fd-8e5bc50525bc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "46d27031-c17e-4dec-afde-b63fd64ecb74"
        },
        "item": {
          "id": "be08a838-72f3-40a3-84e2-8f4b1089165f",
          "name": "did:invalid"
        },
        "response": {
          "id": "e310a747-f0d8-4eeb-8351-b7bcdc4786c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71627f2-f666-4b18-bb38-1e9fc0013f40",
        "cursor": {
          "ref": "8546122c-35c8-4608-9dd9-41b1e97bb26a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "52fc8889-ef87-4473-9b71-f05dd948e4d9"
        },
        "item": {
          "id": "b71627f2-f666-4b18-bb38-1e9fc0013f40",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e7e06384-3c0a-4b16-8e95-625d36918d77",
          "status": "Not Found",
          "code": 404,
          "responseTime": 355,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee548b3-098d-42ea-ab34-eabc86ce62d2",
        "cursor": {
          "ref": "eb3b76b3-ab8a-4ab7-acd4-352e2fe90e83",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f6983a97-0ac5-410d-8477-9fbdbf9b4aa3"
        },
        "item": {
          "id": "aee548b3-098d-42ea-ab34-eabc86ce62d2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eb9c84bb-3d49-4930-8db0-700b486a3076",
          "status": "Not Found",
          "code": 404,
          "responseTime": 345,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df7a080-bcd4-402d-9901-9db004db22d7",
        "cursor": {
          "ref": "cecacf45-3511-41b8-a73f-c2dbb92df933",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "68715fb8-d85b-4db2-a8f3-cc660fb23fe9"
        },
        "item": {
          "id": "1df7a080-bcd4-402d-9901-9db004db22d7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "29fcad11-8332-4926-8a7d-9cf6fedacff3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e07795-6650-44c1-b3fa-c49d8da1d1a2",
        "cursor": {
          "ref": "0504d673-4a2f-47b6-85ef-57dbc60b6e7f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0e9877f7-a6ac-4c35-a29b-2aed80453cce"
        },
        "item": {
          "id": "96e07795-6650-44c1-b3fa-c49d8da1d1a2",
          "name": "identifiers"
        },
        "response": {
          "id": "468af6c6-3434-4df5-b848-9fce9776be51",
          "status": "OK",
          "code": 200,
          "responseTime": 1386,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e79049a-21c3-4c7a-a4e7-e5a31d00ab38",
        "cursor": {
          "ref": "bb3868dc-4473-4300-bc9b-c65662e93db9",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6b7f7d5b-184e-4e81-820b-66d0fed2ae34"
        },
        "item": {
          "id": "7e79049a-21c3-4c7a-a4e7-e5a31d00ab38",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "49a173f7-d67d-403b-a988-d03bb4865864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa2bde4-540c-4ea8-950f-0b49e6ea0dea",
        "cursor": {
          "ref": "874bafe2-c575-46f8-920e-4c1aa881b3b0",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f758af9d-515d-4f75-9ae7-e9ae0f50b694"
        },
        "item": {
          "id": "6fa2bde4-540c-4ea8-950f-0b49e6ea0dea",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3672655f-7a09-4335-9d27-58b7c41a2f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d87b572-1c3c-42e5-9fbe-19deed8e521c",
        "cursor": {
          "ref": "6279822b-3877-469a-9a5f-ddb540aaafa3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "93905e50-4a72-4b8f-a4a1-a57ea5a93f53"
        },
        "item": {
          "id": "2d87b572-1c3c-42e5-9fbe-19deed8e521c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "dc2e2d22-ae70-4719-8910-e8c4936b736b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47491b4-13f3-49d4-baf4-a3ab93aaabd6",
        "cursor": {
          "ref": "5f68c78b-47ad-4d8a-b6ab-92bf76be8b62",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ff512474-af18-44eb-8e50-1f53a29f0805"
        },
        "item": {
          "id": "d47491b4-13f3-49d4-baf4-a3ab93aaabd6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7cf52497-a8a4-45a3-9291-cbe4a954d625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22541eae-176f-47b8-bd85-dc6b26826f88",
        "cursor": {
          "ref": "41faade8-35fc-400f-8f92-0894d7df9963",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7414eadf-42b9-4fe0-81b5-a19276f4f736"
        },
        "item": {
          "id": "22541eae-176f-47b8-bd85-dc6b26826f88",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f51dff75-61a6-47b1-ac6b-771447bdc60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bfc93d-6794-4300-a65b-7b05bb1c9520",
        "cursor": {
          "ref": "7d13c949-614a-4570-8111-06d0d996d396",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "62aa7fcc-36b8-436f-b0a5-95b99633312c"
        },
        "item": {
          "id": "d7bfc93d-6794-4300-a65b-7b05bb1c9520",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a48ce1ff-e5cb-41fe-8f25-e966db80bbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda9bf45-4f22-48d1-b60c-b48d7493dcf0",
        "cursor": {
          "ref": "f0d484f4-ef05-4881-9210-05bca96f7080",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ef286343-2081-4bda-b850-056de749a5cc"
        },
        "item": {
          "id": "fda9bf45-4f22-48d1-b60c-b48d7493dcf0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5b595514-e919-44c0-b173-15feb3d414f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b97a0ec-4121-4a56-bf73-395ef02458b6",
        "cursor": {
          "ref": "b4c91c13-077e-4aab-a3eb-9836e60dc432",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6506b839-535e-412f-845f-18ed82e00bf1"
        },
        "item": {
          "id": "1b97a0ec-4121-4a56-bf73-395ef02458b6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fcd3f803-bf99-46f6-8b04-9ecc665801a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd800ca8-0e79-4ec6-8b55-d24c15be6f86",
        "cursor": {
          "ref": "9da05ae3-da46-46ec-ac7b-9f8904cbba24",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3cf41115-ea5a-4b69-b567-0de56b83821d"
        },
        "item": {
          "id": "dd800ca8-0e79-4ec6-8b55-d24c15be6f86",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b77194d4-cb05-4b03-9cf3-75c53c28d12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4c6d28-7073-4c8d-b5ef-c482ac2d8ce9",
        "cursor": {
          "ref": "8f7fddf2-d651-40be-aacf-3f288ced6519",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0e51d0a5-e716-49f8-9f66-031525ce3687"
        },
        "item": {
          "id": "0d4c6d28-7073-4c8d-b5ef-c482ac2d8ce9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c98a53d6-906d-4aae-8a73-30ffc44c9dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a0f756-917b-47bd-955b-e809e3392020",
        "cursor": {
          "ref": "97178c99-6cd6-47e1-862b-4f5038c34772",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1e5566c3-465b-40b6-b02f-26b485bbd901"
        },
        "item": {
          "id": "44a0f756-917b-47bd-955b-e809e3392020",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "a05f718e-efdf-435a-aa17-12f492195a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0334fa3a-6e23-4419-afa5-a5684c8b8045",
        "cursor": {
          "ref": "6a9a1e48-d5b5-4c95-a132-db12ad100025",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "575e6b65-fb83-47b8-9a6c-882dd2485bd9"
        },
        "item": {
          "id": "0334fa3a-6e23-4419-afa5-a5684c8b8045",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "372b4c23-a91d-4455-9d2e-7df6a77e1d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6490eae2-f47c-4935-8d0a-eedf5ec43c8d",
        "cursor": {
          "ref": "3e0613de-9865-424a-908a-ef82ed3d026e",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a0f3d676-0b25-415b-baac-3d0a521c04d3"
        },
        "item": {
          "id": "6490eae2-f47c-4935-8d0a-eedf5ec43c8d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "230e8a93-d881-4cc4-bf9c-8e908c496b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e093b5e2-f822-4d4c-b895-a85c4984ee28",
        "cursor": {
          "ref": "d1f482c2-8990-4c52-859d-b5ff726acb4f",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9286d715-1b89-4c8b-879c-b850c7555d9d"
        },
        "item": {
          "id": "e093b5e2-f822-4d4c-b895-a85c4984ee28",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cdd450bc-7a58-44c8-9ae8-f166c73ae6da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ca4ce4-157c-4e10-8343-1405df3505e9",
        "cursor": {
          "ref": "ce4d5547-ea16-4d79-88e9-6c2e20b52dbd",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b61c0776-1a22-4a1d-ae34-b6e62e962f30"
        },
        "item": {
          "id": "d4ca4ce4-157c-4e10-8343-1405df3505e9",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2c5b963c-412e-45ee-94f9-f6c12995650a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd15e0ae-628b-4e64-9f78-e0bf335a94a5",
        "cursor": {
          "ref": "de1e50fc-0c77-4d83-a265-51f239f02152",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b20c2566-284c-4d1c-aa52-cc98ed15cef0"
        },
        "item": {
          "id": "cd15e0ae-628b-4e64-9f78-e0bf335a94a5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a1702e5e-8872-4971-b09a-db1dae6ecef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66621303-446a-42f7-a4df-e7c1025a8d80",
        "cursor": {
          "ref": "22f17bcc-1c2c-4bcc-a245-774caf0e202c",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3c5136fc-5cc4-46d6-85d8-760270c61fd8"
        },
        "item": {
          "id": "66621303-446a-42f7-a4df-e7c1025a8d80",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "acbb0012-b6b4-4bf3-b87c-2a22f5ce830a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40350af8-f6f7-40c0-8e43-ceaa3c0b2c61",
        "cursor": {
          "ref": "7587fd6d-35d6-40cc-9ba8-3aa7dbd8708f",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5949412b-f0cb-45c2-bdb5-7c4c4fd172ce"
        },
        "item": {
          "id": "40350af8-f6f7-40c0-8e43-ceaa3c0b2c61",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b900c93d-25a8-445d-bb19-710d41bfa265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f6afba-cf32-4034-bf65-2ae6ca4faac3",
        "cursor": {
          "ref": "c5dc0883-888b-404f-89ab-7779bc07b850",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c6430dd5-bf5f-4165-8b33-7384ec53a938"
        },
        "item": {
          "id": "d3f6afba-cf32-4034-bf65-2ae6ca4faac3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1825c0a0-4b9e-4c2e-8d2f-bd7a4dff6d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dded252-3bf2-491e-9190-b4e626f9f668",
        "cursor": {
          "ref": "3f81d650-be3a-4d55-bd45-d7be468c9e67",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b0a84dcb-ee03-46ff-892c-d2a809c235cd"
        },
        "item": {
          "id": "0dded252-3bf2-491e-9190-b4e626f9f668",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e48feedd-279c-4c01-865f-3f7af5684aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2356347b-b437-48a1-82f8-aa56912b9005",
        "cursor": {
          "ref": "111b23e3-8f10-49e5-8dab-c50ce016c545",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "214d2630-e6f2-4024-bd63-9d18fcc65918"
        },
        "item": {
          "id": "2356347b-b437-48a1-82f8-aa56912b9005",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4401e79c-484a-4733-9a04-ed3418f85486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc24df42-c27a-4ab9-9791-446957ada4cb",
        "cursor": {
          "ref": "450c4ca3-b222-4713-a40f-cfb5559b04cf",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "97ef1faa-ce66-4692-94ed-27f3bfe7a2be"
        },
        "item": {
          "id": "dc24df42-c27a-4ab9-9791-446957ada4cb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f2c082c2-72fb-45f3-8239-87fcdd85318b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1333c1c-4c4d-4549-a7d9-8033055b2fa7",
        "cursor": {
          "ref": "2382351a-a523-4967-a19f-e1b3c87ad8db",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "051ccbcf-ab57-463a-91be-6f611543c6e9"
        },
        "item": {
          "id": "b1333c1c-4c4d-4549-a7d9-8033055b2fa7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a5b0339a-cb39-4add-a60b-6456eadfb108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409525e4-cfa3-464a-86e7-43b1279eda78",
        "cursor": {
          "ref": "59458566-18b6-4146-bb37-187d6c054b4a",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4ca77d90-7b8d-4906-a239-e19c13d34dce"
        },
        "item": {
          "id": "409525e4-cfa3-464a-86e7-43b1279eda78",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b6831703-935c-4fb7-94cc-a21ed97a49e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0efcf245-7eeb-429f-b640-4dc67828cc64",
        "cursor": {
          "ref": "60422e2a-391a-427e-a67e-82a5282728d1",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "cedc2c4e-266f-4923-9ee9-06ceea0305d2"
        },
        "item": {
          "id": "0efcf245-7eeb-429f-b640-4dc67828cc64",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "73d93446-7df7-4c53-bc7b-f00947c5240e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bf67a2-737a-416b-9fe6-0838fe23d1f7",
        "cursor": {
          "ref": "62fb22e9-4d1b-4b03-bf92-937c615e208f",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6030810d-f644-49b8-9ac3-bc1e11c9ed54"
        },
        "item": {
          "id": "49bf67a2-737a-416b-9fe6-0838fe23d1f7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ab1e1daf-86b3-417e-85ea-a7168df28594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701f1b44-8ad5-40f6-800f-0bd46f60f739",
        "cursor": {
          "ref": "27d79d98-ba3a-43ad-89f6-a7d6ebfb77db",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8f166c51-e069-45b4-baa8-0587edf201a2"
        },
        "item": {
          "id": "701f1b44-8ad5-40f6-800f-0bd46f60f739",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8f89b9e9-8344-4f25-b8a9-7691d57bdfd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a376930-7335-4652-8a3c-ab99d9674a2a",
        "cursor": {
          "ref": "fa9960f5-5627-463e-b4e9-077540cc443c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ca19fbde-22f1-426b-8bdb-9fb2eb39a93f"
        },
        "item": {
          "id": "4a376930-7335-4652-8a3c-ab99d9674a2a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2b2b8da1-81cc-4e9b-b3e0-5de6eaa3f9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae76597-1f7c-4b6a-b541-a7b9567fc501",
        "cursor": {
          "ref": "9a616c72-3b63-4500-9e9e-f9e7a7c2cc49",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8f2b0c72-49d6-417c-8e9e-449cef57378e"
        },
        "item": {
          "id": "aae76597-1f7c-4b6a-b541-a7b9567fc501",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f246f6dd-e46e-42ea-a013-7cebe129b439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19680be7-a940-47a2-a015-81bd43412e7f",
        "cursor": {
          "ref": "27a376fa-eb91-4344-afce-5500251c4cb2",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "024c377d-064e-4d01-a210-0a2e2d70ad08"
        },
        "item": {
          "id": "19680be7-a940-47a2-a015-81bd43412e7f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7c8e1a21-b30a-4a33-b709-f6856284c2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138782c8-af11-4ec5-a24a-36c214cd32c4",
        "cursor": {
          "ref": "c137c6d3-740a-4670-bad7-e0e3acc7c990",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b3cdb121-5cfe-40d1-8bdc-9617faa6e0d8"
        },
        "item": {
          "id": "138782c8-af11-4ec5-a24a-36c214cd32c4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ec363445-3b34-4c96-918a-33f55e7ac1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167c4bf2-2999-4d86-8ee8-05eec725f55d",
        "cursor": {
          "ref": "ece2d3dc-029e-4487-b16c-d456ac59b798",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "39da96af-36f7-46d4-b2c1-53d3aec01097"
        },
        "item": {
          "id": "167c4bf2-2999-4d86-8ee8-05eec725f55d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "cb1238e6-db50-4e85-af3b-5327863e2bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d087f416-91df-4a1c-9750-4ad57db09217",
        "cursor": {
          "ref": "93d301ee-4d1b-4a95-8a1d-b86cd4fe332a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c7576889-f036-4f80-b8d3-3567553e8b83"
        },
        "item": {
          "id": "d087f416-91df-4a1c-9750-4ad57db09217",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0a0e2be3-f4bd-48f5-8f44-a8d46dd0d67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b19128a-e03e-4ef8-a75c-80103fe404bc",
        "cursor": {
          "ref": "d71fb02a-c49c-4353-8532-11ccc54abdf7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c9252fb6-06cd-4a84-9784-85e605ac0bbe"
        },
        "item": {
          "id": "3b19128a-e03e-4ef8-a75c-80103fe404bc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8428096a-924b-474a-8ee6-c1bf03ceb81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65637770-3982-4e65-b7d1-6f41d142b6d9",
        "cursor": {
          "ref": "36c5814b-6bca-47e7-a556-91e79f2c5684",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ab82f3cd-2826-46b6-9900-83ea706f1692"
        },
        "item": {
          "id": "65637770-3982-4e65-b7d1-6f41d142b6d9",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d0d7f0c4-53d4-4633-aa6b-4e6a4122be99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caaffd6-1c94-44cc-b3ec-b187547a10b7",
        "cursor": {
          "ref": "43fbdf24-0194-45c5-be18-bc130a2dbaf2",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c28375be-b7c7-4f84-b25e-34e7f6733d98"
        },
        "item": {
          "id": "6caaffd6-1c94-44cc-b3ec-b187547a10b7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d5cc5c9c-844e-416b-b7a2-a51eda061c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c4e76a-152f-46f5-8875-09d1b385b37e",
        "cursor": {
          "ref": "d938e1de-5b0a-4d3e-a1e5-4810bc5d62d2",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5c872c52-cd6e-41d1-b780-680c4ecb656e"
        },
        "item": {
          "id": "c4c4e76a-152f-46f5-8875-09d1b385b37e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e40c01f0-7fcf-48d4-8651-debd4a51aec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae9a4aa-d7c9-42b1-8d88-73772e11ed1c",
        "cursor": {
          "ref": "cee754ac-a69c-4caa-82a0-109b149332f6",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fc443ced-677b-4682-ad64-8bd83bbb47e3"
        },
        "item": {
          "id": "8ae9a4aa-d7c9-42b1-8d88-73772e11ed1c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "790fb54b-268e-42ba-bc92-3d69e2683b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1788a58-234c-4f66-b963-7cdda6be3db4",
        "cursor": {
          "ref": "ef06c143-4f12-41af-96f6-436bf8ee3c81",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "38a57433-038f-409f-af7a-d678b767eaeb"
        },
        "item": {
          "id": "d1788a58-234c-4f66-b963-7cdda6be3db4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "13f1251a-bbad-4f8e-add4-b7c312aa292b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f204aa83-23a7-4352-a104-3f167973c04b",
        "cursor": {
          "ref": "68b6936d-5fa9-4de8-8cad-5b179254211a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e002a758-7be7-46fa-b4af-18789318996a"
        },
        "item": {
          "id": "f204aa83-23a7-4352-a104-3f167973c04b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c131fe6f-afcf-4246-9d81-d8ac83073704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37dd0e30-974a-43d7-b1a2-11945e89a5df",
        "cursor": {
          "ref": "ac1875a3-68ab-455b-bcb6-97d688d607f3",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6e91780a-dca5-4f3f-891b-f453f4da43f7"
        },
        "item": {
          "id": "37dd0e30-974a-43d7-b1a2-11945e89a5df",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2639917b-ad5a-4aa9-88d6-ef23578799f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f28245f-c655-4cca-ab5b-3b09bc2c44f0",
        "cursor": {
          "ref": "5b67fcfa-b55f-4e0b-864f-9058532cffab",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "58d607c5-39ab-4b71-b81f-c805eea71308"
        },
        "item": {
          "id": "5f28245f-c655-4cca-ab5b-3b09bc2c44f0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "690f2c6e-8ba0-491f-8844-3f918b3872c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f378067-b2ec-4f25-add1-8e25c7e584d5",
        "cursor": {
          "ref": "b47d3007-8142-442a-aee0-c8712a77f90a",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7201b556-4d0a-4bbc-8017-e1b0f9f43ab4"
        },
        "item": {
          "id": "7f378067-b2ec-4f25-add1-8e25c7e584d5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6f4e1dae-7ba0-4099-ab0d-2283aa431869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f0f0c5-7530-46d0-9405-2989257138b8",
        "cursor": {
          "ref": "333ea611-cbb0-44ff-bcf0-738629e1ebab",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "6b10a18d-2c21-400a-a33e-3707494b160c"
        },
        "item": {
          "id": "58f0f0c5-7530-46d0-9405-2989257138b8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d2dc8389-d399-4ac5-9890-0886a5c8b5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba74ac5-a184-4e14-8b59-9c27c2f67ac7",
        "cursor": {
          "ref": "f5102939-29dd-4356-b527-f62a5967afc3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ad4efadf-5a8c-4f9f-a2a6-4b2d394378ef"
        },
        "item": {
          "id": "cba74ac5-a184-4e14-8b59-9c27c2f67ac7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "aa6b15b0-6abf-4934-a259-e35b65529aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85f540b-2f49-4957-8dca-b79aec86fd76",
        "cursor": {
          "ref": "5362d88f-cdb2-44ca-aedf-4a7c92b4f2fd",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "41d3a905-0e5b-469a-984c-48b62bd8dc8d"
        },
        "item": {
          "id": "d85f540b-2f49-4957-8dca-b79aec86fd76",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6a73235a-3712-427a-9893-85db1c9d8394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcccebe-89d2-476e-a78c-bcafb13d2ab4",
        "cursor": {
          "ref": "d441ef11-baad-4e4d-9961-811f95ffea8d",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "18cee9f0-f964-4926-a7e5-d16755a141d9"
        },
        "item": {
          "id": "2fcccebe-89d2-476e-a78c-bcafb13d2ab4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "76bd14f9-f850-4af4-ad95-e2b5d8a25060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6299a8-e83c-4174-927e-059c88883f1a",
        "cursor": {
          "ref": "6a5a535d-195a-44d8-a02b-b00ca55d85ee",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0f70b0c1-6b15-47b3-bd1a-725f426fc923"
        },
        "item": {
          "id": "4d6299a8-e83c-4174-927e-059c88883f1a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e6d22cfa-881a-420b-a183-53c8b4de0286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f630c8a0-38e5-4e17-b022-78c8a47ead28",
        "cursor": {
          "ref": "4dd51cc2-1395-48c0-a673-57faf38dab9a",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "df95dbc9-8818-48c5-9fef-d1fc01061bdd"
        },
        "item": {
          "id": "f630c8a0-38e5-4e17-b022-78c8a47ead28",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ba67a9ae-b05b-49f4-9e83-409ea65bab49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82677bed-0058-4d77-9df3-ea44130ecca1",
        "cursor": {
          "ref": "16cafe8d-8678-4d23-b6bc-7b5950008c90",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2c8f3e14-7038-4b4a-8794-f8635116030e"
        },
        "item": {
          "id": "82677bed-0058-4d77-9df3-ea44130ecca1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3dd87d10-4020-4c53-84c8-59799ab8436c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b95dc75-5c06-4064-af25-a0124ce1617e",
        "cursor": {
          "ref": "b0c37a26-1052-40af-982f-a10a4e760824",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b89b5982-76b1-4bb0-aaad-d2f8125194a9"
        },
        "item": {
          "id": "4b95dc75-5c06-4064-af25-a0124ce1617e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c4e52243-05ac-4c58-b4e7-4b3d2fe6b1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63aba13-8257-48f4-9da8-b1d122db2549",
        "cursor": {
          "ref": "b1c8083d-c77b-4467-9a66-3786a5f8aece",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "112a2d21-7628-4bc9-9b4b-757759fc37d3"
        },
        "item": {
          "id": "c63aba13-8257-48f4-9da8-b1d122db2549",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "65920827-c11c-4357-9a76-0f0616ed554f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcef730-1757-4803-a626-61eb69d48ac9",
        "cursor": {
          "ref": "5f6d6074-7c78-433e-8e46-2538b6508b83",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6a2e4087-4e29-44d5-8695-b1262523566e"
        },
        "item": {
          "id": "6bcef730-1757-4803-a626-61eb69d48ac9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "77f96282-4ab4-4a2d-ae2a-110adae6c5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207a679a-6241-42cd-b890-d623b8b8fa67",
        "cursor": {
          "ref": "bfdd287a-7f22-4fec-bae8-77cea0106b00",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "91aab111-7a2c-417b-9e93-b3870d8285d9"
        },
        "item": {
          "id": "207a679a-6241-42cd-b890-d623b8b8fa67",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2628c5fb-e7a2-4469-95ae-ca95f44b4851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ad5e75-3147-439f-8f27-39e5769addee",
        "cursor": {
          "ref": "1908312b-d3d8-42a5-b87b-f3ccf34e41fb",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9162f83a-22dd-43e4-9480-2dd68ead11a1"
        },
        "item": {
          "id": "52ad5e75-3147-439f-8f27-39e5769addee",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2a8eb161-6b39-426a-90f5-ea2dd52f6715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab8cb66-73c2-4b3d-90c8-b91fe77760a2",
        "cursor": {
          "ref": "8b470c68-1051-47df-b903-3e3c450dae62",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a13bef9a-f65d-4706-a974-a096dbe49cc8"
        },
        "item": {
          "id": "cab8cb66-73c2-4b3d-90c8-b91fe77760a2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "11fb5fd3-2dc0-4361-b424-d3677e1985fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8556f2-49ce-43b0-b906-9442e8e3b737",
        "cursor": {
          "ref": "896900e2-4d95-420e-8254-91ecda360a1a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d06f6bb0-d468-4986-adb4-42b3c357d3b8"
        },
        "item": {
          "id": "9b8556f2-49ce-43b0-b906-9442e8e3b737",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d9ab5e80-d69e-4817-bd41-79468de4c1c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b50600-3fd7-49f0-8f23-a2ed2a81b0b0",
        "cursor": {
          "ref": "e4f8c878-f45a-4baa-807a-51550c4f3529",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "86b891db-f2a6-4cb0-94c1-6ab59e9af717"
        },
        "item": {
          "id": "91b50600-3fd7-49f0-8f23-a2ed2a81b0b0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "044909c7-b02c-4cbb-aa9c-e1ee87c3460e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419e92e6-1f09-4cb8-afda-d198b712ab56",
        "cursor": {
          "ref": "b23cac5e-be6e-41a4-998f-563113d1235f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cc16bd08-4de5-4ee1-9abf-5f4431752ee5"
        },
        "item": {
          "id": "419e92e6-1f09-4cb8-afda-d198b712ab56",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9cf5f381-11d5-4a4d-9754-73667309dd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d672e6-7f6c-4342-934f-f2240436d697",
        "cursor": {
          "ref": "5ee6c296-ebcf-4055-ac7d-57f9a21d20b8",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ee82c778-f57e-459c-9396-bea91367708c"
        },
        "item": {
          "id": "84d672e6-7f6c-4342-934f-f2240436d697",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ebe56a21-fa93-49e1-b410-35f5f9effa1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8700ba-6d3b-42dd-8379-f062307cf3ba",
        "cursor": {
          "ref": "fc1ef5b6-5561-4105-95f3-c9eab7736a2e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "27f66fa2-0093-4387-91fa-f92b7a670642"
        },
        "item": {
          "id": "1c8700ba-6d3b-42dd-8379-f062307cf3ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a407f3ad-d458-41f1-9080-89f16d9d2593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc27ca4e-aa6c-4b0e-bace-111672af44a0",
        "cursor": {
          "ref": "70403d80-842b-47c0-8a62-998ee42ddea9",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ca5095d2-07e2-4d6a-b0b7-900685389a0a"
        },
        "item": {
          "id": "cc27ca4e-aa6c-4b0e-bace-111672af44a0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c99c2a7d-3c77-40e8-b87a-eaa7728c31ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d67be6-b96e-492b-b129-654d72b2c2f6",
        "cursor": {
          "ref": "c32c041a-a0c7-4394-a908-63b5ba0e6c79",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4a56dad7-a083-4661-8e1a-10af163fcb6e"
        },
        "item": {
          "id": "01d67be6-b96e-492b-b129-654d72b2c2f6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "28585a0f-70f7-4ad2-bf72-2bb7d8d15724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516d5041-10b6-4879-a7b9-3815fe9a4c34",
        "cursor": {
          "ref": "4c93b2d6-bfcb-4c5b-87df-2b76dcf27883",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c89286b4-9317-4eab-8668-6ee96b5e497b"
        },
        "item": {
          "id": "516d5041-10b6-4879-a7b9-3815fe9a4c34",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "28642f57-ce4f-412e-934e-640de9163983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e514e5df-70b6-44fa-a341-337cd4a09354",
        "cursor": {
          "ref": "3981bbb7-3dfb-4450-a334-5aac074b3afe",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9b6ce665-f65d-40a0-bcce-c03f7653d77b"
        },
        "item": {
          "id": "e514e5df-70b6-44fa-a341-337cd4a09354",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "96acbb45-0939-47f5-8483-20fd6e8b6705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa58bc78-7829-409c-b0f0-78c241dec564",
        "cursor": {
          "ref": "10367752-61d0-4684-adb9-12ddd404f6b0",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "46a6d6b1-6787-4fb3-a33e-fe6558f16c8d"
        },
        "item": {
          "id": "fa58bc78-7829-409c-b0f0-78c241dec564",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "65850211-aa69-47ac-be69-e549a7aec479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2344e3b-7a96-4717-a2ce-693269f80055",
        "cursor": {
          "ref": "f417e35c-c12a-4253-8632-c16d9c205b57",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "73a72664-6f22-4230-9a46-08fcdaf09eb1"
        },
        "item": {
          "id": "b2344e3b-7a96-4717-a2ce-693269f80055",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5dbd884b-6e6b-4c4b-a48e-45ae8eefa69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0a1d66c-c5fe-486d-9574-b1cb08aea2d4",
        "cursor": {
          "ref": "b097400d-eb80-4f25-8e52-6d391b4040e3",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "67a79424-545f-4931-a8c2-d2a5b5fd8829"
        },
        "item": {
          "id": "d0a1d66c-c5fe-486d-9574-b1cb08aea2d4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "617af6d6-dcf8-4add-a8f6-6e9153b02630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b365be60-6b8d-4156-89fb-a2da1e64f932",
        "cursor": {
          "ref": "c049a4dd-d010-4f92-bb1c-73a7aeca9195",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f024c0a1-8cce-4c88-8ac6-c288b427902a"
        },
        "item": {
          "id": "b365be60-6b8d-4156-89fb-a2da1e64f932",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "24414397-d2a0-44b2-9231-1c712225f429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434dc978-bfbe-45d2-be76-8fb4ace34e56",
        "cursor": {
          "ref": "54c3f0ab-3513-4eab-9722-7da3da0d981b",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9fc5a2d5-600c-44ce-9e13-03615ac7fd09"
        },
        "item": {
          "id": "434dc978-bfbe-45d2-be76-8fb4ace34e56",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "22ef99ba-3000-483e-a1ae-73e99fa24ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07441e11-db6c-499e-a00d-b56468b59189",
        "cursor": {
          "ref": "99799d2f-33ad-41dc-92aa-0ef4bd383391",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7710668f-7c7d-4f03-8fad-7812575133a7"
        },
        "item": {
          "id": "07441e11-db6c-499e-a00d-b56468b59189",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ba38811a-dc60-42e3-ad69-cbede8f09722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6be6f49-0d1e-4b86-825c-348ca3751ef2",
        "cursor": {
          "ref": "dbdf69fa-eaca-47f8-8f03-167e540ef303",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b3bba871-4752-44b3-a94f-31bac6a9dfc2"
        },
        "item": {
          "id": "e6be6f49-0d1e-4b86-825c-348ca3751ef2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3d1b5097-18e2-498d-8558-c11241f4bc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970f4353-8918-4eb6-b5e6-5ca76d7a2158",
        "cursor": {
          "ref": "6d55ebfa-20a5-4707-ba66-0791c52b15c9",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "5394630f-9577-472c-8525-755ed653ebac"
        },
        "item": {
          "id": "970f4353-8918-4eb6-b5e6-5ca76d7a2158",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "48a4aba9-3ca6-4389-8f3e-ead2d211517e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5beb454f-7728-4843-a2d5-bc91e8ad7405",
        "cursor": {
          "ref": "17b0825a-ef73-4af9-ab54-ba53f74fade7",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "688655f6-47e7-467a-906f-bf4ce26fe436"
        },
        "item": {
          "id": "5beb454f-7728-4843-a2d5-bc91e8ad7405",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "859ffe3f-3304-4889-a660-56b1faf82067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a876df48-c4ee-41fc-8c85-f7fb86039a4d",
        "cursor": {
          "ref": "1f4ecf64-63f0-4ffd-acb3-5b968e2b1344",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ccbb0c89-831c-48f0-be3e-a0435830707f"
        },
        "item": {
          "id": "a876df48-c4ee-41fc-8c85-f7fb86039a4d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8f1eeaa0-19ce-4511-8473-633a85e95281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d520f5a-e70e-474e-b357-9a6ea5b1e900",
        "cursor": {
          "ref": "04c86a95-708b-4a4b-bc65-341a5ff6f023",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3075da5e-6c62-4309-ac5d-ea6f26c6c0d4"
        },
        "item": {
          "id": "1d520f5a-e70e-474e-b357-9a6ea5b1e900",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "190d6adf-6b57-4ae2-81e0-1ba1ab5f0177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c1874c-9092-4d69-94c8-3fddc7fcb77d",
        "cursor": {
          "ref": "8a7ec24e-30e6-4963-8e7c-f1327c3ef4e4",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "43ddde69-4795-40aa-9ef3-8c6c868a6fca"
        },
        "item": {
          "id": "01c1874c-9092-4d69-94c8-3fddc7fcb77d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f1531fba-8718-4472-96b1-bfcebc155bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5499f95c-0dfc-41f8-89b3-ce14a2d604d0",
        "cursor": {
          "ref": "f7fc4a2a-928e-4ef1-965c-66787d095d4c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ea1bfab1-3d48-4de5-a91e-6b6bacfb1c62"
        },
        "item": {
          "id": "5499f95c-0dfc-41f8-89b3-ce14a2d604d0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "28112fa3-5843-40cc-8cdf-bb735278e1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3688f84-7f9a-4688-abfd-f233ca8c3f90",
        "cursor": {
          "ref": "c6fdf7d5-c901-4c90-a959-ef1efa2d8cb8",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cd14bee4-2c29-4a7a-bf6e-3b4fc51b6eef"
        },
        "item": {
          "id": "a3688f84-7f9a-4688-abfd-f233ca8c3f90",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "897d7693-8d9f-4b8d-8855-661022cb0709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb89b20-fc47-450a-8429-4d99f7abd082",
        "cursor": {
          "ref": "8740c1e3-9166-498e-b57f-a8443a32d795",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aae40543-f854-44fa-a038-55e8cff8aa3f"
        },
        "item": {
          "id": "bbb89b20-fc47-450a-8429-4d99f7abd082",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8b14cb74-d3f2-4438-a8fc-5ed678131fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbfede9-8e0f-4022-8e4c-1762a55b6502",
        "cursor": {
          "ref": "30b4e541-ebd2-4156-8ad7-864135b22bc7",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4c383003-ac7f-4da9-9c94-3ccb4cd12def"
        },
        "item": {
          "id": "8dbfede9-8e0f-4022-8e4c-1762a55b6502",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9bd9e8d1-37fd-41b9-a256-f79f5715d34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 231,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508d4513-ed57-4889-ad1f-13cc1cd88caf",
        "cursor": {
          "ref": "976947fd-ce2f-43d0-83d6-dc353e756f7f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4e65a238-99e7-4ae2-b15e-e503ff80345e"
        },
        "item": {
          "id": "508d4513-ed57-4889-ad1f-13cc1cd88caf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "54184aa2-e42f-4485-9f7d-569b30e01f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7fe065-a6a2-4fcd-b1a9-2e544d354621",
        "cursor": {
          "ref": "1890cfce-29ef-4e92-aa30-ba0518715d2c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "93d50b0a-b661-4cd3-b872-95cb006fa349"
        },
        "item": {
          "id": "4b7fe065-a6a2-4fcd-b1a9-2e544d354621",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "81e9a91b-cce2-43eb-b786-1df6c2eadb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0414d4-9126-4e55-aef6-5e21fc27854d",
        "cursor": {
          "ref": "4694e53c-3d49-4a74-a1ba-aa9a3f9e94cb",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4c082f97-a6a1-4030-93c2-4925bc73ba68"
        },
        "item": {
          "id": "9f0414d4-9126-4e55-aef6-5e21fc27854d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "eb07c12c-b547-4e66-ab1a-81e912f1d2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f48de68-4a4b-4b8d-bad4-8238e6b96b47",
        "cursor": {
          "ref": "fb7ae220-0f63-4732-9542-e0267ae66c4e",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cbbc7901-9ea0-416c-87f8-bcd3ab137a29"
        },
        "item": {
          "id": "8f48de68-4a4b-4b8d-bad4-8238e6b96b47",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "33eff7f4-38ff-4041-9384-083a332e6fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55072065-4b87-4e4f-975f-d75539e01986",
        "cursor": {
          "ref": "1e0d8aa9-54f3-406e-a564-32960da79a46",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d55636bf-de75-45aa-970d-a2f44fb5ca48"
        },
        "item": {
          "id": "55072065-4b87-4e4f-975f-d75539e01986",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f85857bc-e6d1-4b15-8aaa-6e81fbe137c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa07b18d-6e95-48a2-97fa-8ecf90ca87f1",
        "cursor": {
          "ref": "fd94a146-9cc7-4b8f-b972-bacc5475919c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8af00b76-054d-42ea-b99b-411152617d73"
        },
        "item": {
          "id": "fa07b18d-6e95-48a2-97fa-8ecf90ca87f1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "12c5a5d6-d569-4e65-8ceb-ee64d36de8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0ad9f3-786e-4652-9088-5490c6f97c8a",
        "cursor": {
          "ref": "ae090be7-9796-42c6-90d0-738a56506ae9",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "37dbe18a-5261-46df-9824-1c529e44ec4e"
        },
        "item": {
          "id": "fd0ad9f3-786e-4652-9088-5490c6f97c8a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "92e5019d-3595-479d-b45d-21162d3b4e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b8fa192-8496-47ff-8036-4824ec05fbfa",
        "cursor": {
          "ref": "47e5ae1e-72f8-45b6-875a-d4f850489cd8",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fd3ebbbe-57ef-4575-871d-563efdf69916"
        },
        "item": {
          "id": "7b8fa192-8496-47ff-8036-4824ec05fbfa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "64050ee3-46a7-47f4-89df-fcd5f277b734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db72d84e-293b-45e7-a3f5-80f2ffc3421c",
        "cursor": {
          "ref": "b80586af-74ad-427e-9dcf-bf41f1935650",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9ec42d7d-3579-496c-bef6-e449dd484591"
        },
        "item": {
          "id": "db72d84e-293b-45e7-a3f5-80f2ffc3421c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "df630f8b-f26d-44e2-99ba-bb2aeef55561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b826c2a-f851-4b2c-805e-600622d8c2f4",
        "cursor": {
          "ref": "266ab75a-96c4-47f1-8f49-6d2c61fc9799",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3becd27e-1f70-4ef0-a534-293faa07bc4a"
        },
        "item": {
          "id": "0b826c2a-f851-4b2c-805e-600622d8c2f4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "02d277a7-9c3f-4e0f-9ae1-8918c9438642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1668cb9-a4b9-4eef-bcf5-70c79a64817c",
        "cursor": {
          "ref": "986864e4-b412-47e8-b085-a1e51e81c6f9",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "70e402b8-dff7-4311-b2b9-79efc2c640d1"
        },
        "item": {
          "id": "b1668cb9-a4b9-4eef-bcf5-70c79a64817c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1e1d5f16-490c-4029-a1bb-a8ecd6f4a932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7abe209-581d-4265-928e-5b63818276d2",
        "cursor": {
          "ref": "2358928a-600c-4db2-ac44-894f06173481",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6d03855c-3c11-455e-aee1-4539382cf8f7"
        },
        "item": {
          "id": "b7abe209-581d-4265-928e-5b63818276d2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d6de6044-2a5b-41ba-bfec-d011e6956f05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e209975-5721-4eee-a483-b5c836c3e7c9",
        "cursor": {
          "ref": "ca8e1399-d541-4b3d-9c1e-f5f385772847",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7e508064-1c94-4154-874a-b19399f78f92"
        },
        "item": {
          "id": "2e209975-5721-4eee-a483-b5c836c3e7c9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "93afeffe-d015-4851-bdfd-5ed2713f03c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "7deff427-9cc6-43aa-97fc-491c2b273cdd",
        "cursor": {
          "ref": "cd1c4b98-9a59-4672-bd2d-e0fb85a1c18d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ce408b04-33fe-443c-aff6-6df3662ada95"
        },
        "item": {
          "id": "7deff427-9cc6-43aa-97fc-491c2b273cdd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "af06de80-ab1e-455e-82ca-858e542c02da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "9dd3a904-e47f-4ec6-83e4-98ddc6455a91",
        "cursor": {
          "ref": "9f788346-2e83-4585-ba4e-4f74709f9396",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "35036dcd-9146-4992-a8d3-0a632737a2e1"
        },
        "item": {
          "id": "9dd3a904-e47f-4ec6-83e4-98ddc6455a91",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "08b342db-800d-47b3-bf7a-b298787df370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6ddd6b9d-1872-4412-8322-5ec2a5a7b288",
        "cursor": {
          "ref": "acba7642-03b7-4126-a4a0-2f8c0df3b2e4",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ef938ea9-af99-478c-a692-b14174f0c482"
        },
        "item": {
          "id": "6ddd6b9d-1872-4412-8322-5ec2a5a7b288",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8f016079-d6a1-41f8-bc3a-f013cb4adc7e",
          "status": "Created",
          "code": 201,
          "responseTime": 6129,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7c19b7-8472-4453-bc6b-ff9f43cf9cb5",
        "cursor": {
          "ref": "097f7788-b6c5-453d-8ad8-b7bfb9b7a9c4",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bf595a65-d4a3-4430-ac78-7441724f80af"
        },
        "item": {
          "id": "cf7c19b7-8472-4453-bc6b-ff9f43cf9cb5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "693a4d8e-dacb-4000-b191-e61279561937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "1c3d76ed-220f-4113-91b0-d477f7e06a73",
        "cursor": {
          "ref": "853b6145-851d-4d68-90f6-9685efaa35b7",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "549490bb-bf5e-4897-9f4d-8148639c3026"
        },
        "item": {
          "id": "1c3d76ed-220f-4113-91b0-d477f7e06a73",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f1830c4c-eae6-4ae7-90a7-531e4283ceb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "a54f2ba6-2cc9-4e1e-97df-60af62e48a13",
        "cursor": {
          "ref": "8ebfe5ef-6981-44f9-b069-b7b3087af08c",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8292960a-ccbf-4418-b04e-c6a1a3c4fa2e"
        },
        "item": {
          "id": "a54f2ba6-2cc9-4e1e-97df-60af62e48a13",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "68d26ae3-6a01-46a9-b1d3-0a916fe5b193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02df4411-ee8b-453b-85d2-86641384670f",
        "cursor": {
          "ref": "10390343-8fa2-43be-a8c4-08bd924740c8",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1004db4c-7c18-4807-9d64-5d1050584300"
        },
        "item": {
          "id": "02df4411-ee8b-453b-85d2-86641384670f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "18a8e2a4-2441-4c2e-863a-c8915ba35b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8212febf-d7f9-4774-916d-07035eae00e2",
        "cursor": {
          "ref": "1b96cca1-8dae-4853-bfa8-326734b312e3",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6e42cdf4-bac0-4016-9b38-bca576caca8a"
        },
        "item": {
          "id": "8212febf-d7f9-4774-916d-07035eae00e2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7787d844-0b33-467a-966e-de8ef88d60d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f89fb0-f649-4544-8d79-59b5ba3a7b17",
        "cursor": {
          "ref": "aff6f800-0c3a-4a79-9c41-cf67b0cf3ebf",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5d751ad0-c1bc-4031-abe6-82749cde9998"
        },
        "item": {
          "id": "40f89fb0-f649-4544-8d79-59b5ba3a7b17",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2f3a6ca9-efd4-43e9-b9da-a377fe3ffc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4385447-ac63-4a21-b33d-993ef8a519e1",
        "cursor": {
          "ref": "87c72373-288a-46ec-88f0-3941b087f726",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "190b6b9a-995b-4be2-9e5c-136d3d4bfa0f"
        },
        "item": {
          "id": "e4385447-ac63-4a21-b33d-993ef8a519e1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "044fbb9b-2fd0-4a57-a212-3afa5dc5b4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ffb90e-5682-4efa-88f8-c487ead7413c",
        "cursor": {
          "ref": "48789a15-79ba-4606-83de-a4a06c277258",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fba008ec-2f2a-4f10-9e55-b671be65c588"
        },
        "item": {
          "id": "94ffb90e-5682-4efa-88f8-c487ead7413c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "29049747-3cf3-465b-a58a-9c87624feffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c8c074-7e75-469e-bcb1-dd32b88fefa3",
        "cursor": {
          "ref": "2f6e8ea5-c860-40ef-9433-65dbc375cd05",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f3100ea5-07bf-4f30-b723-556d79491eba"
        },
        "item": {
          "id": "85c8c074-7e75-469e-bcb1-dd32b88fefa3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f61adc8b-d1d7-40ff-a189-c61ad628928a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0da23f-55ec-4b27-8bba-cf4f8634f62a",
        "cursor": {
          "ref": "460c56f8-fafa-4c7c-9ec6-0e1fd4eeb5ed",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a6c4cc56-d050-471f-9b8f-71b9d58531fe"
        },
        "item": {
          "id": "ad0da23f-55ec-4b27-8bba-cf4f8634f62a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "31804c37-57a1-4d2c-9830-4351d3afba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e25d5e-4a7d-40b2-82d5-84820a5875aa",
        "cursor": {
          "ref": "eb2a7e6e-eabb-405f-abba-396f1bcf0c2e",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "28a62831-ec52-4bcd-b6c0-cd7c5a177fb8"
        },
        "item": {
          "id": "a0e25d5e-4a7d-40b2-82d5-84820a5875aa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "36ad5313-3697-4523-9e15-38cdbec62f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c122dc8a-cd9b-461c-a259-6da91c98b3d1",
        "cursor": {
          "ref": "98c52a05-e5e6-490b-93f4-5433f1bb897f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "24d69bba-1d6f-463f-a9a1-0af5d685d67e"
        },
        "item": {
          "id": "c122dc8a-cd9b-461c-a259-6da91c98b3d1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "62b44e9a-007b-4f71-9c02-9c32beee68c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b9b135-28d1-45b4-96a0-5b0a6cdf554d",
        "cursor": {
          "ref": "86838117-61ff-448b-8b98-49364a0d6d79",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "75c0194e-d643-4f0c-bf4b-f8f259529176"
        },
        "item": {
          "id": "e9b9b135-28d1-45b4-96a0-5b0a6cdf554d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6d816172-2eb8-4e64-a3e3-37555ca09481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf8eebe-f420-4641-8c9e-1641700723fc",
        "cursor": {
          "ref": "bdb8b0cc-c111-49cd-b8b4-ef956cb7244a",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2ae665ba-0b38-4789-88e0-05eb63f5efac"
        },
        "item": {
          "id": "ebf8eebe-f420-4641-8c9e-1641700723fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "383c5da9-3f2b-4142-846e-a069ec37ab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21c3f2c-c5ef-4fb0-ac32-95f03f8bf40b",
        "cursor": {
          "ref": "5076e623-26c5-499d-a580-3f1fed373e62",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "16671171-e032-4237-ae04-37ee74a16d7d"
        },
        "item": {
          "id": "d21c3f2c-c5ef-4fb0-ac32-95f03f8bf40b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "81cbfab5-7d14-492c-9a21-f3fc6bdca78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9333fb-73c5-47ae-8ade-664e271ace7d",
        "cursor": {
          "ref": "1fc650c5-1b2c-48ef-818e-374d870a6ebf",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a27be70a-e042-478a-adb4-82a93f5bebe8"
        },
        "item": {
          "id": "2a9333fb-73c5-47ae-8ade-664e271ace7d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "32001f99-bd4b-4872-b0d2-be1261e2b7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea40ccf-6dc0-45eb-af97-8be71a9832db",
        "cursor": {
          "ref": "c2b1ea46-11f2-4111-b3dd-d1dd6ae3ef36",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "04db1f55-a8ca-4cbc-b89a-8998f6387880"
        },
        "item": {
          "id": "bea40ccf-6dc0-45eb-af97-8be71a9832db",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6b0fbe49-c87e-4a21-bbee-2577936ea596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520281d2-e134-4905-8528-d9bd43bb07f1",
        "cursor": {
          "ref": "64aac49d-42f8-4a73-ba1b-8bf905bd3ebe",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d73367e1-1462-49cc-b4fe-03702ddbcb9c"
        },
        "item": {
          "id": "520281d2-e134-4905-8528-d9bd43bb07f1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1b4de1ae-d66b-4c75-97e7-8d0074e2f78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3277d2-1376-4bda-9dca-e449e6146c19",
        "cursor": {
          "ref": "0552bbba-73f0-4673-9a63-1fdaf6bff6d6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9a17e5a3-b25b-47be-9ebd-71ce154a9b32"
        },
        "item": {
          "id": "fe3277d2-1376-4bda-9dca-e449e6146c19",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a51e880b-c8f2-43a1-971b-9daf7e299428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e347d9f-1a9e-4560-8b27-e3625a5d1141",
        "cursor": {
          "ref": "748cce81-efa8-4462-ba8e-091b17e8355f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a112c884-b523-4ab1-91eb-6bd6298958f7"
        },
        "item": {
          "id": "8e347d9f-1a9e-4560-8b27-e3625a5d1141",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8e8b69fc-0bb5-49ca-9939-992397e9454f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e1e85c-2731-45db-acc4-c31c5000268c",
        "cursor": {
          "ref": "e74e9324-fdb7-4180-b5f6-0755a6f38aae",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "375d400c-2120-4444-a8c7-a65af49064d2"
        },
        "item": {
          "id": "32e1e85c-2731-45db-acc4-c31c5000268c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b765d7ea-0e62-4254-9fa1-c156217b3a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a5f39c-bd15-4b60-b446-db37c3a55413",
        "cursor": {
          "ref": "9e1db3e4-46fa-4847-95ec-e44394d31bc2",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a50747de-ccfd-48f9-aad9-b4292513c250"
        },
        "item": {
          "id": "49a5f39c-bd15-4b60-b446-db37c3a55413",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9b60bda2-788c-4ce9-973e-2bc8467fba09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761d5c12-7c62-4b01-9b0a-14eb98f75660",
        "cursor": {
          "ref": "a240d0b2-1158-48df-81a5-df72f06d1128",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "036fee37-b7d9-4913-a718-e2474f7f1f0a"
        },
        "item": {
          "id": "761d5c12-7c62-4b01-9b0a-14eb98f75660",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7065e0f8-8ec2-4078-8b96-7e8d5d62925d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158593a4-ef9c-4d78-9558-17dae68c3f2a",
        "cursor": {
          "ref": "f2b0dff6-9958-4a39-acea-57596b93a735",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c3ffa7f1-1790-40d1-abe2-a6bd6098a486"
        },
        "item": {
          "id": "158593a4-ef9c-4d78-9558-17dae68c3f2a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c08a740d-db5e-41f3-8a6f-ccf985080565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bf7f39-c7e5-428f-a596-68dc4c2ce82d",
        "cursor": {
          "ref": "8cd1c55c-1d71-4c48-8563-c3ce6a51f57e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "005eafad-984e-4e62-8952-1f7af9b4f76f"
        },
        "item": {
          "id": "11bf7f39-c7e5-428f-a596-68dc4c2ce82d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4345cccd-c311-4540-bd12-46c4b9a1ced1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4fe185-88ec-4129-a5df-fcb20c5c98e3",
        "cursor": {
          "ref": "69f5b1bc-af43-4f5f-a022-291db60c54c4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7ddecbba-80d2-491a-aa3d-d385ba5f530b"
        },
        "item": {
          "id": "db4fe185-88ec-4129-a5df-fcb20c5c98e3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9d1ea55e-ed8c-416a-9b35-92dd98ecb8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c52be6-fff6-4e59-8742-79b7441f312f",
        "cursor": {
          "ref": "ebee2b76-63b2-40b8-9435-d9ed85fd3922",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3711af0d-8b9f-4b42-83f6-fc57d53c5148"
        },
        "item": {
          "id": "08c52be6-fff6-4e59-8742-79b7441f312f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "da89bac1-f139-4d2c-becb-a83a6620bf70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8010626e-7ac9-417b-b3b3-10d8d8b33675",
        "cursor": {
          "ref": "3141b8a3-b858-4480-af07-59f0312fee90",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "287b263c-fb8f-422a-8d0d-89b3ffbaf6af"
        },
        "item": {
          "id": "8010626e-7ac9-417b-b3b3-10d8d8b33675",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4aa08221-8bb1-4f34-9583-e48825885b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e504a3-8daf-4a25-a329-cbfc7f10a8c1",
        "cursor": {
          "ref": "4e521b6d-dc14-4ac0-8a3c-6d8ef38cd997",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "228af59e-18dc-480b-b15e-255d7dadb902"
        },
        "item": {
          "id": "b9e504a3-8daf-4a25-a329-cbfc7f10a8c1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "cc25ff08-cc5b-48b6-a981-e4df7174e8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f583c4aa-adf5-48f6-9537-b17eb7563b7c",
        "cursor": {
          "ref": "300c93cf-b1ab-4b5a-bcf5-be0a8bf19069",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "eeff1fcc-08a2-44e2-a817-e62759a6abab"
        },
        "item": {
          "id": "f583c4aa-adf5-48f6-9537-b17eb7563b7c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c9dcc01b-388d-4fb8-8322-9f41b77c6962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cc6773-76a0-4601-bcc6-ada6f89679b4",
        "cursor": {
          "ref": "bc8a7458-a2f5-4c2f-b43b-2544fe110458",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bb9f1015-949f-4ee9-babe-02b05faab0f2"
        },
        "item": {
          "id": "a9cc6773-76a0-4601-bcc6-ada6f89679b4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d5d43f88-7846-4de2-ba6b-dc6d7c2d95e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cba4bf5-b31f-46d6-b1c5-257b68b5aab0",
        "cursor": {
          "ref": "4b77f64e-8c8e-41c5-8277-357383b52b26",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "533422e8-ef85-4993-886c-66f1f8907094"
        },
        "item": {
          "id": "1cba4bf5-b31f-46d6-b1c5-257b68b5aab0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "431e14e4-ebf6-41d7-b026-dee98cd26b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f35d148-87b7-4c12-9377-745838b951c4",
        "cursor": {
          "ref": "6423aef9-c801-4847-bfc4-7e50e0ddab14",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0d0eb783-8012-4d2b-96e8-83efc5dd8843"
        },
        "item": {
          "id": "9f35d148-87b7-4c12-9377-745838b951c4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "57539bae-f5f2-45d8-a1c4-ea2f5f1bc945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3362ea99-a34a-4351-b5d9-ba0a82c4daa6",
        "cursor": {
          "ref": "a7c4734d-6266-40c5-b75c-5b03807a304f",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "811f939a-ceef-468d-80f1-61f6c8e26345"
        },
        "item": {
          "id": "3362ea99-a34a-4351-b5d9-ba0a82c4daa6",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "470754b1-a5b8-4cf6-a9ba-e35853174991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a2f24d-68a6-422b-be03-b5758d636260",
        "cursor": {
          "ref": "6c9e125c-1bb2-4318-97e5-936e77dc3137",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "51dbeb21-9cfd-4e84-83dd-9f535b70a993"
        },
        "item": {
          "id": "b2a2f24d-68a6-422b-be03-b5758d636260",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "248989d1-0129-4460-82c3-5971f48b1f2d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bb07db-1ad8-4c1a-8c70-8179b1edbfe7",
        "cursor": {
          "ref": "7cbacbbd-4519-4ed9-be85-b976b6bfb5e6",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "40e7ef76-c774-4049-8679-873d836513bb"
        },
        "item": {
          "id": "53bb07db-1ad8-4c1a-8c70-8179b1edbfe7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "75e22eba-efe0-4458-b6b1-f9ab90a32b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55a6c6d-7098-4576-ab2d-770de28304a2",
        "cursor": {
          "ref": "ff3069fb-7e1f-4612-b758-4a43a1b34da3",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8bf64011-503b-4751-af88-26c8bb38092e"
        },
        "item": {
          "id": "c55a6c6d-7098-4576-ab2d-770de28304a2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c2456676-583a-49c6-9924-44a10d40fd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aac7306-5fe7-4ea4-af21-97d232340a92",
        "cursor": {
          "ref": "059813b8-5904-492b-9ae5-e54bb9433544",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d93c8407-27a3-467e-9378-0738dfe856d1"
        },
        "item": {
          "id": "1aac7306-5fe7-4ea4-af21-97d232340a92",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0682fca9-58b9-4221-9f10-9057db264b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726a0d0c-bdac-42fd-bf02-3894c3e17909",
        "cursor": {
          "ref": "df50e66d-4e3d-460f-927e-3f5031738ed1",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7e145373-eff5-4bf4-975e-9fd2318baa7b"
        },
        "item": {
          "id": "726a0d0c-bdac-42fd-bf02-3894c3e17909",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "401902e4-6855-4f6b-ba38-949159585e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacfef91-1d17-4402-8591-ce2bfd169b16",
        "cursor": {
          "ref": "2c941e7c-5851-4109-8fbd-53393ff62213",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1ac4c4a7-0468-47b4-900a-faa06eaeec4d"
        },
        "item": {
          "id": "eacfef91-1d17-4402-8591-ce2bfd169b16",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6085230a-3ee6-48c8-99b9-d3d2a10efd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e64a6e-25b6-4341-b523-bc9f2624d1e4",
        "cursor": {
          "ref": "b5d09a41-3c93-4e99-8441-e61c89e5a242",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a17f2953-2790-45af-9f75-95da44abb425"
        },
        "item": {
          "id": "64e64a6e-25b6-4341-b523-bc9f2624d1e4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9feb4cc5-9530-4c97-a7d1-ec9bda410d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed979f3-930b-42c3-af1d-5a375bc289c4",
        "cursor": {
          "ref": "ed1f7ab6-71f5-468f-82c3-971aecc8500e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b20d91f7-452d-4e6c-8df9-d5b3e52ac831"
        },
        "item": {
          "id": "7ed979f3-930b-42c3-af1d-5a375bc289c4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e22702e5-3b03-4f8a-8e45-18018d46f470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c99f45-1e75-42e9-a24e-b35e1592c5bd",
        "cursor": {
          "ref": "ca8b7dcd-344e-418f-8f8e-817655415ad2",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d15a9e4a-874b-445f-8a5c-4ebe3840b67c"
        },
        "item": {
          "id": "84c99f45-1e75-42e9-a24e-b35e1592c5bd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "71fa9531-e785-4c87-b28e-1048fa04232e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a142b211-0a9e-40e2-92e1-4bb4af92ecd0",
        "cursor": {
          "ref": "6da35ebd-78a9-49c8-b6e8-9811e7bb040b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1b63cd34-7730-4a7e-9a00-4476c6e9cc32"
        },
        "item": {
          "id": "a142b211-0a9e-40e2-92e1-4bb4af92ecd0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "af62c310-3426-4b7d-bb48-8f70ff9d3f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c583480-1d87-42ee-8ba6-8cff939d7e44",
        "cursor": {
          "ref": "34e6bc76-f45e-4893-8b32-0bcc069f154f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9907ebf1-73de-442a-8e27-62a622a978bd"
        },
        "item": {
          "id": "6c583480-1d87-42ee-8ba6-8cff939d7e44",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f680eced-c2b7-4f1f-80a7-ed81d0619076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca639c1-4105-4fec-8540-73e31dd632d6",
        "cursor": {
          "ref": "278c8a0a-7143-4458-813f-67fd54b0426a",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4d99a6bf-ba35-40d7-95be-03c7501ae91f"
        },
        "item": {
          "id": "9ca639c1-4105-4fec-8540-73e31dd632d6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4769ae11-aecc-4c22-b3f8-bd5dbefe2a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f940f185-2b89-49b5-b59a-93e99fabeb02",
        "cursor": {
          "ref": "c0b4523b-ac4d-436d-b642-639373d6a5e4",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "282c2338-863a-4d2a-8047-5f831e55d1d7"
        },
        "item": {
          "id": "f940f185-2b89-49b5-b59a-93e99fabeb02",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "52221210-837a-4ff1-8da3-962e9125fb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ba99a3-8c57-4ff9-a665-99348fa80d68",
        "cursor": {
          "ref": "5bf9f2c7-0cba-446b-bcf5-34b91b12abed",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4ad45e8e-385b-41af-90ba-e4f3c507145e"
        },
        "item": {
          "id": "c4ba99a3-8c57-4ff9-a665-99348fa80d68",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "50a2a9e3-bea1-4b24-a55d-8edcf2d94db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52aa3ce-3fb0-48cb-81a0-66e55ec8d6a7",
        "cursor": {
          "ref": "75ea8a1d-93d5-4a84-9228-44e858be1db5",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "27fd4eea-543e-44c3-a3fe-d4c83d51fc50"
        },
        "item": {
          "id": "a52aa3ce-3fb0-48cb-81a0-66e55ec8d6a7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "83bc33fc-984b-4ba9-aa03-3e0e9221db76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c810398e-877b-4697-999c-e18e8e39d22c",
        "cursor": {
          "ref": "9205e591-0408-4907-b578-c20702728fa5",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f16c29a8-f8d1-4e69-aa72-997353a2d190"
        },
        "item": {
          "id": "c810398e-877b-4697-999c-e18e8e39d22c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a765f2c0-cec1-4b02-831c-db4f47de07a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1c1e82-719f-413a-9982-25a3d1cf12b4",
        "cursor": {
          "ref": "8dcc45f7-2770-4462-bd0e-578b52fecb4a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6259e0c4-63dd-4fde-ad17-5615f0f1754c"
        },
        "item": {
          "id": "5c1c1e82-719f-413a-9982-25a3d1cf12b4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d3196223-d8cd-499f-bb64-085933ebb5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f82adc-8fcd-40c8-b9dc-0f8ad9522003",
        "cursor": {
          "ref": "4ff0ba19-4668-4c5d-bae5-d4a5d27a86eb",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b2b28d1a-34c2-46e4-938b-917eea60c202"
        },
        "item": {
          "id": "04f82adc-8fcd-40c8-b9dc-0f8ad9522003",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8d4039ca-4773-43dc-a4e0-e19aa22fcca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dc4b03-010e-4bfd-a9da-d98b415f1718",
        "cursor": {
          "ref": "f16dc69c-da87-406c-8367-9b30fd5f1e51",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6aa01a91-9736-4cb3-b083-1666401feba2"
        },
        "item": {
          "id": "b4dc4b03-010e-4bfd-a9da-d98b415f1718",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d9ff88d6-5ce7-44ed-863d-06e25f0040c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bb4b72-fd37-4f64-b918-f885764c7887",
        "cursor": {
          "ref": "cac79f39-b4b5-4cb2-bbb4-54c17e9b28a9",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d3f92318-1b6b-4784-88e4-517694c53992"
        },
        "item": {
          "id": "e1bb4b72-fd37-4f64-b918-f885764c7887",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3f706240-2f77-4d4f-a36c-fa23018bcde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d01d1ea-6fc7-4e32-981f-cf96588d6df0",
        "cursor": {
          "ref": "1054308d-4251-4362-bdc1-04ead1f1aae9",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1e446ea7-0c44-41b4-b904-92a5480ddef5"
        },
        "item": {
          "id": "5d01d1ea-6fc7-4e32-981f-cf96588d6df0",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1f364ebc-fb8c-4b7d-b111-607b37900f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd08e44d-5578-47e0-b7d6-197fb762440d",
        "cursor": {
          "ref": "ec12bab1-dac3-4fc0-9cbf-6ef1dd76928e",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4255c9f9-ca39-4182-b77d-1ea9eb63f043"
        },
        "item": {
          "id": "cd08e44d-5578-47e0-b7d6-197fb762440d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5f4b58b8-a497-4b89-a2ba-39dbf79acda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4579dac6-cf91-4ac8-bb40-70ca5777287f",
        "cursor": {
          "ref": "567fb0d8-c249-43c6-8359-ce7ff86b99fe",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9aed36eb-54dd-4d0c-9686-1fe9d629b6b4"
        },
        "item": {
          "id": "4579dac6-cf91-4ac8-bb40-70ca5777287f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7e0ceffb-5260-4a5b-92d2-617aa6892cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5da656-62b8-4b5f-b34f-d3d15eb24036",
        "cursor": {
          "ref": "799b9251-9e8d-4ffb-83c1-2209df559ab7",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e4ef8b49-f373-4a77-afd0-c781cb8a17d2"
        },
        "item": {
          "id": "3c5da656-62b8-4b5f-b34f-d3d15eb24036",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7e063dae-ce2c-4b79-b3fc-7a4ad47d15cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8204ec-38b9-4c2a-b595-c50c74a694c3",
        "cursor": {
          "ref": "728c2e0c-18f0-4279-812a-9dcecfa8d093",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0a916361-b6d2-44bd-be49-fcf63d653424"
        },
        "item": {
          "id": "9e8204ec-38b9-4c2a-b595-c50c74a694c3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "abbe8d97-058d-4336-a1f5-626da8baece0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841e38bd-009a-471d-a992-bf45c48b25e3",
        "cursor": {
          "ref": "b9808e0c-f99b-4ea7-ae51-f0e6b7fa5b29",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a3387f7d-907b-4103-9158-f1a52739d36c"
        },
        "item": {
          "id": "841e38bd-009a-471d-a992-bf45c48b25e3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e0f78b19-19b7-4372-bb7e-8e9ecdbabf09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659fcbd8-6915-4e74-9973-b30fd3d5b83c",
        "cursor": {
          "ref": "33ee31e9-a92e-4c24-afdc-3b0ef350d8aa",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "174c90d8-d40a-4300-bb03-9ed2423d2617"
        },
        "item": {
          "id": "659fcbd8-6915-4e74-9973-b30fd3d5b83c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7ad88016-8d3d-4df5-b485-293bcd106320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64778bc-892e-405f-b1df-40db6888f199",
        "cursor": {
          "ref": "62651b39-d3f8-46c0-9b46-d1cdf50dbfad",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "97812a4c-4707-467b-8ce2-0e4e27cd5460"
        },
        "item": {
          "id": "a64778bc-892e-405f-b1df-40db6888f199",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0329f1ed-36c4-46a3-8670-fc61dd7d784b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37731f1f-77b8-4bc9-b954-155da9f5068a",
        "cursor": {
          "ref": "c4f4ed5e-bd7c-40cf-a5eb-7236424fc9c7",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ba103f59-8150-427f-92ca-c4fd7bdfd852"
        },
        "item": {
          "id": "37731f1f-77b8-4bc9-b954-155da9f5068a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "59fb3a59-ab4c-4a9f-b86b-37b3c98d13dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c415bc4-f7d0-47e7-a49d-e1d9e7ba0c18",
        "cursor": {
          "ref": "55d5cb2f-fccf-484d-9246-dd431f4e9e4e",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5b5fdb7b-ac81-4533-8e5e-c4102224f6ca"
        },
        "item": {
          "id": "0c415bc4-f7d0-47e7-a49d-e1d9e7ba0c18",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2eedde6b-39e4-4523-96e1-65da39de1a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5479f2f-b553-4b0b-923e-bf5a9a719fdf",
        "cursor": {
          "ref": "d55a83e1-020b-454d-b4c2-57f5f45023d2",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1591e76d-4c03-45ad-86de-67c955efe017"
        },
        "item": {
          "id": "b5479f2f-b553-4b0b-923e-bf5a9a719fdf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d8234a1e-a4ff-46d6-8c3c-8da5c3bfb04b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a60f66-6113-443e-bdaf-29a91817b58a",
        "cursor": {
          "ref": "7ea9cf52-6962-4dc2-96f2-9ceb93e3f7da",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b1839c3f-d6da-4a81-a739-84eb1624f67f"
        },
        "item": {
          "id": "e6a60f66-6113-443e-bdaf-29a91817b58a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aee3390b-cfe4-434e-bcdf-4834e670e4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7d86e8-e59d-4f76-bc6c-5b9d0f7b6bd8",
        "cursor": {
          "ref": "8187846f-f729-4fb9-8027-01e15b3a6ecf",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d3ce63e3-fbec-400d-a056-d8779cb1351d"
        },
        "item": {
          "id": "bb7d86e8-e59d-4f76-bc6c-5b9d0f7b6bd8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "069578a6-dd6b-409a-a742-9647cc1a3985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f2857c-c1ee-48ea-b6f6-bf55554eadbb",
        "cursor": {
          "ref": "630fd273-d41a-4242-8a3d-2e43380af544",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d1743a3a-8c73-4361-a9e4-044c48c42046"
        },
        "item": {
          "id": "48f2857c-c1ee-48ea-b6f6-bf55554eadbb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4fca1bb3-6d3e-47c9-be82-836870000a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74c4935-897e-479a-ad4c-70fa41530441",
        "cursor": {
          "ref": "f0c29def-6325-4454-80c5-7c476967c38c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0dfd4ba5-2b8f-48a2-b286-99fc8955f3a3"
        },
        "item": {
          "id": "a74c4935-897e-479a-ad4c-70fa41530441",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "77b05a69-5e8a-4712-8df6-30fe1241f6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6445d942-d3db-460a-8854-850539cc27cd",
        "cursor": {
          "ref": "a8af5c5d-932a-47a6-b5ac-1f249ba2e347",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ed19c290-4aeb-4d0c-b254-22a988aed0e6"
        },
        "item": {
          "id": "6445d942-d3db-460a-8854-850539cc27cd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "84c45e93-88ac-4da0-8332-447b271f9c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3d71aa-e53e-44d9-ad79-2cc16ea97a1b",
        "cursor": {
          "ref": "01c32449-7893-4512-ae88-8abfe70a4e22",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fe8045b3-18d4-4905-baf4-761a8f8082f1"
        },
        "item": {
          "id": "7e3d71aa-e53e-44d9-ad79-2cc16ea97a1b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "53400df6-edc8-4a16-9853-1d5c5f8dc7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1b643d-dc61-47d5-9187-d21ba1158b14",
        "cursor": {
          "ref": "567c7617-6988-42b2-8dc0-2de291df1025",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a86d9221-8d8d-4254-a5fa-d137a0df814f"
        },
        "item": {
          "id": "cc1b643d-dc61-47d5-9187-d21ba1158b14",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f0b8f3bf-558a-449d-aff1-ed0b7e311f18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 234,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25180700-7828-4643-8cf0-993ca62d23ef",
        "cursor": {
          "ref": "a3110059-56ce-4d1b-84c1-5206f05b9d81",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ced40c35-cab3-4237-9e8b-b8a12c748c27"
        },
        "item": {
          "id": "25180700-7828-4643-8cf0-993ca62d23ef",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "248410fc-ab59-44a7-a282-848fae460abd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9390a6d7-3b1f-4cef-b318-bde14cefef6a",
        "cursor": {
          "ref": "5a170406-aa85-4fd4-a8d6-c7f844d46fbb",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d08e5c8e-808b-4497-b768-550d61aab56f"
        },
        "item": {
          "id": "9390a6d7-3b1f-4cef-b318-bde14cefef6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2040b615-5647-4f24-a11f-0e3ddf533c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e984d9-fa44-4e93-b1da-a8d7fb2bf45e",
        "cursor": {
          "ref": "53768902-708c-41c3-aeea-54c639dbb27c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9d5c9396-c4df-4f61-b684-05104e3d67e6"
        },
        "item": {
          "id": "85e984d9-fa44-4e93-b1da-a8d7fb2bf45e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b38936cc-4e36-42dc-aeef-daa3b0492998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4ab74c-88dd-4d96-abce-078ca8688d11",
        "cursor": {
          "ref": "513bd6ef-7fc0-4e81-af3f-33c6611aa788",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "52345dea-7cd9-451d-b282-97a6477a6bb9"
        },
        "item": {
          "id": "ed4ab74c-88dd-4d96-abce-078ca8688d11",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "65963341-e075-4bd4-8720-996d12d9352c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1933e4da-cbb8-48a1-974b-5a1d89ecaf84",
        "cursor": {
          "ref": "6d705a27-cc46-47fc-afb1-1bf897176250",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f3e1d7c7-caa9-4f8c-bf30-3a8b0d523f2f"
        },
        "item": {
          "id": "1933e4da-cbb8-48a1-974b-5a1d89ecaf84",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d33f3fba-6dac-436e-a2a4-9712972391c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e325383-6198-441f-bfe0-f706eb3c5856",
        "cursor": {
          "ref": "e598f4b4-9b69-4add-b06b-6cf53be36d79",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4e4bf9ec-2760-4a13-bfdd-bdcd640376f5"
        },
        "item": {
          "id": "8e325383-6198-441f-bfe0-f706eb3c5856",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6e176ea5-d493-4c5b-b6be-5737e3c862b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea0419f-47a7-4655-8f49-09e79b7e3aa9",
        "cursor": {
          "ref": "201e0c53-754c-4e0c-bd76-886f5f06e626",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9b714ab4-81a8-434c-b28c-da4d17038939"
        },
        "item": {
          "id": "8ea0419f-47a7-4655-8f49-09e79b7e3aa9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "39c2a601-a728-4203-bfff-d02d401e7ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa025df-cc1b-4624-ac9a-d898eb73f273",
        "cursor": {
          "ref": "c8891074-23cf-4e6b-a184-2ca41d53a1eb",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d613d1f4-a23c-4edb-87dc-37ada32df8a3"
        },
        "item": {
          "id": "7aa025df-cc1b-4624-ac9a-d898eb73f273",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9919918e-23fd-4ae0-be90-9c66643ae9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8414ee63-bd18-46cc-9521-7a85dcd837df",
        "cursor": {
          "ref": "3ca98c51-eb69-4b51-abc7-58bb35b4d8a1",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4b3cd76b-d6a5-4ca5-ad9c-5e430934129c"
        },
        "item": {
          "id": "8414ee63-bd18-46cc-9521-7a85dcd837df",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6f5ca607-1b3b-4110-85b6-dbba67a74f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761d6f9c-f800-48af-be41-2b90d6d12a50",
        "cursor": {
          "ref": "95a04ee8-6f3c-478d-be14-ae543d25aeba",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "dd1878b3-8147-4fb1-9b3f-4beba36f1349"
        },
        "item": {
          "id": "761d6f9c-f800-48af-be41-2b90d6d12a50",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6d79d856-a59c-4bc2-96ea-39281280ef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9024a2a-f54f-400e-8f39-8ce7dd00a307",
        "cursor": {
          "ref": "f43f04f8-a86b-40ae-86ac-60748c344aa0",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c42d7918-1c32-4d5b-8d19-26e840a82e72"
        },
        "item": {
          "id": "f9024a2a-f54f-400e-8f39-8ce7dd00a307",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a71d8794-12a3-4bf5-909f-d938033021c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7c2ad0-496a-49be-b1df-c2993e7fa4ef",
        "cursor": {
          "ref": "678e01bd-dedc-46dc-b718-db09c7e03799",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9b4b6a9d-0c00-4656-ae2c-68076b994586"
        },
        "item": {
          "id": "1e7c2ad0-496a-49be-b1df-c2993e7fa4ef",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2b4b6859-af1f-4801-9473-81f77b737269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ce92a7-c2f0-4315-9d45-114e7e230820",
        "cursor": {
          "ref": "1d3f053a-dcaa-4b90-9dbb-7f7a224786ef",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "384acbd4-b6f3-43cb-99f8-199af50e033a"
        },
        "item": {
          "id": "d9ce92a7-c2f0-4315-9d45-114e7e230820",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8b345975-7040-437d-a132-2723cd40d87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c715f8-0d19-41c6-a5fb-31d5bb205281",
        "cursor": {
          "ref": "6993e330-18ea-43a4-820d-0649aed5b980",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7974c540-98a0-471d-a662-295da74607d9"
        },
        "item": {
          "id": "73c715f8-0d19-41c6-a5fb-31d5bb205281",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b9680e00-4155-4fd7-b28a-f659ef3c9a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b3ea4a-3862-477b-abff-21855387de73",
        "cursor": {
          "ref": "82f81178-45df-4df2-9e90-d3a79c8c6161",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bb5e1f61-494d-4736-960b-caca2d111983"
        },
        "item": {
          "id": "28b3ea4a-3862-477b-abff-21855387de73",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fb3976ac-c049-471b-855a-56e5a2a2b5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1899a81d-c3e7-40cd-bbd3-09b8c6dfafab",
        "cursor": {
          "ref": "dc04c3b9-4283-4501-b1f5-a4a3932f24e3",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "de74f48d-87ba-4379-867d-30bdc2e275d1"
        },
        "item": {
          "id": "1899a81d-c3e7-40cd-bbd3-09b8c6dfafab",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "52da712d-7e4d-4b81-bcf8-30cc6a87a235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1fa244-cacb-4efa-9eba-3292adfe0635",
        "cursor": {
          "ref": "e4abd3ab-3651-4a8c-a6c6-34ff5ceea7d2",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3f82ebd2-12df-4c6d-b3ce-d5c0360c55be"
        },
        "item": {
          "id": "fe1fa244-cacb-4efa-9eba-3292adfe0635",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1c0fb78e-8320-44d1-ab56-4a664346ad44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accef8ef-8a83-4a48-80c3-e82c726cb333",
        "cursor": {
          "ref": "7c00e384-f862-4ec1-9200-d6952135c1b8",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a29d72cf-50c8-4cec-a191-857ce8fb327f"
        },
        "item": {
          "id": "accef8ef-8a83-4a48-80c3-e82c726cb333",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "28e3313d-9e42-43dc-8586-91fea242cb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5985a556-1e6c-4ee1-a655-fa57371e13c5",
        "cursor": {
          "ref": "c1b568ee-e895-4ffd-8c3b-11bb1d36fa61",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7d653618-1934-4a00-a62d-7fee5d73563e"
        },
        "item": {
          "id": "5985a556-1e6c-4ee1-a655-fa57371e13c5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "78c02cc1-6f30-407a-b8d0-eb79d08465e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ee3a31-0dc0-40f7-a319-e8095390996a",
        "cursor": {
          "ref": "063299fe-c55a-4dca-b0be-1d908f199adf",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4225bf46-c920-4d5f-8194-58d8bff1f31c"
        },
        "item": {
          "id": "37ee3a31-0dc0-40f7-a319-e8095390996a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7a2bb980-f5cb-4277-892e-0a1b37d5fd28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbcc22f-083d-4e99-afe2-08dae08e14f5",
        "cursor": {
          "ref": "b696f005-456d-4a26-a8ce-6ec0dc1c844d",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1e5136af-de73-4590-8782-128bfb1b3cec"
        },
        "item": {
          "id": "7cbcc22f-083d-4e99-afe2-08dae08e14f5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c5d4a35b-54d2-4f6f-9daf-58fc80496194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94568dd3-9387-4f8e-bd5f-f9a1dd1e7aa2",
        "cursor": {
          "ref": "b64ff2e8-5d3d-4813-9991-98c313444146",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "62a75391-4811-4554-8eef-64e830dbec14"
        },
        "item": {
          "id": "94568dd3-9387-4f8e-bd5f-f9a1dd1e7aa2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "03668581-41db-4272-afd0-0acf8fbf65a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068a94e3-3ec4-4833-8d6d-e4c052dbfb65",
        "cursor": {
          "ref": "ea42a35f-7ea6-47a3-8210-9c02e61205a5",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f9e89c1f-8e17-41e1-80e4-c2162583f538"
        },
        "item": {
          "id": "068a94e3-3ec4-4833-8d6d-e4c052dbfb65",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "1a5792fc-2d57-4f50-acda-e6d5667de236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a963a9f8-e3e4-4ae4-b46a-62fe92053f71",
        "cursor": {
          "ref": "33a0ebce-f74c-46de-9f4a-63d668d5f6ed",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "767bef3b-ee4e-4fe9-948f-3fcfaaf70dda"
        },
        "item": {
          "id": "a963a9f8-e3e4-4ae4-b46a-62fe92053f71",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "bf58d72c-83fd-46c9-a3dc-2fa7d625503c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f5c9d6-ff35-4321-ab07-ad4ceb3b7fc4",
        "cursor": {
          "ref": "9da93918-4785-4d74-9f8a-ef9ae365d65c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "20d449ac-d3a1-4238-93c6-34fce09339af"
        },
        "item": {
          "id": "b9f5c9d6-ff35-4321-ab07-ad4ceb3b7fc4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "13f760d3-3f0c-477f-aaa5-632a3ac923fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7888c02c-e800-47a1-b2e8-eccf00e06e09",
        "cursor": {
          "ref": "6237b28e-6c3f-4743-9426-7d21f58456b0",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e114259e-febb-4fe6-a542-d6722a01f437"
        },
        "item": {
          "id": "7888c02c-e800-47a1-b2e8-eccf00e06e09",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "40073c8e-e2e5-482d-860f-d250fc0ebf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df64a59f-83b5-4fb5-9e6e-831a7cdffb39",
        "cursor": {
          "ref": "1ce1c07f-a921-4c4b-bd47-c097458df66b",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "17946eb0-31f0-45d4-a065-290b1abbbb90"
        },
        "item": {
          "id": "df64a59f-83b5-4fb5-9e6e-831a7cdffb39",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ce4bd242-9252-455c-a0c5-cba91a217da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86becb1-77b3-406b-81d0-3d4c53102c68",
        "cursor": {
          "ref": "80ab39ec-5b17-427b-9815-070d93542aa0",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "67409ffb-5007-45ca-8178-12f1493c435d"
        },
        "item": {
          "id": "d86becb1-77b3-406b-81d0-3d4c53102c68",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3831811f-6f59-4963-b2d4-4f2960fa8880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb889873-98fd-4660-8cdb-2d07928451d9",
        "cursor": {
          "ref": "c829a24b-f317-4806-a538-7bf0dbf2da01",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3cdcf660-078c-43ec-8704-0774eaa425a6"
        },
        "item": {
          "id": "fb889873-98fd-4660-8cdb-2d07928451d9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "addbb9b8-c36a-4cff-9e09-34476d0a699d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26d269a-3e84-4c76-acbe-fe4c01f6dbc2",
        "cursor": {
          "ref": "724d62b1-4aa8-4cc5-8ab7-74103a9aaa34",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e96fbc80-4476-4d97-8834-ba38e409aa58"
        },
        "item": {
          "id": "f26d269a-3e84-4c76-acbe-fe4c01f6dbc2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "621a9a3a-e405-41bc-b2e0-4da61e592c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3810c1e0-9c66-4614-b5c3-1a9b4cbf69ef",
        "cursor": {
          "ref": "856ab349-253f-400c-8b32-48331f5ea000",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "722ce1d5-d2c2-4cf1-8e3e-a891092c6cc1"
        },
        "item": {
          "id": "3810c1e0-9c66-4614-b5c3-1a9b4cbf69ef",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3028aba0-fca2-4773-b502-6affc6c7ab4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978d30db-12bc-4d66-84c5-7fe48490c322",
        "cursor": {
          "ref": "4bcd62f4-d6d3-41b6-814a-5a9489b694a7",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1845cf33-333d-45bc-8455-322e2ba16023"
        },
        "item": {
          "id": "978d30db-12bc-4d66-84c5-7fe48490c322",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "220f6091-f298-4f9a-8e7f-a5f3c6801b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0e057e-dfb5-423d-aff3-78bfc7431313",
        "cursor": {
          "ref": "cd06840b-d0e3-4ab6-8b86-3901922b495a",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "37eaafe1-2f15-479c-abf3-b0dee19a149c"
        },
        "item": {
          "id": "6c0e057e-dfb5-423d-aff3-78bfc7431313",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0f36981a-3ccf-4e5b-b87e-0358ee4d2329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879c833e-60e1-4da0-92f2-9b779c662e8d",
        "cursor": {
          "ref": "6ec3e0df-18f0-4074-882d-f00fecd351f9",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "388ffa35-640a-4d82-8e40-d2c68a6357a3"
        },
        "item": {
          "id": "879c833e-60e1-4da0-92f2-9b779c662e8d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b574a64f-2ce3-45ed-83d9-06613470e36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8ce66c-0410-40aa-84bd-ec616bc2bba4",
        "cursor": {
          "ref": "b896d503-3664-49de-93cb-5809574c4158",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6bdbf868-33b6-420f-aaff-250bbc77d7cb"
        },
        "item": {
          "id": "bd8ce66c-0410-40aa-84bd-ec616bc2bba4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f6e2a7d7-fa2c-4973-9a58-00073220d78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff057da-5ec4-41e5-85f1-0a2c6aa28807",
        "cursor": {
          "ref": "adf1f9a4-e5ee-467f-a935-eeeab28d5345",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8072edfb-2d93-4b74-82bf-8ed47ba5ed06"
        },
        "item": {
          "id": "7ff057da-5ec4-41e5-85f1-0a2c6aa28807",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8de5a647-29d0-4446-a203-dd0b53689ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1205c8bc-d979-47ba-9f4b-8984bc4c7456",
        "cursor": {
          "ref": "47c40282-8366-4ecc-a39e-e232c1aa9ea4",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "478fafcf-cb8b-46b7-843d-7dde465310c0"
        },
        "item": {
          "id": "1205c8bc-d979-47ba-9f4b-8984bc4c7456",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "686c540c-ff1e-4650-918d-a952c462209d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79798238-5033-468a-919d-8f275c54dd8d",
        "cursor": {
          "ref": "2cf5e471-22df-494f-a11d-45c30c5ee785",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9c13562b-3e11-47a3-91fd-cfc5392d989f"
        },
        "item": {
          "id": "79798238-5033-468a-919d-8f275c54dd8d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "954b03e2-3ffb-42d8-ae81-dd86fa47eaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4653dad-34c9-4b46-bbdb-f974303f0590",
        "cursor": {
          "ref": "990cfba6-e3b6-4acb-9f91-a6ad45093ecd",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "13b1f04c-2257-46fc-b53f-22e0b05ba097"
        },
        "item": {
          "id": "c4653dad-34c9-4b46-bbdb-f974303f0590",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bbe31479-7787-42e9-a8cc-bf20211dafb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8326d32-e2aa-410c-8e1c-fb9f1052f340",
        "cursor": {
          "ref": "39c5e31e-b094-4da0-aaa4-acd0740ea3ab",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1c0ab96a-a001-4aeb-86cb-192dd95d8c1e"
        },
        "item": {
          "id": "a8326d32-e2aa-410c-8e1c-fb9f1052f340",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "fd9971e8-118d-4e4a-8ce5-a76439b13247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bab6b3-96f0-477b-bbfe-17e705abe431",
        "cursor": {
          "ref": "02c399d8-0630-4df6-8b89-923dce8fe53a",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "87921ed1-98bf-431e-be46-5d96ad5b7767"
        },
        "item": {
          "id": "72bab6b3-96f0-477b-bbfe-17e705abe431",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3c28be03-a652-4742-a413-007080a45820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff105a8-127e-4d84-8999-7481aee2f9be",
        "cursor": {
          "ref": "72dcef4a-0c53-4f76-8970-27ee9b79aa73",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d9d39e6f-030f-4193-b243-beb6f6415c59"
        },
        "item": {
          "id": "bff105a8-127e-4d84-8999-7481aee2f9be",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8ef30c1c-7645-4965-9ce2-1f5b0683e1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780da83a-f556-4a5e-ac99-38d18da5bc4a",
        "cursor": {
          "ref": "4ebbc1d0-fcb1-4946-b20c-0f8d051b92a3",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cb07f398-e063-49a6-84d9-a5aeae66ab6d"
        },
        "item": {
          "id": "780da83a-f556-4a5e-ac99-38d18da5bc4a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "15b3f1c8-af7d-4ce7-8585-357577337d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0b31ef-8243-41a4-a76f-189142626cf1",
        "cursor": {
          "ref": "50571f57-a47b-408e-962f-fd02727a3e62",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bdd4e5b4-2424-42d4-9f53-141d96b209b2"
        },
        "item": {
          "id": "3e0b31ef-8243-41a4-a76f-189142626cf1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8da86dd6-0861-4bf1-a2b4-1d0fa8b625ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe50844-0f68-4881-b96e-1c1cc555caf3",
        "cursor": {
          "ref": "282cc437-4f3c-47b8-a006-10d4998038e6",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "24f3a8a2-db87-46e5-a5b3-f39bc4932407"
        },
        "item": {
          "id": "dfe50844-0f68-4881-b96e-1c1cc555caf3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "de6b4308-6872-4e0c-82e9-83e711bf8902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52faf197-4bb6-44ae-8e2a-27fae1399555",
        "cursor": {
          "ref": "98e98c41-0b4a-4df3-b92f-f6b7a33386ec",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d140091c-d350-4d54-94fc-30837c21ba40"
        },
        "item": {
          "id": "52faf197-4bb6-44ae-8e2a-27fae1399555",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5880d072-9200-4909-95ef-cea6f43a80fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f846dd-e62a-4835-9730-f6159fd859d1",
        "cursor": {
          "ref": "4724eb57-fde2-414c-87aa-dd0d90dd6da6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e860b45e-16d8-4243-99f4-beab99d66f48"
        },
        "item": {
          "id": "50f846dd-e62a-4835-9730-f6159fd859d1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "446f4c40-84e7-4746-8597-00e63c3dbed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe29d26f-3767-48e5-a13c-d6081ddd03bc",
        "cursor": {
          "ref": "2f84d2c7-7f20-4fbb-a2db-8b0ad5dfe19a",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "64e300a1-179c-453a-85ab-c8e15a6de184"
        },
        "item": {
          "id": "fe29d26f-3767-48e5-a13c-d6081ddd03bc",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "14897330-5bbf-4e13-80b9-fa9ff0c3424b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daafb245-8570-435c-8849-7f1fecc8776f",
        "cursor": {
          "ref": "f31f6b7d-b142-4f1a-82af-c68d4e4cfa7a",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3edcca39-b13d-4c97-acad-6e108af7d8b2"
        },
        "item": {
          "id": "daafb245-8570-435c-8849-7f1fecc8776f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2d87327a-c057-4029-b2b5-11d9060067c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487e8146-19cb-453e-a023-f1fec437f31d",
        "cursor": {
          "ref": "40c78de6-1a22-4d34-afb2-60924c51cc85",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "29deb084-9525-4972-b4e3-6ac4e6c3aea6"
        },
        "item": {
          "id": "487e8146-19cb-453e-a023-f1fec437f31d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ec39518b-30ff-4846-b5bc-497983bb6103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddaba2a-f10c-498f-b4f1-ce2a630d9d09",
        "cursor": {
          "ref": "fd78ef63-79fc-4854-a029-3c364fe6f974",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "91eddcbd-cc43-4880-ae45-bdc7431bc068"
        },
        "item": {
          "id": "dddaba2a-f10c-498f-b4f1-ce2a630d9d09",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "bb905b36-7e42-4c39-8cb3-d84a4aee1233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bdf33f-c7ac-44e0-b54f-471dc3f791a9",
        "cursor": {
          "ref": "07b8b478-d959-4f0a-a182-977c87ec7fcd",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0646d8f0-3499-4213-9630-7ea65194df5f"
        },
        "item": {
          "id": "e6bdf33f-c7ac-44e0-b54f-471dc3f791a9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e65e0a95-e5fc-4fb5-95f9-17883c9aca01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa6173a-189f-4852-9b71-6e6586ab5e72",
        "cursor": {
          "ref": "ef1d43f4-c983-46a3-96fa-836cbd1df3c5",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4991a4ef-f333-4bac-8b3b-2cc314417bd2"
        },
        "item": {
          "id": "aaa6173a-189f-4852-9b71-6e6586ab5e72",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "42e4d096-8366-4caa-b7a0-92b573405e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6401df37-153a-4e88-b5ce-e17388d900dd",
        "cursor": {
          "ref": "91165dc2-1a5c-4bb1-a1fa-7c966eef0cb5",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "35a194e2-bdce-4159-83db-b52acc831792"
        },
        "item": {
          "id": "6401df37-153a-4e88-b5ce-e17388d900dd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9e0f8cc5-a980-4c5c-9253-932da66ffc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d73000-33b6-4eb2-b2d8-6b1c57d59639",
        "cursor": {
          "ref": "9a7e3a97-9bb0-4d7e-a31c-c43489a036bd",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "10a06426-ddbd-4e67-b9f9-a4dc00573b25"
        },
        "item": {
          "id": "12d73000-33b6-4eb2-b2d8-6b1c57d59639",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ad37f37b-d990-4c5f-8d06-b85bdd8be0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3055255b-4465-4f18-a201-1c69b4459d1c",
        "cursor": {
          "ref": "dca54fc0-de50-4abd-bc0e-1f3c35ddc06b",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2e946a40-231d-4024-adaa-b7ef5a6bcc9e"
        },
        "item": {
          "id": "3055255b-4465-4f18-a201-1c69b4459d1c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2d030a6c-e85a-4112-9151-e2c030ce53bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c67372-1009-465e-a3e4-6ebf105922c3",
        "cursor": {
          "ref": "c5ffc95c-a666-4398-a012-24a13983466f",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4e9d939f-b5d9-48dc-a94e-8f3522352638"
        },
        "item": {
          "id": "e9c67372-1009-465e-a3e4-6ebf105922c3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2ecf51d0-b47f-44cc-82b5-264aa9f08a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28d4a79-bac9-45e1-87b3-5e1c4984dc4c",
        "cursor": {
          "ref": "837fc3f0-d408-4ae5-ae3f-9900623ffe1a",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "85d8f855-1a92-474c-9ce2-69b41231a1aa"
        },
        "item": {
          "id": "d28d4a79-bac9-45e1-87b3-5e1c4984dc4c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "02fe6b25-6828-4594-9be4-6528cb9f15af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d7a97f-081d-4e83-8178-8b0ff3ab7a30",
        "cursor": {
          "ref": "a8ac3dcd-1eb4-49e7-8cc1-3fa3973feb3f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d30fcc18-3c00-4129-9a07-38aca34f02b4"
        },
        "item": {
          "id": "15d7a97f-081d-4e83-8178-8b0ff3ab7a30",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d25b61b0-10fb-438c-a166-027ed907c3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f2be1a-555d-4953-8e77-6045fbe8a8ee",
        "cursor": {
          "ref": "f10beee0-4734-4843-9007-2d90ec83ddb6",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e0199d49-45a8-422a-b61c-144eb37c50e7"
        },
        "item": {
          "id": "42f2be1a-555d-4953-8e77-6045fbe8a8ee",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8aaa235d-6893-4632-82eb-fea0835252c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92d3b4e-b2d2-4ac1-ace1-2ab802bf926f",
        "cursor": {
          "ref": "9c85a176-59a7-4d76-9280-8f2ff4606c40",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "96ada707-68f8-41f2-86ec-e01bb45cfb06"
        },
        "item": {
          "id": "a92d3b4e-b2d2-4ac1-ace1-2ab802bf926f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "35af1060-4b6f-4d5c-a935-f972beb6efb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f035dae-b9aa-4000-98e8-cb181312d6fc",
        "cursor": {
          "ref": "14c5a61e-11b2-4fe5-93fe-60884d29220a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "de612e93-96aa-431b-b371-cad18857c3c0"
        },
        "item": {
          "id": "6f035dae-b9aa-4000-98e8-cb181312d6fc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6c3268a5-27d8-45f1-901d-ee376b8f986d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e63e41-84bb-4d7d-9f37-2a3c2fd50c93",
        "cursor": {
          "ref": "799be178-1142-49f6-b094-0b85984034c5",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c3ec42e3-0810-4af8-ad45-ea70daf0e1da"
        },
        "item": {
          "id": "45e63e41-84bb-4d7d-9f37-2a3c2fd50c93",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "38a5e0c1-25cb-4ea4-8022-6d07f69148fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f757c553-c0cc-4bd9-aac3-1aa17d54ade5",
        "cursor": {
          "ref": "f6bfe897-36b4-40b1-b71a-b762c1a57eb1",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a9a82160-9391-473e-b655-f61ec1e83a2c"
        },
        "item": {
          "id": "f757c553-c0cc-4bd9-aac3-1aa17d54ade5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "1f240f98-cad7-4859-95f8-4bef8a31eb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839c10b0-7141-4078-8b3a-9c382d636f8d",
        "cursor": {
          "ref": "9ed0e5a6-910e-42c9-b969-eef7aad080e2",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b7737124-96d2-444d-a428-652070512c67"
        },
        "item": {
          "id": "839c10b0-7141-4078-8b3a-9c382d636f8d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8068c4b3-5be4-4464-aff0-cc3d7c253794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0ca611-ef51-4866-90f9-68dc7c29ef59",
        "cursor": {
          "ref": "7f9d9ff9-0006-4c99-bffd-358550c96234",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ed3d8d15-bcf7-4a10-8309-eef873a9a5ed"
        },
        "item": {
          "id": "7d0ca611-ef51-4866-90f9-68dc7c29ef59",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "270c8207-e9a1-4892-817c-5e2a9fdbdcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c8ee10-e60d-445d-a0b9-3a35bb14e574",
        "cursor": {
          "ref": "d0d89437-ee5d-4606-a0e4-ac23eb66c86a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bc9ed5dc-e9a3-4f41-8dc9-2d4f97edaf4f"
        },
        "item": {
          "id": "32c8ee10-e60d-445d-a0b9-3a35bb14e574",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "81f1a6b1-691a-4a8f-9e5c-167d3ae2af44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986bd95f-fa6d-4e3d-a900-e7212c59eb09",
        "cursor": {
          "ref": "9e5ffffc-1598-4971-89a2-3b1699e04062",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c587188e-dbb9-468e-9f78-e96e606dbace"
        },
        "item": {
          "id": "986bd95f-fa6d-4e3d-a900-e7212c59eb09",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "38f30bc4-25ce-4c06-a591-b55e838c2f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644f2288-c6af-4fe4-bd06-765c9b4fc7b5",
        "cursor": {
          "ref": "e47043f6-8279-48cc-9fa8-40f5a3a18de9",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6544f26d-642a-42d3-828b-d0797520d18b"
        },
        "item": {
          "id": "644f2288-c6af-4fe4-bd06-765c9b4fc7b5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ef1bbf07-231f-4f37-9215-c87294008f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6880a4-6254-4305-b9e4-87f709e89720",
        "cursor": {
          "ref": "fc848160-edae-4a15-abd8-5be897cebdea",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d015d450-dc6a-4cb6-ac86-d855e67b700b"
        },
        "item": {
          "id": "fb6880a4-6254-4305-b9e4-87f709e89720",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "51fb8a83-94da-4c6e-888b-53bb19a8f317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e689693e-099b-4ebb-b8ff-be31ba51e8ba",
        "cursor": {
          "ref": "78180513-c7c7-4c55-848c-a0568875cc0d",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "355a3721-55ee-4029-9ee4-a1730e2eb156"
        },
        "item": {
          "id": "e689693e-099b-4ebb-b8ff-be31ba51e8ba",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8c531cd4-9268-4f7c-aea9-920383e5d482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb1fb58-3799-476f-b0fc-276737276d5b",
        "cursor": {
          "ref": "51e37b66-d455-485b-80c1-d3b0663110ab",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4806747d-5275-4355-b12c-84c7b26045f6"
        },
        "item": {
          "id": "beb1fb58-3799-476f-b0fc-276737276d5b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ecf89cd8-4c8b-40ec-80f4-6ef726829253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fda32a8-8041-447c-880c-eee052cce66b",
        "cursor": {
          "ref": "d55a9c2c-4d9f-4a0f-bb0f-7f94187b0b1f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5ae0ef1a-f7cf-4cad-955b-166343de231a"
        },
        "item": {
          "id": "9fda32a8-8041-447c-880c-eee052cce66b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b1000e75-19c2-4b8b-878a-b6992aa8fd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a8e9b8-5722-4a75-893e-4e971d1c326d",
        "cursor": {
          "ref": "1e025519-1182-49d6-9dba-3cc3647129ba",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "beb296b2-e915-46f5-a8c4-f01178c38534"
        },
        "item": {
          "id": "24a8e9b8-5722-4a75-893e-4e971d1c326d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "428bc417-06b8-4919-927e-f48b2edc16c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cd65f6-3b8e-4793-ae92-e843b245f439",
        "cursor": {
          "ref": "8e669359-5899-49e1-aedd-b22fb71e9dce",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4e2148e6-19ab-4750-a7c2-eb1f6aa76a02"
        },
        "item": {
          "id": "26cd65f6-3b8e-4793-ae92-e843b245f439",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d355b0ec-f6b4-4fe5-bd6d-223cb4750216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64de786f-ffc7-42e6-afde-d8e26d28abbb",
        "cursor": {
          "ref": "dc944efd-dd00-4100-bce3-560a91509156",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "05cf53d1-819e-47e5-9e28-9b96a2e11dba"
        },
        "item": {
          "id": "64de786f-ffc7-42e6-afde-d8e26d28abbb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "46cb1345-456a-41a1-9e25-a1fc11018c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363dec5e-3ad7-49b3-8e30-39f1fa6574a1",
        "cursor": {
          "ref": "62a926f1-7cd9-465e-87e6-02cb99592e01",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f4cf8140-0c5e-4eac-9376-074fee75041f"
        },
        "item": {
          "id": "363dec5e-3ad7-49b3-8e30-39f1fa6574a1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6bf5e5f2-06c4-4ac6-8a3b-2e7f08e78fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c562fe-cbe1-48e7-8fbb-0c9f53f6cbf5",
        "cursor": {
          "ref": "72614cf5-a43b-4f7a-88f7-d5845d1e8a6e",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f5640130-d75e-4dac-87c1-ca7d4db991ff"
        },
        "item": {
          "id": "39c562fe-cbe1-48e7-8fbb-0c9f53f6cbf5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6a3b4b23-71d2-4c55-9ba5-f317814f5838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baec6b18-1062-4990-b7f7-3ecbd54470b9",
        "cursor": {
          "ref": "df2c0d63-a96c-439a-8749-38a0df5d777e",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "95141e84-27be-4621-9c3d-d5117e0c20f7"
        },
        "item": {
          "id": "baec6b18-1062-4990-b7f7-3ecbd54470b9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1b467e79-c285-4d5d-92f5-c5640fec7348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a0e721-8006-4b04-bff1-3058c3229fd5",
        "cursor": {
          "ref": "8071321c-c235-40b3-bce7-120007b802ec",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "3a4f5465-13ef-4e90-b747-457cea69f45f"
        },
        "item": {
          "id": "f3a0e721-8006-4b04-bff1-3058c3229fd5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ff2b2d66-a0cd-4006-85e7-b80feeb96dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbfddf6-1daf-44e9-a205-a50a94b7e13a",
        "cursor": {
          "ref": "a5302ba2-a016-4650-a302-f0c3e6943f65",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "eba3d641-362d-45b2-a1ca-8a080ead8ed6"
        },
        "item": {
          "id": "5fbfddf6-1daf-44e9-a205-a50a94b7e13a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cfea3b2b-d1f9-4614-9b5b-4cbfe3261b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a8964a-b04b-4af2-a598-ca34c4debf5b",
        "cursor": {
          "ref": "b2237c14-8c33-4ff1-8fa1-b1be163f6aa1",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "293533bb-da10-4586-ac2a-a7521b40b739"
        },
        "item": {
          "id": "28a8964a-b04b-4af2-a598-ca34c4debf5b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "73fcbe06-e6e6-4be1-be50-2cacf10cb5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f679e4-27c0-4ba2-9eaa-aec6c1249567",
        "cursor": {
          "ref": "7fdfef22-7dbc-4a82-9558-b9ff72e748b9",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b56496b0-f17d-46df-bcd0-8b756b504cf3"
        },
        "item": {
          "id": "53f679e4-27c0-4ba2-9eaa-aec6c1249567",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "73c7ed5d-1f4f-45d5-a4be-b771b7ba3cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa11d1fe-04a6-473a-a708-2913aabbc9e2",
        "cursor": {
          "ref": "fdd1635a-8f43-489f-a589-a06e07d27109",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2c1f7c08-f6a5-45ef-a18d-108ccadf6509"
        },
        "item": {
          "id": "aa11d1fe-04a6-473a-a708-2913aabbc9e2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fa30fdb6-5822-407b-b2b3-1119b521591b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171d1726-4e5a-4233-bfb9-1fe9488151df",
        "cursor": {
          "ref": "dc4b3d7a-1e3e-4ce0-a1e7-e4b3d77d75dc",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "74f13102-c9d9-42c3-b03b-3d6552ff2fa7"
        },
        "item": {
          "id": "171d1726-4e5a-4233-bfb9-1fe9488151df",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "51712188-357c-4a93-b489-086d7f671c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c73064c-f1e0-4ef8-a206-1f6027cce2ec",
        "cursor": {
          "ref": "28152337-1811-495c-86c1-e352ecc3be4a",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "60fb81c7-9d03-48b2-bff6-fc21aa22ef8b"
        },
        "item": {
          "id": "0c73064c-f1e0-4ef8-a206-1f6027cce2ec",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3234f979-5c92-4647-a6a9-df9c7508ffb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4e557a-feb8-410d-bd47-937d5179375c",
        "cursor": {
          "ref": "45c4d290-1bfd-4bd6-a272-8c4b188564b0",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "31e2d4f5-98fe-4525-a63d-cce7b75ea305"
        },
        "item": {
          "id": "cd4e557a-feb8-410d-bd47-937d5179375c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a59b660e-38e7-4cbf-b4a9-cdf7db635f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f6ee33-c498-4e53-85f8-b62f86a9b5f1",
        "cursor": {
          "ref": "5900b9f7-6177-4faf-b804-ea89bcba1cf9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "988c3599-fd02-47a3-9d4d-115f65fde8f2"
        },
        "item": {
          "id": "30f6ee33-c498-4e53-85f8-b62f86a9b5f1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f2ca8544-887a-4487-9f7e-8e3fb9bf56b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1d994a-93ff-43a6-8fd5-d76f27c29ea9",
        "cursor": {
          "ref": "f6e9a9cd-be18-44ef-87f3-5963f2930ade",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6f877ae1-7f62-4141-b7f6-e45393b092ad"
        },
        "item": {
          "id": "dc1d994a-93ff-43a6-8fd5-d76f27c29ea9",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3b56a54a-0af5-4ea4-876d-9f8bf3e694be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5f8d09-25c8-4117-9baa-507911c8b8eb",
        "cursor": {
          "ref": "974be82d-5112-4a2c-9bba-caca7a6ccfa5",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7fee879c-16a0-40e0-9380-6d90432590fd"
        },
        "item": {
          "id": "cc5f8d09-25c8-4117-9baa-507911c8b8eb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d9b39b84-23e5-4880-be07-6a09f931e1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a636f04a-354b-490c-93b5-479de86078ab",
        "cursor": {
          "ref": "9065a073-ab49-412d-b941-f694d6d8c4ba",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8fe5c2ee-2552-44f5-874d-7e95ead28a13"
        },
        "item": {
          "id": "a636f04a-354b-490c-93b5-479de86078ab",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dcfb6afe-76f7-43fd-852b-0fa7bf0084e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f37e0c-b30d-4e45-948a-ccda6ac91fa0",
        "cursor": {
          "ref": "9aae384a-4e7d-45e5-8a0a-3e03de7149c8",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "48f7b26b-a866-4c50-a926-91a52bdecfe6"
        },
        "item": {
          "id": "d3f37e0c-b30d-4e45-948a-ccda6ac91fa0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "82766b97-6d2e-40c1-b9f1-9522ab25900e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ca56d2-87a8-4a23-9962-550afb90b2fb",
        "cursor": {
          "ref": "a3fcaef5-1549-4066-8874-0bebfd4bb573",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ee3c5242-0364-42ab-9c61-ab3ce25bfdcc"
        },
        "item": {
          "id": "b7ca56d2-87a8-4a23-9962-550afb90b2fb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6e303ea8-ce1d-40e5-bff3-9c72f9d84975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00fa779e-4048-4225-a781-19bc94a15258",
        "cursor": {
          "ref": "ffc3347a-6f2c-488e-b479-0241136a5179",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "3e01da01-9e71-43d3-95f5-d840ee9849ae"
        },
        "item": {
          "id": "00fa779e-4048-4225-a781-19bc94a15258",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "74a51777-2a25-4bee-8a50-d8487220ed69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0f282f-f503-4fcf-b8e5-fd84067028ba",
        "cursor": {
          "ref": "a4251ea8-a9db-4dcf-aa8c-6ddfa2331a72",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "114cbee4-3902-47b5-b774-ffa8c78010be"
        },
        "item": {
          "id": "0a0f282f-f503-4fcf-b8e5-fd84067028ba",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7c13a277-af17-49f8-b420-614bccc8e8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18af65d-7d32-4fd2-81a5-baf27ef2f0eb",
        "cursor": {
          "ref": "535a9722-3380-407e-831c-db0aee101a57",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "46e1bc46-4624-4393-9552-42528c285772"
        },
        "item": {
          "id": "c18af65d-7d32-4fd2-81a5-baf27ef2f0eb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "04e0d835-234a-44a9-bda9-e227094b1126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58217055-7f5e-4a7e-bf30-287a0eb09ec9",
        "cursor": {
          "ref": "b7ad47b6-e866-4d39-baad-7c5c15d82ccc",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f0b55764-7f1e-415c-bb12-f19259047af5"
        },
        "item": {
          "id": "58217055-7f5e-4a7e-bf30-287a0eb09ec9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6cddb42c-4fab-4833-946f-61c8c7e4a103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41dfb442-fab7-4e7e-a2a7-ca11c24a80da",
        "cursor": {
          "ref": "6added04-67c8-4edc-a712-02d751ce4597",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "11d85e1e-79d0-43e3-808e-b5a914610245"
        },
        "item": {
          "id": "41dfb442-fab7-4e7e-a2a7-ca11c24a80da",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1a9d342f-8549-47ff-a16e-abb57aab38b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a78743-31a4-49d5-ba07-3faec1e35809",
        "cursor": {
          "ref": "527458c1-de68-46d6-a292-f146563acb21",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9e9c6fdd-e6d4-4f17-b2a3-9d326c89d2a3"
        },
        "item": {
          "id": "59a78743-31a4-49d5-ba07-3faec1e35809",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0f936f0e-8ad9-4ccf-b5c1-f11026bd3b04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ed4f7f-4a80-45ae-ab43-346d4df3e5ed",
        "cursor": {
          "ref": "ca6ba16d-d5c8-4d10-b432-8fa4f11a9388",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cbfe1ef4-8816-4bee-a7b1-889db7b72580"
        },
        "item": {
          "id": "75ed4f7f-4a80-45ae-ab43-346d4df3e5ed",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7439c9ea-6310-412b-8d9c-77ee7e1f6407",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ac3940-44b9-4ee9-93bc-e83bb267e438",
        "cursor": {
          "ref": "959aa7ab-515c-49ac-a5ff-ea62694fd377",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "48b9afde-d5e2-4d7b-b46d-84f23bfdcb4e"
        },
        "item": {
          "id": "f1ac3940-44b9-4ee9-93bc-e83bb267e438",
          "name": "credentials_verify"
        },
        "response": {
          "id": "41b82527-1d76-43b5-8042-184326dae220",
          "status": "OK",
          "code": 200,
          "responseTime": 1866,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "078b02a8-494c-4e03-b2d7-40a67d273283",
        "cursor": {
          "ref": "c2826744-d6c2-4277-9a47-e09e9bf2312d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "06390f92-3300-4523-a60c-b430e97c507e"
        },
        "item": {
          "id": "078b02a8-494c-4e03-b2d7-40a67d273283",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "df63ea6a-a638-42d6-bf19-cd5220c43436",
          "status": "OK",
          "code": 200,
          "responseTime": 1489,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4838d0b0-aa00-47ef-b083-d46f132179d7",
        "cursor": {
          "ref": "0a87270d-b2f0-4beb-ad78-659c81f21be7",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e071e33b-4cdb-4b2b-b17d-0c57db0d140d"
        },
        "item": {
          "id": "4838d0b0-aa00-47ef-b083-d46f132179d7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0b06ac07-c4dd-48f4-bbd2-bfab46d5e158",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4838d0b0-aa00-47ef-b083-d46f132179d7",
        "cursor": {
          "ref": "0a87270d-b2f0-4beb-ad78-659c81f21be7",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e071e33b-4cdb-4b2b-b17d-0c57db0d140d"
        },
        "item": {
          "id": "4838d0b0-aa00-47ef-b083-d46f132179d7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0b06ac07-c4dd-48f4-bbd2-bfab46d5e158",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe8989d-8130-4d8c-8a5a-71e8ba215e96",
        "cursor": {
          "ref": "4e87e97d-b11f-4249-9387-8329738cd390",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5bfd39b0-0e7d-49fb-ba6b-8c56475858fd"
        },
        "item": {
          "id": "9fe8989d-8130-4d8c-8a5a-71e8ba215e96",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0ef1e33b-2f50-44f0-a674-db106987b233",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a083ef38-e5ed-4341-a0d6-7b8bf266738b",
        "cursor": {
          "ref": "f09a9ac6-8ad3-40c4-b306-b7484f752f28",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "96e552de-d17c-49e8-8e05-810a7a127f0a"
        },
        "item": {
          "id": "a083ef38-e5ed-4341-a0d6-7b8bf266738b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bd3db008-2ba8-4305-8aa0-d1aca03a761a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}