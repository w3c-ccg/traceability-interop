{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "647ac454-0ec6-4e63-89fd-46011d32af97",
        "name": "Clear Cache",
        "item": [
          {
            "id": "32c53a1f-c4c2-4202-bda0-f1e50c4c4243",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6babba19-7a56-4d06-b3ce-08ba46b1efc7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4a16a46f-c8cb-4c32-8a0b-a5a1d98bbea7"
                }
              }
            ]
          },
          {
            "id": "7efda521-7ba2-4eb1-9e33-ef603108efed",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e82de7f6-6b71-4f43-9ba2-e6d7a8a97993",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8cf2ca70-605e-47d0-b858-2297efd6bcd4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5c193c8a-a25b-4849-a888-026bb5ddc057",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "aae8aa93-5a9d-4595-bf6d-c837f580b013",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b7d5cb2-11d2-4a06-9008-e0296ae927a5",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc1cbcc8-c67c-452b-bead-32d2ce0afd2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e670320a-0c1d-4581-8f30-c861a478451e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da5bf79f-a9eb-4e02-845c-87618b0ca0b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5800aa6d-99a8-4828-9aa0-c4097e5822e7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4dcd0d04-827b-4bb8-9bb8-a4d10751d2e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "edfa8af6-7da8-4587-8603-ead49f74c3a9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ad678ab-a610-4526-891b-cf120a98a415",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d7a7b069-1533-40d1-a2b5-4c8621ce1fab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d3ee825-caeb-4c69-9ac1-af57306aae76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16f1bb57-07c9-4e33-a1c9-5dadc801df00"
            }
          }
        ]
      },
      {
        "id": "f207bd96-98a7-4de9-8876-b54fbb16dbd7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "975066b0-6fba-4514-b1f6-fbfa1d8a4c10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5e6482b-8e6f-441f-9a23-e11f4724a02b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d8408e54-7e61-4f02-b4fb-f77656fe711c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "973995b3-7d5c-4b65-a272-525e50fc4b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94bc8261-8969-4a85-9f82-d25062083cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47a7704-8237-4fac-ac80-072ca54e3e13",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f62960-adc2-4093-9b86-c7142ee32b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8600184c-a2ac-4e97-a69a-c63887a3c57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac70e75e-640d-4a15-b350-7ce79b17f33b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0966a91f-da14-4c47-ab0b-a855177a2bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6febccb-aeae-4621-a832-9d681886f734"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58ac636b-350d-4d04-b8e9-aea101e5c927",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26d79cc3-ea0b-47ff-a138-685e96f62bf6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b56d6a-f52d-4c41-905e-c033fb8f12bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b78f99b9-b5a4-4b6d-ba03-85674f94622a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae64223c-31dd-4c2b-b5af-9490576e1579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359a3fa1-0f1d-44c5-8bef-0f8830603da2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "af992d42-8982-4917-9f75-9a1568dfd4a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d07ba465-4e1a-49d8-a96c-09920791df87",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2766efe1-a630-413e-b2b3-6c9888277543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f936a3c5-83a2-4af7-91bb-431e96449a50"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79dee537-8a17-4480-b6c6-fdba4fbe2f55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c49d4c27-395f-47e8-8f9c-b4469cc70fe0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22150b65-a5c1-4c68-8199-71a8288cd6c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a200c5d-da74-4801-b078-cfa519c1f911"
            }
          }
        ]
      },
      {
        "id": "57fb33c6-423a-44a2-b087-f7ceaf1eaf5c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "96fa7781-2d43-4905-a026-f862ca6bccc0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b2f1640-25ff-4b36-9445-109adeaa698d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cb7132f5-78d7-4774-96b6-b9e4eab2e1fb",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a7bcd3-3e7a-400c-89e4-2ed657be61eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e05d18-711d-44be-af32-0329e2468872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82da53bc-658a-4115-9a29-243dd2344810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "439eb7b4-78a1-4b1e-8e43-2a6279421378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14217181-1144-43cb-b84a-62754d555b39",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c14e851-9ef3-486d-8e1d-314424c6f0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35a9b133-156b-48ac-9a0f-7745bae2809b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b094b6-4be3-4ca2-a57d-887adb90e6b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69a85fb4-14b5-4922-9d3a-f243df7717ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18de8ee-60b0-4d28-8a6b-c070d7097a2d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab248108-303d-497a-af13-437665016575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535d7fdf-db65-45b9-8bd7-d4b5ce7cc031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8a73bf-3dc2-4a63-b968-ee580ecf3948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98d06886-2f93-456a-ae4d-fae66f81a033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c54add7a-f4b0-4574-ad8a-02706714d095",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b771f575-d9c1-425c-b7cb-1b1234eadfe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca5372d-8e49-469a-9733-15d1254357d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ace49b9-2444-4b9c-b393-2a75341a83b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8622082-a910-41db-9e93-5ce39f78823b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5affd5df-1d51-4a23-8f91-130f4979f812",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27745fa5-f949-463d-88fd-dc0172d55911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19520312-91a5-43c4-be38-9898335a72f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2360516-8c0b-471e-9f27-1a5e6c6d4a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a5f5b90-0982-43a8-bff4-0aa5b59db1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59c1f3d-68ad-4dcc-87a2-3ceec009b3c5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53def0fc-b1d4-4b7e-9635-62be93b8b5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1dbfd43-6cbf-4fac-8b7e-348656c4d67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46e4299-7731-45f9-a3f3-b293d398dfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51134587-884a-41b9-a7f7-96787ae331ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89b8f728-539d-4529-833a-c4abf08bcd87",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a981be-9d93-421f-a17c-e9462e29b141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c452d35d-b85e-44ef-ae7b-72a7090d9842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3c1160-04f7-4f78-9754-32d0f3478be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59fb03c0-405e-45d2-87fd-2c2567004412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dcf142-8afc-466b-ae47-7d38a3430810",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52472dc5-ecd8-4c11-a030-3c3a17d592cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64874e88-5c93-4e69-a248-4204bca65552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0303fa-e51f-43d5-8e52-ee9f77672b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c9dec08-9030-4b60-9570-665a25119611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd5daa83-fd7f-42fa-9043-63b54ee7ba8b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbad514-91a9-4e6e-9aec-92fe84883f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7454527-06c3-41bd-bd97-d14fcdb5d49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb5e56f-b86a-49d8-9946-a953e7b525bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68d3ece7-d8c1-4a7f-9581-20aa68eee586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768dcd40-ff96-43ed-ae90-795df757bbd8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75130e36-f2cf-44d9-bd83-7580ff2863d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e29629d-7535-4a96-b8b6-58e5e1f6379c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12991dfd-2e64-40c1-a349-a37ec61a6779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daf00bf4-5c22-45fd-b16f-06a0f89c2286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35576cb8-8b2d-4331-a6bc-4c2e5a4176d3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7065357e-c6b1-4100-b367-3efffafbf973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198bc096-daa5-48bd-9880-95930aabca93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186e6b50-fa00-4a44-b854-0c347d136e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a982001-1609-496f-8902-48fa6d97527d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24f3d1d-8445-4a66-a947-09e40dc6e9f9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb85cd4-bc6a-4d43-b39d-9f240113b86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95286915-9a30-4695-8661-1af586c1d3d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720c6f55-509c-4393-ae1c-4214ef6db32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e98e4d5-5dfe-4a2d-8175-d5194715362f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c489966a-be3f-4cc9-b30f-2df662af0b60",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65758270-5bb3-4086-9d5f-1f4069eee559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec6349d-d770-4eb1-b9fe-fd9a3b17ec7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c5d5bb-2149-4b54-b60d-d07914fee7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac0f0608-89ab-4ea1-817a-36588846095c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad3edde-fa18-4f1d-832b-3d8dd4be07d7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d635c51-2f68-47f7-9a30-4617565037eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19520f7d-d878-4400-8813-33aff741d75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a266265-2eae-467a-aac6-341267bc6a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f003157-016f-473b-bcf9-fee971a3a967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ce2d870-5f28-4c95-8e31-799a7c958674",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5345b58-d837-4f39-a71b-8ad2416bffba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa58549c-7db7-4160-923e-99fe6fcdf995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2cad08-8d2e-49c4-ac59-e3a47dd75492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24ba67ab-bc34-450a-96a0-41954cccaa88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3d29b1-a241-433d-b8d2-af18487f834c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f283d2f-7d2f-4016-8777-525bc1db65a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bb9149-8e2a-4126-bfde-71b5e838940e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2603672-e37a-43ca-b4a7-0cc9cc4cd485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "411aa1cf-5c7f-4a5a-bd22-364e144e7cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb4d185-d6ae-4109-828c-19e51245194b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2960dd-fbab-4e17-8578-c4c6e143ba2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c19e998-366b-4812-9750-1c9b101c72c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75cff0f-3503-4153-90d0-5566d7d2fb90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b4c07c5-f635-416b-86dc-bd85d15a8e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b9b154-bf85-4d19-8afd-7a6824cf5d35",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae45b73e-185f-429a-af46-09d13605097c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6935a890-9803-455d-84b9-ea69e4466f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa78220-4822-4970-b32d-895d84ca3825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3e1341-5da9-4343-9c7a-f60c0095af1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a10b8e-5c25-429f-b45c-e39db4c07e6b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf3e227-8571-4700-8e60-3774e6e464ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d980078-4dc7-4d88-98b6-b27c6636fe90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4605c6ca-af76-449e-83a0-d40d254bad48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8d6631-b91d-4b51-917c-d6333c7f1e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50a2620-7a0e-4698-a693-f62062ae3057",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6259e278-793a-4a50-9405-441bc7d604d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d440915-c0c2-4704-aa9c-d99d16a558bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9af9ec3-775e-486a-8edf-e598e148033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37495e8a-493c-4fab-b6e9-607b6c0ce26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac1b31c-df8c-40b6-98c7-17545279fba8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8df48f-92a1-4c79-b9e6-adebbfbdb318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b4e582-cf83-4ba7-b90e-dd6b778f2b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e41b01-a120-4ba1-9ffa-38183a5c94b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dab1a3c3-ff74-425a-99b8-4935664ec478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3dd917-6932-4fbf-8ff2-0e38b6f4dc36",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd7d646-a809-4451-996b-9f270ee5d170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303414ef-250c-4062-b3cc-839f4623780b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d6b08a-5f23-43b5-87f8-39b1c321813c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58ae4143-cbe3-442a-b1d0-73bed481cf2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3858db47-e85b-40d2-8cd2-f55d1ec7bedb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a219dc-7c0c-4b03-82cb-e2e489aa38da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2f38e1-1f32-407d-9f2e-ea4f9da5f587"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1849d5c-4a1e-4fb7-ab2c-aeb6418cd1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4acd4c18-a054-4669-84e2-b50f77aed103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a12a91-ff3b-4e08-a868-290fd3942bf1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15ba40f-b602-472d-9775-4b82a2894d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6908f1-842f-4936-8276-26a6a35256c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84265d9e-3f5b-4723-8fef-728b2b4fbb6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcafa601-8e51-4cc4-9f22-34c9dd06ed45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb461394-5423-405e-8f44-58218f3b7c56",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe380481-ee44-4337-b04c-8a5ed4917efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c9a5f31-fc48-4e2d-ae81-812e1d5e9cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b81d7a15-e9a6-4813-9de8-3ce73d8da3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18cb2e2d-968f-4fab-837d-4193ca5533d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748436c7-ecf0-40eb-8f0e-c623c95cc90e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc825b62-d501-40c0-8955-754c901acfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a106b1b4-20c7-4a35-b7a6-e6ec7de73f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a763dd4b-249e-4788-81e2-17be747aabfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b47a7ad-7f5f-4fec-8eb4-7a06d75ff53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd1a6ca-2cc4-4c6d-bdf1-b9d354f6494a",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522d9b98-9af4-4d9e-882f-f9d8918f2706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a46f7eb9-7926-4b95-9838-94cf870ed704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551f170f-b21a-48c2-8785-d8ab7a202507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49aadde2-bb46-404e-82c7-c29ef52cefd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05414112-0bc0-47f3-8c9a-4fce3b2d228f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efa7de1-dd4f-48bd-831e-8391eaaf976d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16110350-a642-4a0e-86fb-c78a818746c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e09b2f-c628-423a-9639-c460c6ba3e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9289bb2-cb7d-4bb7-ac7f-3405787cee27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a33fc8f-c921-41ae-af94-ca5b00b07d04",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df8bf99-f56e-45ce-a8ab-21d9512bc136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b266b1-ead6-4e59-8ee8-f1b106da05cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bf70c1-9081-463d-bed0-81e47fa0d98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c06b97a6-76e6-43f6-a0aa-b38d07c93bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc5ff16-8b26-4ba5-8069-ebe836e92a84",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0a8148-961a-4bc6-80ae-1486ea7c689f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24fae7c-194b-4ba7-8d99-59b2af6c85b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb6eebe-f1f9-4046-b2f3-3b3b55e1807d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b51ecae-6506-4dd7-8e5c-7c5e4437df55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186d86db-9000-4462-8463-2aeed6bd804b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804e73c1-74cd-40fd-afd9-1da1bc12d77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cd5286b-1ecf-46d1-b1e4-9f572ff4d3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a82fadc-954f-42f2-ac87-37d4add61800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce31621-56e9-4c0d-907a-22a81c8ee52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e868b1-6f3d-47ed-9071-77186ef1917a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061d7161-f30c-4586-85ab-435b3a7c054c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f5d895-685f-45c1-bd79-48af4338adcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7859c4cd-573a-459c-9c2e-3cd9023816fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8745fff5-74fe-4ce9-81fe-a2db9ef88032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d0db9b-0ab8-47db-a99a-9457dfba4794",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c62d927-9e0b-42b0-bde4-59673b2f3e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beadf555-c25a-4c76-8d47-1fef24505345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadf6065-5778-436a-8812-060953f061f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91ab1c99-da07-410d-84c7-0f9d12e06c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ecb22d-90c6-4302-b6ae-c2a9c3a810d4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ead2c5-86d5-4b66-8da5-48a20cef1191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57aadff0-95f6-4fca-b33c-099a31a3beda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f747fdf9-01cc-4fa3-9db8-ae3c1ea845a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d4f739-3a50-498c-8ff5-448ddb250946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7c2c9b-5889-4d19-9dd4-72ea5c51cece",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705056f3-8dfd-4d04-854e-4d1171f4a188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c224735-0af5-4a29-81e4-67acd624a2ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053dc95e-b712-4e58-b2d3-11ad29843ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "28ffb7fe-8c3e-4ba9-af17-563ebd17017c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802a1820-b444-4396-8386-8bb20fe3d605",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77a3051-d680-4d77-8c77-2faf63afb4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4544db4-ea16-458a-9fed-64183427071f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbf4622-7cfe-4f17-94af-776ff276f996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e24370b-9209-4075-baa6-0351fcacbf41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8533aa6e-4842-416e-980f-fb5e707184d7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfddc62-453c-4708-b0d4-1b286e23a50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f4e587-eb41-432a-8ba6-97b2df6d5477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549c85e8-fe13-4b74-b93f-80f200264b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "609eee98-9df8-4e40-aaa7-c5074d4c6e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbd8e92-d1b5-46b3-b435-c1deaf1531ab",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635c55c7-f115-498b-9103-39dd8b15dd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece141a7-3661-403c-b43e-cdbac239bb17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce13ded3-fb1f-4347-9d3e-5c23e8928699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e45336f9-0bc7-45a6-9967-191770324f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c57a2d-b040-47c4-87a4-81e1365aaae6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8589b67d-a5d7-4cfb-8ebb-42e901ec4973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac6b6e7-6c40-4839-aecd-58c9b7398c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c81370e-f3d9-4a79-aa8b-6bf70ddc7b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6539c38-68d9-4c0e-907d-1dc935e5980c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0a95e6-2379-424b-99e4-510ab5d08e62",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a19d510-6ccf-47b9-bd28-e027f923cddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818f5619-f36c-4ec1-8c36-48929797ed4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a638f58-3880-4b84-8b5b-2a401fb36dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbe299e-6100-4213-9119-a9fd586daed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d23995b-d750-4faa-9056-a716fa9b41ee",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e7a95d-56e6-4add-96b9-85bcbfc5513f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6991d7e4-846e-4e58-afa4-9419e74a65d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dbc5643-58c2-47cc-81a0-502389d294aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e0c6eac-d116-40b5-a217-7d16f47f8988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eafe774-5732-41b1-a9b2-8f2bc3ad1141",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0699bc26-bb11-4802-909d-74b852982314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5660b9-7ae3-4f6e-b4cc-ccadfd3c9a9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c62a72-cd1b-4281-ac54-f8f82d49c489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0327e3-d4d3-465d-82f0-b805cee4f58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998e5c78-9ac6-41ae-ba92-137be1773b3b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6c7447-7b25-4775-a86f-b308ccad9ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db07a67-3c01-488b-b48f-ea6205b2ed05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627c5891-4508-47fa-b846-191dca7cd9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "17503670-5413-4497-979d-33a1a80d6b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208e595d-296f-4a72-bfdc-c4dcff64fa3f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a244795-98cb-4631-92c3-ddba4c8c3656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e05293d3-b4dd-4cd5-9d92-1b8b32f2c719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8d467a-48e6-454e-b52f-2b1a23e60e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a42ffdd4-a82d-442d-b203-d79a45ec3695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5dc061-abf3-422a-a9ed-e09a058f7025",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3ac29e-389b-413c-af41-f38bfeba6507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676730be-9d7a-4927-8521-e7997aecf5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10f8a7b-ffe4-430b-b213-af561a94b6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c6df544-8b41-4e8b-9c3d-522889ebec88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c874b24c-2a43-49ef-ba33-1afb961efbf9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa64c902-eb27-42b6-b0b3-555c47f9ee8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddce169-79f9-444b-a093-ed262eb5db91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e40c36-947a-419d-ae3d-e66409dab8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "862561ac-b04a-45ef-b26a-b11fc0a717d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ceb8c62-0959-413f-851d-12550584ac7e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0772693-1945-4d6c-8d66-a1b8f8a39525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfa39a2-2ec9-477c-b4e4-4a91cb26e63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5086d21f-8ab9-4eb8-b9bf-09b66e462262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72a418f1-f511-46f2-a95b-f54c2cae2b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bdc2fc-0acc-4a8a-9b24-b976a2c87697",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7d63dd-8513-4f6b-8129-d7c22d002552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffddf248-4b18-415f-81a3-df012fb32238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb7b47a-a8ac-4a4a-b578-07fe318ff8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "845ea572-6e66-4e3a-8032-9ed47a48307f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2453e9fc-354e-472b-aece-ba2b85742913",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63bd4ff-fda4-4d92-836e-2e2ad6fd8f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e93fbf0-4a51-47dd-b0ce-d48b28d6dabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e1627f-f6f4-42ef-9b02-df45b1de28dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2af14aaf-51df-49de-b54d-9b6ebcd31139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbbc3a8-ef1e-4ef2-aa8f-3ebd1919109f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bf8614-a029-4ce3-a256-040b68b63523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b818e6ff-b394-48fb-9212-46722d668df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180ba0b2-a9fb-41c7-a32c-53e409e8fe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10d5d63e-a948-44ae-9c2b-6322336c84dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a34fa8b-cf80-4baf-bf5b-bec8bc217b5b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95ae015-1352-49b2-a9ed-4c4b43391859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1d60b2-1ce6-418a-bb74-66fb9e2843e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fe2d93-1294-42d6-9c7c-7a946facbc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "719be67d-cc68-4fb4-83c2-0f3a58ce1939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5ec6df-8c2d-4e6a-b56b-fbda4861ba0f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af83c45-9ebe-4cdb-af03-1fa089eacccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f06aebb-b9bf-4191-a7b9-76f93e9a2c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16afeee-2793-4aa5-a79d-1b8fc389f773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6af935f-2c49-4d0b-a7e3-abda65ae84a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60cafe0-6dad-4cd4-a05f-13f50cc6d3ba",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff608e34-fbdd-4198-97d2-4199b41181bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701ab703-f8db-4884-a93e-8fef97a60364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cc0936-0473-4a3d-8e11-824c5989d602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ad92a1d-b2c8-4d9d-aaf3-660f28370b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df660291-908f-4ee4-ab29-2d72edea0086",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf25669-be25-4df8-906d-2c1b79510162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01c28370-5cf8-4d54-8ebb-57feec8840af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdee172f-5957-47c4-947e-0fd43509d154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87514829-cd75-4fbb-b5a7-04cb878c9fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e7e88c-6990-4259-a73d-6b56c707cf11",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "771b46e0-364c-4120-a56c-e5aa3193eccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7551add-8e42-4e56-ba10-ef851c6688a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dbf45d-6e98-47f4-9e67-cbf02aceb7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4cab3b-b229-4122-86ab-39981b413450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7797ff-ecde-41fa-b79f-c2c4b8c83c02",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b5e1a7-85c5-41fb-ae18-a0851c938ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9644432f-d834-4755-af0c-bd5640eb9a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aa698a-e478-4e20-8697-494886c30caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "74c99047-ffbe-44db-9f6d-9d81d01f3ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d5937c1-edba-4968-aeb6-2c84fa583ddb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "613ca065-8a53-402a-8812-0e0579985eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c2c670-0c89-402d-8600-b422ceb18129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5a7a7b-f584-4d92-be51-bbfca880c2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd66c902-d008-472c-adab-4a8263045b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbab1c3-27f4-4a8c-a644-e1d1e6194343",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfda93a4-0632-452f-acdc-b0dce5183f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fd0a77-71f4-425b-8c80-df52cbfbe6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4457c25-0dac-4b1e-a4cb-9ef057e0fed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cea3e4f-9dcb-47f7-aefa-5fb446606b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86f971e-bf01-448d-9bae-7717fef034d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44e21d4-6dbc-4b04-bf33-384eaa2a0824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2984523-b70e-4278-a61c-567359acfb37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e492d8-7328-4e39-9603-4cf8ec05a018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2591193d-c27f-4a91-a106-cf0bd6a66daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31333cb9-28e4-4d87-8c52-b151f85599a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0cc996-4dad-4608-abcb-7859e5459ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee92ee6-c2e2-434e-844f-3ea98a7c4782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc266115-8b67-4c9c-8535-0bb070cafdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8de218c-4a3b-4e9e-ba30-df4c64380a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e513172a-251f-4d06-beb4-62911928ed1f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b31508-e659-4518-bc9d-d0b5cfcf04a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3f194b-784f-4b66-9539-1cd1d895157c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b1e5d5-529f-4f32-b1dc-7f498058d87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "54b818e6-5873-4b92-bcb9-94036a62b17b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a7d889-361c-445a-b5f1-b0d73748c289",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6462b8c0-6e29-4069-88a3-5813b23b766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dc4a8d5-d0df-4ea7-a157-ede5566d2b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b76690-ed68-4506-80ad-c9d7d3733f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "61cebf0b-98b3-4456-8a07-5764c17b6a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbf1095-c266-42fd-9661-ca4c1b24f87c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0775c33a-559b-4c01-bcb9-9df98939b483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdb5d2ed-e6c4-4f78-82c9-fae84f68f071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a68886-a8ae-4746-9266-46c9729e8c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6153df01-df9d-4d88-a1a7-66fbaeb31f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d8ef98-1f22-4b74-b49d-69fb69082016",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b697fe-081f-4584-a1c9-290cb93a6b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a72c32-c3cf-4724-8858-3bd64c9e2059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca9038a9-f060-4fea-b1de-3fb2d7367030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28209a1b-c25e-4ef9-8469-489fe42a1879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647954c3-d295-4e21-a7ec-9d9d8634cda6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0259c7d-a08a-4382-afdf-0c9e08521818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ffe4d2-715f-4480-98b9-1d4f5d538183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742f4b7a-bd7c-42d9-b0e9-bec2b6a8cdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3be534-019b-401b-a34f-837b9609779b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223b5bd7-480a-4ecd-a0ec-529d53e0bfd1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac178ff4-252b-46af-a7a5-e493de51d9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5396eea0-a2e4-4631-b7c2-1e444fa11055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9096e39c-4e66-4ee6-bfb9-2d6458fca10a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c761194b-6dd5-44e5-ba38-fd5bce956ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77c4a63f-f280-499e-8159-3228d1708f30",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef4c11b-21f9-489c-b8bd-ab79459c631f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85b2fed-7fa1-4121-868e-7c41999f9fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5905e00c-02e6-483b-a184-023ae99dec82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84b0d018-22ca-4921-80dc-a97fe01dc2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d165b2bc-e233-44cb-8b62-45b075fd7569",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8e4818-2422-4960-9f42-d7d995a4d4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3252bc6-b6b2-4284-a926-2ce75b94f75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abf4f82-f9a0-48c5-9f14-ecfdfd6c0d75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e6b477-3019-41c1-a420-4e789333bdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b405317-c197-4b51-92b7-008bb25beacf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a623d96-cc4b-41a0-9689-28861d6fd49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4852dcd9-e988-45ef-b03d-be83a3ba7f53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7440aa6-6f39-46e1-9de1-9abd2b6bf803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5ad940-6668-4b1c-8da0-5d222ed6c96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e78b0e-ea08-4831-990b-4e6c7828cd1d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6295531-9c8a-4e39-bba1-6d9b79610e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eddcf783-966d-4c05-ab88-10e379b48777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7c4cb0-d14a-4496-8ae9-4ec25ed71587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c06e49a4-4913-49df-ab15-dffd9564f427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dde0913-a56e-4aaf-99a5-bf89bafc59e3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba84310-7f7c-4ebe-bd98-d004afd1542a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135c0a06-d9b8-44b2-9887-4526d567f09d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db26202-c39d-4734-9b0d-d02e4a95103f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71b5c20b-e136-48ef-8864-bd84984cf821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca15de15-e42a-4c7d-a60b-915b826fa859",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a7cc73-19f1-4fa0-9624-9220f3706033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b930377-742e-4d75-b465-54f757e16f42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef44e64-57f1-4360-92b1-594351553b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b61e5cd-a225-4cd1-b9ad-8850785be8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e09e2e-a223-4a0a-8be8-93c02eaee563",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb5eb19-7058-44ff-ac9c-79c60356bb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0786d745-44fe-43b6-9cce-1ce6e01e294c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b807b0c-27a2-463f-b9db-031ffc102e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f990af1a-195d-4085-a03d-2d981c26b58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c29c998-0410-417e-8c9d-9cc0c88a92e6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eea03b0-7151-4df7-af6f-6f3c19876dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0524d44d-d450-4b17-a30f-39e46fd912cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caf22631-6afd-4bda-be41-c3d0811b1d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee836c24-da50-4440-a153-7b1bc7ac34e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82019d5e-409a-4219-aba6-d650d8a2da74",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a30b75-80fc-4598-a92d-a116afc49c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789e4a54-65c2-47cf-ae42-483cee41f076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf4f67e-a1aa-40ab-93f5-92501d094641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "870d0c75-7cf8-4bc6-bf1a-a0d9920c3a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a8f922-b479-438e-8785-2de889fb0697",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad69520-7c83-4b78-919f-b82b5b0b05e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969a087e-a346-4237-b5bb-2b0350351241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8d8d70-2a91-45d9-ab96-78c275372ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac467bc-d6f8-4729-b4e9-0e6a6d55cc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd098cb-b11d-4c59-9aaf-64bf5e7d1984",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7563c8-d1f9-43c5-872c-9d6443c08a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3db37e3-2800-4499-96e2-edefe45600fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66a9b8d-8cf6-4d8b-9676-cf094a323adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89e4d51b-e275-45df-aa49-f857316ba2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ea4738-26d2-4293-b4f2-0219031f180a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbf840f-43eb-44dc-a4b4-c6af36dca407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e116998-aa4e-4a06-8e49-f8be5ff6f95c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624e74e2-3170-4ed1-b5c1-b469027f900b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a597004-ab3f-4364-bc62-09836212782f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a553ac-2f37-4a19-b8f3-5b2535b172b5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c827973-0db2-44cd-bb5c-ab7a815a7d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3edf6fe-39cc-49c7-aaf2-fc100dcc9d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27f37fb-c70d-4f41-b20e-eb459b2d6f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "783fd602-c5a2-4ccf-a8d8-ec0c0638d50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba403a8-c90a-4a69-9a8c-7561864ed71a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681a84d4-e456-4807-a3f5-347b3cfe5198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60745030-51d9-4804-83be-d20d8fcb4cd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc328d84-21f9-429c-9250-118ceef63e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c81b4a75-2919-4a2f-9aa4-7b52dcc76e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcddfc4-7957-4b3f-bd3a-86e104977c70",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13534a3d-6a4c-46bf-b157-2fc814a2daf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a55fe39c-fb7b-48d5-b06b-0b41ac6609da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec9b9b4-af25-461e-8702-c5550fbfee6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f16c93d-a243-4e9f-93ac-d87fc75f5c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e8be3b-5199-46af-b3bb-877996ec1501",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884aa689-9293-4377-b1ab-fdd4170acbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3657d34d-bc6f-44fb-89c0-f26ac4978584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bea980a-eadd-4eb1-833f-f41ef9636e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9aa3237-6abb-4728-8ff3-9467d4e335b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499046b5-ddd4-496d-a071-f00505ca9467",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba78895b-c197-4e25-8547-ae674aa3ffb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "701008bc-2012-45fa-af90-2fc0344e6a40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276436ef-c61a-4901-ae7e-6bc4452b8328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a879164-c9c2-499e-bad5-70971df5b14c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfe4923-db30-4c5d-935a-07f4b46c5702",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2ac5ce-f0ce-43d6-8e4e-2dae4c4ccda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4245e0d8-edb2-4991-a2b5-6b52caef1901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd63500f-8666-40c9-801c-5d764965b0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69cdf855-8831-458e-a840-c1b744f05ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25bd8d7-6602-4b13-bbce-3efe07497b7b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0404e63-5558-4090-af59-f210a8d8c1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d313c1b-1742-4595-afd5-a539d1934e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a78ba3c-0c3d-4236-bfb7-6bc5afd30122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72f7eaed-4d07-4fe7-b059-2e1509ede6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac30e3f-dbae-47cf-bb8c-acffb43997ca",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947a6cae-da89-4adf-9a34-6965adebb36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbee26ff-2b23-483f-978c-6224e4f5d3f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf9627e-3654-41ed-86fc-0b457bb4fbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "975e1ac2-73cc-46f3-8514-819feea285a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80249370-9ae6-4e8b-95f0-54b33b507877",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f49eb8-8d05-45fe-89f6-5b7eb0e312a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a63c76f-52f0-436b-a3a5-d24062f2c444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c21a2d0-3e23-468b-949b-a595f462b948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4391efbd-2341-41e5-88b5-cb7c153ac254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3780fc-8ec2-4b7a-8497-b0a4a4d047ca",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d8c050-842c-4274-8bf6-1f4aa9bb4bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea71bc4e-f4e8-4afc-98f7-f3c179e74c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "341a29eb-227a-4dda-9e3c-726a15e0613e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0206976-dd92-408f-b90b-decddb9766bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ec0bb0-b1d4-4acf-ad2c-c614d9f80441",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944fbcf7-bda9-4560-a200-c6255af12b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ccbc8b-80be-4848-ba59-bb5db202d8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886356fc-f4b8-4ccc-89a3-dc645adde487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8934ed5c-9a92-461b-b64d-1c64da59cf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197ab450-ef2d-44ee-83a3-b123724c0c85",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e243255-043f-4d53-a825-ad38f70cfaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f34a269b-32cb-47d1-9a19-b39ee2f4cd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf66b4d-f4d1-4c0f-b7f7-4e7fe1b2da9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d8b8819-2c46-4d85-aeb7-16ec81f75f71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266aeabc-c736-41de-89b4-e3bcbf58a408",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8d25e1-c1bc-4c24-a665-875d8bed5bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22053de8-7e6a-46bf-97eb-957a24f2cff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46330655-1d4f-46d8-a3aa-52918ace9486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "38a5887e-bdc4-4d4d-9dba-3e0e6243b831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3e451f-b2ef-4cdd-a244-16bc1886c360",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ec6fa3-90e9-4029-aae0-e2700ad65980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e258125c-dbb2-4add-b8c9-b5901eb8e53c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c472829-5740-4630-9cad-fcbd2a2702bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6931a3e5-77d2-4911-8dde-08981d3803e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14afb7cc-fbbc-4e1e-ba6c-816f75232d3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbc56996-b35f-43df-ab1f-27a604d355b4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab79e74-64ef-4160-a923-ead52d6d3af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b151d7d5-6b8c-4863-9cb7-440515919e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3d2428-4eda-45af-a710-b17efe5303c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8316015c-2cf5-4e7c-8c7d-3c02fbcd4255"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "026f8df9-505f-4aff-bc28-a2aaba96b53a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb332cd4-f151-4412-a9aa-0814531a9560"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17872d93-235f-4696-aafb-555588627806",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6c2dca4-2201-4f3c-9336-b07e2ce89dec"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0a893696-90fb-4133-8082-fe9260d34a49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57768d2c-9287-411e-ac9a-9395750302b9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3d875ded-0f5c-41e9-9322-06f635c73433",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00b91ba4-966a-41b1-bc14-6fafcd87715b"
                }
              }
            ]
          },
          {
            "id": "2e51abee-8922-4056-8266-19c509984226",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bcfa26e1-a306-4efa-81f1-30e4d67f0947",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8031a670-7617-4d22-b631-6b73fcb36332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "875c3aab-23ad-432e-a5ca-22f72e6cb98a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71abf7d6-46ef-4714-acca-8c9d465677ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fa9bc98d-1504-46b3-8c18-af7a7f4339e4"
                    }
                  }
                ]
              },
              {
                "id": "344bf76b-4e00-4c26-b1f1-0a029ba3b224",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "085bbb53-5857-4a8d-b627-b7f7da557065",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16075ff1-28ba-4ae5-8e85-cb1652c0135a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac9ca5e8-8087-4944-a19b-db084b3543c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4d79bd8a-75aa-4d08-8c02-6276af587d34"
                    }
                  }
                ]
              },
              {
                "id": "0f55db68-d039-44bd-9e63-91c8b02b19bd",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a049a4c3-af78-4b43-94e1-67b78e662f16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "931ed37e-e825-4d80-a46f-624caa628173"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "624fdc84-a604-4e19-bbeb-7de42fafeff6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "20df97c5-f590-499c-8f95-183ece9007e0"
                    }
                  }
                ]
              },
              {
                "id": "a6e43472-7a82-42ba-949d-0adcf0f5afb3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aee96043-a92e-401b-8e42-6b1ae7bd595f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c1d33f9-6818-4b94-b885-9190aca7c16c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73f9a4df-c75b-4fbb-9ed7-c74ed262fac9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cb6fc23e-ad76-4ee4-9235-a42281b85e5c"
                    }
                  }
                ]
              },
              {
                "id": "86988e42-0b92-4683-8c3a-908ef82fe285",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80957c15-dacd-43aa-bc93-ea04cf4ed461",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89caf76f-f104-4b53-9685-d699877785e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "835f10ba-2551-4400-9a0b-6c61bda63236",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "6de000d8-b419-4933-a642-50de8a40e754"
                    }
                  }
                ]
              },
              {
                "id": "e228d60b-e413-439a-9b09-f73ee1dfbdeb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "747441fd-5783-4049-95a2-5a7575f5efdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42ed6a8a-cbe5-40f9-8213-f22e547c45d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fdee4fe-c300-4186-acc0-1202b2594d07",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "191fd61b-ed84-4b5a-91ed-6302fc228376"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "41e65270-0f23-4688-a924-93f1235120ad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0bfdae47-b638-4990-a16b-44872512355e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a649905b-9f6e-40f7-ba0f-c632d30296c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "574d7277-e971-4799-b9b0-a5b2f72e67fe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f47cffd-95c2-4527-bfba-384040e154f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "907195ca-5ea5-4ced-b382-506c96d45cbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94d46515-9e82-4bbe-8a83-06317b1f613b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa872f0f-4cec-45a9-9813-16cf63f2a5b3"
            }
          }
        ]
      },
      {
        "id": "3743d5c3-d91c-4907-ad83-f99170ec54ed",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "54ee65c6-ca44-44f5-8a7a-e343e95d0a90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38467ce0-b0af-46c9-9371-f4356c2ce9f0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f301d85c-7edc-475a-9684-7af5b67c45f7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764782f1-b7c5-4d84-b2be-714a8faebbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bef64176-e5b9-4259-827d-c9be7213feef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d985c5b-0114-4bcd-bb47-d0ee3b886766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "00994ad6-9abc-4bf9-8539-2eab7a2b77c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd4af69-45ed-45f8-b683-456790647ec9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda7e0d0-00b7-4a3c-90c9-55b4e5109f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec9070b-54ad-44b2-82c4-f95daf405a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3f68d0-1397-4482-a7bc-5c561265bb25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46355b76-a54c-47c8-a8d3-d0569f650e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fcf1b7-b223-425e-a4bc-1d7487ffe89d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9bc531-1342-490b-90c6-28337bfefa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61beddf2-c5f3-48d4-9cae-64df6918f012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a461865d-a817-4ce7-90cb-0ae2b72fc936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae793964-5cd9-422e-8bf0-91e3946bcfa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f385a0fa-3ef5-4fc0-a374-6027c337b64e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55c955d-833b-462e-8752-4887d76e72e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab58809-21f5-44ee-936d-b341f06e7294"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2c532b-3f60-44d0-9958-90d2e1c67519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d125a5-e1bf-4b76-b6e2-22fc19af57a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a739348-9bf5-4d27-b65f-8e56a65a6ed7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810f3e09-096c-4c34-9bb4-12328965bf9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30f277a-9302-4724-bc03-2a77fd6719fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab932b9-1487-4c29-9d70-61cbf84c5303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0a01e2-1af3-4b06-81e3-1f4eb514f882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f2617b-2e42-4d09-b08d-e1381b16c7ee",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26a2dcb-5a34-4c18-a963-6a37ce244a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116b1738-9603-4a9e-ace2-bf7ae1c440a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56b1efd-0560-4757-a867-5771c4c13d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08815e01-de78-4d44-ac61-d52fe17dcd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1705e04e-79f7-4242-9456-5b0f7b9187d3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765c7542-ef20-42aa-8116-87e64f7573c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb5cbc5-7613-479c-9c8c-f7bdc3511b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "316b6c62-528b-4a3e-a4d0-042bd8315386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f23881-54b8-468f-b581-2a8d60a5a434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5453917b-e972-4347-a732-f67bdde68125",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638fc96d-79e0-4900-81e0-5017353af031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f03c66e-70b0-4367-b9c8-d7782efc055d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb0dfe76-1e50-42f1-964d-e2aa6e4d0a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3134f55-2f68-4c17-9446-a391ba0814e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a10056-22f5-493c-88ce-6ba8a66a8ac6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3634aff-c5e7-457c-9c0f-0e609879067c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00c95ffc-9cd8-47a5-8551-1449713bf826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5769929-165d-444e-bb66-127f3494d45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d092bb52-8025-4b2b-8c59-afe53adf49f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690100a7-b34e-4f14-8282-368d514fb9db",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f65df7e-b706-475f-8769-05e2b092648a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8ba57f-4718-464d-880b-63d0910baa10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579bc353-388a-4da1-a560-1a43db397450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5ecadd-483d-4664-a054-92f80f57402d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83208aa2-9b0a-4212-92ee-c45f849bc61f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cd7b82-9e30-471a-b6f5-2db1cd44b807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74eb3623-9215-47c3-bcc3-6fde92a12b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fde6bf-645b-4cba-8ace-6c97d1858593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "78a2664b-5795-4ad9-8cc3-496a0492800c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80f0df4-ee3a-4eaf-99f3-a459c5d9d233",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a48d5e7-f44b-47dd-a077-6025c49aaf73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6700dc3-3ed9-4a9a-9129-9e2057724577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af0aae8-3502-4bb5-bb8c-05e22b4ea664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce81719-12fa-4c4c-a824-4aa3d333d5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83db7ea-b56b-4c22-81e7-9bc2c2b35876",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bc8441-32aa-436a-8f89-a8d800e6013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366ce8df-308b-4a87-b649-3fd5d919cb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95f3566-e90c-4d94-a1e3-2ecbaf3ec664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "abadad90-fed4-4abb-bc08-4b7aa0474634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37860c9b-de7c-440e-bee2-ede4e06be14d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdce77c5-13d5-49a4-a9c6-a0b164466a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013fa07f-c237-40f1-af1b-f07b21f7bae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfdb8b5-918d-4d7a-a856-94890756b39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1abb191-f52a-491f-8e44-c92b7c14b47f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d377d76-250a-494c-9ac3-5721276df179",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8b4e5d-e099-4327-9df9-47e4e6905e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2238553-a9f6-4e56-8851-67c35dee069d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98b917e-f1dc-427c-91c6-2971fc6e3d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "51d3bf5f-9fbe-47b4-bc2d-2fef7e73a6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725611af-4b8b-47bf-b7d8-993be17dad17",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c87aa2-3fc5-41df-b8b6-7deb43f64e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730d5aae-069d-42ce-b1fe-e10243601009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38e9069-9b5b-41a8-8392-f4b20acad1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "41673079-5cf5-44f3-b574-42a29b330c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac450e38-d1d2-4f9d-ad02-ab36617089cc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69740cb6-4e8e-4314-9c1f-d57b2797f71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d21c23-07f3-4488-b962-a6011064965e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8547756d-15b6-4d3b-ae1f-d52312569d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "138a8886-d9c1-4d48-8ea4-4821fe6e5b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "915c1765-25ae-4a85-bdf1-a033afb49420",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "015d38ee-c3b2-4a61-a1a3-6b5e6e783996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34118b0-ee75-4be4-80e6-9600c9872c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb69517-daf8-47b5-9197-160422e394d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76ce7cf3-f432-4760-8695-59bf8f511d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0b0bfb-ac1d-4397-b252-b61f5c2395c1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b08ab0d-1823-461e-98cc-72ea1f76c55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a6fe08-82db-4e82-8529-f07d2cc377fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e074f7-051b-4477-8caf-924b78ee3687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "154b8cfd-29fb-489f-861c-07f0bbe6c283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3964edf4-373e-43c1-b821-e86e360eb411",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0117ab5c-b527-4115-acbb-c5e3c51397dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb864c43-ea18-412d-aedf-e302858bde97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88768592-159a-433f-9e67-143bc2c13381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7964c641-8c87-415b-a5e4-15ec4488b1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1e63b0-2360-4d3a-b089-d63d26e2e796",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403c4ea5-2dea-407b-ad45-153adc7d4906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0915b60-b5ef-45d2-b010-bcad332cd99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45782fb-26cd-463c-abe1-3dcd28fa5590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b675675c-661d-4fe4-8a87-e0c6501a3f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bee3380-7ac4-4b2c-a231-3e81732cc854",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49b6ee0-2fb9-4500-8f92-39880d9b7609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad9a2c8-64b0-400a-90c4-4b266c905565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f79274-9076-414a-9d0a-c9331b3582a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d175e6-5e1b-4cce-b0e2-401cf4182ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761f016e-f202-4f6b-b93b-5cfc7aeb2e63",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf1f5fb-73b0-493b-9ad7-074bb50dc98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3409613-627e-4a2c-af15-58e3ac0e230c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbbf769-7222-4570-b157-aa060b1ce76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3747217d-587c-42d7-8af3-699ff9894161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412c4d54-fae6-4e1b-a42f-96fde49f1f63",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73a73c2-ed67-4a0c-a086-e8a61f58634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e966d5e-b59c-4c39-a619-ab36e6d7d6de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc76de43-6bae-461e-aa9a-1fc3bf1041ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "034feaa5-6312-4ec4-93b7-b0e743488812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3030d86f-2fc9-434f-bf9a-b82fec823f6b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21815dc4-4b51-4d93-8573-d0508ae7500d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d03d575-a3eb-44a5-a52a-5ae10b631ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70986d7c-d899-4cc3-92a4-81d09894bebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc1d82b-1c9e-40cb-b2f1-ee6209d29fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef66f1dd-e9c3-4e2b-ae9d-98d84d67d251",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba739a67-8270-463f-bdfb-031556b835ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f957828-dbc9-4a99-902e-274f560e3330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad12f370-1b3c-4a43-adb8-f1dbf2a1671b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2f9bf5-5d07-48af-886c-d7f9b6659978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33b9448-970c-40bf-ad5e-22a40cff311c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ea34e1-a8f1-40a8-ad4e-20f33f385aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f846e5ea-578e-486e-b7a5-62166e0740b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b530dd-645a-4936-8aae-2e23f394c9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "534abede-aa62-4efd-ac40-033c92615bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80b309c1-b11c-4b25-960a-4d521a102111",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ab5779-7b04-49fe-be6c-28db7bd412d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5a4864-72c3-4732-9691-35f001369ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e8af71-256e-4c6f-9d44-8b239021a80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6d207e-1b78-4c42-9ebd-2d0525347dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb46effb-6fae-4629-9098-dea8f6a1eb0f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cb9303-928e-48dc-942e-7c32037c398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c5d5f6-54c3-4345-af0d-bb67656c49d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a9309f2-125a-45ad-98e7-ba92b74c8e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1667c6d3-50e6-421c-ad94-9d76d405e2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16dc116-295c-44cc-86cc-a6c81c3e529c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e9fda61-d251-4aa1-b86d-8821584a9cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb4eeae-7f5b-4648-8bc3-010455d92d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fef944-8153-470f-b202-4defb52c522a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8104c719-4899-483b-84f9-5dabf0e5abc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cb300c-2be8-455a-acab-7280e86e294d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36f89e6-4ed2-4c40-a41d-05d5b0d437c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007eeee8-89b6-4786-8a3b-32c9b23092c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd70c1a5-4fc7-4804-b0b9-33bc35f797c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c64386-5c0c-4f33-b338-2ad098d1bb00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b44122d-f83c-44d2-a9b4-55fd61614e5f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c61b96-6d7e-4eac-8014-a621a825a991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236dfdb0-0723-4f05-b18e-e47df87e799d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765f24b9-cfa2-48c9-b334-22a7fad2b2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bcddae4-8b9b-4c1f-9b16-c70dd35cb27c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "04390d20-6835-4a66-ba9b-8369f12404bf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0e29ee3b-6053-48f9-9b10-c5727838bf7d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a60c53-41a3-441b-bb4a-8b77f67f11e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "db6efa45-f185-4612-a3be-3606926edaa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca7a431-47c3-4614-a100-d62e3eb1651a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff2e5b1a-db68-4cfd-801f-77d155308693"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63177626-05b6-439c-8bef-3c8f1d45d4b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e082e32a-525e-412a-8fea-cb5bf288c9c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3af4c48d-d2df-4f58-9891-d0ef9bc9b741",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f99aac3-eed1-412c-93ba-8e944c65d618"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5acd52e-3e81-46f4-bdf1-f456c1eb146d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "59677a94-899a-4693-83aa-e453b57c5a2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77a03d51-50b7-432e-8cf6-0b3419126717",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a25c24dd-93ff-40cb-9bdf-900bed3655d0"
            }
          }
        ]
      },
      {
        "id": "3c213348-c86d-49b8-8c48-3ed8bed05800",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d837675a-3e56-48f1-8dc7-a91a509ec052",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b05b2923-6371-4794-9c78-5b905ead5908",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f33a4aef-74ec-4321-a6d8-9e27496b7107",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a574d38a-2ab9-4d73-9b8d-e96ccf9c2d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f22b02-a8e3-440d-8d40-93ff5638bd49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f476e778-a58b-41c8-a6fc-990d203e226d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "27d434c1-9da4-4613-b0bf-427ef74815c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ea7db8-376c-47fe-8d06-1615b8e1bb2b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bd2e9e-ea6e-4cf6-981e-d19f1fce7083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3185aa84-1b76-4f31-9803-8c1cf4c0c582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e5c20f-1b22-4c13-ac9b-ee2f14def419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "078c5a1d-5380-4997-a53b-96d9c54bb6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce42ec25-ecd1-4c87-bea0-613be917d904",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7baa5c-fdf7-4c89-803f-436e348b9f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338ebfd6-c904-496e-bdb2-77fe1f6ab7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c16d0a9-e75e-4685-89f8-39119d730f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5a60f6f-13d3-4266-93c9-204411abf491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b9ebf0-605f-4a68-82b5-b9bb3b81df1c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18740f7d-49fc-41b4-9cca-2d3432922b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3494d3-72e8-413a-959e-fde99b7d0fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e46f11c-b33b-4ad6-bca0-252080359106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e31e8ca0-1e63-4a26-bfda-2054e7c4b1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "552e45bc-d472-441d-8a9c-540f0ce14a83",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0c5b3d-d3e5-4f97-a8c3-175c3bde3258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d62a98d-186c-4361-afdd-6a6632149d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fb519e-ecae-457a-8b9f-99196015a4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a464c17-a59c-4718-b85f-eea3edbc0dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f437c102-b1c2-4b9f-a552-038a076502fb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d271fe2-aca4-485a-861a-c706c857665d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c449af60-bfd6-4bb2-a6c2-5395375f61e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3290cfc-d31b-42d8-b5ed-8698fa69725e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e730e9-ef59-4cf7-b4d4-f7b0f1e8df30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eccd0c8d-838c-4a32-b2a7-3821a80b803d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cf6528-2eca-40fe-9b69-46af679843dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df9da72-86d4-4fd9-a4d9-067d8bee16d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723a8971-4267-43b2-91d5-96710d63fdd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b26ce4-ea96-496a-b4e4-39f1821e353f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb8e24b-933f-45c3-9201-bf23f35b9eef",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7058d15-1d15-46bf-8ed2-3ce0bd40ba9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bfa2409-ec50-43d9-b7d3-7091e39d3e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3958ff5-b4e5-4438-a948-c2da72cb047f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3429609b-09da-47e2-b110-06de0bf2fb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a078c30-08d7-414b-a9bf-de3219d62f6b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6849eb1e-1cf8-4081-9b63-3f365dfb27ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9c6d7f-b587-49ef-9527-b4b5995f0161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca46dcc7-69c7-4e51-8021-ca541b5def5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f68e65-edc5-4d51-ab9a-1510606aba32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6961b042-3e1d-4bc7-9b2e-e82aa67fcd1b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfad3ab-bdc3-40d1-a5b9-c41c5df91657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59ebba4-e1e1-41cd-ba5e-d8dbfeeebdd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac943eb-28d8-4247-9649-ecf719a1d65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "375fd566-5b38-44f3-9a9b-1c4684d6f1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19794581-9bfc-4e9c-94fe-ce23d230abb2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189ae40c-1b35-492f-9744-ee6a35eb9b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371e87e6-c04a-4652-818b-1733b2fac1a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6e92eb-eb0c-4aba-a150-155fd065e3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "255c5b2b-d7ac-4300-ada9-4fba7e8981bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c660c3-2dac-4b9a-8bc6-2024719e396d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4292b852-59a0-466e-a078-29b9711c1f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676b1cc5-44ac-46cf-bba3-c3459644c7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbac830-c413-4e89-bd1d-f46c134e7265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7860dd-3a4e-42c1-9ffc-8c1a5178b7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ffd8ec-3cf0-4702-90d0-7fbc75a92f47",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49fab31c-99b1-4db3-ab5f-f020314748ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a43b4e-8370-4150-942f-fb40a463895d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd2b027-fc07-4025-8298-cea3722d0784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f00106e-dad7-4b67-987f-c714cb02d57d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5970e9f6-cc09-4803-b227-a46b35a595e9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c8f9a0-6f1a-4dcd-9508-89364ea141f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a40d54f-8031-4bd7-b2e3-a55d5654ec42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a11578-238e-4af2-8c49-a47e7130bf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "eaf33a2d-2eee-4688-9712-0b6b1d13e0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9efc61-0f14-4502-ac33-16567f79a2b3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0220ed41-ce9f-4ec3-b0a1-4841d24452fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4466bd-a56c-4eae-ba21-a2aa005d4be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a640dc2f-c59b-4cab-906c-8760fa29ecb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef26e041-d388-4bcc-a97a-da456918774e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40d9032-95a4-4737-9cc0-c61164bf72da",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a723fd6-2401-4c24-a800-4d1b5aa098fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ba96f3a-2f72-416e-9081-86554a221b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dd6f83-d8ba-4340-a2cc-a70b92eb9923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b2e803-f951-4a5c-a4f3-adac46d30d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd039916-ba0e-462f-a81d-f3e61e7bdb21",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90d4ac7-0657-4c00-9484-1127d73b2e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6365dcba-04d4-49d2-935f-f5f5214708b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe107f08-37cf-49bc-b773-6ca8a20e9814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4deef890-69d8-4e22-b37a-09d4b7a90b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3e1830-bfcd-4a95-b8b1-f1a998ea9416",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6ba5be-d1c1-41f9-b86c-f4dc5a46b09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9177d21f-214a-4626-9ee8-af8fe11179c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8ffc2f-06cc-48af-94a8-a6677e0899b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd15003-8524-4552-88fb-b2f019e16905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85df4ddc-b504-4658-b13d-bf537320d24e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7b880c-5f31-4a31-b99b-27d839df6051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38c5944-2c12-4bc1-8b2c-f3a0e50304ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edcccd4-14e4-474d-b34c-1b0f6f95a537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd1a21ea-b13c-419d-9f17-d55df1d4f760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d843bed5-542b-45b2-be43-06ae1ffb1239",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09466af4-138b-4611-b508-402e82fcbf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a410c84-fd6e-4146-b9aa-627a0cc078f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c62d66-a1b1-4079-b4de-01cf5eba50aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a6046c-8194-413e-90c0-06deb7786efb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eeccbb6-b065-4f2a-a5a9-c5168b63d149",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "425bb900-c8d3-4d83-9bc8-f01597ca3e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba97ba2-2ddf-4be7-b5e4-b8a5c12ef742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c642fb-c517-42d5-9522-775fd91c6902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e653d81-8949-46c0-8964-3b6413a42503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6ff9f2-bac1-4d3a-86c5-630efa4174b8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfcad206-73c0-45dd-a0c0-c92cee647890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a6c21b-c779-4b3f-8d9e-dcd9068dade8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49f6d66-e7ef-45da-ae62-cd64b6ef3076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb433279-ff7b-497d-b88b-b173f77e664d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2ec3e2-bf49-4ad7-b4d6-b295ea7cc0e7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51c618d-906f-4433-bf4d-aa2310b15e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ecc1a15-f567-487f-a861-d8eea399e22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d4e996-b35c-4265-9b33-7cc9eb351f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94d5de9a-e5ba-40a6-81ec-8606220058e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f8b4d1-9fe8-4395-8249-e90132dba7b5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a92ed4d-a93c-4439-bde4-402e7864f54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be4d1762-0ae7-44e9-baa7-7fb3f95ec7ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0d6d90-c591-413e-9819-f7dda6d6e424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a58681-9dfe-421c-b19f-a4265359d7d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb5ad93-da44-4ce8-a0bc-0f890e967907",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6b3b80-67de-452f-a83e-43b52a08f015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4852b42-b120-4acf-baff-d3a3096e7074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952e2cdb-2cae-4649-a165-b6a19deffecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0615c1c6-da00-46f4-bd29-ae237ca01363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f87f9c-4ea2-4971-bab7-cd65607e168d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e77bea-ae98-44c0-b980-06bf5256db4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00439752-d59d-4bdd-bb15-8c3c43c03791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0f2d7d-3d9c-4751-b64c-4c41d70e9733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ffd5a7-5304-4b4b-991a-b535ad14560c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acabb8fc-00a6-4604-8f0d-5fc55bb8fe63",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c91808f-ec5e-4609-a93d-f6a6b80e38ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f881e82-8557-4bf6-a40c-bccb73477962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac70223-2f84-4647-a7a5-c6ee3a2c75ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60e1c4eb-891f-4cad-a473-476a0650fefb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b1ef92-63a1-4599-bf84-8c46a578b498",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd42cb28-0df1-4223-9ecf-4d44aec644cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385e1566-af2f-4eb4-a97a-40829189afa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231a2e3d-f1dc-4a04-b656-f1479d2babd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2450d66d-4362-467f-be72-fd3f5035c401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cdc03f-5f91-4663-b566-44ece26773a8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8c4aaf-00a9-4815-872a-50bfaefbb988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8599b506-be03-442f-87a4-abe72acea54e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a1c6e1-bc6b-4dd6-a096-ebcf266632a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e72ec10f-acf2-45ae-b621-7bf4044c81c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6164a3a-8d3a-45e4-bdf3-075b152c9993",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0d55bb-aefc-43c5-b2ad-7e669a96ce5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f138654-90b2-4e9f-8599-bb144533f207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c163fe-85bb-4590-b484-5f05edc75f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61fdcc5b-2ffa-4f16-8ffc-36328433055f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a57dc4-ffe1-496b-a897-2c9ce7ce22d0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2340817e-9618-436f-b1b5-87e34ff2a513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728d0db0-2969-4761-9978-2930dbbf2f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03059273-a271-48db-a6f8-c89486d88a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15804a31-6e30-4c6a-b672-e4eb3b870f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d5ed4b-0185-4c12-abce-c6874524cfde",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8403e6ea-8077-4c3e-9480-8f28a464a0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba43ea2a-adb5-40fd-8c46-8e3f3deb6fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934339fa-82af-41fa-ae7a-89ac03195424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0cb2e3-f318-49ae-aecc-e07df25880f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b59a60-7904-4478-81f0-dada4a37734a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c9034a-f53b-4e57-8531-ea3401357e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5797e1-cdf6-4e83-a394-8c4756f9c3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4651b6-eded-4d9a-b881-7a42d682b714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f016f4-59fa-4900-9e26-b6e47ad63b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bb665b-93d5-4d68-9608-7146d63f9bba",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a0eb40-7bec-4a86-893b-6fe054fed39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630a01cb-5ced-4770-831e-e120b616cb67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20082bf7-f236-4289-b38c-33656771ceb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba36c2f-3f52-4c40-a5a6-92cb5f61f26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd023f9b-8618-4bec-ae01-715ed110cd05",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd58eafb-a18e-4324-a775-54cd1f81f889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a098283-738d-48e6-adff-ecb743339749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475d3c2f-1bf9-4cb8-9553-27197370db98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "203e5421-d556-49ef-abe4-438e1739871f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "714a8230-a617-4d95-be1e-d6b651a602a7",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba70f88-1c72-4392-8349-6e74de932164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02829de2-5b52-45f1-bf08-dc191cf5c449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c88024-704f-4887-9b30-e17dc0f41210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b34bfaa-e230-4694-8cae-68000521ded8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00a78ee-5170-41d0-9ee8-72ebad6e47c5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec30a60e-c67e-4a11-a822-034a38f2e236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fee73f-b247-42a5-953d-6cdabc21838f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fb476e-da9d-4b11-8028-3cf5282e8731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af710444-b702-4030-bf40-99e7e3b27cae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "80b9657e-6b75-4782-b295-56d13281a2e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "583ce8e3-c5ab-4b06-ab09-5760985024b8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ca03d4-5c76-47ed-a8bb-c3c7512b8010",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2179d935-d3cc-419a-9b5f-1d2a5ca89c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25806c64-18c4-4f43-b2f0-cb00d4f42cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff7e96bc-71d0-4e5a-9f6c-7b8038f58b0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c7e3f89-6248-41e0-b1c1-c6abd9e0c191",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff28d8ac-0ae5-4167-bc0d-519c2f1066c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b9884df-87a0-4c96-a780-f880e9ec2f69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31eb3bec-ce09-45ce-b7c0-650d42cea983"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49b94324-56ab-4951-8096-0191a5632743",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "58a6a42e-5b28-479a-878a-95719ddb46e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5095a0f8-e8c2-442d-8c80-95b386b1d9b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "509a0a53-6f58-4be5-a4ed-2fd39668ac96"
            }
          }
        ]
      },
      {
        "id": "1a9f56f1-c121-4c03-a13d-248ebe2e56be",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ada611ad-5084-41c6-bd1c-25f3c5ab41c1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "19604499-bd22-42b7-9c65-82a067f9d580",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "341f42c0-c200-4504-b4e5-d0f7ef4c8792",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79145cc-bc5e-45f7-a979-8a3058b0b7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7e597a-c80a-4077-8147-ba526f5f0fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1654c3-1748-41da-a6d9-f2f448226a43",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef3a67ab-3820-4cfe-bdea-12733afd280c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ddb434a-509b-45ef-a97b-4dc44515a041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd904064-9cd9-452d-b8e1-6bc2f5aad78c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d836ed03-6049-4bad-be8f-93920e50da6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c00c036-1455-4e9b-b133-74bc54f440e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cff61b0-2f8f-41b5-8c46-6495538b6e9b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6bba859-43ba-4e82-b7a5-929b27ec1fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09a7adb-b30c-4bc5-a3cd-bcc5da6c5022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41525749-bb25-4fca-9958-5f2e7c1904c9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b204280b-39ce-4901-bacd-b8296b482514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d060a4f-3fe5-4e38-b5b6-74140f46d9aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c97ff37c-2567-4b20-a805-70d29ba51463",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbb7f2f-7905-4cd5-bb6f-527facd4cd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8aad05-9c1e-4570-978e-34fcb722aa03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a1f5580-cb33-4da6-98f1-eab260e2639a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8938d0-7e00-4cb9-8251-ac30299f1438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119e2878-8fa3-4881-aa6a-d3702b020dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49b1311-696c-4181-8278-4f0ca0330b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c827cb-e00d-4cbe-8569-5d97b07c8ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463ca8e8-a02c-458c-a243-dbc44e698a4c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313b14ce-9b56-4266-8c03-f8430dabcdba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7546598a-71a1-4aba-bfa4-0b91c098e1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092548c5-291a-4b2e-ad87-e51a638896c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5587e2cb-eb54-4c0e-9ce1-499c59f17569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc4bc4b-6b53-461f-8334-d30e0c0e9d73",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdcf549-b7d1-42c7-8f39-d86c47a62c47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3805790-45ba-498c-8e4c-745613e3006b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a233272f-7a20-4fab-b3e4-28388717786c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4290db-7891-45d2-9f7d-376e1d84697c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a58603f-4d49-475f-bd3d-c2807a72b428",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a924eb57-1909-4bb3-94d8-1a099bc6a31e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a396f2-6a15-4a8d-aaf8-de8f2d73dc45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1a1835-783c-4b07-a2d5-ccb5b7267827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811713a1-e08b-471b-be9f-748ff6227ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bdc58e-38da-4b56-a961-dc5c5742ee93",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9593273b-bbb3-449c-8117-489737e6a04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1088ca03-3738-462e-a50d-427a6b164245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c0b01b-1cfc-4e1b-a0d7-4ca6ff999060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9422a860-260b-4014-a8cd-0edca0c50bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687c8c3d-0f06-4a52-b878-4b2fde2cb5dd",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0a1db9-5969-4404-9842-4d46ce82a923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd4bd60-118d-443e-aa56-f4f2c035a7eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655f84a6-6573-409f-957f-44033c14a985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64957391-7519-48e3-b78d-3f15e6cdaa8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76b5fde-c916-4621-8402-224800124368",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4f279f-5db3-442d-805b-394e40f01a91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486290ea-a1f4-4052-81cf-afc35834b6ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c5e38f-6dd0-47ca-8c39-861e0f12c95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3904bea7-ee7d-4a28-8303-a0dd0d633dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066c49ad-1737-4116-aa91-59cbb8b124bf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c170b3ab-ab64-4147-83dd-8b1a12a9a3b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990645a4-1547-46c4-ac54-c5ee74d7b2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3f74ba-08c4-4a40-bd0f-c2370a165448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce950268-4a6f-4e36-a121-1dab4aa93b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506ebcf5-7fc1-4b0c-988c-1b1f157dda43",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75604a16-d430-4153-9376-d15207f5f278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "502facfb-9dd3-42d5-8b47-4bad466f51fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c4b685-3f17-431d-a192-bea38c395d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed669401-c350-4678-87e5-ace7f825c650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec62832-e40d-4485-856c-09c6eae71b0e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f04f48-c42a-4359-ae21-74d890aad034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78144132-183b-4aea-a339-a4436c45acaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef9dafb-837f-4d77-b4c3-7f1d229b195d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ba3950-8b2b-4054-8555-be3aba1b01a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a05427-cfc5-4eb9-9cc5-8266ab7bd69a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f380d06-1dd2-4da2-a6aa-115fe08e6139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1788b131-21b7-48c2-a404-1ed67492cf90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58428e3f-fc1d-4b10-9c39-cdfd3ad4f142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac7968b-23c4-4921-ab13-c0be85baa9b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca92475e-778d-48b6-8d2e-c39ec668c3b3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbba015-30c7-4758-8196-0632ed0829ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52df8a5-ac52-424c-a514-b0271a8baf9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813f6cb4-d74d-4233-a9ec-3a435bc4916b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d73c75f-f193-4888-82a0-436d848e0913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7056fb-f901-4e85-bdc5-42039f452b4d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4f1a58-25ca-4566-99e6-0e54ce873591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375f4131-e108-4eff-ba90-ce63c7f86774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9970aad-bf4a-40c9-b894-e5ce259ffa11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c94a79b-e6b6-4c58-ba4e-96fce2eb0481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb0ba7a-7524-4fc8-b2ad-ca240b815bc5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9782f2ee-bd38-426a-a72c-b229c32383b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12fb757d-29c6-424d-b770-d8829f7b6912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d9ade5-a0fa-4e38-a3a9-285dcd65a3e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e836d7-0891-42cf-adfb-3b8b0e0ace24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd4d9e8-3f04-4f4a-871c-a26ccec8687e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db36057c-e54c-4891-b893-73773b9be1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce292b4-f4fb-48c5-9eb9-ed982adc7754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431f1a3b-d005-4e37-9db3-2fbdb210aaed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "429aaf30-b00f-4fb6-8d22-12e44204f479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdf68e1-4f69-46c0-9848-b9d6a4e6d08b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b90e635-c520-4979-b62e-e7873fc977ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e0f936-f847-407b-8202-e764def6ccfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208193ff-85a7-4847-86a3-491bf47409ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ef6023-0154-4ca7-a2b8-687d7d56bd2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e94c95-c2ae-43e0-a373-0b9520395842",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9526852e-7eb3-42d9-a23c-abb1cf514b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8adf58-fbf5-450b-bf09-6efd758c20d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72987d28-3428-4451-8e81-80e182924f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a20a27-f4a8-4a27-94b9-3045f9f65cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe32d42f-141a-4ab6-8935-d4a4a3911193",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017d2de8-1ea6-4ef6-827d-971e2b3676d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "118009a5-0f25-4415-98bb-1e8a94ac60a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111415c4-3eee-4a17-89fe-f79c944cb74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "295ee101-bcec-404b-aec2-4731de7b02d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc348dda-b333-4d5b-b4b9-c095fab49a00",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd951cde-0d47-4148-84e9-2d90961f32fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f61d22d-4e2c-4f66-82ae-5ba55b091dd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ca5686-e2a3-41d6-b89c-1cb90d51d4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8175547-bd92-48d2-859a-9de47c565c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eb7b8c-aa1c-4c6c-9d0e-4a2ebfbd904c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b27ed9-3d16-486b-bdad-a4aeac20c407",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b39fedc-7fe7-42ce-933f-5652ef6eb029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5405b5-b49b-48a5-b936-b9c4b3514480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec6922a-7ce0-4239-9749-dea4df8c8527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acdb87f-1e3c-45b7-93f7-bcaaeeb498e2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d09d4fa-2f31-4eb0-a5e8-6e3de8143d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "047bab36-9b6a-4a2e-b5da-f414e2333795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c4649d-30d9-4746-8a3f-ce93ce0f8d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960806ab-5858-47ef-b847-2b6041f2b3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82818710-b711-45b1-a684-45211a8eadd4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f782daf2-0acc-4931-8df9-f00f24bc47ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1187e49b-6db3-487d-a803-6432c6750468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a51c425-8133-45b0-b96b-857cc2870c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f0283c-256e-4028-915e-bd8bf9282030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98afe7f-a0a2-4dd7-ad4e-a11506c3383e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b53ebd4-df23-4122-b244-48b4cf669b52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38df3e4e-0efe-431c-8251-5b02dd2c2651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322e93c6-c2da-45ea-93ef-a5561ac9ddaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952e9958-c438-40ed-ad40-fa14338d6769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ceca21-4ca8-47ca-bd78-20acabf0c8b3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c50042-89a0-4036-b245-aefff28446c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ac33d92-e993-46f0-89f4-4a9cd3d7a353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c5589c-9769-4ae7-8db6-81e0686f64ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058c747f-f418-40e9-9260-13dc0d2ae826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727994fc-1940-4dc3-a93d-cc25e41f635a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440f9b70-06e9-4537-94d1-00698c5b9b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da915316-1519-461f-a330-6c1573737d9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5265a7-baaf-4817-b7ed-68e7804b9010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b1bc6c-7121-4cb4-9fb8-7a4e119460c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5bae00-7498-4603-ae0d-c0e7b2dac917",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dfcd2d-c48f-42bd-ad0f-6f097fef2741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5717c96f-a1f5-4a61-8ae0-5e739000c055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d6f8a3-f1a1-48e3-ab23-d1d36dff3c4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b648056b-6a1d-4b5c-93a4-ca0ca94c752f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dc516a-84a3-48dd-97c0-31d965c92f0c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b5f5a9-9a38-4d9e-8f73-a1d03ba2ac40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19941d2d-0cf0-40fd-b464-df2f0c82eb7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93513d78-4c3b-4f12-93e4-1965393395d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f657e9-a210-4d33-bb42-5b0d462b6ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8624c4c-460d-4bbb-bf26-338b86ee7769",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9269407-94d1-4750-95b7-2f48e9bd283a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5926b795-2a54-4603-ad6d-81327ad34577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6866abca-8484-4789-92ae-d2657e84a237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f864fde9-e773-4011-90a0-2295ba55a0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8146edfd-73a8-4233-bf3d-76b08ed3266a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc361d7-2d71-44ee-96df-e15f257eba8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1265e466-3b3a-4564-8e57-fb9a56ef232c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e14523-d82c-4695-ad9e-8fcfbce7c5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1bc980c-250b-41f0-ba91-f019a71b68cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a300f88b-1be8-4d4f-a77f-3572a6e60b64",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28658d8-e0b7-4233-b7a5-eed3908ea49c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae73359-8923-480c-8559-3999759c7e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85883a43-b09b-461e-873a-914340f20c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee17ae7-b0f9-49f6-865d-f084311204c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958b5a32-fd7b-4886-822b-efd03734aa8c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2fa288-edb4-450a-8e1a-879a3e3864c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeecf0c4-a0e2-4cfc-9337-b7bfda0b3c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "805aec92-26b6-492c-92ee-66c00b9e7c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97409b9e-7a1d-4921-85da-4dc5edb49ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2aad8c-2a91-42a7-9cb5-be95cc6660fb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7669de98-b4f5-42e7-af99-9210973b5b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c95008-05de-46da-99da-005997760b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60790363-1f02-4285-bb99-4ab24651c816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6187cc60-6347-4fc5-9427-e823c9ade447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da84f9fe-9216-4ddf-8b72-dd5f4ce0daa7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9a1b85-40b0-402b-9570-e5dcae4cdc11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e89201-8c94-416d-bba3-1002268e8b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e162b4d-6473-4eeb-9454-7dd4e1de18db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073538e7-4a56-4103-81fd-10b4fa59b306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e4f880-e9f8-4de3-a4f8-365f63e8e88f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ea60bf-b95e-497c-a730-72428486e8c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd95196-5d1e-49a9-bb40-fa795b1890d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b8e129-18da-4b10-affa-cb2ee87d16be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c05279-4001-4ba1-bcc8-f0f8d1850ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74362bb-3c15-48e5-8814-fd5fc014f86d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b134af5-e619-4f36-a87e-d436ce2dc675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81722739-e154-42b0-817c-7a638dd78a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f59c0a-6374-4bfc-a87d-0cabdafe6ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c315dd6-99ab-4c8e-ba17-1387239074a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "525b1d32-2625-4857-ae9f-d74133ebbd7c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b26a07d-5717-4a2c-a63f-be5035ece370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc278435-838a-498f-9ffe-d9e23180915d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10769e60-ae79-4cb5-8f91-40b71e6e1f4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fd515b-1549-4248-a20b-e967c874159e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007daefd-5d0b-4b83-9938-ad26f92429f4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bb99969-7dd3-4065-8b7e-9c5bfa74b096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98752cba-160e-4329-b5c8-68aa4199b311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8984b3e6-074e-4278-b170-275907deff36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02138224-5f93-499d-af1d-15a5c206dfe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54d5e2ca-d070-41cd-8d3a-cf2f1e3b2595",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19795f0-85ef-4d01-8163-ec81d724e8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59a7aa9-6d2c-4efb-8d75-07b2f4673a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be445354-4c7a-4f24-b41b-e0ec377c7f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772732b7-df67-47d9-a20f-f257d0d89e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62de7e4e-96a7-462a-bbfe-a6436a67365d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4590ef6-78aa-4186-bb43-2ea92be431a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f34b1644-e745-4e24-a7b9-0b44f4bf7640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8a832b-ce4d-40e5-adba-9d2f769c25b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94819b1-177b-493d-9534-9dcfd0409b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4a7bdc-badb-4edc-9653-b0a2832bf765",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24a269c-1d95-4a51-919c-df3ee8235bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82466e55-97ec-45e0-9c92-327ec154606c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7547c8d-199f-488f-b1e7-97e96f0c7af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e82723f9-b969-4078-bbb8-9190d0b23cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45101189-1b36-4677-8681-38827b583976",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17862859-648e-44ed-967e-7ba349fa400e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0804da1c-2474-42e2-b3cc-d7cd159753dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2be4ba-944e-49a9-9f20-8f9d82d118e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd923dcc-24e9-4a4b-9420-dab49fcfcd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea87c40d-12a2-49fd-82b7-18e42e908305",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19badb63-d2c4-4bf3-956b-002d4161b97c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95289701-02c8-49ab-b52c-18fea6c963a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c84de7-bec1-4ed2-be7e-230e86d75e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e92102c-d043-4a86-bc12-e1b16c76e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989748ac-e90e-483f-bf09-31d491355e49",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1976dc-de64-4dac-b1ff-62a848eea095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb692d9a-c406-4cee-bec1-689bcd4707cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "866c274c-4ce4-4dd8-9f7b-b8d4db79bcd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9d5e7c-5ccb-4509-9ffa-363e78de46df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef2b74b-eb1e-4346-b269-1a0457f1d9a0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7ac9a8-a75f-405a-863e-97f12627496c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3cdb2c-8cd0-42b1-a14f-5e09e0e7a363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53988d0-bbc6-4d47-b701-9b6f4511f93e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8e0d59-c125-497d-941a-fa00ed9fff9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa81386-cc99-49b1-ba4c-8b87e2b2ebe6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73afb182-4e28-4702-8bb8-176be53e9695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9792eb-e3e5-4ec8-8ebd-0f3d6e1f7845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9dcd08-db6e-4add-9b74-e05643df055a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3f284d-09b8-4a19-8452-7f77769b01bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271cb285-3334-46db-b122-cece2be13f1b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22efcedd-c920-4afc-9feb-5256b852922d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f43409-35fa-40ed-8c0b-ad6d6b24dce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae153a4-e929-4caf-876a-f8aff9647128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6396824e-ebd9-424e-b947-d1d999ae3011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ec33da-5eaa-455a-b185-b99a7197754f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd23538-0f6b-4a9b-88eb-9fe863144fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa0c1ac9-8943-4f79-a1d3-bd6ee47ca04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa6770c-2a41-463c-9c9c-27a7b9b683e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156c4c24-9559-4eb8-bc89-f3d90edc0ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aba8852-aebf-46f1-a686-f00b0f0d09f2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ceb29d-59bf-4f17-acea-5eec929e4a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7603970-0208-463e-996e-91027a69f7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107f4733-9a9f-4690-a9ac-b9948c7bc428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9302ace7-ce22-48dc-a062-e68020a62128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815d815e-f679-4e34-9741-5c2232e3ca2c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276106f7-b83c-47e5-a232-b19f77f50349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a361160e-82a3-42a2-9d46-b8e631d16972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96821611-aa69-4eaf-9d87-5446700c851c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1a557b-7837-4910-b0eb-0d46d29f4fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad1263e-df1c-493e-b659-616212d03953",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38ffb3d-7d1c-4755-a1cc-ebb47fcf7501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4541222-fe09-469c-8fa7-599ad9b12cee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fa6d68-0527-40d2-827e-eeb80921bd2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37a148c-9f86-4dbe-996c-dc82a8887a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f41d1b-6a99-4fc5-94b6-bdc082a50c66",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a70915a-0fb1-4464-a4e8-38d3c168df80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed30aec7-a016-4017-b14a-2bbf1fa7b17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eebad0a-d5e6-404b-88af-f75b20366a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985bba78-b9c1-4d11-91b2-d307aceca12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e20565e-b76c-4b41-ad2e-23484b9923b4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdef1e41-57da-4042-ba20-bffad62a17e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332967a7-9e2a-4df3-86d9-09bed7be348d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c09751-b5a9-4795-b204-8fe6a9c4bcc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a013663-8e6d-41ee-8f86-c64e102cc038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d56ef3-e0d9-42a5-b6e2-73181e5a40e3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a853da03-fef5-4550-959d-3bc13041bb5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad28a5fa-c9cb-4f54-a635-10bfaa00b566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4cf627-e110-4c25-b289-6e3640b00a95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3c2eec-ecc2-4233-94dc-e0da01fd9578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726bad23-e63b-43c2-924b-364f9e181292",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca4e8c4-3f43-43e0-b694-b55c2980c57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f8fdf2-89be-45c7-a4a7-7db536b69825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4992f7-bb29-4ae8-88ca-7ab77e56f6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f86261-1370-402f-b833-b06474f69ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16355cba-6a0f-49b4-a749-752cc42cd46e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf035b5-3d05-4160-85f0-11781fe4ad7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699cd0c6-cdb3-44fb-8c54-51fde5dcef49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd87793d-87d0-4c40-99b0-03ae5b57084f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4f7b90-3c9c-4bc4-841c-07a7633b3703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8a93e6-a3e3-42d0-ac6d-4b2c66994bb1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de0680c-de21-4804-a61a-ca799ffacb47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ff79a6-db22-46e8-b7eb-078378327bfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5cabb4-e959-498e-afb0-f86c02996b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64fbf2d2-6bb0-4cb3-9f3e-cb357648746f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebabf2a-d349-4c00-8491-47f26e5ccbb5",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0b68ce-e61b-4ff8-b2ea-bad098891b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e883db83-e245-4ddd-bd9a-7d94baedb846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4305230-4e0f-4a50-90ee-4b9e7caae33f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4338f217-bccc-4a0e-b8f1-58870d552393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5274fac1-d93a-4416-8ca3-91c1ac6e6514",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517a9aa1-f68e-4a0b-90c6-eb89b7ec1926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5d4e7f-65d7-49bd-93c0-8e5f017622a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8595451-4ae6-43d2-8a09-3844f78f557c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520252bf-b93d-4c0d-a48c-cbd0b225eb7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0aa615-5dda-421c-8de6-83ed26697095",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce86636-aeda-4691-b585-ee2708c4fade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "034925a5-450b-410a-b500-9bf87a1054bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b2c23c3-37a8-4afc-995c-b230a164adff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f24a90a-916f-4f50-96f5-5c741bee5654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b4adf7-336e-4239-8447-359a17ac4288",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b35a65-ebe2-4986-91f5-3932d4b32b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6adf1fe0-6282-499b-9b1c-67e0ce6bb778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b668867-f139-45d5-a0f0-d5aa4e9ba280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd0c101-c6c8-4c4c-a20d-b61e70cb36a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b66592-ba6d-49cf-8e10-f53a47808124",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95fe010e-e082-41ae-b500-92b01265b415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b96b61e8-7b9c-465f-9bad-69a3b683b190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "555536a0-4e2f-491c-a332-f090e3b9906b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "498404d8-166e-4507-8b01-51cd87c5f682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a709720f-714c-4744-a413-9cfea5b4429c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b9a901-dd03-4218-a6d5-ccdca6280f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1bb0cb7-b298-40ce-9866-b29b7eb825c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae646e95-2733-4796-a7dd-730e5cb3db80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c55b6a-d067-4bfb-9abb-df478092273a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce0a739-557d-4ec4-8a0f-5e155bfa8dc9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d2fb8a-9169-4854-9ff8-835b983a5e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6571f7e2-14b8-43b3-a37d-37f3f7691a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd27b0b-8961-4693-ac89-c6672480c4e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002584bb-8888-4aa6-a438-ff0c3d407834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db81980b-d2c7-4345-a2c2-64221cc4adb1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88447d81-0efe-40d1-a1de-2aa68d223e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b3898b-be24-41df-b9a6-aaedf5cc8776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44aab049-ead4-4264-b240-70c2169ed4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8783cec-2f4c-4f90-a9f6-da6a79c8f5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0bbfaed-c1a8-4457-9659-67f368473850",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2c4e31-0fa8-4d80-88b7-53f714cc7a7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc3cf6b9-ce0e-4b13-9fc4-6ecd67780b28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63411e1d-5242-427e-9c3f-ef5349420754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb2b6945-9a6c-4c4e-b686-19e049b9e473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfb1675-6ece-41d0-8552-4444d271a084",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9aa2b33-3478-455c-8670-d33b4fe58b2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e941de2b-cd95-4730-9e5b-751a08b7471e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef95564-b556-4eb2-bedf-47992cc3037e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124ba7bd-c477-4ec0-ba9f-61a7dcad17cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb24db4-1e66-4370-af69-fe8b2f6fa454",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7a109e-dc2c-4c11-9f38-ea8520cefa6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b3a4620-1a35-438a-a975-25fe4046c3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "914410fc-52d4-4ccb-8f5c-be01ba429efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d42fae0c-c63d-4f30-8d54-88b0c145e7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1784a07-3bd5-433a-9cc8-fea64596cfd1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c129cce9-8ed6-4a65-a8d0-19b1547ccdc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66da2110-be16-408b-8659-0f3eb0a94024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc38e56-6595-41e0-9079-9f81af3c43dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85223a01-326c-4e0b-947a-5975c7b742d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d2e50b-f4f7-4491-9f9b-15aed6a61d44",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f85cb3-9a69-4ec4-86a0-3351f194f34f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0790ae53-548c-43cf-9555-f5ce27b93fa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992a6abe-41b1-4404-8e89-318bc6c2e4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea07c9e0-6928-441c-9a7f-1b3b5b6aa8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2e838b-8014-4731-8372-b3276b88936a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74922e4-db13-484c-8105-9ff8e25fcf02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73adceff-a51e-49bd-9bcf-e8fdfbd51061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43a764f-9915-4047-b96f-d7efa4c6a7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b5b403-e2fc-435f-b7c1-734f80b21df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb91cc04-4e19-44b1-9d14-66d600131ad5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f5c0b2-1874-465c-8a7f-ad650d364adf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4036908-eb82-4387-aac0-ff3581b95697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0725657-b0af-4733-9e23-53bccaa39e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e03592-0045-41af-a0da-08654597507c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3048f4d3-c26f-427e-98de-f9e12e4e54d2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8d322f-75a6-4f8e-ad5a-d6210b6c538d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2416abc2-099a-4efe-9281-6d4b5def1699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e56a72-b4ca-4615-96bf-63f303456e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98882be3-34d1-422b-aa78-5c0a7c56e0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32aa60cb-8df0-45cc-b05a-90dda70920e4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2208a122-7bbd-4e76-891c-6a985aab6bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f14af51-a569-4c99-8435-2be638eaef02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd81abce-3a63-479f-bcef-6a972f9e356f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "891c7fae-e916-4dbf-a6b4-30906dae79a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00132d19-9053-4393-a936-9c242218bdc6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e608e4-1c01-49b3-b83b-299bd2477ab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "066142cb-e651-4fa8-90b8-3c802f737262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a1c859-0d25-4d74-bb75-70f26a4a8a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3de7bee4-0aa3-4e4c-ad06-2eec112aa2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcac0b0d-697e-40f4-b79f-6d8d6c04391c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7ae22b-a823-4df8-931e-70762631b9c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56684795-c8e7-4f37-b2e0-b68b123a0471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "176854f5-056c-49b9-b854-674dda109798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf9feb6-a99c-43e8-a36e-e0f5375328bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e37a0f-0b25-4340-98b9-de14f8b20ea4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a0c71b-338b-41ed-a483-429896ef17c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018b33e9-beb9-4181-9867-5a699b01b57e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc04a1e-34c1-493e-b924-a12bb0b3c00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17730687-a4f9-4de7-b494-42533c5056aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507bc126-6050-4e50-a21c-08377384af0b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0fe75c-64a6-4d7d-b12c-7f235cb59ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5299770-0621-486c-b7d0-e39856487f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09cd016-3fae-4ed4-84a8-6fbeeaf7b797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5c7dae-eb95-4691-8c3e-9d0b89c452f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf511681-cd30-4b7d-ab93-5c278cdaa1fe",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2e3d3b-ba21-4451-9f7b-c97ba70c17e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45716736-fab4-4979-bd48-521f1ae561a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b664ac7-2cb1-445b-a779-aeac1bc43518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62839a04-c3f7-4845-bd4b-3a9fd043abe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c249156-f367-4f4b-9e9a-3401e7290e8a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685c1a8b-b309-4e00-8d86-d19f15b00518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cf4b733-470e-4082-a327-90dad7b972a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50100e7e-d142-4f37-9c83-d86637148e9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a78362-2f61-40c6-a10c-ce706926bc8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3aaa06e-0b6c-4fae-9dc2-554dd4641d87",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf98e99-2fae-492c-9bb2-4376defeac47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "893869d1-6b6c-4878-8504-3c6e48d7bd78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e067ce0-9463-4b9c-9cab-a86577ffe80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03caea29-ccf2-444c-bbd5-7586260cb699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0865ecf7-1fcc-482a-aa07-6e91811c0364",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20bc095-ccdc-429a-8257-edcaeb90e2f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a3f2ee2-01c3-49e6-91f5-524a93d16ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6fa1556-a9e3-458d-96d0-4dd511eb5fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f9ec8ed-ccfc-4099-82ce-8dc86ab0e810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cfbdad-c3ce-4913-b55a-edb981b25169",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2b8a34-cf3a-44d2-b972-a89ab1ac0b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eafd396d-ea52-4d89-bc98-8f10a32c1423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1229fbda-65c9-4170-8c2f-e1deec03645b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12adf8bc-fd27-4094-aefa-c17a106cfe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e2cfef-07f9-48b3-a72b-eb0bd127d2ba",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368d9a78-dd3b-4459-9e32-71ff24c9022b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90db7048-4be9-423e-81aa-2f32d655bf16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4c5c4f-c41f-42a1-9f7a-404dcdde39a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fa3e7f0-07e8-4972-a41e-cbb3a0bd09f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4638dacc-6a0a-41e0-a7b8-315dcbd5477a",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5d4c86-6178-4c42-908d-d107635c441e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72679fef-de37-4fb6-8732-fa96aabc989e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d852cb2-963a-456e-ad7c-702e8d7742e1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b68c1eb-29f7-42e0-be10-6c9306cf7375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d892e620-e109-479f-bb6c-79b45c4ff614",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb70e317-7edf-47d3-8d14-2a042f581250",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f386d490-a16d-4cf8-b94a-7ae95fd3733b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb0fcda-9d67-442c-ae71-57d184c15245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9e405c-c8cb-4982-9861-de37c42ff258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359e027a-812e-4d0b-ace5-f1eb84e571ee",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb55ba0-545b-4bad-b42f-1ab245ad27b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a230a543-8f56-4470-9a90-dda428fbd426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77ce5d7-f264-43d3-af77-30ec0408fef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d5c135-2d9d-4eda-be50-48a730c9bee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2982b4-c3a2-424e-887e-c8e3ce0b6351",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fcc56e-5edc-47c5-bbb2-6509258881a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fcfe8b3-6295-420f-9f06-0436ce48c585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a24648c-b12d-46e2-98d2-cec485ab1a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5edfa1f-3338-454a-b851-46021e4555e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24945bd-fcca-4c36-9604-e3ca2cbcd0b2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e3d1fe-47af-4a1b-b419-7c1bacc0a9eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66ab81e5-6bc2-4343-bbfa-9bba48bea4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc58d88d-f814-4f42-be7c-992e5e861178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b90cd4-3ef6-4675-b7ec-627a5afa20ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2745fc-df96-41aa-a38d-c4107258aff0",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "801d0115-1b45-4611-86b3-d83588e19128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cd1d25b-e260-4e87-9831-425186789bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50bfb9d-32ea-4c29-b0f3-d442cdeebd73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1ab042-acec-40c1-a93a-9e92c138eed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0e994c-8b4b-4227-a927-b4b5f6abe183",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2233db72-e9a0-4b44-91c5-2e694e64a32a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5af5aad9-56a3-438f-8d10-03bbfed7333a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c3738a-27b1-4d88-9003-76b15bca886f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba654d7-76ec-470d-a5a1-9381b2166c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4198b4c7-3441-43ec-a84a-634d31b2360c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3c5e6b-b76c-4db7-8816-99412ff4b18e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e678b5a6-1ef3-44e4-9ec8-9cf3e4c03146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b7ed5a-8b69-44aa-95bc-d71853d83bae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae86bc4a-d20d-4fe3-9df1-73e655bfc67d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f9b1c89-20e0-40a7-b44a-9b0439345ff4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "554a5a16-b704-4e50-bffa-00d645ef7865"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e151e3a-2f4a-4f2e-8981-3a0322147f22",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1dec0a5c-1d16-4b73-9a46-2c8f17e7886d"
                    }
                  }
                ]
              },
              {
                "id": "3898dd3f-dded-4905-ad76-666518a3604f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4df13623-3704-4063-9392-de023bc009cc",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bec8eda-9095-4d16-89c6-a40f8f49ec7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d3225e3c-2714-4727-95ca-a59bcf861017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40ee40c-f9bf-485a-96e0-e59261195721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25f4c670-4618-44b8-9a46-87d6bfd12a05"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "777115d9-6b47-4dc3-b1de-370d444657c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2acd5e36-a87a-45c5-93a8-9c81d800ab8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfd42e50-3fee-45d2-9de8-adbb8d047a91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "636d4e74-21a0-4bee-ac7c-39441699f842"
                    }
                  }
                ]
              },
              {
                "id": "c934461a-57ed-4c65-b909-0d940fbf0a03",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "76a842eb-0502-4ff3-ac7e-a8f0f48263c0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d613a493-5ca7-48ad-a939-0911378f3a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6321322e-282e-4d97-8d85-0416c55d3d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0156ef-8641-4719-a85c-902912dbe739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637a2500-7972-414d-9582-bf1588fbe0ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ec992d61-003c-4bcb-8a06-d969689801a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0b48f773-b45b-4caa-b8cd-68acbc003a82",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d237854d-e1b7-4a23-b212-9d2b0ce6ddb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d3f7a0d2-7318-4581-96d5-25fc83de0bc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1009e0a-83ce-47d5-943f-1ad570ec9d5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ea5baa3-a0ab-4939-9aa1-ee1a690cc060"
                    }
                  }
                ]
              },
              {
                "id": "3e915b9a-c472-43d8-a87e-419e7ca86346",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bd530eb-b265-4217-a1e3-f879e05b7e48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3d89b649-b6e0-433f-9f7e-0732c6b21201"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0df48e96-b14f-4b84-afd5-987a1173e6d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3df536c8-346a-4497-8d5e-1c8f01020a0f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ed7dba6-bf9a-42ab-a96a-63d15c8829e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "775efddb-5923-425a-a293-db3e64114cf3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "348dcee1-196a-40af-91d0-17b877438122",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "860205e0-ac40-45e5-9199-16cd041abb10"
            }
          }
        ]
      },
      {
        "id": "c5a7200d-403c-4e70-8c96-0b34b66d5940",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0482c841-c419-4e9f-9a3c-adb02d6d3161",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d324ee34-6e4e-448b-8113-93adbff53ec8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "187fc15d-7415-4bdb-ae8d-fade755d4967",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97763da-cba0-485e-aa3b-063b7cfab0d9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8d9e8920-e6dd-4384-9ac5-14840026ada0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e7b428-1b18-40ce-b933-c6507a10f378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff174fec-223f-4d36-a015-28d9b423f300"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ce2a3d1-7151-4831-a4fb-7d0097044bda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d152e72-d010-436f-825a-a734e9949493"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2d802f7-4c54-4cf8-8d42-4ece0dd5aae2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2409fb2-9d80-451e-a041-eef3e0dcf96e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b923854d-e645-493b-bdf8-977327e42348",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cd52b7a8-5b20-41a1-b189-ce6749e366ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0722510-ca27-4b3a-bc43-01d1f0c42f88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "365a9e49-7860-45b5-b5ea-7276458218e4"
            }
          }
        ]
      },
      {
        "id": "104e6f49-2795-47cd-8059-d607b9c47115",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0fb085c0-4a1a-49e7-a230-3026427d0c3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "002c4894-9f51-45c0-aad0-c22c7982d82e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96b7f80a-e725-46eb-ad67-23fafc215ae8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5be6254-8da5-4683-a82e-cabc31dcb8a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b0bb1df-bbdf-4ee9-9dd6-5c3a28c27e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b876408-9464-458b-b1e0-cd259aeb8923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "429de57c-9d21-4207-9baa-1419d17383cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cc1054e-a79d-4ee1-bcbc-7d31d14803ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f519dd05-97de-4abc-afc4-cea92259bb4c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "228c147e-d589-4055-988c-eb269fd16143",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a829f14b-62a3-418d-b94d-3015d696a9a5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0e1d9df-1d63-4c78-b2ef-e95311ae53cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68df9683-fd32-4d67-bd11-6d9e8794a342"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "696a9671-c516-436c-bf76-83e419ea4d11",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6ac2b62-0c7c-4c2a-887f-97e4251c0c60"
            }
          }
        ]
      },
      {
        "id": "cf2051d9-c48e-422d-9937-fa67380e0880",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "644813f3-ba70-453a-a63a-aed10d07ace0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d3cc4af3-2427-4854-b484-9cd8137df459",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "067eec21-ff6b-4911-b248-2a5a1f239607",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb2d056-ca79-4fd0-be18-94190bab3feb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ebef864-fe65-4bdd-9411-bf4dae0ca18c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7bbeda-4fac-4054-9ea3-74a7dffbbfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e2c0717-02e4-4445-8074-79cf0d8908d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd79e2e5-f6b4-4b39-a633-ce172fc88c34",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bc23e98-0d09-4b80-854a-f04c1e4df954"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9f45248-5693-4a4c-b713-5594ceb6c598",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "acdf3d79-9fa7-43fa-b7f8-dd99a4b70c95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "23626e03-9e54-4d3d-9a87-735b886f9496",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "48144b1c-9181-4819-98d7-b22ed3ce4a37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ca9d5b2-2378-4104-ac23-1e29620a98df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "88f24f5f-7cd8-4d6d-be79-24939f29aab1"
            }
          }
        ]
      },
      {
        "id": "9356f0ec-0ad2-467d-999b-42d8d466acee",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3b73daf-b742-4824-a926-29765ab4f183",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a9cd503-ef9c-42e6-880b-1b71d12df480",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1a74a4bf-efe4-48f9-aa9b-76b5a8dc59d8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39ff0061-eb28-45db-a76a-d3c3a3de8113",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14f8c398-34d8-4b83-8189-14bcf29a9a57",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 260.19718309859167,
      "responseMin": 21,
      "responseMax": 7550,
      "responseSd": 798.3228347246303,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691023199245,
      "completed": 1691023289170
    },
    "executions": [
      {
        "id": "32c53a1f-c4c2-4202-bda0-f1e50c4c4243",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "83e2c4d0-ed1d-417d-a221-6179f4372fa7",
          "httpRequestId": "7edfe5c2-0ec2-4224-b014-96ee18692c63"
        },
        "item": {
          "id": "32c53a1f-c4c2-4202-bda0-f1e50c4c4243",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e52db0d3-57a8-4da1-a35f-37e5452fa5e5",
          "status": "OK",
          "code": 200,
          "responseTime": 105,
          "responseSize": 0
        }
      },
      {
        "id": "7efda521-7ba2-4eb1-9e33-ef603108efed",
        "cursor": {
          "ref": "50a690b8-ceda-47d4-b7f0-e97be47baa3f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "59d2b133-364b-4825-89e1-862d7d1a075d"
        },
        "item": {
          "id": "7efda521-7ba2-4eb1-9e33-ef603108efed",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3e7a505d-2a9b-4b38-bd2a-b447d5a41963",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "6b7d5cb2-11d2-4a06-9008-e0296ae927a5",
        "cursor": {
          "ref": "9fcb5e09-4f32-4889-801a-1df40eeadeb6",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "da99ee1f-f934-4206-9125-fefb015b1bfa"
        },
        "item": {
          "id": "6b7d5cb2-11d2-4a06-9008-e0296ae927a5",
          "name": "did_json"
        },
        "response": {
          "id": "86766a4a-463d-42c8-97a1-950d871bc4dc",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8408e54-7e61-4f02-b4fb-f77656fe711c",
        "cursor": {
          "ref": "7beaac98-9f0a-4111-b05a-89b2cba24f35",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "394c193e-70e7-4e97-baff-4ace3163fd64"
        },
        "item": {
          "id": "d8408e54-7e61-4f02-b4fb-f77656fe711c",
          "name": "did:invalid"
        },
        "response": {
          "id": "ddb7ce4a-e976-4738-bcaa-1d8b37cb5737",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1181,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8408e54-7e61-4f02-b4fb-f77656fe711c",
        "cursor": {
          "ref": "7beaac98-9f0a-4111-b05a-89b2cba24f35",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "394c193e-70e7-4e97-baff-4ace3163fd64"
        },
        "item": {
          "id": "d8408e54-7e61-4f02-b4fb-f77656fe711c",
          "name": "did:invalid"
        },
        "response": {
          "id": "ddb7ce4a-e976-4738-bcaa-1d8b37cb5737",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1181,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47a7704-8237-4fac-ac80-072ca54e3e13",
        "cursor": {
          "ref": "23d481a1-3e06-490c-a604-119b86e21bab",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "26753cde-68d2-49d3-af5c-d5234e7268b5"
        },
        "item": {
          "id": "e47a7704-8237-4fac-ac80-072ca54e3e13",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "652e335e-29f4-42e0-b5bd-0b50f9cd5f77",
          "status": "Not Found",
          "code": 404,
          "responseTime": 51,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac70e75e-640d-4a15-b350-7ce79b17f33b",
        "cursor": {
          "ref": "d19812ca-e475-4581-a5c1-1c132d3561d1",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d5cc21a5-aa05-4851-b750-35a79f5943ce"
        },
        "item": {
          "id": "ac70e75e-640d-4a15-b350-7ce79b17f33b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e36c4740-b949-4898-9551-91d618bbce2a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d79cc3-ea0b-47ff-a138-685e96f62bf6",
        "cursor": {
          "ref": "28eb8544-5e3b-4700-b067-803bf81c0df5",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b5405206-cd86-4190-97b0-918ff60f8c86"
        },
        "item": {
          "id": "26d79cc3-ea0b-47ff-a138-685e96f62bf6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d950d887-3bba-41cc-bc9d-675c86b923d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07ba465-4e1a-49d8-a96c-09920791df87",
        "cursor": {
          "ref": "39a47cc8-2f39-44aa-8718-74a77c87ca55",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0c046251-3d64-42cc-84b3-ef67ae60406d"
        },
        "item": {
          "id": "d07ba465-4e1a-49d8-a96c-09920791df87",
          "name": "identifiers"
        },
        "response": {
          "id": "54e9993f-2360-4031-9470-00e509627af8",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7132f5-78d7-4774-96b6-b9e4eab2e1fb",
        "cursor": {
          "ref": "2950a229-bc41-4b95-aa76-e4119d59d163",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "94ef12ed-e415-4ff9-9e36-1153ea3b38f0"
        },
        "item": {
          "id": "cb7132f5-78d7-4774-96b6-b9e4eab2e1fb",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0c45d77c-825b-46dc-a6e3-9dfedbf246cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14217181-1144-43cb-b84a-62754d555b39",
        "cursor": {
          "ref": "5184f761-9354-418b-baf3-b128a419f540",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a3b5e91c-4bbd-4d50-97ec-9658ecb02a65"
        },
        "item": {
          "id": "14217181-1144-43cb-b84a-62754d555b39",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d3141a51-ee5b-4c17-b1c1-a25fd1c91e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1177,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18de8ee-60b0-4d28-8a6b-c070d7097a2d",
        "cursor": {
          "ref": "8ce6e27b-202e-471a-bb9c-528e4c62f5a2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "88f35487-bacb-4c98-a3b0-d245d875bdcc"
        },
        "item": {
          "id": "e18de8ee-60b0-4d28-8a6b-c070d7097a2d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9bcd43d4-13aa-46a4-868d-7263dcaa3d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54add7a-f4b0-4574-ad8a-02706714d095",
        "cursor": {
          "ref": "782a2cf7-06bb-46f2-9902-67a8bb2744b4",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "417b8fff-7cdc-4b73-b963-504a71065632"
        },
        "item": {
          "id": "c54add7a-f4b0-4574-ad8a-02706714d095",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5da27fb4-1be1-4f08-8426-af31e619f074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5affd5df-1d51-4a23-8f91-130f4979f812",
        "cursor": {
          "ref": "a2b25d0f-f0c6-4cc7-954b-659e576569d3",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "336b1872-b718-44fa-b8d4-b6825e2b3d8f"
        },
        "item": {
          "id": "5affd5df-1d51-4a23-8f91-130f4979f812",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b91339c9-fbe2-412d-9586-a060c3d21407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59c1f3d-68ad-4dcc-87a2-3ceec009b3c5",
        "cursor": {
          "ref": "eb55e0cc-c371-4ee7-ae2b-c6bc36aad0a1",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "927b30bf-0960-4f22-94a4-1941cf95d6db"
        },
        "item": {
          "id": "c59c1f3d-68ad-4dcc-87a2-3ceec009b3c5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "146b5ebd-de4e-4fb4-88e1-648b1277172b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89b8f728-539d-4529-833a-c4abf08bcd87",
        "cursor": {
          "ref": "7f9ff137-cf5e-4c99-9ae3-4ad55e1a45b1",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0c6155fb-f131-4971-8f17-7b4399ac0913"
        },
        "item": {
          "id": "89b8f728-539d-4529-833a-c4abf08bcd87",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d084a4bb-8db8-400f-a81e-4c34b5f21600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dcf142-8afc-466b-ae47-7d38a3430810",
        "cursor": {
          "ref": "e8da2baf-58ad-4f60-93c5-e9877ee4047b",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bd8fdd14-2b49-42fc-a584-871a45cb7b7c"
        },
        "item": {
          "id": "74dcf142-8afc-466b-ae47-7d38a3430810",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7bb65cbd-080b-4ef0-84e5-5da2505be433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd5daa83-fd7f-42fa-9043-63b54ee7ba8b",
        "cursor": {
          "ref": "17011c5a-c31f-4b2d-a7e8-e523c1b27736",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c547630d-f8b6-4526-a137-aac727600ac5"
        },
        "item": {
          "id": "cd5daa83-fd7f-42fa-9043-63b54ee7ba8b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "23a02c93-5450-4314-82ec-90637604adf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768dcd40-ff96-43ed-ae90-795df757bbd8",
        "cursor": {
          "ref": "f3d0df94-f6bd-48aa-aee8-b104d70cc2c0",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "25225b25-09c7-4169-aa1b-7ee1067fa61c"
        },
        "item": {
          "id": "768dcd40-ff96-43ed-ae90-795df757bbd8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6d5bf723-3c88-4996-a62b-28a3900d1fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35576cb8-8b2d-4331-a6bc-4c2e5a4176d3",
        "cursor": {
          "ref": "7a73e783-00f8-438b-a45d-b8934fe2094c",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "18b53b59-64e5-4f26-9607-6d6c028598aa"
        },
        "item": {
          "id": "35576cb8-8b2d-4331-a6bc-4c2e5a4176d3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3093fefb-c8fc-435c-8942-7adbc41a27c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24f3d1d-8445-4a66-a947-09e40dc6e9f9",
        "cursor": {
          "ref": "86a0a6f8-d43e-4c82-adb9-8bf3384ffcaf",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8afdd30a-6402-410f-93ba-6227b09ed365"
        },
        "item": {
          "id": "c24f3d1d-8445-4a66-a947-09e40dc6e9f9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fc5b5781-cfb6-4014-863b-9e07d01ca00b",
          "status": "Created",
          "code": 201,
          "responseTime": 1923,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "c489966a-be3f-4cc9-b30f-2df662af0b60",
        "cursor": {
          "ref": "c1eab742-b184-4bfb-8e22-6cc999e371c1",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4cc2ebbc-1676-4a48-9261-4edd5433b943"
        },
        "item": {
          "id": "c489966a-be3f-4cc9-b30f-2df662af0b60",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7f4d4845-2bfe-4a85-821d-03753a9ce589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad3edde-fa18-4f1d-832b-3d8dd4be07d7",
        "cursor": {
          "ref": "7b1d96ab-8920-4a22-905a-4b79d2518c5d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6408d76e-0bcd-4d25-b993-480dc8078269"
        },
        "item": {
          "id": "0ad3edde-fa18-4f1d-832b-3d8dd4be07d7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bf4b12b0-499a-4bd4-a076-b31a91cac651",
          "status": "Created",
          "code": 201,
          "responseTime": 7550,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "3ce2d870-5f28-4c95-8e31-799a7c958674",
        "cursor": {
          "ref": "e3f90a7c-e848-4437-b6ea-78d2c41462a0",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9c2f7229-9cf6-412d-9f7c-99df982c9a77"
        },
        "item": {
          "id": "3ce2d870-5f28-4c95-8e31-799a7c958674",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "95abb3d2-98d6-417a-9fbc-eebeb087b75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3d29b1-a241-433d-b8d2-af18487f834c",
        "cursor": {
          "ref": "0abc3fb6-77b9-4916-91d2-b37526aaae80",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b1d8c31c-778c-4564-b200-c04167938715"
        },
        "item": {
          "id": "cb3d29b1-a241-433d-b8d2-af18487f834c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ca71d19c-39e1-40e0-8e6e-2475bc4b0ffa",
          "status": "Created",
          "code": 201,
          "responseTime": 2744,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "4bb4d185-d6ae-4109-828c-19e51245194b",
        "cursor": {
          "ref": "008e54db-bf8a-4af1-8e72-c9b360a56479",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "279d80dc-2f61-4fc2-bb6f-b70738303a04"
        },
        "item": {
          "id": "4bb4d185-d6ae-4109-828c-19e51245194b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e5ad4ec3-32d9-4106-9d07-54590af53b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b9b154-bf85-4d19-8afd-7a6824cf5d35",
        "cursor": {
          "ref": "68444c60-ba47-4d20-aa3e-376489cca62a",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f07a4e09-f7b2-4063-aa08-5f7bdbcc1b61"
        },
        "item": {
          "id": "76b9b154-bf85-4d19-8afd-7a6824cf5d35",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "94274e52-920a-4cd1-990c-4ada82fc7672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a10b8e-5c25-429f-b45c-e39db4c07e6b",
        "cursor": {
          "ref": "462a578a-6f31-4d68-954a-82b00556da9d",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "3fa2f92d-696a-4148-89f1-9b394d26cbed"
        },
        "item": {
          "id": "f0a10b8e-5c25-429f-b45c-e39db4c07e6b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6d66da0e-0a8e-493b-b793-952a12f118f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50a2620-7a0e-4698-a693-f62062ae3057",
        "cursor": {
          "ref": "b36a93e8-b88f-4b06-b249-b23b8c197545",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e8d7abc2-33e9-4697-ba56-5181db8e9426"
        },
        "item": {
          "id": "f50a2620-7a0e-4698-a693-f62062ae3057",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e575da1a-cc67-4b93-8f98-dbe9487b6fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac1b31c-df8c-40b6-98c7-17545279fba8",
        "cursor": {
          "ref": "8693646c-4621-468c-9fb3-339bfb0e4556",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "18b0a9b5-3f96-4513-a8b2-2909a9a5a52a"
        },
        "item": {
          "id": "0ac1b31c-df8c-40b6-98c7-17545279fba8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5a488f46-9b16-436a-9be1-cc5c3769feb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3dd917-6932-4fbf-8ff2-0e38b6f4dc36",
        "cursor": {
          "ref": "856cc837-a9fd-4c54-891b-aca974261c55",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2bbeae73-ea39-488a-ba04-206624133bf6"
        },
        "item": {
          "id": "ce3dd917-6932-4fbf-8ff2-0e38b6f4dc36",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "20130e15-cea4-48f7-8cca-67b5ba4c304f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3858db47-e85b-40d2-8cd2-f55d1ec7bedb",
        "cursor": {
          "ref": "d80dfba2-2db2-4d23-898b-5d9b5711b600",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7b80cac2-cfd2-45f8-a99d-8dbcba144532"
        },
        "item": {
          "id": "3858db47-e85b-40d2-8cd2-f55d1ec7bedb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3f4c97ab-035e-4466-b794-fbb2bb6ce1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a12a91-ff3b-4e08-a868-290fd3942bf1",
        "cursor": {
          "ref": "34b7d2ba-633a-4d2e-ab28-0ae9a4d916f2",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3feb1ab7-0ac1-4043-b1f0-4fbae252855d"
        },
        "item": {
          "id": "67a12a91-ff3b-4e08-a868-290fd3942bf1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d03ebcb9-a00f-429d-b3dc-387aaa70a590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb461394-5423-405e-8f44-58218f3b7c56",
        "cursor": {
          "ref": "fd642ee7-0618-4fcd-8cd1-2960ec7f5a7c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "29dc1e2b-964f-4856-a89f-7051097f49e0"
        },
        "item": {
          "id": "fb461394-5423-405e-8f44-58218f3b7c56",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ace38557-3869-4fe8-8723-a7425bb3e2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748436c7-ecf0-40eb-8f0e-c623c95cc90e",
        "cursor": {
          "ref": "4699c17c-b6da-47d1-a73c-b5e03f8c42f9",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c5c19b58-c4cf-4004-9420-aaefc6d377d1"
        },
        "item": {
          "id": "748436c7-ecf0-40eb-8f0e-c623c95cc90e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "ef81fd39-5dae-4a92-91d9-63bc52b1634b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd1a6ca-2cc4-4c6d-bdf1-b9d354f6494a",
        "cursor": {
          "ref": "0c8f8724-6138-4bc1-a205-09a275190b12",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f7498350-ceee-4aea-bc5a-93d0b7cb9a29"
        },
        "item": {
          "id": "bcd1a6ca-2cc4-4c6d-bdf1-b9d354f6494a",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6577f4b2-bf94-4275-92a8-451cb2e4e5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05414112-0bc0-47f3-8c9a-4fce3b2d228f",
        "cursor": {
          "ref": "8a65e36f-225f-4069-9cee-44207cda9782",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f496a169-1481-44c6-8528-cd84626c7f3e"
        },
        "item": {
          "id": "05414112-0bc0-47f3-8c9a-4fce3b2d228f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7aa75c1f-fd3f-47e5-a7e5-31fc5712964a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a33fc8f-c921-41ae-af94-ca5b00b07d04",
        "cursor": {
          "ref": "9c098616-1df8-46ab-9067-b0000811a75e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1eaf525e-480b-4bd4-b253-d3151efeec4b"
        },
        "item": {
          "id": "6a33fc8f-c921-41ae-af94-ca5b00b07d04",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "51a88559-690a-4091-9227-9c9ba57849bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc5ff16-8b26-4ba5-8069-ebe836e92a84",
        "cursor": {
          "ref": "e4c01e1e-40a9-4cbd-a91b-b3171e00e065",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7f7aed7d-b700-4ffd-8b48-6a05fbbecfb7"
        },
        "item": {
          "id": "2cc5ff16-8b26-4ba5-8069-ebe836e92a84",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4cd86ec4-7950-46de-a3e8-2d0550c3ac16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186d86db-9000-4462-8463-2aeed6bd804b",
        "cursor": {
          "ref": "3363fb76-0182-4a6f-a1e1-fde1ad2f91c1",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8da6c6e5-3c56-4b2a-b9ed-ce0d1fd72fdf"
        },
        "item": {
          "id": "186d86db-9000-4462-8463-2aeed6bd804b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6da539aa-1970-4cc3-bbe6-1ae8bf5d143c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e868b1-6f3d-47ed-9071-77186ef1917a",
        "cursor": {
          "ref": "a0bc2f96-aab3-4a27-920d-1f68ef196124",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "38f0c275-413d-47be-8713-ecc8765d550e"
        },
        "item": {
          "id": "21e868b1-6f3d-47ed-9071-77186ef1917a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "65f376a9-16bf-4a64-9ff4-4fb99a05e1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d0db9b-0ab8-47db-a99a-9457dfba4794",
        "cursor": {
          "ref": "a0640472-c142-4444-b880-5ed413848cb0",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2171b684-07b7-4072-8c1c-5a56dac28fe2"
        },
        "item": {
          "id": "80d0db9b-0ab8-47db-a99a-9457dfba4794",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3876d98d-bc16-4c9d-a34b-47357b074f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ecb22d-90c6-4302-b6ae-c2a9c3a810d4",
        "cursor": {
          "ref": "b98c9439-0651-4ad7-aad8-902b539f36b6",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "99f16a8f-3398-4a97-8f84-aa3b7a917d77"
        },
        "item": {
          "id": "a6ecb22d-90c6-4302-b6ae-c2a9c3a810d4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a1509621-14a4-4703-b1ee-43ae29b6a0e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7c2c9b-5889-4d19-9dd4-72ea5c51cece",
        "cursor": {
          "ref": "6dcf1f54-d56c-4257-9206-cb42c739cff6",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "61a06ed2-b5de-4c54-868f-4fc5aa300ca3"
        },
        "item": {
          "id": "4a7c2c9b-5889-4d19-9dd4-72ea5c51cece",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3b23ca5b-7939-4dbf-9042-95e579c48061",
          "status": "Created",
          "code": 201,
          "responseTime": 5348,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "802a1820-b444-4396-8386-8bb20fe3d605",
        "cursor": {
          "ref": "09258601-79b3-45d7-ae02-2a4b6eef1e8c",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1b08bbfb-d54d-4fce-82c3-04de709e636c"
        },
        "item": {
          "id": "802a1820-b444-4396-8386-8bb20fe3d605",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "07e2270c-7ed6-487a-8445-c7a9be704d7f",
          "status": "Created",
          "code": 201,
          "responseTime": 4003,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "8533aa6e-4842-416e-980f-fb5e707184d7",
        "cursor": {
          "ref": "e71d3e7b-4827-4aae-b1cb-ac9a8bc30a59",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0a488666-d881-435d-a71f-0a614d160a00"
        },
        "item": {
          "id": "8533aa6e-4842-416e-980f-fb5e707184d7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "73af7855-6ea0-4697-8ff8-7a95e642b3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbd8e92-d1b5-46b3-b435-c1deaf1531ab",
        "cursor": {
          "ref": "a4400b89-d6e4-4515-aa2f-f518d317a9bd",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c9626586-e1d7-4ee3-9e8f-245cc791da05"
        },
        "item": {
          "id": "4cbd8e92-d1b5-46b3-b435-c1deaf1531ab",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "58f47d08-7f9e-4783-be5e-1334a748827f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c57a2d-b040-47c4-87a4-81e1365aaae6",
        "cursor": {
          "ref": "2717db0a-3bbd-4d82-babb-a97add9e4128",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "3f7f83b3-e6f8-4f73-80d0-9cb23dc8f3b5"
        },
        "item": {
          "id": "33c57a2d-b040-47c4-87a4-81e1365aaae6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d3b88618-64e4-47cc-b8cf-0debbd61d70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0a95e6-2379-424b-99e4-510ab5d08e62",
        "cursor": {
          "ref": "297e8d0a-4da6-4aa8-8fb1-67941cab8ff3",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f36dcd50-b681-421b-bd1c-982b34d6ed1a"
        },
        "item": {
          "id": "3f0a95e6-2379-424b-99e4-510ab5d08e62",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "77e97d88-439e-47de-b87f-b8b5fdf42b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d23995b-d750-4faa-9056-a716fa9b41ee",
        "cursor": {
          "ref": "6bf103d2-ce1a-4194-9781-b5cf98e6bb3f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a15fce42-dc3f-401e-a3ed-6ff4d2242d0e"
        },
        "item": {
          "id": "2d23995b-d750-4faa-9056-a716fa9b41ee",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "23f8123c-d43b-46ac-ab66-2f6b2410d7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eafe774-5732-41b1-a9b2-8f2bc3ad1141",
        "cursor": {
          "ref": "0c33cce3-e41f-4652-97c3-386f890b5ff2",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a821cb10-41ee-46c1-a90f-61a54aebee2a"
        },
        "item": {
          "id": "5eafe774-5732-41b1-a9b2-8f2bc3ad1141",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "10bb839d-dc14-473d-b4f4-5559cc6d195f",
          "status": "Created",
          "code": 201,
          "responseTime": 2885,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "998e5c78-9ac6-41ae-ba92-137be1773b3b",
        "cursor": {
          "ref": "a5b13166-75a0-4c5e-bbf3-cf439d45f91e",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8984929d-239c-4bce-8cae-ec3e1eb18cee"
        },
        "item": {
          "id": "998e5c78-9ac6-41ae-ba92-137be1773b3b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9c733412-4c1b-4f54-8c95-bc17bcca25d3",
          "status": "Created",
          "code": 201,
          "responseTime": 3324,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "208e595d-296f-4a72-bfdc-c4dcff64fa3f",
        "cursor": {
          "ref": "21878e4f-7218-4d67-86de-c544ce11231d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f0b4333e-1556-4e56-80e1-b4a75dee5ca7"
        },
        "item": {
          "id": "208e595d-296f-4a72-bfdc-c4dcff64fa3f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4525a87a-2310-44b5-a744-118b68f07f2f",
          "status": "Created",
          "code": 201,
          "responseTime": 2444,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "6b5dc061-abf3-422a-a9ed-e09a058f7025",
        "cursor": {
          "ref": "fba0c2f8-b751-4384-8795-8180782ce08a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "27cd4374-14da-49a3-9ec4-b95e79df7bd2"
        },
        "item": {
          "id": "6b5dc061-abf3-422a-a9ed-e09a058f7025",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "62a0e988-a4e4-4dc2-83d0-289dfdaf05ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c874b24c-2a43-49ef-ba33-1afb961efbf9",
        "cursor": {
          "ref": "271b2b74-ea74-4190-b8f4-ad95653728a0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0886a9ca-e109-49af-9f8b-884554214037"
        },
        "item": {
          "id": "c874b24c-2a43-49ef-ba33-1afb961efbf9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "12b024f1-4891-48b6-ac0e-7c63e28fb4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ceb8c62-0959-413f-851d-12550584ac7e",
        "cursor": {
          "ref": "350a25d6-6ab7-4abd-8eaa-fbcd0706a76a",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4562228a-0cda-46b8-8493-a5ec3c0ef3dc"
        },
        "item": {
          "id": "1ceb8c62-0959-413f-851d-12550584ac7e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f3ea5e3d-8751-468b-99f7-a372930a943f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bdc2fc-0acc-4a8a-9b24-b976a2c87697",
        "cursor": {
          "ref": "c9a1aec2-a732-4278-8ed2-5cbb5f8a7f09",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cec33827-d627-4d9e-8ae1-3f5b3d5961d6"
        },
        "item": {
          "id": "f7bdc2fc-0acc-4a8a-9b24-b976a2c87697",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "dc8b16a1-1cfa-4950-a898-ee69db1cb20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2453e9fc-354e-472b-aece-ba2b85742913",
        "cursor": {
          "ref": "0067c651-2245-4b6b-bb58-2582ac616c53",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9b9725fb-b7a0-4cd4-8ec7-43ccb758c461"
        },
        "item": {
          "id": "2453e9fc-354e-472b-aece-ba2b85742913",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "84aadcdd-3c16-47ab-965c-778547b8e607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbbc3a8-ef1e-4ef2-aa8f-3ebd1919109f",
        "cursor": {
          "ref": "b2863acb-61a6-465a-8a84-ab4e9cac6d3f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5e4f0d21-5ef1-49a4-a4d8-7213dbdd54a1"
        },
        "item": {
          "id": "cdbbc3a8-ef1e-4ef2-aa8f-3ebd1919109f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8d673285-e5b5-4fd5-ad19-a53df1e2ce75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a34fa8b-cf80-4baf-bf5b-bec8bc217b5b",
        "cursor": {
          "ref": "32179a13-1966-4b6b-9c71-925fed08b97c",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ad8516c3-cc19-4973-97fb-8eb312ea236c"
        },
        "item": {
          "id": "0a34fa8b-cf80-4baf-bf5b-bec8bc217b5b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c3128fa6-9335-4141-bf8e-48fb211411ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5ec6df-8c2d-4e6a-b56b-fbda4861ba0f",
        "cursor": {
          "ref": "f6c2447f-d9eb-428f-84fa-44734b9836f1",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8fc8dd52-2f1b-4897-adf5-cb417694263e"
        },
        "item": {
          "id": "ac5ec6df-8c2d-4e6a-b56b-fbda4861ba0f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "a8bcb4a2-37e4-40df-8507-563807e5ff0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60cafe0-6dad-4cd4-a05f-13f50cc6d3ba",
        "cursor": {
          "ref": "b7f84337-bc8d-417a-8277-4f0c60cb8ba4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c6dcd7fd-8c4c-45ce-8555-ae1f11d9ea70"
        },
        "item": {
          "id": "c60cafe0-6dad-4cd4-a05f-13f50cc6d3ba",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b0dde17c-f7fd-4c8b-b600-47fe60e961d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df660291-908f-4ee4-ab29-2d72edea0086",
        "cursor": {
          "ref": "56f080a6-13c5-40e4-97c9-089ef6641bf3",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "840a2ecc-474e-481a-9b80-47d25f349818"
        },
        "item": {
          "id": "df660291-908f-4ee4-ab29-2d72edea0086",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "81bdae0e-4fb6-428a-b6e8-73cdd6ec483b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e7e88c-6990-4259-a73d-6b56c707cf11",
        "cursor": {
          "ref": "4219b10d-de92-4ff7-ac05-bb0beec004b0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "caae5f48-e4e5-4d79-838e-61aa1cc5fd57"
        },
        "item": {
          "id": "60e7e88c-6990-4259-a73d-6b56c707cf11",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f2fcec94-52a8-495a-8476-304fadba3f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7797ff-ecde-41fa-b79f-c2c4b8c83c02",
        "cursor": {
          "ref": "10ff16ae-4147-4cf5-9432-2f099d71469b",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1bd5f34c-8c6e-4973-a829-e9fccfbe3ecf"
        },
        "item": {
          "id": "8e7797ff-ecde-41fa-b79f-c2c4b8c83c02",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "78768bb0-cbed-46de-980d-b767c6a992ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d5937c1-edba-4968-aeb6-2c84fa583ddb",
        "cursor": {
          "ref": "0710f8dc-3be3-4544-aa3c-e52647624938",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "06522a23-84ef-4833-b9cc-7ef8af319155"
        },
        "item": {
          "id": "0d5937c1-edba-4968-aeb6-2c84fa583ddb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "26e80343-a763-4b6a-a2c4-dfca3f398f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbab1c3-27f4-4a8c-a644-e1d1e6194343",
        "cursor": {
          "ref": "3b43b0d2-1fe2-4cc0-b7ef-f022f3ec608d",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c29eee99-24ef-4862-b207-9a6b095b7ac7"
        },
        "item": {
          "id": "0cbab1c3-27f4-4a8c-a644-e1d1e6194343",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e2d2c01d-4734-495a-ac17-65bb76f1f1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86f971e-bf01-448d-9bae-7717fef034d9",
        "cursor": {
          "ref": "4d43effc-9729-4a35-b5bf-cb9f3e822dc7",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "009ce279-05f3-411f-9e28-900a030bb3f4"
        },
        "item": {
          "id": "f86f971e-bf01-448d-9bae-7717fef034d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6af1a545-acd8-4a9b-87d3-153c54696d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31333cb9-28e4-4d87-8c52-b151f85599a7",
        "cursor": {
          "ref": "207c3fea-1557-414f-8be7-10716d87e31d",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "1a474a9d-c452-4803-9994-21a7dad4bd77"
        },
        "item": {
          "id": "31333cb9-28e4-4d87-8c52-b151f85599a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "737fccbf-761e-40dc-8c06-3c36c6f508c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e513172a-251f-4d06-beb4-62911928ed1f",
        "cursor": {
          "ref": "a99b1035-7262-49cf-ac64-7b7bcc6e528d",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d9107e77-7013-4b75-972b-eaefd97a95bd"
        },
        "item": {
          "id": "e513172a-251f-4d06-beb4-62911928ed1f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fad40394-acf1-4c0d-b9d9-726903416022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a7d889-361c-445a-b5f1-b0d73748c289",
        "cursor": {
          "ref": "74f3adbe-0ef6-4c29-b85c-d458aae3bd44",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d231d8fd-4979-439d-b317-86c4dec1a955"
        },
        "item": {
          "id": "68a7d889-361c-445a-b5f1-b0d73748c289",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "6b1602b3-11a3-4eee-99e3-581329453b84",
          "status": "Created",
          "code": 201,
          "responseTime": 2223,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "fcbf1095-c266-42fd-9661-ca4c1b24f87c",
        "cursor": {
          "ref": "5fe6dd6e-6fe7-43a5-8166-2a0594cc721e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "26fb1a65-4bd8-4f82-a276-135e42dfc72c"
        },
        "item": {
          "id": "fcbf1095-c266-42fd-9661-ca4c1b24f87c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c4cabd6e-1d28-4693-ae74-9d69b43a0d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d8ef98-1f22-4b74-b49d-69fb69082016",
        "cursor": {
          "ref": "1346dccc-0a2c-46f8-b608-d54a1df78838",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c06c4ec8-280c-40d8-88ad-0481a3379dde"
        },
        "item": {
          "id": "43d8ef98-1f22-4b74-b49d-69fb69082016",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "04cea13c-7271-4527-89ca-61201766d2ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647954c3-d295-4e21-a7ec-9d9d8634cda6",
        "cursor": {
          "ref": "d6eea9de-86b0-4c5a-9fb6-1c8962b343ea",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7eb516fd-bf86-46c8-9979-c0f022d29fc9"
        },
        "item": {
          "id": "647954c3-d295-4e21-a7ec-9d9d8634cda6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4e8e998f-6481-442f-88e7-78c3531caa03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223b5bd7-480a-4ecd-a0ec-529d53e0bfd1",
        "cursor": {
          "ref": "73313d8f-ad3f-41b2-b88f-861c93a3dd66",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a8924e88-2efa-46b7-bb2b-e3618495678f"
        },
        "item": {
          "id": "223b5bd7-480a-4ecd-a0ec-529d53e0bfd1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e45d6d4f-81cf-4923-97b3-4c3569e4d90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77c4a63f-f280-499e-8159-3228d1708f30",
        "cursor": {
          "ref": "71806556-1b6a-4f56-ab3e-f4162e7584db",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "104af5bc-e947-4c42-8c44-3c57fa70bf97"
        },
        "item": {
          "id": "77c4a63f-f280-499e-8159-3228d1708f30",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9037cb37-da3a-4c58-81c4-7ae8a741ab76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d165b2bc-e233-44cb-8b62-45b075fd7569",
        "cursor": {
          "ref": "edff6508-3bbc-447c-b83e-4d248bdccd8f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cb9ce846-38b4-45c9-8df9-394df6ff84aa"
        },
        "item": {
          "id": "d165b2bc-e233-44cb-8b62-45b075fd7569",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f0c1d94f-e6a4-47c4-824c-ca7adb4e3387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b405317-c197-4b51-92b7-008bb25beacf",
        "cursor": {
          "ref": "68a4aaf9-f4dc-48dd-85d6-0019f39d5821",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "de9af974-67f5-4273-a091-8102d5a54f12"
        },
        "item": {
          "id": "4b405317-c197-4b51-92b7-008bb25beacf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2e32a500-c029-4bba-b223-77e8e9968877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e78b0e-ea08-4831-990b-4e6c7828cd1d",
        "cursor": {
          "ref": "945bb23d-54ae-4912-94e5-7c72d9e949a8",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c41830e4-f64f-4a40-99ae-1f0ccde7dfdc"
        },
        "item": {
          "id": "f3e78b0e-ea08-4831-990b-4e6c7828cd1d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f0fe2dc9-dac8-4757-8f7d-a91ccced33b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dde0913-a56e-4aaf-99a5-bf89bafc59e3",
        "cursor": {
          "ref": "3f3fb36e-90e8-425e-b9d1-7ddb8e27bda3",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "dac60c34-e8a8-4dfd-a24c-170784e238e2"
        },
        "item": {
          "id": "0dde0913-a56e-4aaf-99a5-bf89bafc59e3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6ed53c9f-4c88-4c74-bbb7-e9ca0964fd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca15de15-e42a-4c7d-a60b-915b826fa859",
        "cursor": {
          "ref": "87bd1f84-fcda-4d78-82d2-b755f751944b",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8cf2a070-c9fc-487f-b619-4227a1003b3e"
        },
        "item": {
          "id": "ca15de15-e42a-4c7d-a60b-915b826fa859",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dcaf675b-5bbb-4f76-9e63-4fe9865de54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e09e2e-a223-4a0a-8be8-93c02eaee563",
        "cursor": {
          "ref": "8142600b-48b1-4cdf-a164-5f99193e9e6a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "67d3bf21-0451-4268-ae94-01c44785b1cd"
        },
        "item": {
          "id": "34e09e2e-a223-4a0a-8be8-93c02eaee563",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bb570e99-25f7-4f57-b046-3e9ba906fd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c29c998-0410-417e-8c9d-9cc0c88a92e6",
        "cursor": {
          "ref": "dcd33c03-f909-42b8-aa63-280721cb5d43",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "88842e9e-427b-4944-ae99-0fdd3a1bf7e6"
        },
        "item": {
          "id": "0c29c998-0410-417e-8c9d-9cc0c88a92e6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "86978a7b-870b-41a2-a6e9-9e727409bb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82019d5e-409a-4219-aba6-d650d8a2da74",
        "cursor": {
          "ref": "d0dce9f7-4588-4fee-9693-bd46bf45a1f4",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "65f17ca5-a6f8-458a-b731-c5910f6e2089"
        },
        "item": {
          "id": "82019d5e-409a-4219-aba6-d650d8a2da74",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "20bb69e0-78a1-4ecb-b6bf-6799438e94a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a8f922-b479-438e-8785-2de889fb0697",
        "cursor": {
          "ref": "35808e5a-11de-4b5e-b4da-1cc13ac930f3",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "10b63261-08e9-4543-81a9-c2285f76cda4"
        },
        "item": {
          "id": "04a8f922-b479-438e-8785-2de889fb0697",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0c699428-4a26-42e8-8170-2789837324e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd098cb-b11d-4c59-9aaf-64bf5e7d1984",
        "cursor": {
          "ref": "9e2824f0-73d2-4079-82fa-7a9c84ff3b46",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c63057bb-f9ac-4612-aee9-a8515a0b6716"
        },
        "item": {
          "id": "bcd098cb-b11d-4c59-9aaf-64bf5e7d1984",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1dad1e5e-2d70-4c2e-b91b-9c096126d1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ea4738-26d2-4293-b4f2-0219031f180a",
        "cursor": {
          "ref": "0e27b4d2-6976-4e48-b2ee-9b70bc128a83",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0351b6de-ea3d-4b25-aa46-abc0229f1865"
        },
        "item": {
          "id": "c0ea4738-26d2-4293-b4f2-0219031f180a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "255ead9d-f488-415e-9e19-995e61d07262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a553ac-2f37-4a19-b8f3-5b2535b172b5",
        "cursor": {
          "ref": "2fde2670-eb07-4bae-a4f5-26a8128c227a",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "61af8f96-5aa5-4fa5-8964-7d361349ab73"
        },
        "item": {
          "id": "b7a553ac-2f37-4a19-b8f3-5b2535b172b5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f196c196-7c33-4e68-9d38-3d5f5caa794a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba403a8-c90a-4a69-9a8c-7561864ed71a",
        "cursor": {
          "ref": "b9201397-31a9-4696-9a25-8bc65255ec62",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2cbf1901-80bd-4b11-b783-08c5ff22ec20"
        },
        "item": {
          "id": "5ba403a8-c90a-4a69-9a8c-7561864ed71a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6cb0c629-dbfe-4275-8b63-45701893d61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcddfc4-7957-4b3f-bd3a-86e104977c70",
        "cursor": {
          "ref": "090c5d66-4c88-4c59-9f10-c4c4a64cf945",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "961c73ae-7874-4c29-9093-61cf72d268fc"
        },
        "item": {
          "id": "3bcddfc4-7957-4b3f-bd3a-86e104977c70",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e88618c5-4e44-471f-9c5f-8b2763dc4e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e8be3b-5199-46af-b3bb-877996ec1501",
        "cursor": {
          "ref": "52cdaf19-7343-4c0a-948b-9c23e7997177",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "16693926-2943-4d49-b72a-bda5223ee108"
        },
        "item": {
          "id": "b0e8be3b-5199-46af-b3bb-877996ec1501",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "667eb6f1-5c70-418c-9070-06fd7a409895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499046b5-ddd4-496d-a071-f00505ca9467",
        "cursor": {
          "ref": "3582112d-fb94-4b7f-86d5-43c469fec96a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f20059be-c8b4-436f-a557-c93b67b89e3c"
        },
        "item": {
          "id": "499046b5-ddd4-496d-a071-f00505ca9467",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d5549dac-e15d-451f-ba9c-d5dc12249259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfe4923-db30-4c5d-935a-07f4b46c5702",
        "cursor": {
          "ref": "0421c2cc-c202-434a-bba2-d917062c6ace",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "647c8f6f-140e-4e5b-89e5-95e0fe369450"
        },
        "item": {
          "id": "8dfe4923-db30-4c5d-935a-07f4b46c5702",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4b74c9a4-0961-407b-82ce-1c32e0f56736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c25bd8d7-6602-4b13-bbce-3efe07497b7b",
        "cursor": {
          "ref": "c74ae90a-8feb-43ea-926d-26e070340ac4",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c30bc764-faf8-48cb-8676-d41de6422295"
        },
        "item": {
          "id": "c25bd8d7-6602-4b13-bbce-3efe07497b7b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4ef4fb07-c799-4ab4-b062-c79494a960df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac30e3f-dbae-47cf-bb8c-acffb43997ca",
        "cursor": {
          "ref": "1c96d5c8-466e-4e6b-93dc-3e795d0c52aa",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "befc9b2c-2a52-43be-8d84-6a2c735f306e"
        },
        "item": {
          "id": "eac30e3f-dbae-47cf-bb8c-acffb43997ca",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6cb2d965-a681-41f3-a05c-998777c366f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80249370-9ae6-4e8b-95f0-54b33b507877",
        "cursor": {
          "ref": "f90879bf-3c41-4aec-af65-563982914c0e",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5ba7ef07-1266-4e52-be39-1e2899d90114"
        },
        "item": {
          "id": "80249370-9ae6-4e8b-95f0-54b33b507877",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "56e0edc6-b9bc-47a3-b850-97719f66d9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3780fc-8ec2-4b7a-8497-b0a4a4d047ca",
        "cursor": {
          "ref": "8a88dc9f-f671-4bd0-8e92-b80fc94a3c26",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "00b6fa02-d1ca-49d7-97ba-8f3a78569163"
        },
        "item": {
          "id": "eb3780fc-8ec2-4b7a-8497-b0a4a4d047ca",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d40bf1d1-ea0d-429b-9579-3e2bce54b736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ec0bb0-b1d4-4acf-ad2c-c614d9f80441",
        "cursor": {
          "ref": "71ba57d4-7421-43f0-92a8-af9cb9dce76b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "226fb56b-5df5-4b44-8a36-a297c57ba741"
        },
        "item": {
          "id": "60ec0bb0-b1d4-4acf-ad2c-c614d9f80441",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e1f311ad-4008-4b43-8754-67ee5be99590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197ab450-ef2d-44ee-83a3-b123724c0c85",
        "cursor": {
          "ref": "368bf110-855b-4156-a02c-fe2ebcc0e426",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "089e5e13-14e4-407e-ba60-b62a94a17eba"
        },
        "item": {
          "id": "197ab450-ef2d-44ee-83a3-b123724c0c85",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c78e34ca-f342-4524-b019-c1bd1d008537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266aeabc-c736-41de-89b4-e3bcbf58a408",
        "cursor": {
          "ref": "950f4442-2b92-403a-9a0d-bcf797442a41",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6db778da-765a-40d9-94f9-460af4d4cf98"
        },
        "item": {
          "id": "266aeabc-c736-41de-89b4-e3bcbf58a408",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "da4ea0f8-f8cc-4119-9215-9eca8854f517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3e451f-b2ef-4cdd-a244-16bc1886c360",
        "cursor": {
          "ref": "9231f9cc-77da-42f1-a058-cda26d0621ce",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "468498b6-1dfa-4633-9b8e-206c67dabd4f"
        },
        "item": {
          "id": "0d3e451f-b2ef-4cdd-a244-16bc1886c360",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "69812c10-9b02-4ea0-acf0-d2609f410241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc56996-b35f-43df-ab1f-27a604d355b4",
        "cursor": {
          "ref": "aa3d9902-9faa-4ff3-adef-26b988b24db1",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ece4b624-212c-41ff-a299-2794cfb6eb68"
        },
        "item": {
          "id": "cbc56996-b35f-43df-ab1f-27a604d355b4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9f31d0de-1f87-4893-81ce-e9c44079d2b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfa26e1-a306-4efa-81f1-30e4d67f0947",
        "cursor": {
          "ref": "f5b159cd-0591-41a1-8406-566559a5eb51",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "55cd05f3-e7fb-43be-a52f-9947132904ab"
        },
        "item": {
          "id": "bcfa26e1-a306-4efa-81f1-30e4d67f0947",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6c7f8c8c-2ab8-4f62-a976-b0ab373bf041",
          "status": "Created",
          "code": 201,
          "responseTime": 2053,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "344bf76b-4e00-4c26-b1f1-0a029ba3b224",
        "cursor": {
          "ref": "73d8fbcb-f542-4359-8b29-49acc79369ab",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3c86097e-ba52-4895-9906-4432fea18d67"
        },
        "item": {
          "id": "344bf76b-4e00-4c26-b1f1-0a029ba3b224",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ae9faa0d-b000-45de-bf95-6633f62019b2",
          "status": "Created",
          "code": 201,
          "responseTime": 2762,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f55db68-d039-44bd-9e63-91c8b02b19bd",
        "cursor": {
          "ref": "246c7c77-cd26-4a10-9feb-8acfcbc3a3bd",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2bd41d1f-63dc-4475-a883-d38ca86a0724"
        },
        "item": {
          "id": "0f55db68-d039-44bd-9e63-91c8b02b19bd",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9e6d1b7b-cbdb-49f1-890f-8d3834c02d1e",
          "status": "Created",
          "code": 201,
          "responseTime": 2455,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e43472-7a82-42ba-949d-0adcf0f5afb3",
        "cursor": {
          "ref": "903cffc5-a263-46af-83c1-716ff51924fa",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a8089170-e33f-4692-8298-cf5a6f9b4b08"
        },
        "item": {
          "id": "a6e43472-7a82-42ba-949d-0adcf0f5afb3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "99f51969-6606-48c1-8c8b-b4b690d70fee",
          "status": "Created",
          "code": 201,
          "responseTime": 2621,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "86988e42-0b92-4683-8c3a-908ef82fe285",
        "cursor": {
          "ref": "bc6d563c-3520-4518-859c-dd422ef22471",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "775f9faa-511f-4e16-a034-05aecaaa1995"
        },
        "item": {
          "id": "86988e42-0b92-4683-8c3a-908ef82fe285",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8a3d11e4-2aca-4da5-a1dd-5a2d94ce6cce",
          "status": "Created",
          "code": 201,
          "responseTime": 3031,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-08-03T00:41:02Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-08-03T00:41:02Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "e228d60b-e413-439a-9b09-f73ee1dfbdeb",
        "cursor": {
          "ref": "e199b883-cc46-48c6-9f06-4f703606e719",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "140d45b5-320b-4ca1-9bd1-b4c700765d5e"
        },
        "item": {
          "id": "e228d60b-e413-439a-9b09-f73ee1dfbdeb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e963ee00-2e4b-4b0b-8dbc-07218e78aa17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f301d85c-7edc-475a-9684-7af5b67c45f7",
        "cursor": {
          "ref": "7bed664e-34f4-41a3-bf6e-129f5d5b3810",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "db9d40bf-c351-4803-b770-a3aa36370182"
        },
        "item": {
          "id": "f301d85c-7edc-475a-9684-7af5b67c45f7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7444e448-15b2-44cd-ac79-77bbb851a31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd4af69-45ed-45f8-b683-456790647ec9",
        "cursor": {
          "ref": "1e88f4fc-9edf-4e88-9a52-e2be9f0519ab",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dbdc1eba-7337-4653-a4e7-e348f40e47f0"
        },
        "item": {
          "id": "0bd4af69-45ed-45f8-b683-456790647ec9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d0363f21-e69c-43ce-b289-55b1160318bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fcf1b7-b223-425e-a4bc-1d7487ffe89d",
        "cursor": {
          "ref": "e9636268-4260-4711-b5be-fe454f99c84b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1c326949-742e-49d7-b606-10f2fc111012"
        },
        "item": {
          "id": "55fcf1b7-b223-425e-a4bc-1d7487ffe89d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cd468fd7-5a95-4633-842b-432365c534a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f385a0fa-3ef5-4fc0-a374-6027c337b64e",
        "cursor": {
          "ref": "110fd5c0-c582-4354-b278-862805bfb22d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5e03b7b3-9f14-40ec-8b02-c24d0cb2fa38"
        },
        "item": {
          "id": "f385a0fa-3ef5-4fc0-a374-6027c337b64e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "33b3915b-cdd8-4949-b17b-a5d69b2cee5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a739348-9bf5-4d27-b65f-8e56a65a6ed7",
        "cursor": {
          "ref": "c3493965-140a-47b1-a9f1-60efe8aaa051",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3fb41a02-1b58-4bf5-b19a-7cfe6a10506c"
        },
        "item": {
          "id": "7a739348-9bf5-4d27-b65f-8e56a65a6ed7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "29f35ed7-4954-4c58-9a70-efee8433c624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f2617b-2e42-4d09-b08d-e1381b16c7ee",
        "cursor": {
          "ref": "b9ff8e72-9e77-4005-8927-979f67d434ed",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3df61da0-42f8-4213-a2d1-7804d8de79c1"
        },
        "item": {
          "id": "44f2617b-2e42-4d09-b08d-e1381b16c7ee",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bf7b503f-6d8e-4d43-8f18-de144aeca718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1705e04e-79f7-4242-9456-5b0f7b9187d3",
        "cursor": {
          "ref": "fdc3c16d-6ad9-4836-b344-7999a0e9d2f0",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "193d72a5-97ab-4335-8f2c-b286995faa20"
        },
        "item": {
          "id": "1705e04e-79f7-4242-9456-5b0f7b9187d3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "78bc6841-d2e8-4669-b19d-ed7fb71ab7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5453917b-e972-4347-a732-f67bdde68125",
        "cursor": {
          "ref": "79be06d3-88bf-4a5b-9323-694fc2b4fedb",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ad8f1248-7406-4e47-a657-266bbc25879b"
        },
        "item": {
          "id": "5453917b-e972-4347-a732-f67bdde68125",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9931b647-70f6-404c-b5a7-ef74a31a982c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a10056-22f5-493c-88ce-6ba8a66a8ac6",
        "cursor": {
          "ref": "d3331ccf-ffa4-42a4-82e1-103bac5bb9d9",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6bee3b22-8cdb-40fe-9a2d-01e76e5bfcb4"
        },
        "item": {
          "id": "f9a10056-22f5-493c-88ce-6ba8a66a8ac6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "65ec4d15-4b06-4bf2-9f73-76fcf4f02049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690100a7-b34e-4f14-8282-368d514fb9db",
        "cursor": {
          "ref": "c7fdfe7a-127a-4376-a804-dabf1ad0e02b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "27b01275-2b0c-4811-9304-3d431b83a57b"
        },
        "item": {
          "id": "690100a7-b34e-4f14-8282-368d514fb9db",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "451009c6-9ebf-4763-b93f-a63849b01640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83208aa2-9b0a-4212-92ee-c45f849bc61f",
        "cursor": {
          "ref": "09a2a7d0-af1f-4e29-94c8-b7fe942a2813",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e4f2be66-7e38-4102-bd09-ab8e93067f2a"
        },
        "item": {
          "id": "83208aa2-9b0a-4212-92ee-c45f849bc61f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cde2a292-b513-44ee-833f-b9a91573bd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80f0df4-ee3a-4eaf-99f3-a459c5d9d233",
        "cursor": {
          "ref": "3ef8e666-f47b-4a7c-9d72-7130f9907b12",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "97b594fb-97b5-4f70-85ab-3ab0e1f6a389"
        },
        "item": {
          "id": "f80f0df4-ee3a-4eaf-99f3-a459c5d9d233",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2c9053f6-dbb6-439f-a2f6-f5dca8cb0783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83db7ea-b56b-4c22-81e7-9bc2c2b35876",
        "cursor": {
          "ref": "9e57b98c-305b-4deb-bc02-691717832567",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b41f0ffe-8416-4402-8b27-de81dfb0a2d6"
        },
        "item": {
          "id": "f83db7ea-b56b-4c22-81e7-9bc2c2b35876",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e7d9ac01-1789-443a-93da-75ee8eab7601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37860c9b-de7c-440e-bee2-ede4e06be14d",
        "cursor": {
          "ref": "088151b4-441f-48a0-b20f-f2a3ffbc3902",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "44454d62-31ee-4745-88a6-7d01a5e566d3"
        },
        "item": {
          "id": "37860c9b-de7c-440e-bee2-ede4e06be14d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d95aa7b6-0afb-44a7-b55a-9ea1a7c077e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d377d76-250a-494c-9ac3-5721276df179",
        "cursor": {
          "ref": "2e040fbe-6114-4959-ba97-368f74f34252",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c0559be1-5717-4d07-8a0c-01b23004fde1"
        },
        "item": {
          "id": "2d377d76-250a-494c-9ac3-5721276df179",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e3edca49-d2c1-461a-a26f-1eca05b4b3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725611af-4b8b-47bf-b7d8-993be17dad17",
        "cursor": {
          "ref": "ca3d50d4-38aa-4e0b-96ca-f4ce47df9651",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c042edc1-5255-4dc4-aa76-1440c7bf8edf"
        },
        "item": {
          "id": "725611af-4b8b-47bf-b7d8-993be17dad17",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1138406f-b0d1-488e-b331-b69d6a791cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac450e38-d1d2-4f9d-ad02-ab36617089cc",
        "cursor": {
          "ref": "bbbd1f06-cfd5-453f-9195-8a273c3c12eb",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8c5c8ae3-6b20-41d1-b8d1-6f840a4d3999"
        },
        "item": {
          "id": "ac450e38-d1d2-4f9d-ad02-ab36617089cc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2d408c6d-ef93-4a5e-bba8-43ce6bcb1f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "915c1765-25ae-4a85-bdf1-a033afb49420",
        "cursor": {
          "ref": "dcccf08a-aa93-446e-b3e2-cb55b0b8dcbc",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "bd20bf18-43e2-4d4e-b02a-8023f06e1e25"
        },
        "item": {
          "id": "915c1765-25ae-4a85-bdf1-a033afb49420",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7906fe1f-8b0e-4c87-8896-38ea876615c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0b0bfb-ac1d-4397-b252-b61f5c2395c1",
        "cursor": {
          "ref": "e39739ac-a5a0-4167-824d-ec9a1b967446",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9ae72658-cafe-418b-9679-71d048a3bcd2"
        },
        "item": {
          "id": "6b0b0bfb-ac1d-4397-b252-b61f5c2395c1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "db5ce84d-f517-4fda-87f8-08ec972d2858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3964edf4-373e-43c1-b821-e86e360eb411",
        "cursor": {
          "ref": "2e36ea61-c0af-4904-a36a-0e1ba7013ffe",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6793398d-1666-477b-ba60-ee9edbf4959e"
        },
        "item": {
          "id": "3964edf4-373e-43c1-b821-e86e360eb411",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "771d473b-9600-452d-af24-cc31295a3fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1e63b0-2360-4d3a-b089-d63d26e2e796",
        "cursor": {
          "ref": "2c6dd214-29d4-4662-9355-50687bf65280",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "92e5d1f5-2897-4f87-b21d-2ff17ed67249"
        },
        "item": {
          "id": "5f1e63b0-2360-4d3a-b089-d63d26e2e796",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "69432c31-cf69-4041-9032-5cea8681c59c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bee3380-7ac4-4b2c-a231-3e81732cc854",
        "cursor": {
          "ref": "1cc11f24-595d-470b-9cfe-73e4d799467a",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "153be7a7-1147-45e7-8ca3-dac687e66540"
        },
        "item": {
          "id": "7bee3380-7ac4-4b2c-a231-3e81732cc854",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6687d23d-24c5-4226-9da5-2d617c2dc673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761f016e-f202-4f6b-b93b-5cfc7aeb2e63",
        "cursor": {
          "ref": "cec35cd4-4ed1-4f84-8369-6ac9c4b9279c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "60d30586-fc64-4e8b-b6fb-8ed1121f0baf"
        },
        "item": {
          "id": "761f016e-f202-4f6b-b93b-5cfc7aeb2e63",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9829d835-4a0f-4335-ad5a-b29e910e2e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412c4d54-fae6-4e1b-a42f-96fde49f1f63",
        "cursor": {
          "ref": "fcecb428-9c83-4653-bf76-03245e07c8c4",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "90e12ec0-edba-45ea-80ee-f58d54545d31"
        },
        "item": {
          "id": "412c4d54-fae6-4e1b-a42f-96fde49f1f63",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6e7f7e32-dbd8-4aa6-95d6-0ac3d423654e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3030d86f-2fc9-434f-bf9a-b82fec823f6b",
        "cursor": {
          "ref": "be16aaff-2881-4568-814e-c57311e821d0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "515e1dd4-7aeb-408b-a7eb-f9e2582f9d18"
        },
        "item": {
          "id": "3030d86f-2fc9-434f-bf9a-b82fec823f6b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "436af3f9-5292-4884-9af2-0803cb506f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef66f1dd-e9c3-4e2b-ae9d-98d84d67d251",
        "cursor": {
          "ref": "4162ef3f-44b4-49e1-9161-6f560f3dbc8c",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1baf31fb-be97-4d00-a787-7111a080cb96"
        },
        "item": {
          "id": "ef66f1dd-e9c3-4e2b-ae9d-98d84d67d251",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "845a5e06-bbaf-47d7-9e81-674a3ccbf0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b9448-970c-40bf-ad5e-22a40cff311c",
        "cursor": {
          "ref": "ca3a9c44-8f6a-4daf-982f-be1b838af425",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3932cf1d-61ee-42e2-b948-bd92ca55879c"
        },
        "item": {
          "id": "d33b9448-970c-40bf-ad5e-22a40cff311c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a8b9d924-3ec0-4813-b77c-6e4924cf6ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80b309c1-b11c-4b25-960a-4d521a102111",
        "cursor": {
          "ref": "6b2c2055-2129-48b9-b619-0865ee25fec0",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d3ecac22-c12a-42eb-bc2b-1d137ce677ef"
        },
        "item": {
          "id": "80b309c1-b11c-4b25-960a-4d521a102111",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "63637126-bd4f-4adc-b212-e786bff0251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb46effb-6fae-4629-9098-dea8f6a1eb0f",
        "cursor": {
          "ref": "312f663b-cb51-4a38-9c10-f8b00783ce97",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9f7b52a7-4f16-41a3-ad82-89e26af5c540"
        },
        "item": {
          "id": "eb46effb-6fae-4629-9098-dea8f6a1eb0f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bda06622-9185-4151-a6b9-aef7c5887376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16dc116-295c-44cc-86cc-a6c81c3e529c",
        "cursor": {
          "ref": "fcfef4ef-38d7-4c12-8a87-38f0053fc578",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "33ca9fe1-85a3-437b-a68c-8c6e732ab606"
        },
        "item": {
          "id": "d16dc116-295c-44cc-86cc-a6c81c3e529c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "904a693d-5e52-4566-b882-16411d34eb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cb300c-2be8-455a-acab-7280e86e294d",
        "cursor": {
          "ref": "599597df-649d-4c79-8668-c6d1fea6f42f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "74b14a87-356c-4b5f-a87d-957e43b9c794"
        },
        "item": {
          "id": "94cb300c-2be8-455a-acab-7280e86e294d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f5cf27b3-0bae-4bdc-83d8-8df36e08c32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b44122d-f83c-44d2-a9b4-55fd61614e5f",
        "cursor": {
          "ref": "7ad5a201-4afc-4679-945a-1d2638e39773",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8ed88cb9-1ab5-495c-b65e-fc81c84a0751"
        },
        "item": {
          "id": "4b44122d-f83c-44d2-a9b4-55fd61614e5f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "02f537f4-7661-4aa4-a343-fb799659db67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e29ee3b-6053-48f9-9b10-c5727838bf7d",
        "cursor": {
          "ref": "0836a19a-f624-429c-b093-453763a97035",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fb6bfbb9-8af6-48c1-9ef5-ac18e4097f03"
        },
        "item": {
          "id": "0e29ee3b-6053-48f9-9b10-c5727838bf7d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f799da19-1588-4b88-b566-1085338a4074",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33a4aef-74ec-4321-a6d8-9e27496b7107",
        "cursor": {
          "ref": "72f5fde6-62d5-4390-b87c-cb6c8cc5a960",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fe7bc275-d568-4fa5-8957-7297327483ce"
        },
        "item": {
          "id": "f33a4aef-74ec-4321-a6d8-9e27496b7107",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a5d38e3c-c533-46d6-bde0-d5b750140e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ea7db8-376c-47fe-8d06-1615b8e1bb2b",
        "cursor": {
          "ref": "7c593540-cf4d-415c-9fa7-58f8f9bffb04",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4bd22eda-6296-4743-ae14-5842c390c94d"
        },
        "item": {
          "id": "c7ea7db8-376c-47fe-8d06-1615b8e1bb2b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "56322caa-69b1-40aa-b211-e05b364258cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce42ec25-ecd1-4c87-bea0-613be917d904",
        "cursor": {
          "ref": "62948fdd-f8f0-4350-8ab1-304193688741",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "89eb62b7-cb05-4d09-bdce-6a6ddccc2343"
        },
        "item": {
          "id": "ce42ec25-ecd1-4c87-bea0-613be917d904",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "da958f18-d9fe-4475-95ea-222db0806529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b9ebf0-605f-4a68-82b5-b9bb3b81df1c",
        "cursor": {
          "ref": "8d978c66-bae3-4458-bee1-d73763ee0019",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e1478f71-bc58-4a2c-9ead-56d1c4c9fb9c"
        },
        "item": {
          "id": "b1b9ebf0-605f-4a68-82b5-b9bb3b81df1c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b0b4f6fd-2f40-4332-8d86-ea6dabc214ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "552e45bc-d472-441d-8a9c-540f0ce14a83",
        "cursor": {
          "ref": "50c85c27-c6b5-4385-ad9c-67112dd2e0f6",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "33f83013-85ea-4d9d-86b7-555f855e73b9"
        },
        "item": {
          "id": "552e45bc-d472-441d-8a9c-540f0ce14a83",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "383aca44-5773-41cc-80ae-3a827e9741f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f437c102-b1c2-4b9f-a552-038a076502fb",
        "cursor": {
          "ref": "5fe441b8-df8c-4cf5-b395-aaff50b7f69c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "bdddc23a-259a-4c2d-8e45-697aea5a8448"
        },
        "item": {
          "id": "f437c102-b1c2-4b9f-a552-038a076502fb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3f18bb44-8331-4d2f-90a3-d2be4b6f4606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eccd0c8d-838c-4a32-b2a7-3821a80b803d",
        "cursor": {
          "ref": "1387efb5-51cb-4d8b-9db8-baa79c3c1661",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b37ed31c-9e7c-4747-8387-4ed193e3c858"
        },
        "item": {
          "id": "eccd0c8d-838c-4a32-b2a7-3821a80b803d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "db3da397-f792-4c46-bb83-59328d02e4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb8e24b-933f-45c3-9201-bf23f35b9eef",
        "cursor": {
          "ref": "ea35d2b3-429e-4689-ad29-b3ee73abdbc5",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6ca61ba8-e9d8-4f08-95df-a2132d43cfec"
        },
        "item": {
          "id": "edb8e24b-933f-45c3-9201-bf23f35b9eef",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ac6bbc1c-4da7-41ca-9852-5d3df2bad935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a078c30-08d7-414b-a9bf-de3219d62f6b",
        "cursor": {
          "ref": "f724e62c-0dd8-4593-9bb2-cc07e486e04a",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2b6c7bc7-6c4e-4944-94ba-e19261419d50"
        },
        "item": {
          "id": "5a078c30-08d7-414b-a9bf-de3219d62f6b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4efcdbb8-c03a-444e-aee0-4882f3a643cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6961b042-3e1d-4bc7-9b2e-e82aa67fcd1b",
        "cursor": {
          "ref": "899c4312-95aa-4bd6-ac35-cba6246098c1",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "172481e7-ce8b-41e2-a514-7c47ce42a04b"
        },
        "item": {
          "id": "6961b042-3e1d-4bc7-9b2e-e82aa67fcd1b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a1920d1b-f327-4e84-8f9b-3b894f62b960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19794581-9bfc-4e9c-94fe-ce23d230abb2",
        "cursor": {
          "ref": "8852090e-a0a5-43f2-b6c0-60a0e1a47c2c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9493b08f-c521-466f-8e1e-fd9a0aee5aa2"
        },
        "item": {
          "id": "19794581-9bfc-4e9c-94fe-ce23d230abb2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "23773ce6-35bc-4c64-993c-b1b567a05f76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c660c3-2dac-4b9a-8bc6-2024719e396d",
        "cursor": {
          "ref": "91655b13-fb56-4bb5-b3e9-2f900637166d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cd802d2a-8e63-4d8a-aa60-001cbbb4593e"
        },
        "item": {
          "id": "f6c660c3-2dac-4b9a-8bc6-2024719e396d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "af015ccb-77b9-40e1-9038-c5b67767526e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ffd8ec-3cf0-4702-90d0-7fbc75a92f47",
        "cursor": {
          "ref": "32f166da-fbaa-4bef-9efc-9bcf7fa9230f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8eb37401-095e-4705-b40e-9a8d60763b29"
        },
        "item": {
          "id": "12ffd8ec-3cf0-4702-90d0-7fbc75a92f47",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0df6f6d6-4465-4452-bba2-0941494db53e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5970e9f6-cc09-4803-b227-a46b35a595e9",
        "cursor": {
          "ref": "5dc0230d-5be6-40f0-a670-88a3ebc116da",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f8ecf013-4df4-4249-a652-8d66ce00d457"
        },
        "item": {
          "id": "5970e9f6-cc09-4803-b227-a46b35a595e9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9909fd43-5be1-4a02-9969-7a9fd9c8b1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9efc61-0f14-4502-ac33-16567f79a2b3",
        "cursor": {
          "ref": "cf40d65f-49cf-4100-8de3-c033db167fcd",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1332304a-02c2-4aad-a763-0933661b4b9c"
        },
        "item": {
          "id": "0c9efc61-0f14-4502-ac33-16567f79a2b3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3071bc12-ca0d-417e-8f9c-e767536a04a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40d9032-95a4-4737-9cc0-c61164bf72da",
        "cursor": {
          "ref": "1c9ce19a-437b-4fdb-bd7f-d493de41144f",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5483b4bc-eca8-4684-a671-d881ee2ed1d4"
        },
        "item": {
          "id": "f40d9032-95a4-4737-9cc0-c61164bf72da",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c0bc4b12-e59a-4890-ae78-629204a9a494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd039916-ba0e-462f-a81d-f3e61e7bdb21",
        "cursor": {
          "ref": "15917b49-5b63-4adb-84ae-1ec07d5cfb72",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "89a13b71-3967-4336-bae8-128969de76bb"
        },
        "item": {
          "id": "fd039916-ba0e-462f-a81d-f3e61e7bdb21",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "67f3c008-9d94-4676-8025-4ccc2f06e9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3e1830-bfcd-4a95-b8b1-f1a998ea9416",
        "cursor": {
          "ref": "a1b2a7d2-45a6-4333-8e48-6d5d2c2527ac",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b1940460-a581-47a8-a904-8deb1ab9a867"
        },
        "item": {
          "id": "8f3e1830-bfcd-4a95-b8b1-f1a998ea9416",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8f835406-7401-498f-aa4d-db9beba91d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85df4ddc-b504-4658-b13d-bf537320d24e",
        "cursor": {
          "ref": "fadcb335-70c5-461a-8b84-70b1c5ca5605",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1c809294-98c3-420d-bebd-8d6cae35dc12"
        },
        "item": {
          "id": "85df4ddc-b504-4658-b13d-bf537320d24e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fb5ae346-4fc8-4c74-8998-cd594de92435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d843bed5-542b-45b2-be43-06ae1ffb1239",
        "cursor": {
          "ref": "2832ec01-1b5b-4cbf-b6f1-538d4edcb8a5",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7d8d112a-d0c9-4180-9589-cbf5005935a2"
        },
        "item": {
          "id": "d843bed5-542b-45b2-be43-06ae1ffb1239",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c4037c63-0cd5-4c47-a813-ab39c4d758ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eeccbb6-b065-4f2a-a5a9-c5168b63d149",
        "cursor": {
          "ref": "fa2ef8c8-596c-4053-bb25-65cd8397e8fa",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e0f619fb-eda2-40e6-927d-7c503a5be4e0"
        },
        "item": {
          "id": "9eeccbb6-b065-4f2a-a5a9-c5168b63d149",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4762733a-f35b-433f-8203-80603fbfb431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6ff9f2-bac1-4d3a-86c5-630efa4174b8",
        "cursor": {
          "ref": "89ab8e7a-ee9d-492a-b3f7-076910c8be59",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "abbea361-c9e8-4e61-9883-d498c1a1ae85"
        },
        "item": {
          "id": "9f6ff9f2-bac1-4d3a-86c5-630efa4174b8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "588c6ef2-109e-49a8-8daf-959c7b4968cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2ec3e2-bf49-4ad7-b4d6-b295ea7cc0e7",
        "cursor": {
          "ref": "09f0b068-88c7-4558-a931-a8506eac7af6",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "09b0e68d-1e13-460b-914c-357684c98aa9"
        },
        "item": {
          "id": "7e2ec3e2-bf49-4ad7-b4d6-b295ea7cc0e7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f711c3ae-e9ed-4e87-bc4a-f32b8671ddb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f8b4d1-9fe8-4395-8249-e90132dba7b5",
        "cursor": {
          "ref": "5502c476-42b9-4159-a25a-cf3cb9b009e4",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "eadb37aa-ae0c-4465-affe-657a7b89092d"
        },
        "item": {
          "id": "f5f8b4d1-9fe8-4395-8249-e90132dba7b5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8dff77b7-25db-46d1-9d03-bfca6ee93474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb5ad93-da44-4ce8-a0bc-0f890e967907",
        "cursor": {
          "ref": "8777b43e-8460-4c9c-bcc3-791709ff6ade",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4fe68164-1dee-4285-9767-5a6251f405a8"
        },
        "item": {
          "id": "ddb5ad93-da44-4ce8-a0bc-0f890e967907",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0905cdac-8d4e-425f-9901-b5ef38952c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f87f9c-4ea2-4971-bab7-cd65607e168d",
        "cursor": {
          "ref": "e864f259-5885-40de-9b08-45066184f18c",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "17054d81-4c0d-40ec-910e-9eb9986745a3"
        },
        "item": {
          "id": "c8f87f9c-4ea2-4971-bab7-cd65607e168d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "64f3bb0c-bf20-47d2-bc76-5c2c0923749a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acabb8fc-00a6-4604-8f0d-5fc55bb8fe63",
        "cursor": {
          "ref": "edd0d1cf-82c6-4b6e-b9d1-3089b3a527b3",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "13bb047c-dcbd-42d7-bd20-5cc486af71b5"
        },
        "item": {
          "id": "acabb8fc-00a6-4604-8f0d-5fc55bb8fe63",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f0c77865-c19d-40a8-86e5-5395d9a47050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b1ef92-63a1-4599-bf84-8c46a578b498",
        "cursor": {
          "ref": "3a0385df-526e-45cb-8186-302426643fdc",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "55546ed2-4b0a-4162-80c2-3985a4aad7a1"
        },
        "item": {
          "id": "b2b1ef92-63a1-4599-bf84-8c46a578b498",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "43c94014-82e5-4f29-abd4-fe6b8ab5969e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cdc03f-5f91-4663-b566-44ece26773a8",
        "cursor": {
          "ref": "960e94a0-efcc-4169-9726-219fbbfdd39f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9875e64a-9bb3-4499-a360-635478258a1f"
        },
        "item": {
          "id": "c8cdc03f-5f91-4663-b566-44ece26773a8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3d4e529f-4411-4e3a-bd51-a7c52f0af80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6164a3a-8d3a-45e4-bdf3-075b152c9993",
        "cursor": {
          "ref": "5255a009-93e9-43c2-9c25-94dc2472bffa",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "68421f81-e630-41bf-a65c-5a669a577083"
        },
        "item": {
          "id": "b6164a3a-8d3a-45e4-bdf3-075b152c9993",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9a86f9be-6cf9-48f4-9301-d95ee1ae8f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a57dc4-ffe1-496b-a897-2c9ce7ce22d0",
        "cursor": {
          "ref": "d24f05b2-cf62-4f91-80d4-c6cdd3a1525b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b02bc3fc-6654-4b53-984d-008dc0e8c094"
        },
        "item": {
          "id": "63a57dc4-ffe1-496b-a897-2c9ce7ce22d0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ea74e3fa-7d61-43e7-b789-4a49983624a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d5ed4b-0185-4c12-abce-c6874524cfde",
        "cursor": {
          "ref": "57a99a7d-4687-44f5-b346-ab58ca4cf02c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "82f6f047-f068-42e5-bcd2-825ea4877d8c"
        },
        "item": {
          "id": "d5d5ed4b-0185-4c12-abce-c6874524cfde",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dc977d17-1071-4d40-85eb-2f7d2cc93762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b59a60-7904-4478-81f0-dada4a37734a",
        "cursor": {
          "ref": "0a8bdd1d-f795-460b-8af1-23656f3dd856",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d34e5a16-a47b-4cf9-92e8-8d56e22a1f57"
        },
        "item": {
          "id": "58b59a60-7904-4478-81f0-dada4a37734a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b44dbeaf-a209-4161-8a9f-aa6bd080655d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bb665b-93d5-4d68-9608-7146d63f9bba",
        "cursor": {
          "ref": "5cfaf15d-41a7-44be-b0cf-24f7cf366f9c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b487b774-051a-4c58-8f29-85bc7e195369"
        },
        "item": {
          "id": "15bb665b-93d5-4d68-9608-7146d63f9bba",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a962f261-b9f4-49f8-ab03-4fa867c8bd3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd023f9b-8618-4bec-ae01-715ed110cd05",
        "cursor": {
          "ref": "b7d86e4b-6278-48f6-9f30-293cc0b2e715",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "92004a21-e05c-4ef4-b54c-90427f56182f"
        },
        "item": {
          "id": "dd023f9b-8618-4bec-ae01-715ed110cd05",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "98229ce8-1e2f-454d-91d7-a9a68e6f7833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "714a8230-a617-4d95-be1e-d6b651a602a7",
        "cursor": {
          "ref": "0513654b-3234-4e21-95ef-98549e5003bd",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8a9e1fe2-0670-4300-8181-429906b0b4fe"
        },
        "item": {
          "id": "714a8230-a617-4d95-be1e-d6b651a602a7",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "262a907a-bccd-40a1-b3af-10c41ff1a393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00a78ee-5170-41d0-9ee8-72ebad6e47c5",
        "cursor": {
          "ref": "a7ccf4c4-399f-4354-919d-073f0c52dcb2",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5050b384-8f22-4fbb-9e32-2f62f6fc6451"
        },
        "item": {
          "id": "d00a78ee-5170-41d0-9ee8-72ebad6e47c5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ed75c586-d2cd-4064-a7a1-888aabf55261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "583ce8e3-c5ab-4b06-ab09-5760985024b8",
        "cursor": {
          "ref": "9716f060-2a99-47e8-ac99-2879d628ed27",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "32f46108-6814-4dfa-b59c-10ccfb536833"
        },
        "item": {
          "id": "583ce8e3-c5ab-4b06-ab09-5760985024b8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5f950cf8-76f3-459a-b6c8-2a589a8901c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341f42c0-c200-4504-b4e5-d0f7ef4c8792",
        "cursor": {
          "ref": "d7d6554a-c334-4a13-a4df-54151423f125",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d3bed20d-af60-476e-8bb7-fed812b2802c"
        },
        "item": {
          "id": "341f42c0-c200-4504-b4e5-d0f7ef4c8792",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2b32afa3-2116-4ada-b786-c62c681686b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1654c3-1748-41da-a6d9-f2f448226a43",
        "cursor": {
          "ref": "b6043e2b-f71c-4ee4-bc6c-11696b6a5324",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "99e5685a-1050-4ff2-af4a-8d6c760c03da"
        },
        "item": {
          "id": "bb1654c3-1748-41da-a6d9-f2f448226a43",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d9cc52e1-1341-4b27-9b7a-9fb5a1be5e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd904064-9cd9-452d-b8e1-6bc2f5aad78c",
        "cursor": {
          "ref": "b040e14a-576a-4a48-9827-2cdaca441042",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2bc3a6f3-151d-45c6-baca-cf3a85af1366"
        },
        "item": {
          "id": "fd904064-9cd9-452d-b8e1-6bc2f5aad78c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "99056072-fb34-4646-b225-19aea02148b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cff61b0-2f8f-41b5-8c46-6495538b6e9b",
        "cursor": {
          "ref": "4266a6ff-a5bf-4b9c-905c-7b296df26bdf",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fab2b459-afc2-4452-a2c4-18c52265d393"
        },
        "item": {
          "id": "9cff61b0-2f8f-41b5-8c46-6495538b6e9b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cf5d28e2-7a42-42ed-a840-010e107c34e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41525749-bb25-4fca-9958-5f2e7c1904c9",
        "cursor": {
          "ref": "fc4cfafa-8c69-4248-84e5-969de1d74370",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "427174d4-1057-45be-9ed9-1d98f889caef"
        },
        "item": {
          "id": "41525749-bb25-4fca-9958-5f2e7c1904c9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "669c67f0-d8a5-400a-a477-fa06113bd248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c97ff37c-2567-4b20-a805-70d29ba51463",
        "cursor": {
          "ref": "cc753df2-a40a-490b-9058-52c4ec46dff5",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a29c3df8-8aff-407c-82a5-5a8580cd7e11"
        },
        "item": {
          "id": "c97ff37c-2567-4b20-a805-70d29ba51463",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3da684b7-9fa5-414f-aa45-badbb94091d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a1f5580-cb33-4da6-98f1-eab260e2639a",
        "cursor": {
          "ref": "ce3f3693-c444-47b8-b920-cccb5a4e3cf0",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "be030cd8-4a9e-4cac-a3d5-55aee3902b30"
        },
        "item": {
          "id": "7a1f5580-cb33-4da6-98f1-eab260e2639a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6e523cd7-5d05-447b-b01f-ee3e4c4ce928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463ca8e8-a02c-458c-a243-dbc44e698a4c",
        "cursor": {
          "ref": "342750f0-72ef-41a2-b6dc-5e6dba3efe05",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2922f882-092a-4ce2-b6fb-9dd5bd7328b6"
        },
        "item": {
          "id": "463ca8e8-a02c-458c-a243-dbc44e698a4c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4201a2c5-740b-4475-a0a7-42a9158f8460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc4bc4b-6b53-461f-8334-d30e0c0e9d73",
        "cursor": {
          "ref": "7dab5c43-470d-4f79-b13d-9786cb9aa856",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "22f693f4-8957-49a6-aa06-87da714c489e"
        },
        "item": {
          "id": "5bc4bc4b-6b53-461f-8334-d30e0c0e9d73",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "32d2282a-d455-443c-bc04-405717c55d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a58603f-4d49-475f-bd3d-c2807a72b428",
        "cursor": {
          "ref": "985f1fb0-ba69-4db4-adad-86ba5f45d4f1",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f85e81b4-d664-468a-8444-779b4ea1eb03"
        },
        "item": {
          "id": "7a58603f-4d49-475f-bd3d-c2807a72b428",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d4c127dc-80ae-416b-8559-2edaddb550ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bdc58e-38da-4b56-a961-dc5c5742ee93",
        "cursor": {
          "ref": "32d770c2-70d8-421c-a924-fec10ef72d80",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d44495dc-dc2f-475b-b309-ee495a37a79b"
        },
        "item": {
          "id": "47bdc58e-38da-4b56-a961-dc5c5742ee93",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e5f270f7-0821-4ae2-949e-91ab1eadbd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687c8c3d-0f06-4a52-b878-4b2fde2cb5dd",
        "cursor": {
          "ref": "98a8b69e-a5e7-4192-b7e5-2dd967fc1d4d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "b7516e97-134b-4967-9105-d734ee01c33b"
        },
        "item": {
          "id": "687c8c3d-0f06-4a52-b878-4b2fde2cb5dd",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "1cf718a9-9573-40ce-8f3a-9291a5bcf1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76b5fde-c916-4621-8402-224800124368",
        "cursor": {
          "ref": "5fa15000-f0e9-4fcc-89e2-87b431703a20",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "30fe319a-af7b-4ff5-89f7-d637595f57e0"
        },
        "item": {
          "id": "d76b5fde-c916-4621-8402-224800124368",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "302128aa-812b-49c4-92fe-9e1c4de2b3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066c49ad-1737-4116-aa91-59cbb8b124bf",
        "cursor": {
          "ref": "079f6433-275e-4588-8e22-db00bcc4c0f6",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6234419e-d07c-4ede-a618-f2f76d533eef"
        },
        "item": {
          "id": "066c49ad-1737-4116-aa91-59cbb8b124bf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cb7d5e2c-58e5-4c5b-b142-fb650a93eb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506ebcf5-7fc1-4b0c-988c-1b1f157dda43",
        "cursor": {
          "ref": "ead97187-4da8-4826-83a7-ae6cfcb7cddb",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b67a1311-f82d-4c62-b8bb-4873c2ab57f8"
        },
        "item": {
          "id": "506ebcf5-7fc1-4b0c-988c-1b1f157dda43",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "24929dba-0e36-4f3f-8e03-28bfd995dc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec62832-e40d-4485-856c-09c6eae71b0e",
        "cursor": {
          "ref": "85cc503a-9c13-4f6f-9c12-ba8f12d25137",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5de002e6-338e-44ac-9fbb-88e12e0879e6"
        },
        "item": {
          "id": "7ec62832-e40d-4485-856c-09c6eae71b0e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fe58f838-3e98-4b61-9b1d-0b066095226f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a05427-cfc5-4eb9-9cc5-8266ab7bd69a",
        "cursor": {
          "ref": "c9a1f467-6622-4551-ba1d-cd1fb75ade8f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ef0b1d4b-3f2e-4c39-8b6b-ac60511b2ed3"
        },
        "item": {
          "id": "05a05427-cfc5-4eb9-9cc5-8266ab7bd69a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5a277bf1-38c6-49ec-a32e-6b65490c061b",
          "status": "OK",
          "code": 200,
          "responseTime": 194,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "ca92475e-778d-48b6-8d2e-c39ec668c3b3",
        "cursor": {
          "ref": "fec156d4-f37c-4ee0-94bb-4640cd27c306",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e5efb778-9bbb-4cae-a7c8-969ac6f4d292"
        },
        "item": {
          "id": "ca92475e-778d-48b6-8d2e-c39ec668c3b3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c55e380d-28c6-44e1-a563-6e12f27043ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7056fb-f901-4e85-bdc5-42039f452b4d",
        "cursor": {
          "ref": "8567732c-d699-472e-9519-14fa2443de6c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "75db7a7e-94ed-411b-b8c5-b2e26a6cc0e2"
        },
        "item": {
          "id": "4d7056fb-f901-4e85-bdc5-42039f452b4d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e23244d0-6096-4447-a2b8-ab38058f80ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb0ba7a-7524-4fc8-b2ad-ca240b815bc5",
        "cursor": {
          "ref": "2cd328ca-9784-4c9b-bb65-7e1540647301",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6e4fabcb-b111-4023-9296-8f8436638e6d"
        },
        "item": {
          "id": "0fb0ba7a-7524-4fc8-b2ad-ca240b815bc5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f791827f-73d9-49a8-a2c4-b4d99ddf818f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd4d9e8-3f04-4f4a-871c-a26ccec8687e",
        "cursor": {
          "ref": "4c1d958d-4a79-419a-98a6-846025241857",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b5b409d2-0b58-4a16-a288-f8f6dce9dc04"
        },
        "item": {
          "id": "dcd4d9e8-3f04-4f4a-871c-a26ccec8687e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b9301a27-6851-4ad1-b119-e7d7a6f17666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdf68e1-4f69-46c0-9848-b9d6a4e6d08b",
        "cursor": {
          "ref": "ea9fa843-1d23-4969-b1e1-a6081b4c2c03",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f3351cb8-3c5a-433b-9563-cd6337808522"
        },
        "item": {
          "id": "5fdf68e1-4f69-46c0-9848-b9d6a4e6d08b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "b22ad456-3f9a-4b09-bc94-f82264251e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e94c95-c2ae-43e0-a373-0b9520395842",
        "cursor": {
          "ref": "fa3f646f-d019-4626-a57a-ade710d509c7",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b9d10ac7-38a5-49ee-82ac-fa053cb98663"
        },
        "item": {
          "id": "77e94c95-c2ae-43e0-a373-0b9520395842",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b170e8c3-2dc7-4a8f-8741-29f967cc2a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe32d42f-141a-4ab6-8935-d4a4a3911193",
        "cursor": {
          "ref": "c8182c95-1396-4f26-8caf-f2ec56ceae4c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c41c5fc1-7c25-44fc-bdb0-2b7703d1c326"
        },
        "item": {
          "id": "fe32d42f-141a-4ab6-8935-d4a4a3911193",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cead3772-4ed5-4aae-afd7-3ef732cdac83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc348dda-b333-4d5b-b4b9-c095fab49a00",
        "cursor": {
          "ref": "85b37f2c-5cd4-40ab-97dd-4c094ce0037d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "10932674-48fc-46f9-ad74-3c4c86e63d7e"
        },
        "item": {
          "id": "fc348dda-b333-4d5b-b4b9-c095fab49a00",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ae21f630-5cf6-400b-ae37-457da4270cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eb7b8c-aa1c-4c6c-9d0e-4a2ebfbd904c",
        "cursor": {
          "ref": "65780f15-eb8c-4122-9a71-55a46e18347f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3d791ccf-d406-4b74-af04-b40ff4850301"
        },
        "item": {
          "id": "b0eb7b8c-aa1c-4c6c-9d0e-4a2ebfbd904c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9e64d444-11bf-4702-8394-7ea2eecbca7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acdb87f-1e3c-45b7-93f7-bcaaeeb498e2",
        "cursor": {
          "ref": "f8c098ee-88ed-41f6-85d1-9e5bebf29cbc",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3b7f92a5-fc25-4f3d-bd53-1883e059d1ea"
        },
        "item": {
          "id": "9acdb87f-1e3c-45b7-93f7-bcaaeeb498e2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "480588e1-b3c3-4d30-bec7-8f87eab9a1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82818710-b711-45b1-a684-45211a8eadd4",
        "cursor": {
          "ref": "dc4dfd52-c230-4aa6-9b79-eb6aeed60ebe",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d5c2c910-4587-43d3-8e64-936298166522"
        },
        "item": {
          "id": "82818710-b711-45b1-a684-45211a8eadd4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3a4284a1-9054-4311-9381-927b5222d7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98afe7f-a0a2-4dd7-ad4e-a11506c3383e",
        "cursor": {
          "ref": "5b0eaeb3-6e2c-40de-b857-51ad15ab0870",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5a240718-dea8-4fc9-83b5-4b120460fbd1"
        },
        "item": {
          "id": "e98afe7f-a0a2-4dd7-ad4e-a11506c3383e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e02594a4-9b90-4ee5-a0c0-277a877d76ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ceca21-4ca8-47ca-bd78-20acabf0c8b3",
        "cursor": {
          "ref": "c2e1a4a3-11a8-45dd-8f9d-9fcdcfa313a5",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b5036b33-3322-4f11-a116-ab59b6ba1a5e"
        },
        "item": {
          "id": "e7ceca21-4ca8-47ca-bd78-20acabf0c8b3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7657be53-e525-484b-b7f0-e34b9b550f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727994fc-1940-4dc3-a93d-cc25e41f635a",
        "cursor": {
          "ref": "e88de326-5f81-438a-b629-e80f664b6b5a",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "91d76d68-a7b6-4e93-9778-c2158c7a01d3"
        },
        "item": {
          "id": "727994fc-1940-4dc3-a93d-cc25e41f635a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "6ea67e0c-e18a-41fc-9ea1-cb3d4c7052f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5bae00-7498-4603-ae0d-c0e7b2dac917",
        "cursor": {
          "ref": "4923fab2-84b1-4457-9f87-8060efcff4cc",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cf594b2f-178b-47e1-8d5a-58914a2ef058"
        },
        "item": {
          "id": "8a5bae00-7498-4603-ae0d-c0e7b2dac917",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "412fe37e-a1b4-4695-acf3-053536020391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79dc516a-84a3-48dd-97c0-31d965c92f0c",
        "cursor": {
          "ref": "484aef3a-31bf-4d3c-a57e-e78647ce9869",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3750a439-ba06-4723-9352-8c17aa0fb59d"
        },
        "item": {
          "id": "79dc516a-84a3-48dd-97c0-31d965c92f0c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "088cd3c8-bbff-4aa3-812d-4f50892321c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8624c4c-460d-4bbb-bf26-338b86ee7769",
        "cursor": {
          "ref": "964333d5-5108-45ae-8cb0-ba21bc70af35",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b6f9fa8a-064f-4a33-8ee1-d95fac0a4921"
        },
        "item": {
          "id": "b8624c4c-460d-4bbb-bf26-338b86ee7769",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b0b7b080-bf3e-4a4d-93c2-8d39f7ebff20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8146edfd-73a8-4233-bf3d-76b08ed3266a",
        "cursor": {
          "ref": "47518415-02c1-48fd-accb-a108bd2999b3",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f7d5139d-9b1b-47e2-bfde-bc88a8ff7b1f"
        },
        "item": {
          "id": "8146edfd-73a8-4233-bf3d-76b08ed3266a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "51e71439-3894-46ec-af4e-76f575cb4c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a300f88b-1be8-4d4f-a77f-3572a6e60b64",
        "cursor": {
          "ref": "b1d70e0a-89ca-43c3-96bf-0d54d7267a84",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "acec43ae-96bc-4a66-90eb-f93febb132ec"
        },
        "item": {
          "id": "a300f88b-1be8-4d4f-a77f-3572a6e60b64",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "04642438-cc2f-4223-be96-75263e589589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958b5a32-fd7b-4886-822b-efd03734aa8c",
        "cursor": {
          "ref": "57308017-1a48-4b86-a34f-b4d0b81d8cc7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bc26f168-20e1-4a1f-ac55-4cd11c433d6f"
        },
        "item": {
          "id": "958b5a32-fd7b-4886-822b-efd03734aa8c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "312838b8-4c22-4e6d-931c-819da565484d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2aad8c-2a91-42a7-9cb5-be95cc6660fb",
        "cursor": {
          "ref": "352701f2-2c0a-44cd-a68e-dc77bd2dcacb",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "596706e4-a14d-4135-9d07-f337c77d72c7"
        },
        "item": {
          "id": "bd2aad8c-2a91-42a7-9cb5-be95cc6660fb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4f593654-46f1-47e1-bc86-34b08ad5c015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da84f9fe-9216-4ddf-8b72-dd5f4ce0daa7",
        "cursor": {
          "ref": "f8d19fa9-e770-49b2-82f2-2c58f1745a8c",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "832ac562-a4ff-484f-8d0b-861112cdf00c"
        },
        "item": {
          "id": "da84f9fe-9216-4ddf-8b72-dd5f4ce0daa7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "75d211e2-05b8-4389-a0a7-f50bb3a09969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e4f880-e9f8-4de3-a4f8-365f63e8e88f",
        "cursor": {
          "ref": "e1638429-181a-4afb-a3a4-444fb09231c3",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c0b4e525-8ec3-4195-b0fb-801f1b6066f6"
        },
        "item": {
          "id": "a3e4f880-e9f8-4de3-a4f8-365f63e8e88f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0a21b3eb-c16d-4a1f-8a97-66dbd7390c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74362bb-3c15-48e5-8814-fd5fc014f86d",
        "cursor": {
          "ref": "5fda364c-b8c4-4d5f-9efe-6aacc6f6cfd1",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "737412d3-1963-427a-bf1c-8f179630c7bd"
        },
        "item": {
          "id": "b74362bb-3c15-48e5-8814-fd5fc014f86d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "05624413-00c8-4c04-bd52-2ba845d09985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525b1d32-2625-4857-ae9f-d74133ebbd7c",
        "cursor": {
          "ref": "3922afae-5278-49d8-b8d9-75cea212beab",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ff53e815-3300-43af-89b2-82c448bca75c"
        },
        "item": {
          "id": "525b1d32-2625-4857-ae9f-d74133ebbd7c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3fcff2be-1ef1-46a8-9d45-ab4db71f9624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007daefd-5d0b-4b83-9938-ad26f92429f4",
        "cursor": {
          "ref": "46cc0b16-5be3-4477-a681-7d1f9b4be0cb",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "14b9c387-4049-48c0-b2de-6a4becd44a6b"
        },
        "item": {
          "id": "007daefd-5d0b-4b83-9938-ad26f92429f4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "acf5c810-4939-4586-b369-4c2f8b32bb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d5e2ca-d070-41cd-8d3a-cf2f1e3b2595",
        "cursor": {
          "ref": "1bd88fed-9d94-4eef-8931-8d6772dee7fe",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7fbee868-1f37-4637-9b2c-52823acef86b"
        },
        "item": {
          "id": "54d5e2ca-d070-41cd-8d3a-cf2f1e3b2595",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3654c680-e23d-4b1f-93a6-6ec2eb1d76c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62de7e4e-96a7-462a-bbfe-a6436a67365d",
        "cursor": {
          "ref": "778336d1-be41-4488-beca-aceb99eeed2e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b10a76ca-11ba-48c5-a59e-4d02222e568d"
        },
        "item": {
          "id": "62de7e4e-96a7-462a-bbfe-a6436a67365d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b557061a-f4ff-4b57-86f1-f5c566740019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4a7bdc-badb-4edc-9653-b0a2832bf765",
        "cursor": {
          "ref": "dc8926f1-6751-49fa-8880-cfa30192d691",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "43f0c0fe-fbb1-46a4-a638-f9d7e8339fd0"
        },
        "item": {
          "id": "1b4a7bdc-badb-4edc-9653-b0a2832bf765",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7243b0e7-7782-432a-804b-3d913d7d1a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45101189-1b36-4677-8681-38827b583976",
        "cursor": {
          "ref": "e4ee50a6-d16d-40f8-a687-e78c3038aecd",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0363a3b4-bdb9-4dcb-ac6a-ac553fbb707d"
        },
        "item": {
          "id": "45101189-1b36-4677-8681-38827b583976",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1d540292-45ff-4349-8b7d-8db873033288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea87c40d-12a2-49fd-82b7-18e42e908305",
        "cursor": {
          "ref": "b3b529aa-39b9-4459-af1a-239571409a52",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d9985fb5-b329-453d-a903-908871686e06"
        },
        "item": {
          "id": "ea87c40d-12a2-49fd-82b7-18e42e908305",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4b037bc0-950c-481b-a88f-495bf686d792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989748ac-e90e-483f-bf09-31d491355e49",
        "cursor": {
          "ref": "837d3c0a-690a-4820-b20b-44a6a1eb8376",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "51feb150-4305-433d-b0a4-f24878b5153c"
        },
        "item": {
          "id": "989748ac-e90e-483f-bf09-31d491355e49",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c25cff15-b087-4962-aa5c-741aeafb41c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef2b74b-eb1e-4346-b269-1a0457f1d9a0",
        "cursor": {
          "ref": "97d10962-121f-4abf-8973-248c606602bd",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b4cab239-a89e-4e64-aa92-ea4a3ce581b0"
        },
        "item": {
          "id": "1ef2b74b-eb1e-4346-b269-1a0457f1d9a0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5bf20e67-0b98-4dc0-98e0-a4df6bef8ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa81386-cc99-49b1-ba4c-8b87e2b2ebe6",
        "cursor": {
          "ref": "bddc470d-d5c3-466f-9e1d-f9f736e5a4aa",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ec99ec17-0511-4c80-81f8-b2c36fe1bccb"
        },
        "item": {
          "id": "afa81386-cc99-49b1-ba4c-8b87e2b2ebe6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5745fa4e-85ce-4924-8dbc-498d341ff15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271cb285-3334-46db-b122-cece2be13f1b",
        "cursor": {
          "ref": "ecff1e1b-b5c3-4fb9-800d-dbdcd5a41762",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "44f0af97-b10e-4869-a889-a037a92a20ae"
        },
        "item": {
          "id": "271cb285-3334-46db-b122-cece2be13f1b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1aff52b9-897e-4041-bb84-32444b8cd96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ec33da-5eaa-455a-b185-b99a7197754f",
        "cursor": {
          "ref": "d4b3a5fe-8ca6-4852-8c72-98ea2dd1b63a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "43a46ebe-a836-43d4-ae19-46314c08c71a"
        },
        "item": {
          "id": "23ec33da-5eaa-455a-b185-b99a7197754f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dada88ef-ed14-4513-808a-7dd464a7f8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aba8852-aebf-46f1-a686-f00b0f0d09f2",
        "cursor": {
          "ref": "a14e5776-0bbf-40dd-a4e0-e590898835fb",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e491da94-8b9f-444d-9457-f1beac20a576"
        },
        "item": {
          "id": "3aba8852-aebf-46f1-a686-f00b0f0d09f2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "560606f8-2487-4c6c-9076-9ae739868362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815d815e-f679-4e34-9741-5c2232e3ca2c",
        "cursor": {
          "ref": "45163cc7-f745-4a11-bc54-17216442a4e2",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "590bf08f-8207-4711-8f91-5ef3434cf2a7"
        },
        "item": {
          "id": "815d815e-f679-4e34-9741-5c2232e3ca2c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "00cb2045-1093-4011-9c45-f9b44a2c51f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad1263e-df1c-493e-b659-616212d03953",
        "cursor": {
          "ref": "a3c5b99d-4f19-4e5c-b18e-f9bf19de39df",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1fa5632e-2ad8-4fbd-b848-702348e29ee5"
        },
        "item": {
          "id": "5ad1263e-df1c-493e-b659-616212d03953",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dc6ceae7-38f8-42dc-a65e-d19a90295508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f41d1b-6a99-4fc5-94b6-bdc082a50c66",
        "cursor": {
          "ref": "43cf69bd-1e39-4737-95bf-a2a6fef25f2e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "528650a0-7150-4140-a3c1-ada66fbb0b7e"
        },
        "item": {
          "id": "60f41d1b-6a99-4fc5-94b6-bdc082a50c66",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f406de35-4391-4f14-b214-0d9aee323282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e20565e-b76c-4b41-ad2e-23484b9923b4",
        "cursor": {
          "ref": "0b3b7e4a-b522-4186-a3c5-5c80f45ff9c8",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d40901b4-1101-40d5-957b-b5a514bc66ad"
        },
        "item": {
          "id": "7e20565e-b76c-4b41-ad2e-23484b9923b4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5c3ccd2d-7286-47b8-b1ea-614f60c8c84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d56ef3-e0d9-42a5-b6e2-73181e5a40e3",
        "cursor": {
          "ref": "33b75f5e-3290-4aad-965f-f246cd2ae08a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3443eedd-e26f-4f33-bf48-74091c797fe4"
        },
        "item": {
          "id": "d7d56ef3-e0d9-42a5-b6e2-73181e5a40e3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "266f5509-5d49-4a2e-aef0-0dd4ebd31fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726bad23-e63b-43c2-924b-364f9e181292",
        "cursor": {
          "ref": "9b2cf2fa-ea81-4bff-a0e8-a366c6c79e61",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "927d1198-f2d5-4b2c-9a49-7442208f78e8"
        },
        "item": {
          "id": "726bad23-e63b-43c2-924b-364f9e181292",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d8d49f25-b5fd-4978-ad13-aaf9942949f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16355cba-6a0f-49b4-a749-752cc42cd46e",
        "cursor": {
          "ref": "519aa5d9-fb8f-400c-871d-6aeeedc49b14",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "43861b14-a5f5-4872-b9c0-5e1fb322a094"
        },
        "item": {
          "id": "16355cba-6a0f-49b4-a749-752cc42cd46e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "75ab6a14-c10b-4d37-ba28-c21760718967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8a93e6-a3e3-42d0-ac6d-4b2c66994bb1",
        "cursor": {
          "ref": "c5f48e3a-474f-4f05-b0ce-5b120607e5be",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "13862a73-043a-425d-bb29-fdfe6e94bd38"
        },
        "item": {
          "id": "9e8a93e6-a3e3-42d0-ac6d-4b2c66994bb1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6e7686a0-77c6-4b17-a734-85b828d9386f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebabf2a-d349-4c00-8491-47f26e5ccbb5",
        "cursor": {
          "ref": "56ed76e4-5180-4ccf-b65d-3bce387714aa",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "de62c258-0448-41b4-8a4f-b82167548d62"
        },
        "item": {
          "id": "4ebabf2a-d349-4c00-8491-47f26e5ccbb5",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d2aa22f9-cb55-4fa9-bc34-0d76e4ca6b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5274fac1-d93a-4416-8ca3-91c1ac6e6514",
        "cursor": {
          "ref": "76573bbe-7583-4bfe-bcce-d4083ccf6087",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f6a403c5-e2a4-4644-adf3-df5ccd47295b"
        },
        "item": {
          "id": "5274fac1-d93a-4416-8ca3-91c1ac6e6514",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e7ba1299-52dc-4107-b9bb-d0ecb544b4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0aa615-5dda-421c-8de6-83ed26697095",
        "cursor": {
          "ref": "84165fd6-292b-4bb5-b0a9-be6593f79cd8",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ab7e9a0a-c461-4f3b-8f68-21389e0aafce"
        },
        "item": {
          "id": "cd0aa615-5dda-421c-8de6-83ed26697095",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2839d469-ed0d-4dc5-bb68-1bd803e28d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b4adf7-336e-4239-8447-359a17ac4288",
        "cursor": {
          "ref": "c3811baf-9ebd-47b9-ad3e-8bc986e03564",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "af309226-0a07-43cf-8147-235494d7cd38"
        },
        "item": {
          "id": "02b4adf7-336e-4239-8447-359a17ac4288",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "07c7d89f-99e5-46b7-b49d-a87a2c8fbd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b66592-ba6d-49cf-8e10-f53a47808124",
        "cursor": {
          "ref": "4bcdcd12-e96e-46e7-881a-a3d34f9f1c99",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4032c208-a52f-4e2d-8dea-17cd7b4771bd"
        },
        "item": {
          "id": "39b66592-ba6d-49cf-8e10-f53a47808124",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d91f5615-320b-45a2-bc2c-f4b48d10a7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a709720f-714c-4744-a413-9cfea5b4429c",
        "cursor": {
          "ref": "7035dbc5-7928-426e-bbfe-e2af69568973",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cb4f60f2-95c4-4093-b377-1b5123cfacfe"
        },
        "item": {
          "id": "a709720f-714c-4744-a413-9cfea5b4429c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4c1166d0-f793-4d2d-a8e0-46f7eedbc570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce0a739-557d-4ec4-8a0f-5e155bfa8dc9",
        "cursor": {
          "ref": "f494fa8a-6a13-458f-96f1-804c1ab9acd3",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b9cba8f0-eee1-42e0-91af-7e554580829d"
        },
        "item": {
          "id": "bce0a739-557d-4ec4-8a0f-5e155bfa8dc9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c72e99af-49f9-4fa2-bbb1-0bdd356a115d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db81980b-d2c7-4345-a2c2-64221cc4adb1",
        "cursor": {
          "ref": "744e4ca7-c1c5-49c3-97bb-91cddb98f563",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c52cda84-6007-4082-aa79-2124a6898628"
        },
        "item": {
          "id": "db81980b-d2c7-4345-a2c2-64221cc4adb1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "acee8c58-627b-4386-bfed-8d0b07d8798c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0bbfaed-c1a8-4457-9659-67f368473850",
        "cursor": {
          "ref": "b87a6c21-85d0-40a4-8564-73a09b4c5ab2",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "034189da-bb8c-4221-9108-d70a15ad8969"
        },
        "item": {
          "id": "b0bbfaed-c1a8-4457-9659-67f368473850",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bab79dbe-65a6-451c-b59e-219e556327f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfb1675-6ece-41d0-8552-4444d271a084",
        "cursor": {
          "ref": "73c43642-be4a-4292-a764-4210c6fab23c",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0601f38b-7e7f-48d2-a24f-930750a05bc3"
        },
        "item": {
          "id": "1bfb1675-6ece-41d0-8552-4444d271a084",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d8110e90-a24d-4f67-bfb7-be3ad5075fc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb24db4-1e66-4370-af69-fe8b2f6fa454",
        "cursor": {
          "ref": "6dbc8f6f-fa2a-402a-9c7d-b49d7d309b15",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a9ee82ad-0c24-4ef1-95b2-8f9a46d426eb"
        },
        "item": {
          "id": "bfb24db4-1e66-4370-af69-fe8b2f6fa454",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b99bdc0d-8d07-4857-8cbd-6d8ff8a67630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1784a07-3bd5-433a-9cc8-fea64596cfd1",
        "cursor": {
          "ref": "72ec03fc-7935-4992-ad47-4189c3b3a0fc",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d5aad163-97c2-4848-8c91-e4282ce51966"
        },
        "item": {
          "id": "b1784a07-3bd5-433a-9cc8-fea64596cfd1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "579bcd1b-170f-4382-aef4-51e3eed15304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d2e50b-f4f7-4491-9f9b-15aed6a61d44",
        "cursor": {
          "ref": "d90cb5ed-74de-4758-8686-8c029bbaf8ce",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "42f06c83-2b85-49be-9998-2f609400fb10"
        },
        "item": {
          "id": "e2d2e50b-f4f7-4491-9f9b-15aed6a61d44",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "47b66c71-9902-4e14-bbbf-d8f97f7c6a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2e838b-8014-4731-8372-b3276b88936a",
        "cursor": {
          "ref": "dcc37f22-0340-4d92-9726-d0604a55ad67",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "829ea3a8-e371-4931-9580-91b029119b89"
        },
        "item": {
          "id": "be2e838b-8014-4731-8372-b3276b88936a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7dc15ef7-ec9a-4243-a5f8-f1f31ac46ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb91cc04-4e19-44b1-9d14-66d600131ad5",
        "cursor": {
          "ref": "8b55dd97-b886-4a5e-9bf3-cd244fd0f5fc",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "ee2a3389-9db0-411d-aa18-6674bace3be5"
        },
        "item": {
          "id": "fb91cc04-4e19-44b1-9d14-66d600131ad5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ef486d47-c9e3-43bb-a107-37cad8379573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3048f4d3-c26f-427e-98de-f9e12e4e54d2",
        "cursor": {
          "ref": "fb3d1700-cf37-498e-bae0-e210ec1f2ac6",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ab2b3268-75f8-45a2-b251-b3bbf4d0feff"
        },
        "item": {
          "id": "3048f4d3-c26f-427e-98de-f9e12e4e54d2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7aac8534-c97d-4002-80fa-b513f87338b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32aa60cb-8df0-45cc-b05a-90dda70920e4",
        "cursor": {
          "ref": "7c4c0d75-9237-46a7-9146-1a3d22e40928",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a8a9ed88-732a-4b8f-9164-4cb0ca323df3"
        },
        "item": {
          "id": "32aa60cb-8df0-45cc-b05a-90dda70920e4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e6bac5b2-9ce3-40ed-b6fc-a87fbaf4998b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00132d19-9053-4393-a936-9c242218bdc6",
        "cursor": {
          "ref": "5c0e89b0-f96e-4c87-9444-1369b6ce085f",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ca694b28-ca36-494f-a40a-69b5d8f1f6b1"
        },
        "item": {
          "id": "00132d19-9053-4393-a936-9c242218bdc6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2685e891-4f1e-4826-9038-03164460cff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcac0b0d-697e-40f4-b79f-6d8d6c04391c",
        "cursor": {
          "ref": "f756f07d-0b6e-46ce-9bad-9f04864b622e",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "efa51b32-ad59-47b7-a401-1ec84326afe8"
        },
        "item": {
          "id": "fcac0b0d-697e-40f4-b79f-6d8d6c04391c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fde9d83c-dfa9-4235-a61b-6be3863eb71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e37a0f-0b25-4340-98b9-de14f8b20ea4",
        "cursor": {
          "ref": "210ebe2e-3fe4-4c84-9c19-11a73c087a62",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2da11e1f-a1d0-419b-be19-6d4cf5a455e7"
        },
        "item": {
          "id": "46e37a0f-0b25-4340-98b9-de14f8b20ea4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c9b24707-c6ab-4d1d-afeb-1e37276d7063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507bc126-6050-4e50-a21c-08377384af0b",
        "cursor": {
          "ref": "a440e920-7707-46b2-b8e0-dda616ab441f",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cf4165f6-867a-4a54-8b6c-33aec6831bef"
        },
        "item": {
          "id": "507bc126-6050-4e50-a21c-08377384af0b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4c9e3ad2-3a77-4cf3-83c1-5781fe72e111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf511681-cd30-4b7d-ab93-5c278cdaa1fe",
        "cursor": {
          "ref": "5513fddc-1d83-414a-af6e-28f7893988d2",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e457b494-660b-4c65-af9d-096ea2b8a2b9"
        },
        "item": {
          "id": "bf511681-cd30-4b7d-ab93-5c278cdaa1fe",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4c4dccd2-7b11-40c4-a4a0-18517144245b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c249156-f367-4f4b-9e9a-3401e7290e8a",
        "cursor": {
          "ref": "795542bc-8cba-438e-ba81-16e3136c60c9",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "27a6eef2-7025-4084-b5c1-c8f02490af3c"
        },
        "item": {
          "id": "4c249156-f367-4f4b-9e9a-3401e7290e8a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "696635e0-839a-409e-b936-1edd7a1f852b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3aaa06e-0b6c-4fae-9dc2-554dd4641d87",
        "cursor": {
          "ref": "90fcbff3-7f48-4c52-a272-c6bb3bc341cd",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1c5ff5cf-a5c5-4fbd-85d0-818c062ee8cc"
        },
        "item": {
          "id": "b3aaa06e-0b6c-4fae-9dc2-554dd4641d87",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "cdaca824-30dd-40e8-bc2a-10e4d696b225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0865ecf7-1fcc-482a-aa07-6e91811c0364",
        "cursor": {
          "ref": "b7b01bc8-853c-4f6f-9254-ed89a0217095",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c8e4b2ec-f50f-41cc-89f4-79db84b283a8"
        },
        "item": {
          "id": "0865ecf7-1fcc-482a-aa07-6e91811c0364",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4894b4d8-e61f-4bd4-bc66-799ccfc0eb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cfbdad-c3ce-4913-b55a-edb981b25169",
        "cursor": {
          "ref": "43d2cb10-784f-49f9-82bd-fa69caa39e10",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "90bacb87-7c94-4996-ae2d-da776d5c0ac2"
        },
        "item": {
          "id": "24cfbdad-c3ce-4913-b55a-edb981b25169",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4fe286ba-57ea-4caa-ada9-467e69f3ce5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e2cfef-07f9-48b3-a72b-eb0bd127d2ba",
        "cursor": {
          "ref": "64cb4fed-2c2f-446a-ba0a-ba9d65c2d517",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e021340f-70a6-4fca-95ac-0bc101999c59"
        },
        "item": {
          "id": "a9e2cfef-07f9-48b3-a72b-eb0bd127d2ba",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6bb11552-af8e-43ff-afb5-d41a42ebfdae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4638dacc-6a0a-41e0-a7b8-315dcbd5477a",
        "cursor": {
          "ref": "e8a0d442-bf4c-49b3-9e64-a60b67a20341",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "714777ce-7212-42e0-a1fc-3dfad0b5f44f"
        },
        "item": {
          "id": "4638dacc-6a0a-41e0-a7b8-315dcbd5477a",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "44015b46-82f3-4647-8ce7-f2bba946e8da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d892e620-e109-479f-bb6c-79b45c4ff614",
        "cursor": {
          "ref": "9ccd1542-206f-4c71-b181-0e9c96f47078",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "a455881c-f8ce-47df-b174-470994b59293"
        },
        "item": {
          "id": "d892e620-e109-479f-bb6c-79b45c4ff614",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "12a43ea8-97a1-4f9f-a1fa-5d594b99c212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359e027a-812e-4d0b-ace5-f1eb84e571ee",
        "cursor": {
          "ref": "1a416bfd-7d63-4f49-a772-98ec074049dc",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "31000a36-6beb-4981-8bd3-b0e173f87fee"
        },
        "item": {
          "id": "359e027a-812e-4d0b-ace5-f1eb84e571ee",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8e814986-3349-44a7-9e4b-adb517b00116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2982b4-c3a2-424e-887e-c8e3ce0b6351",
        "cursor": {
          "ref": "71fbdba8-5f63-4b22-89f0-f4b8cca7bd6d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4ad1b08e-4718-4093-bec7-be5bb75cfa4a"
        },
        "item": {
          "id": "6a2982b4-c3a2-424e-887e-c8e3ce0b6351",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "142a1f9c-5b9f-4e93-b2e9-868303168d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24945bd-fcca-4c36-9604-e3ca2cbcd0b2",
        "cursor": {
          "ref": "ab7272fd-483a-4236-8d90-86d027e87196",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d3edb01b-cd52-4455-853d-72f179791741"
        },
        "item": {
          "id": "e24945bd-fcca-4c36-9604-e3ca2cbcd0b2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0949ec0a-6466-44f1-a8dd-b37205064580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2745fc-df96-41aa-a38d-c4107258aff0",
        "cursor": {
          "ref": "979a0de4-611e-4893-9599-9c687bb385da",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "33b9de76-8ce8-4c55-8105-0c762ccfb889"
        },
        "item": {
          "id": "ca2745fc-df96-41aa-a38d-c4107258aff0",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b5435bb4-1b2b-47a7-a259-5870ea20a6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0e994c-8b4b-4227-a927-b4b5f6abe183",
        "cursor": {
          "ref": "b6cc18ba-6cfa-49e5-ab08-3e4210dc760c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "621897ca-e182-437e-ac88-6a28030f882f"
        },
        "item": {
          "id": "ad0e994c-8b4b-4227-a927-b4b5f6abe183",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6740d33d-645e-44a4-9214-2145e4926362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4198b4c7-3441-43ec-a84a-634d31b2360c",
        "cursor": {
          "ref": "75d21187-87b7-4c4f-befe-b36482d54a40",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ab69af0a-a556-4b93-93d4-66dcdb4b3a08"
        },
        "item": {
          "id": "4198b4c7-3441-43ec-a84a-634d31b2360c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "193d9e31-7c50-4bcd-9142-4b12ebe3bd19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df13623-3704-4063-9392-de023bc009cc",
        "cursor": {
          "ref": "0dacde7c-e43a-4307-8a44-0fdff277b950",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c4de49c5-9f52-45e8-ba16-3aca3efbd3bb"
        },
        "item": {
          "id": "4df13623-3704-4063-9392-de023bc009cc",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a7e6d677-c451-462d-84ba-dbe57c7c65cc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a842eb-0502-4ff3-ac7e-a8f0f48263c0",
        "cursor": {
          "ref": "f22b1a84-063a-45fa-ab18-d361d529a8bb",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "6b97060f-0fcd-4673-a145-9625242f428d"
        },
        "item": {
          "id": "76a842eb-0502-4ff3-ac7e-a8f0f48263c0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6182e486-a536-421c-adb5-308bf6f12a15",
          "status": "OK",
          "code": 200,
          "responseTime": 142,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b48f773-b45b-4caa-b8cd-68acbc003a82",
        "cursor": {
          "ref": "40c6d551-7409-4c2e-96f6-7cb6be09a7a0",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "39f95520-852d-4f03-a8a3-2dec7ed798a4"
        },
        "item": {
          "id": "0b48f773-b45b-4caa-b8cd-68acbc003a82",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c3669883-293c-4f2f-8faa-0462a0fb2ad8",
          "status": "OK",
          "code": 200,
          "responseTime": 2705,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e915b9a-c472-43d8-a87e-419e7ca86346",
        "cursor": {
          "ref": "959aa3e2-3104-4224-bd33-21bb7d846b43",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c58e8e2d-4e0a-462d-bd0f-5536ac314db1"
        },
        "item": {
          "id": "3e915b9a-c472-43d8-a87e-419e7ca86346",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a29ab5e3-552e-4a29-80d7-c83652af02cb",
          "status": "OK",
          "code": 200,
          "responseTime": 2453,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "187fc15d-7415-4bdb-ae8d-fade755d4967",
        "cursor": {
          "ref": "c291e72d-3ea6-41f9-af66-dd03b9bc05cb",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "09dc447d-dd7c-42eb-900f-44c842829d31"
        },
        "item": {
          "id": "187fc15d-7415-4bdb-ae8d-fade755d4967",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a747407-2c25-43a1-af48-9660eb82e772",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187fc15d-7415-4bdb-ae8d-fade755d4967",
        "cursor": {
          "ref": "c291e72d-3ea6-41f9-af66-dd03b9bc05cb",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "09dc447d-dd7c-42eb-900f-44c842829d31"
        },
        "item": {
          "id": "187fc15d-7415-4bdb-ae8d-fade755d4967",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a747407-2c25-43a1-af48-9660eb82e772",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b7f80a-e725-46eb-ad67-23fafc215ae8",
        "cursor": {
          "ref": "21be555c-c8aa-4d6b-bb63-78c9f6e5e384",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8ba21600-34d8-45aa-9d9e-e7caf7e68b44"
        },
        "item": {
          "id": "96b7f80a-e725-46eb-ad67-23fafc215ae8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c49116da-a769-452c-981a-2c22189d8564",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067eec21-ff6b-4911-b248-2a5a1f239607",
        "cursor": {
          "ref": "802c845e-b12d-489f-b459-9d4e7d0b43b1",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "37712e9d-27dc-4984-99f4-036dd707f368"
        },
        "item": {
          "id": "067eec21-ff6b-4911-b248-2a5a1f239607",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "73a65277-844a-465e-841f-c9e3a78eba30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}