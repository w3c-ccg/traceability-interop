{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "ca335abe-8b9f-49fb-857c-5751e23bf87e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "672ff748-3b14-4022-b202-2c52b741e7e0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b8386bc4-15c7-4e8c-a023-2b65b3434bdf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "50501dfc-643c-4ee7-a785-de43554364da"
                }
              }
            ]
          },
          {
            "id": "c17827ad-a709-4c70-8996-686a1e7d1cf6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e97c5673-e401-4d32-9cdf-4c5a17cbaa29",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "80c4a374-e8da-4124-a872-f31675d72f21"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b91d6394-8d8f-44b7-9e90-c83e7b9c292b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f1fcdebb-9bfe-498e-8c37-047b62786259",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eb167366-a601-44be-99e2-9b4812e52d4b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d016398f-2bad-4e59-8f69-218e9ef02a02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0d5b9e79-5f30-4069-8c7e-12426a18c6c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae2db2e9-9ab4-4f09-85c7-344730a6c813",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d3c0da8-1447-4331-8697-594d5da19ef3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "05b49eb7-131d-40ef-999b-12d62bf52b29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6baa86a8-f7cd-4f16-99d7-a723a4f37cdb"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bf4d0da-bf80-456a-9b68-bc7e09b4748b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9b1e0e92-6579-4d15-a502-3aeddebaac9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "82507dad-0735-437a-9d36-90180d8eed29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3ba7ae3-b34b-4e94-b3a0-9a15980ac88b"
            }
          }
        ]
      },
      {
        "id": "8ef8ff2e-985a-4128-aab1-bbb454f85727",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c9e5ae36-ec0e-4ba6-abe2-150ed8aaa71c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1facc9f-4e0a-408d-886b-7704c2b1b45a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b6827781-5636-4709-ad46-3a65123c6652",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4924ed22-b4df-404f-8ba7-46a2629eb86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb555aee-3ef5-4968-ae46-3883d89358a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abdf7c9-452b-4d33-8811-ac98d8066cc4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21cb7f2-7376-463a-9d5a-6b10bf6209e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63f75d62-4d9f-4e5b-b7b0-8f41a35f980f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a3c98b-85a4-4bd6-8e2f-6dba974e399a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289cc9fb-ff51-44ff-a59e-a40cb9a0a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e08bc84-8790-4617-bd71-3fe795a0200f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ba8cd83-ac23-4942-9c3b-6c4b3620c3d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "148fdd3b-d0c6-45bb-b272-f74c08521e38",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961ed476-1d67-406e-881f-dc1b7b24fe0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5f16751-9c3a-4c61-8623-8f38559e7f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6cb39fd-9318-4567-b951-3f9df7453d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb813d9f-cb5f-4165-97fa-cc2f28c150e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173ddb50-e4fc-4beb-b8c8-6bada37cee43",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdad02c-126f-4e90-b73f-e7929c0a8095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72eee14b-a8ad-4481-a963-57b22488c8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9835c86-5131-45bd-b045-0614b19453cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "2048b7cc-7709-4356-a963-3871f1df0712"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "10a3241b-ade7-4ab5-8ae5-51f0c46349fd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d3abf4f9-2ee0-49fc-8353-450b760b73a4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "725649fe-7ae3-4a6f-8165-f2e93aab6c1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f59c0372-5c13-43e9-9959-76d5437648fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90608c1a-75d5-479f-a7a1-3a64c3529ba6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "89370913-0295-418e-aa83-25961e215054"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7456af8f-7475-46e3-8ff1-800d021f2f29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e359809e-1291-403f-a2fb-073a90a0ab03"
            }
          }
        ]
      },
      {
        "id": "fd15ed3c-c83f-4ed2-a95f-31531930e730",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e01ea3e6-20ea-4dd3-9490-c874d2e33596",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5266211c-863c-481d-adfb-abb7175124b4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "49f59f03-0554-405e-bc9b-7e05451f0d30",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73c75f1-ae02-49b2-8b7f-df2b0682a626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdaf54a-4e1f-47c5-9b4a-1c656fa1cd75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55077d10-f5e2-4748-b705-cc19f1beb4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "754e2c88-67e5-45c6-b31d-6e54a86a50ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869cac77-5c97-4669-93f4-efd9111c355a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80969b38-3ced-4041-b075-19747bce1802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390ca0f2-d0d0-47e7-a350-3eff9d50c00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e087fc-55a4-4135-a2c6-b5c5dc906d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41d686b3-9cde-426c-99cc-815aeefb9756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52ac0e4-2086-495e-8155-63e1686815f4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2635afaf-8a1b-4003-8e93-6414a8260660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180f4ead-24cd-4c94-8024-f0cd49917e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7b71c3-f0cf-498c-af37-28e816325341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efb01655-32f7-422b-a87b-5a4e67283a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b47556-26a1-47d0-9379-1cddc715dccb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce85db1-133b-454e-8a23-f6a7fb1e55cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458052a5-2c1a-4d86-86aa-ddbdd06f50a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978f5725-fd15-4bc2-a215-13a381a01ba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "638627f1-b9f3-4c24-b219-32e8029b0db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b657e6-9031-4320-b16e-811fb6eb642f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4a034f-90ab-4e08-b50f-551955cc796a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee18292-edd9-4880-b70c-31ad4d6939b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6bcfef-7816-4bca-bd15-581ee508e71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "477174eb-e04a-4766-8ac1-742f2b40245f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2a69da-fb1c-4f38-a882-4402be851c7b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3f8679-9753-4b28-a7a6-f70602be3321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47389e1-fe30-46a9-aefb-e49ad81a67b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01d983e-d40e-4863-88f7-1425c3646d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9980f5f4-99a8-44ef-b3cd-3513eaf87348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f88dee-0f9c-4030-9d71-1a4952629163",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1eff10-e32b-4700-bfef-e78aee9ab3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578b9040-04a7-4f18-9fa8-0d16772b1377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a599ea41-9c7c-4558-9ae7-e662226609ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfc011de-9f43-4450-9eb0-f155c6d3862e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbd1080-4b88-411e-a8db-e07e857ff902",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11119158-5dd3-43c3-a5f8-571ff5dcc1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532352ab-5d93-4a68-beef-181d61a2243d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7c3fd3-952c-4969-ba1c-b16d9382c533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bc7a237-bee4-4220-b8c5-4b46b4a90e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7b9171-fc5b-432b-b497-9322df6ae803",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f147c5-2744-4a57-9404-499d9f96812e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a24e8a-8d3f-4235-b18e-08ad2b36b22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eedef20-d6f0-4d6c-bf75-477f822d7db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c509c70-3d6f-4c52-a34b-38bf2ddb9efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e887d22-33ff-4487-8dbf-a2dc32316661",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88d6919-0300-414c-a458-d9a490355be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f906b028-63c0-4845-953d-e2f7b33e5af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae02582a-be80-4883-86f5-1da208a98cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22091cd1-7a7f-42cb-a0a0-1e2f88e1fc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6559dfd2-6b08-4f67-8d90-90727e5ac401",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08776b91-f232-4f90-992b-928eb41bb71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d26143-df12-497d-891f-07e0e19b9a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40fd4d6e-4861-4aba-8b72-ffb923b61f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbffa684-ecc0-4222-9666-f5fedc8c4291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4152c430-d775-4861-b013-1750b47c44bd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c4694d-4061-4f65-81a9-b7b8ad30c374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10992fc-c5c4-4a4e-a3e3-c544dc08b74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d75538f7-64be-48c6-8ed6-726a2402d4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59aee883-4b77-4c6d-9321-eff57ead52d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498fa891-ecc1-4c4a-b9e7-61946148d0f4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8501ce-9c14-40ba-8aa2-b92e53320d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f778e1-4cb3-4efe-8a5a-fefdfa23d8ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d00cf6-bc15-4d4c-8d7a-5bbfca6e1977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "322215bb-55a7-4b3c-bae4-23c7f2a6a82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ab8937-8292-44ca-8d56-201d19d10bc2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5365b5-00ce-4d12-85f9-090adee72e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5d7254-edb0-441c-8b30-d186b2328144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c28295-0f08-4a02-b1ed-0ceeea6a1960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e25656d8-f02a-4248-adfd-af5f10338947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440e70e6-21db-433d-a927-d970660f3300",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bacd320-a8b8-43a4-8770-81c71d68931f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774c509c-85fe-402f-86e8-6dfefbb63478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3f7fa6-2c0a-4b52-ba11-12ba0b9a6f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f79e2aae-1904-4990-aae6-a2ae434a4992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0231df-a95b-4925-b5ea-0dac0140aa55",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8154c597-ba2c-49ad-bfc2-94dbb490e228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfc7543-e011-40f8-ba68-ed7ba9a1a8dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77be79b9-864b-4c85-9d4b-a574df204717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c25788-6dc3-4659-a4cb-8003ff054a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf49f70-436d-434f-82ee-6180934fa0fa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81db814b-ef52-49da-a8ab-d92f59e9b47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edeff169-e582-4557-9d7c-ac5c7a8f7ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ad8556-714d-43e9-b43d-4c74614667f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "556eb87a-3b94-4637-8653-ffcb11ea406f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd09407e-728e-459d-88f2-ece294f3985a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d6d76-da83-4be8-b85a-09d9f9ee7d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1296dc06-a4d0-49ff-b8ff-9ff697092a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3434b65-884f-4d2a-9c90-b1ca1af3952d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be0f656c-c173-424f-ab2a-5dbb95115fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae81644-b458-4c1b-8927-362cf3247f55",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abf3be3-da98-490c-a7be-8bc58f18d15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942ae116-be39-44ed-aa18-41d2f0a5c74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c1fb2d-c874-44f8-9dcb-2dc440f1467c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15f8e25c-38b0-415e-a2ec-917522265951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ccff89-ac6a-413f-bb29-5c2d91c42095",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dc9046-185e-43dc-97fb-fae42773d1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3e53c1-fbcb-4967-b909-55caa8fcf1e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0860b9cd-d2fb-44a9-bec1-fb3a3fb4b69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54811bbf-ad0a-4e62-8b59-db875133d940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bbe76f-d594-4539-b8d6-0c408d2e4fba",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2e37d0-a7a8-4e51-968e-0b50592129d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0562541a-dffd-4ffa-99be-875ebb35de0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6f946f-f77d-4462-81ea-d56dc897fca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b78c3cc-dcc3-4c0c-9360-bf80138d4bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bec9206-0b13-4d73-b47e-10add90137aa",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e458e0-cb84-419e-a63c-c7113a83d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7b624f-a282-402d-a565-d4d211c73956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5749665d-4ba3-4a25-9de6-408add153e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9afc894f-0316-402c-b079-6dfe589e3666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ca7bdb-2b97-44e8-a7a4-f2a963a8c970",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5ad73c-d5cd-4681-b7a5-e6991ef78e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebbfab90-bfdb-4c4a-b8d2-11cc85619c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c392ec-c35f-4bd5-baa6-222811b3a66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81f3d17f-fb19-4701-9bcc-83a3daf73812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70a7a773-7fc5-4c78-a963-c49a1ffa7b5e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4832991f-0fbc-4e04-b6b7-5c12d4e2e6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae61f8d-9166-4a85-938b-c41688ed9ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2d4697-966f-423d-8b93-4e72b0443884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aea9494-01e0-4748-8931-b9fd2802bbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9096811f-72fd-469a-8b42-d77207ce14c1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b15ef84-4f13-424e-85e6-7e6b26a796f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbe7e32-3dd7-4ee7-b5af-cf28373ec722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f3f363-587f-40c9-9586-77b6b3115766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55760537-4662-450f-b805-c1a0ae0c9d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef9a725-3e9a-4688-a483-e0a875e2ed8f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef05e2e6-3741-4379-bcbe-c4874a7e4d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89b332f-44e6-4ae3-a192-f3c957bc0399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79547e2-ec7c-4b7f-b117-8024e1570be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "beabce2d-5ce9-4520-b05b-b9381d745c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f48d4a99-4a74-49a9-aaf9-a2ab4e26f784",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6271b14-87b4-458d-981f-082eecf4f7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fc285c-2c5b-4dc6-97cd-a4ea3ce8be6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff824243-3dbb-4234-9add-3c318df4ea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3307436f-0e9e-4c1e-a79a-3d3ba8991aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0659d907-cc5b-45ba-af13-ffef31e6c2d1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd91772-cea2-42aa-9438-061f37406889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4519eaf6-dc13-42d2-b2b8-c363013cb30b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4471aeac-163c-4163-83f6-5776d4700c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ab69f20-b7c3-47ef-8e29-dc009b2e1118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c168b44a-dac9-410b-a440-b284e84f50cd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3309e2-18b8-47c0-b842-abd9066c8fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f6ba6c-8e3b-470c-b80f-406e73ef49bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3028f62b-e5eb-494e-9413-8cbe25ab65ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5371ca68-2d60-4d21-8272-731d2b49bf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c22ade3-3091-4b9b-b967-67623b960d40",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd065f0-0d07-4b6b-96f0-a6ba9e607e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7492a5fa-3f55-484d-a8ca-b74ba36cf4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb6c374-f9d2-4d52-b593-eeb8de0323fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e3fd44c-d0a3-42f5-99b2-40ad6f8103f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8273d928-b45d-4cfb-b5e5-6684246412f1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72aa739-77b5-49fb-b499-a2d745a1b135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab45bbff-c526-4e9a-8811-d7d46e8ddaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3677b7-7be9-40bd-94cb-4aa9bb92e187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e16a8bb9-b348-4c6f-bf2a-74ee482e5597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4d4534-e44c-4889-8f45-12b4c88ae592",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8e3c21-a6a2-444c-af3d-8af5819363b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab3b037-63bf-4034-8f1e-4b1f8111e9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df125ef1-fe77-453a-947a-90e23aca66bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4945e6-b3b6-4961-8385-bd681546eda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6aff93-16fa-4769-8ff8-94a7f16cbfea",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aef0df8-2c8c-4fd8-85e0-8498a5259d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb58aa6d-7936-47f3-9121-fd65a2dd0e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0373b94e-d3ab-4774-b266-ab50261f08f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2877fa3-e95b-4470-a6f5-7f6a0d291f0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7726b4-82c2-4f89-9105-4b00e474fc9e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da6b68d-3fc1-4cea-b4a3-17d7f93d6cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db149407-235c-4ebb-bfe8-e930c6259228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c10de0c-8c8a-46a9-9446-3281edfbf17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a8aeee-0257-43a6-bd02-bdd8673b6b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637df055-8466-46e1-865a-c57240b52970",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f35937-a4e5-4df7-a8de-59d2d1bd20b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f433d34c-34ee-41e8-96c9-6ecb720f0466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f123b7-63d1-46dc-91a5-36775057d9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "92abadfd-2229-47f2-acab-173f8b9b2819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e235ce42-add8-408a-bff0-e65d5cb31f28",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0505e5ae-bf6d-4b70-9836-a46c93c6237c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78b6d7cf-f36b-4cb4-8d3b-a6c8cf62de37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc7fbc0-f234-4245-a9a8-022381bab7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47e5c825-2c31-43c8-b935-3302cf4250cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd797f6-5841-462a-8b83-42eb451cdd26",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efb13f7-2957-494d-a5e6-649d6264b2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40780b2a-b0e7-4cb2-9b7d-06d8fa78d658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e782d7-a314-4991-b244-157c3ce7bc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "115c3081-f8b1-444e-ab3e-818a1b91a7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f797b5e5-0cec-4d19-95d7-73dd96279766",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e077d9b5-56c1-40fa-872a-1ceb2eda028a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6299bfde-3f22-4e45-bd9f-14d6e04832bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed02d818-9537-4f04-84c9-513c9c45cc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b76e1304-1455-4fe8-828c-39e3d9d4ca46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01352108-d1e9-4b90-b05d-20bdb4a56cd2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9077c94-521c-46a9-8995-499d2bf0bbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b664fd4-61d3-413e-adc8-6564147e201c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef938ce-0fb2-48cf-bf9d-db14b43bb732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c467a801-3cbb-4682-a37e-83f0ed448f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a166e13-c991-4d90-afad-cedaed130f0f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b94447e-3b01-46e9-806b-fd9a164f9200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6b0530-7d6f-499e-a174-74c6fa4aa792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8fbd37-6268-4393-b0e1-f021b9aee6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "59516563-303e-4450-a7db-2ecffcd38265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a389309-48b6-4a8c-9dd5-20ebf7d3c777",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a3703d-9f22-4441-8119-952d20fe7ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b8f3df-3a78-45ae-bb70-56c2f155d7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bb4c01-79ae-4417-9ce7-a4a0dee6cc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cadfbf7c-5815-48a0-a7b8-34c30b351a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531f3603-3919-457f-b8a0-fae98e314126",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ddd78d-e6af-4f95-a649-603f6699c9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f79f4d3-894f-4a5f-84b3-086cb72ec2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01556d53-bc54-46e6-b1a1-0a1e2bba7520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fe5746-1a72-43ad-b0a6-cf3fd7a55ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433c0d7e-0d6d-4f5f-b9d8-a9b0d3f092cf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b25c612-3f2e-4623-97f2-d39bf66b6057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416b44c8-1710-4965-9d42-5ced7d8e34e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79895cf0-6e87-47f5-a86d-a30d2093960c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "28af6b04-42b5-486b-b7a8-012edf2863cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4943693e-7b58-40a1-b72d-a47b48a00580",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b970b0-b2f9-406c-bd53-042bf3b12ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22c5e7c-fdb5-40d0-80a1-af31d55e4c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65e27a1-c79d-423b-b1b9-9235a96687da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "49cd51e7-76c1-45f4-b20a-bae50c77b553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c7fe9d-7efb-4bd0-b06b-12470c24ba4d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3431d979-a7d5-4cd0-9e96-3ae672704d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5021ddb6-6666-4fb5-b787-e68607c831c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a031bc16-02ec-4085-bccd-be9d2ec376a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d6296a-ff2d-4441-9e8b-339a3b286ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e781aa0-2b04-47ba-8e71-f84521f85adf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c4bf2c-1f71-45e2-b084-060cb5da666a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c06d90-68d0-40c0-8cf8-ae51d4858a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e557b75-c8dc-441f-8107-112014483bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c9fdf91-692a-4204-9cc2-303bee594af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43be0063-f82d-4ed5-bbc4-8a805774d172",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a03a5b0-e5cf-4b7d-bef1-c710aa12df0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635fb16d-274a-4eaf-b23c-66ae4d16067c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df52a986-1dee-4f29-9fd5-d2bf0f671f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a52f92d3-32a4-4c50-aabe-e2b05ce09b91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b930820d-126d-4309-adff-5674805898c4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a85139b-c5de-4552-b12a-4b47d7c298a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4dcda45-3a7f-4459-94b4-7becc682024a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c1ab34-28ed-4a2f-99e7-5bdd50aabaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe375e5-b4fb-430a-bb90-c97aa544b81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98d224b-8659-44dd-ba5f-fb2393551ffc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c29521-059c-4f6c-8590-749436e6d943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0f7c080-3834-4c94-aad9-6e3d8efa40f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2561df-0350-4b1a-9551-c93ee19adb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f4eb653-4332-4850-afda-bfb9295c835a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4b70d0-9125-4227-87c7-ab4dcf1a530c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7187533d-dd27-4b84-8b55-05b4d4ca9449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95563117-2cbd-4239-8c7d-d97f9c35c276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb8231f3-6e80-41d1-b0e1-70483a7360bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c7eb0f93-7724-48d6-9704-44fbdde32c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e57eb3-bbe1-4f51-8a15-21bd97981843",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20e8ecc-7ae8-4ad9-a6f5-05c2496ddcc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28981d41-864b-4834-a6b0-dfbcf7d8c74a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef77e23-0c6b-4fa9-b470-459530e9536c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfb5bb6-12ed-48f0-81aa-0c0fc00ddbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ee2c25-0ffc-4c67-be0e-7a7171aa9c2c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93e9ef6-b0ab-4f48-bfe8-e7255d81f747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7f710d-955b-4ddc-964e-fd3b46316905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306fb9d5-1e74-45a8-a136-5a058c2ce28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca87f7d0-b569-4f2d-b542-1ff3a900753a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60012dc7-e72e-4ff6-8673-3a753301cb42",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7e110c-853d-4611-8b98-546a8c8cca07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d612b1f7-9e5d-48bc-a57a-fb18342d7b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91cc6d1-b514-4d9a-a4f6-d16f652f3e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "beb859c9-4f0c-4355-bf9c-35ea49910ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966a4e0d-5b01-4cee-b16f-25c3d878dfea",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0025ba66-958d-43ec-a702-e1c08ba38712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ea72bb-b405-4832-92da-95aa608ac54b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedec1e4-2006-4b14-8ff0-bc2436e9d5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7b1505-764c-4d58-ae2e-e9e1d2d64eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa091ef-676d-4fd4-a7a6-f11b6309d30c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ae6966-bad3-4323-9c5f-1ad9acb899d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43866fe9-6f61-4b4b-bd7e-885f2e9aaacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d0fd81-c438-4d37-80f3-7f6ea8eee5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc239307-fa88-45fb-ac9b-a6104e7bbc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb87f685-d23e-4e1e-a7f4-fbf1ddce7277",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ad9521-437a-4b9c-9047-8182d8e3e731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eec3865-b1b1-4d3a-945b-9fae39e67fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82416f1e-a8fc-4dc0-bdd9-f50978396ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f55e895c-e0d1-4cfe-89b4-2cdf0b029408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b62971-ac5e-4020-871f-2d73749af205",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59cf7fb-e47b-4c66-90b2-5744ece474ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6c0455-5441-4ba5-bab5-c283a2f0d104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76b766d-1f68-4175-ad9a-948aca4a9228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f203cad4-672a-426e-a154-0ad8eadd498f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c3519b-bdc3-45b5-9054-4af0b85e5f2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f84586-88f7-4351-b37e-2a8279a4ab72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16deb2ee-86d1-42c5-a8b2-c63492a63e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1f021b-7e89-4534-9ece-d747cd508360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "71857483-9063-40d1-9506-527fe14642d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bdd35e9-5863-483b-9311-c14107ae41b8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254adcfa-c63e-4860-8a90-6064be8088f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31898fc6-7f93-4fb6-b89f-3f5688f29c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db996ab5-6e71-4645-b89e-20b4a4f2bcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7e6f08-2c99-44bc-bb23-1d5aa3b79620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646f04b2-d462-4506-b6c7-191b1169ee14",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7439b75f-11b0-46a4-99ac-3a811a632d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe03432-316b-4fa4-ad19-f39698cdd00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc92887-8bb1-4e91-816b-28f8554ccf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0807a40e-3427-4d8a-a364-08bee2acc6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c850b0e-0ed0-4d54-afbb-a38f99302cce",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25291cff-10b2-4635-b6f6-e7cb37ac874f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b0816eb-1610-4f87-b4bc-d254c99e6cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b198ea07-1458-4dff-9d76-03c903a51130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cb2eab-bc68-46ca-9d1b-d73c13bcaebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b13703d-e6a3-4046-a5c1-9719c9876003",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56096d66-bd0c-4303-b190-b1850afb0427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4aa29a-9163-4022-b9d3-632e17eb8777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c63a18-3664-4f5d-a29c-eb9a7231562b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c642eecf-036a-4973-bb61-3d4fd3ea04ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942a8fc1-b09a-4da3-90c3-9f2f00104a09",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a399b0d6-a99c-4ac7-96ea-763693972d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a16e1d-5ef1-410b-bf3d-e4744dacaddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14837811-c3ae-4b9e-915c-228c92036d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "02667f65-de06-43ef-bc00-0721cbc55a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2597b994-dd20-445a-baba-9bdedb0505a2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5958bb4-ed1d-420b-aa77-1db97aa3fa7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270e8089-0cdb-4c5b-a975-2bb9d22261d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3584387f-5e22-4fa4-8b34-5bd6803e56d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe4e45f-56a7-488b-a445-4db8b76ff42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849ea90b-0c33-4c8a-82c8-95d96dd3ccd5",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b95b8ce-325b-4dac-9a4b-5b9d3b410faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b924e277-7611-4193-95b6-910d558c5966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eb831e3-f363-420f-961d-2f01045be2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "660e3fc8-8c5f-41b6-8f94-70e02f2c697d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c0f296-73b3-4faa-ad08-6a2bc4eead09",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85792398-8c41-4c76-a867-d8cd98cd0af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0234bb23-cd44-48c8-9116-fd33beed2d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e72793-40c9-4b51-9b5b-0cfad22a253e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "089e254f-e285-4802-95f9-a6700c6c8e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd50f7c-1d1a-4dad-aab3-395619e1029a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a0bcef-e401-4d56-97cc-73814b8c0a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc94c2d-5671-4de9-a63c-47c9ec0025cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d696748f-6c5e-46ca-b3f1-b766793d3cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80af2675-720c-4340-9f2e-dac58e8d8fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43550f0c-3cb7-40a1-8227-376f505f8229",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2883de0b-acdd-4c89-b016-6018ce960838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf1dcf6-f8a6-4a4e-8757-b2f5ced48c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bccb0077-de5b-41cf-8ad9-1e5576fd8436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "806dc82e-32f6-499f-bd07-3f90c89f7c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39a40d2-7970-4551-adc6-d87b2ad8debe",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbf92c0-d50e-492e-9843-5087f4ed97db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106ba969-3f29-48c2-b878-1b8bcae467e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4affacc-aea5-449d-b6f2-fa4198c594fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf3fc21-101d-42d4-98af-555318a07535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68b2fd5-b1a4-47b4-92be-abc9dc652863",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "357783b3-9603-4c03-9ec6-44a4bb871d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e61573-9464-4109-8ed6-8be2820c439d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95ba6eb-28d9-4875-a676-fe1e198a8ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "86dea43a-3051-412d-a9bf-68006b988ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d9da0b-d937-42c9-9659-699452ee424b",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6b6669-f271-4590-8e3a-020d8eec21f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a4372d-960f-4f10-8d27-b2816ee99017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12da83b-4807-498c-82c0-70e7838f3a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3e13f7-7931-49c2-8dcf-6e6250900eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220b46a4-0bdc-4e7e-b72d-df8fe98ce7df",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc970cb3-2c8c-4f0b-98dc-7474988f923c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daa61584-29ef-4fb8-a805-c8ad41e0e4e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7861888-5068-40a0-a3c0-c91284d95d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6f6f0e0-30e2-4663-9df6-951090d86166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eab44274-6d16-425c-9826-3a6f9dfe327b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c69d99-347f-4ea2-9ff8-016c2273bb5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6165f78-4a22-4700-8fcb-11dea1d5f36b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f4c4dc-80a7-47b6-978b-cd8f861750d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b293e3d9-f330-4d3d-8bc6-14b2e0cbe1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add9a198-275a-4bd3-bdeb-e1da6a74507c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60032c0-ce3e-4731-b4f8-a286c2b12a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2ea79c-8c16-46d0-81a0-05e3bb4d4dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0491ae41-1807-4661-830f-b72ffea219a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1f7e59-f200-4b4d-840a-0a916aebec83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fadec2-198d-48e7-90b7-8c39bb348ca4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64714af-9d5e-4569-86fc-1fe9b4bf6019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad565208-b88c-4570-8137-4e71053b29f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cea90dd0-893c-4f27-9c6d-12dc8b1916f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cce701fb-98da-4e08-b467-5b1d86178698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb18e70-8463-401d-8e89-2a41b1e94ad8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208c6029-dc57-48e6-9be5-23338a54c3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04e1ae1-618f-4e43-89fa-29239cb76d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3d5949-48c1-466a-9dca-3044d296a5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efc06954-a58d-4652-89ed-221f9dbf541f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30bed24-feab-4f04-97ac-c79ec6e50cb2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d94133-3309-4323-8e2b-26d73d6b3fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d022e3-00fd-41a2-a825-7fc2d843128b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8bc2ba-56b2-4e76-aaa3-239da604eb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ee2c76-33d6-412c-a616-c4ce594a3eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d3e27d-7fa9-4acf-8340-d2cac58826e1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d14570-c302-4f0d-9175-62e40709a101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21679865-a0b3-4a21-8d54-31c7b34d2482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f71e15-6315-4c1c-831e-58b04778f45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "000d7da5-c355-46b0-8a78-3d4e58287119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e96bd3-b701-4af6-8b1d-ba30ef18b180",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "195af209-3e15-4c47-a5e0-4ae5dc61f485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512dd72f-f768-49b1-97dd-d725e4eab0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b49cd61-8186-4637-842c-d3936b28c97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0ec583-dbf4-451d-9a31-d4124489c700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f674164-3fe0-4fca-a1d4-c1bc2211c00d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16fc699-6a8c-4938-8108-a3cc1128ca45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad447ef-9dc1-4e08-ae04-3b78663f1331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525637fd-2b69-4b20-9bba-9960af7455e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e93474-2e80-40dc-a433-17ae011f2a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ae1560-54db-40be-a452-17edc077c4c9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2bea52-3874-4235-9d35-f0bc12d41691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e508f1c-e348-4523-a847-17774d74d95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250469d6-1e32-44da-9d4d-7cca79581ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb45f83-a369-4266-b88e-49afca839f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c429b2-f671-4172-a6b9-ca9ad3bcb3da",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0284a58e-ffe3-4b40-925f-8cb97662afd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9f1444-6b1c-4ee4-ba13-894b4202e9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30d5f8f-1548-49ca-b958-98b3f44a575e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a8e79a-6ed0-42b8-b764-a4710499be76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3f2d27-f6a1-42fb-a83e-3e81a26c31b7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac5f72d-a91b-42b4-aaf3-14b232c73d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aba89a1-bfb6-41f8-98c4-27b5a3ac9a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e91483-45b0-4bff-875b-7a0bd748d9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "020d8b4e-ebae-49de-bcf6-40f89da76633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e523e2-d99d-46ae-898f-aa23d39c2d45",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25d62f1-783e-48de-b88e-9bb86d6c155a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e80664-a9ef-4376-8854-27f96a2cd8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fcc4f1a-8ea3-44cf-84c0-8fe18b4197f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cba01de-5ca2-4878-82da-d969480d7881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcb5749-f05a-415c-8ece-61cbf73ae258",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87761ed1-902c-4f66-9d1b-6fd777a580e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5430aa40-c809-46cd-962c-b646a7f255db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e5fbaf-a7c3-4391-8403-4b878bc8fdc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6312754-abb0-4d0c-9e53-16f5e4c565b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a06b5a-0203-4ac3-b351-6d6b61400330",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd44dbc3-62ba-4836-8a1a-1c8eafad59cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3072a14-2c1c-4029-bd6e-7180684f84c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b2c7fa9-cf65-4e15-b8e6-24dcf3814a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c4f8f3b-8509-4fd1-b77e-2ed0b3c72548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d1c054-e1cf-4b06-aae0-740c1e00a814",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0bfac5-dd65-4588-8e3a-793c2c0f51d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d838b43-7f0e-4cf7-8cda-e93aef891655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7b3720-33b6-4955-b6ac-ba2a8d3e6d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "89cc2331-d8bb-45c4-a857-bb915f2de92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9567c4f-8c15-4282-a541-d54e1c5a0574",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e95448-0317-4043-be76-3af7d4a959ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377d6b6d-ed74-401b-ac3b-01a42ddfe727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb12765-409d-4c49-b7ff-afa07796738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7435d7ec-165e-4cf7-ba1d-ad54656f0356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ab0157-215f-4e70-8153-a7fd2706703a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2885e75e-3395-4852-a447-b8218f4a1da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56413ffc-c653-4d97-9d9e-ee8e17916644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18174a88-06af-4773-b60b-444316f791bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e4d4088-15ff-418c-8766-a363a2d34824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab4f8cb-bc7d-4455-8af8-76cee07f4c14",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e15451-de58-4eca-a254-21d4a464fb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d88d365-1049-4ee3-aaae-60fd3fcd2cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e58b9f-0d0c-490c-a941-f0830fc5ed8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d31559d3-eb72-41c1-8f39-1ee85d68520c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef2649f-4b2c-4cdc-be9a-b87b08b43a1f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f94890-508b-43af-b951-0dfd27c11110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93e1abf-8408-4345-b359-5b6ae60db311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df06491-fed0-4dd0-8c09-15e4571ad65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31e97b29-39bd-42d8-b2cd-57f223f24a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750f2cbd-ae49-4761-8353-056f42fa8f35",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de909af5-1164-4b49-bcf8-3cfaf9213506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "18607e68-f815-4dbf-8dbe-ab1c60f6d622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdec404-375d-4ee5-9750-7a2e241c6228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "613a7d02-c45f-47e8-a458-7e4f940ec566"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c7bd7e9-13de-4341-aee5-d5bab899f479",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "474a969b-9f10-4fbb-8560-ec1fe32eb8a7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7469827-1088-43ba-aa26-e47f9d4d2f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1cf7652a-2acf-42fd-a70e-7155e782dced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3315fb-981f-4eb9-a2aa-308fbb908717",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b07d090c-878c-4125-902d-c4bea3233651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394de719-4fc1-43e0-9840-386d010ddb0b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0994c3-3b6e-407f-a7bc-9bc28acccdc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caa22096-2690-46e2-9931-be666f30a6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a5a631-0f23-494a-9301-2003772e17b3",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61d96467-b4ce-48df-8e83-c0bbd3f990d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e09c5a0a-6b66-4bbb-a4af-fe05c5ee9f4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8410dd20-c52c-4af5-8435-d1e1cedb6ec6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f93af16a-eccf-4000-8aa4-248866160fec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80369a01-6209-4934-8707-7f302e67c580"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b5391d6-99e4-425f-8bbd-5d4873b33132",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8cdf5070-84c2-47cd-ae73-492d011541eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5627d99b-de22-439e-979e-4f26c03b673d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02327f1c-cb0c-42cb-9fe3-3b1576dc017e"
                }
              }
            ]
          },
          {
            "id": "957b117d-69e0-4a04-ad9a-02b2ca8850a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "143eb65d-5022-4ea1-a208-a297a9e20d1f",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53189d63-8b09-4fac-8d32-7d3c1dd27fc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f75c8c1b-e0d4-4eff-9acd-0aec94c15324"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c57aa2d-1f46-4f91-8cd8-4c5ee8e290fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2038ec9c-5184-4e00-a8da-6420c69058c6"
                    }
                  }
                ]
              },
              {
                "id": "10b1dd81-eafd-4f06-9818-c22c31375e50",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40a3c1a2-0856-4d90-ab0f-3fb033aadc49",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3805a54a-ce6e-4499-996a-65358a73e446"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2355f42e-492b-495e-8d64-8a2baf0a7c72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "295611da-79e2-448c-99e3-0a3cb8fe3a0e"
                    }
                  }
                ]
              },
              {
                "id": "9615f6a5-8e4d-4f9f-9ed5-6ac47e476a3b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39277a72-61ab-4163-9efa-dc6e8959a8f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "effd880c-4d60-4e2a-8175-096b4b78ca29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34382e61-59ac-494c-b2c3-51822f14d510",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dbae29d5-611b-4d8f-bb1f-47626a7746d3"
                    }
                  }
                ]
              },
              {
                "id": "424cde33-d71f-4fb4-b647-99b1b47dbf38",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f0720bb-d43e-4198-af44-a88c91c59ceb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f06628d7-3da5-4757-9aaf-60132e58cccb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85eb8a04-e287-4c22-b59e-3e7a1000cc65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3add1f2f-66b0-4aad-b5ff-0ae826a882e2"
                    }
                  }
                ]
              },
              {
                "id": "504cfdac-0bdb-45ad-89bc-b104044567ca",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e45c3a68-ec6c-4253-8730-81e348d0dbae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2e36b5a6-4288-4df0-97ea-6c9477789679"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca40e68d-51fe-4611-9cb3-85d31b87320b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "310cdec3-ff1a-4cb7-b564-29bbbee7bca6"
                    }
                  }
                ]
              },
              {
                "id": "06869a57-3a4f-4cf5-aa6b-beb44c7423fd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91aee385-5891-4283-9683-d5ae85988805",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fdc25c82-9d41-48ca-9465-50b3adb8b2e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "25662be6-fc69-463b-833a-15d338f909a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50222d4c-b61f-43ed-b383-ede6eb70b4c9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b3b72372-83a2-4aaa-aab1-4b66fe34cf56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f59a86fd-68d0-48fc-9b83-33951e940180"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "caa62f3a-945c-461c-83ac-ee831831f03e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c8bc997-fae7-4f04-a365-b77b1e9d5bcc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0ca1bf6-7ea8-4aa6-9b25-3a858a26983d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "665e59c1-9d31-43f1-9e79-3bd3bb743b30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ee7a80d-ab90-41a2-8fbe-f3b8f176ab95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e86d760-26a8-4f06-be4d-b0eb45ef945c"
            }
          }
        ]
      },
      {
        "id": "7c218c15-29c1-436f-9980-684c2b93a354",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ff6c82e7-a697-4d7d-a541-57796d846db4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "254fd07f-7524-453d-ae69-11e8354f4b78",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be06d553-d2cc-40ac-900c-df3fd9efd506",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155674d3-e0c7-4fa0-a2a9-8a8a6875d094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d16cfe7-d7a9-4a0b-bbea-39ea52d9d73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab13e8f6-8bb5-43f1-b777-fcff1b995c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb49077-14a7-4010-b552-74db7f3d608b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2b0d5b-8a70-41f2-869f-16b8b32f9ced",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cacfce6c-13ad-4865-b53e-4955fcee5442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68054d31-fa3f-4fb7-8c61-c0b998ec0fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75bbb72-7669-48fb-be34-85da87ec8afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d545e0a-7f89-4058-b45a-523b67b27776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b05ca2-fa20-4f6c-af69-b316824239eb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837229a0-be1c-44e0-be4c-82838cbf0483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95e120e-b82c-4686-bb3d-f8512bde0cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31c0903-52d8-4913-a73a-52c403f99d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6734f25b-ac55-4543-98f6-814e36dfbe4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36736343-cd6c-45c2-90a8-797ddf439f69",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fabbfd6-da6f-4957-8b18-e7a871a7ef90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14aee64-db4f-47c8-bfcf-2de73afc158a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d291957d-622d-4672-8328-2de3cb934756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0eafea3-56fb-4bb0-94e0-be527879e1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd23e9a6-e03b-4ca8-8be4-5120873e6a72",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7133743e-c986-430d-9997-0b8ab4012a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1b69f2-f796-453b-ab63-cff0b2f1d5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12306a53-15d9-4b8a-8fef-b718ca1a5138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d05c5c8e-8430-49c6-94fb-7dd0fb64c77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d208fa-8ffc-4b5c-adca-8c80fd02ee9d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea938ed0-8c63-47f9-be73-2f62ac774063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8435397c-efb0-4c84-9547-1422b34caf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0a3eae-f666-4f33-bb67-5e98daa8fd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79c3f716-dc19-43e1-9279-34d04fa3a267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57554c5d-6e75-4064-822a-80c904793346",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58916066-c86a-4d60-9b85-57da92d549b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9df386-00f5-461e-9e3b-30b379925fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9414650c-5b3a-41bd-84c4-fb996b81920d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6af99a29-048d-4282-94cc-29408f3c2b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc82218c-93bd-4a36-8af8-325786a322b2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7ba68c-f6f9-4729-b383-36f861ad0295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef966de-7f41-45eb-afc0-8e73fdc2d8c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6030dac-8851-4525-a3fd-47cb8141b7fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7282abe6-cecb-4ad9-9e56-95155a2b9951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ce0a5c-9b9b-4539-b9b9-a7b6f27df619",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8242a582-574d-48f4-96c0-06754eb2716a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77a9ae00-ae6a-407c-9186-f746cb0b7f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cfad2b-83a6-47e1-86c5-81957f0740a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb9b9ee-f051-4762-82a5-177d081508e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dbcbd0-df47-48bb-9a76-ba624e5915f4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "891de20b-bb11-48e8-b9d3-9dbd725f9dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce11cac-3b3b-4215-a74e-07e113947b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69653e10-fa89-4812-b2c1-b271ee9cd544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c151be-15e8-41b9-9cab-0e8b1aa9fe07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188d6a4f-7eba-46fe-8d92-3e54c03067fa",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b5efca-1b03-41ae-866d-579f0923d787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed80c38e-aef9-45a6-a091-4e183f72823a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43dc3cdf-ef24-4c6c-8428-55fec10a1ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4a923272-aa9e-4ea8-ab89-a4d7f8f70726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7e467b-d48b-4578-a4b2-88bfd37a7908",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfeb3fd-9c4f-45c7-84a8-d8f79c9143ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7c38114-f612-4580-95d6-eb5ec6299bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f515c914-f8fc-4e33-9a71-bf390b511f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb9be54-d8c9-493a-8252-97e6b47ef282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adeeec9d-c6ff-4c78-aa7a-b0324ead4467",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "059e0423-bd72-46a6-b21a-e94b3b0881e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c666e22e-fc5c-4b89-be8e-68561a5cd0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c67e19-3c69-433e-924c-b061d309d15b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b53fc83f-e005-47d3-80fc-19b59b918104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50582592-b624-4179-97bf-85244ea59577",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132e4cd5-d74a-4c24-87df-18b4ed17a307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d6a7d3-0275-44a2-aca6-187c2307a36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2bf3bf1-54eb-4670-9780-cafba0cbc753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e182d6-b286-409a-ac44-18ffce45dbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301cc070-ad99-4064-ac51-6f21cc9ff4b0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4b38ce-7425-40f4-9d30-b36c5be4ccd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ee7360-c5b6-4e01-95a3-d1c76bca516e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa091823-d6dd-42c1-807c-a238a6634282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "50bddcbb-e1c4-40cb-9e42-f632e6d8e018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141565a5-ce14-41d3-9619-ac40f892174d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f461ee66-7735-4e51-85f9-e97a8c0555f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72df19a9-e217-4ed8-bb2a-d1556d27621f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ab5380-6d63-49b0-818b-19c3ed575c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b86c17d-371a-4b20-ac3a-4452503ba5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f19d9b3-ac9d-4f88-b50f-2b500b5f74b0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a286edf-4afc-440f-b92b-04c24ff5a4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dee277-3092-4bb0-8d6c-969f429cb2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36fd7be-2247-4bcf-bcba-515abfdf6a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "01e21441-2dca-4cf7-81c1-e29a7d8024e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b7901b-d2c7-485e-9975-0ce50e5c4cc7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474be86c-525a-4d75-bfb6-c027d7729949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ce9db2-aca6-40e4-bcd4-47b4605ef078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e44c9e-9b67-4dc9-aad3-137c1898e6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73df29c9-582c-4ac4-bbeb-4a280a90ef39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff73fb02-cc0d-4f00-a6e2-e098b6de159a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79d5cc4-9eb7-4405-8f63-66adebccea52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ef08b3-e363-4ac9-bf78-68dc6bb78a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474cda73-f7b1-4adf-a72d-224f213379f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "edcc51ed-a767-4b9b-a6e7-452bd94758ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585edd5d-80d3-420a-abc7-44d418d3ad95",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173b982b-565c-4f55-af00-188bf51449a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386e2e3e-26b1-45cd-b6e9-bf9daeaf478e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16249d9-182a-45fd-ae82-e4756eaff89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdac560-838b-4b03-a985-5a078ce14598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da919592-ea4f-4bac-89b2-13855bb0e99a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9dda606-9589-41a3-8ab4-1445b909fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "659789a5-5906-46af-8c68-586dfd65ea46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0e66ee-13e9-47af-aca7-ceb017373fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "061d0367-fee9-4864-804f-0954a7834ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0292b81e-1cff-4c54-ad9e-eee44e4ecd6e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ce945c-1718-4b3b-bdb3-64b8825c64ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a827d9-bad1-466d-9104-5f8c22061e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69554e66-85fa-4ae5-9843-e911b2f66110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1fb3bd8-c29a-4153-a1f3-17e474fc4638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a954e8a6-c5a1-4af6-829b-f95f40aca7a9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e6278e-cd63-4b39-9921-6e8b8cb9aece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f957fc7-c7d8-47c4-a898-a8ab0c8f45bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16a0229-f6a2-469d-9e76-1626150554d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a47af9-e311-4c9e-a560-1087e01bb156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3cffe2-5263-4e81-b62a-777a694ffecc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c5a820-3b77-4366-877a-495f27a255ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6744ded8-1ec7-4630-96bf-22537fcfccb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c2d0a4-42d0-46b1-8c02-f5026c47e635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5613ab-b5f0-483d-82cc-cbf52472e76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cc9b59-63eb-4d14-b982-3dde33febb44",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6128a68-9095-4a00-8791-1cfe3a16396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f8fe1c-ce1b-41bb-bcfc-f6751ab7bfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c9f1f5-221f-4081-bc42-99a9b1d1c4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee340ad-3c3a-49b0-b293-7fe6c42dd2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8386e949-704f-40e2-a1b5-3ae99b93079f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97534658-8ac0-4348-ab65-b7daf26229e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cc9a10-c4cf-470e-a9e2-652cd0f5ca8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462c15f2-feab-43be-8bb7-cd5f831156b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "977d7078-846c-4bcb-9312-6d9834fecbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5cacc4-d685-4ace-b62b-7702625292cf",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c4949f-e76d-4ec2-a4a8-e9bb1bff2782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c88283-6c18-4c08-8b47-3c572922e1be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a82b9c-d585-4adc-9a60-151ddb85c7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bed61e4-ac29-4f88-905d-98ca7113979e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b403eb-04e6-4c86-a634-116d433880af",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5a2b40-44c7-4bd3-98aa-12c7a9f50508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a0a145-8cd2-465b-b1af-71f473ae9605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1dee0b-bd0a-48ff-8c8f-0e00a978289c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e53f1b54-68eb-43ab-a622-0de7dbbecce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425426dd-4896-461e-a420-03d012ec361d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a90da4-3630-421d-b938-c69cd9142e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2254ba23-acf5-4bc3-9ccb-6fda5730e917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af6bf90-e1be-45e4-b3be-dc344bc3f845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a77d055b-e239-42bb-838b-5c7d0b2f4218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22451a3f-537b-492d-a44e-9a414bce9226",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e965ff48-84b9-4eb5-ab74-6be560984a92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44dad115-5cda-4248-a479-03cb25e7f3d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1c4f89-d7e0-4f46-b162-0957db7ba450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47d73a21-081d-402b-b00e-f0624e85f270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fff14b0-732e-45f4-8f67-f2895cdf27a7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51c2e02-c626-4dbe-9f99-a53adcf4a41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8408d687-63e5-48a1-addc-5b78d4a6ecba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2831533c-6728-4417-a37a-243ee8a8d3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd93a3ff-8aef-4f41-9f11-dd02f96a4883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426a8592-014b-4cc9-812e-efb96a92b641",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b94f74c4-5196-4eee-b527-31c461bbf515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a541484c-68c7-415b-bc2e-effb7db82758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cc17a7-2f33-4914-994e-c4698bd602ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cffee138-3f07-4507-bf53-187cbd19a999"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d7b1774-18c0-4c47-bed4-4a0c380b40fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8cb3c4d1-076d-4455-a873-251f0fed7a89",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17f2d1e-d1e9-44c1-a690-937c314002fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7b9f67-c140-4670-8523-e58fa32e8496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fec71ae-96a4-4c21-96cf-39bb93054908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0de705ae-62c2-4d76-92ba-8e8f691e003b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30f0897-6fd1-4098-b04e-86d61f969915",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21352c59-8fcf-4947-a0f7-395712d8551b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5586a80a-8ef3-4331-bb7c-40c4d4860201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f57240-dbfa-4575-ac14-0ab1ecba9565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b473ffd3-9538-4b63-a1b1-a1721d6ab68f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe54508d-a9e4-4509-b120-cdb32be8fc5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c6e76a0-fcd5-4b8e-b851-74b371338baa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "410f7eea-84fa-4875-9db8-bdd3121171bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afd6133b-1a99-4866-bfad-427d2400ca71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ed8e3e4-8a76-4d44-8d41-f766e2e95019",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c6ba824e-a717-4d09-a869-b2adf66a3f3c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1133ba1f-65bd-4193-960b-697b691ebe80",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ac140be-0e5c-4603-b655-521d7d092a08"
            }
          }
        ]
      },
      {
        "id": "06885b6f-fa49-46db-b2b0-3c2f6a5ddf48",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "fecafa2d-b9af-47da-992d-ea4b0dad4ac9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85c2a56d-a948-4179-b104-ccd250c0a431",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "61bdf65c-fda0-4657-a70d-923c09b6d957",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6914ac03-445e-4f3e-95b1-2b25863dd99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6f9d97-6e0a-4447-b600-dd2fc213c768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074fbe3c-308f-4ceb-ac2c-cd430b233ba5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10915cd-1f53-4bf0-8ec1-bb5fc044e6eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62582640-b42d-4c99-a6bf-48363c5531a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e6435c-1b22-4eb4-b63a-9b687a20a49a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af14d85-fe51-45d6-acd6-d5bd90aeeb81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e8cb77-b0a5-4f6c-8e0c-4870a692adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc80b765-fc86-4077-9e18-82175208d171",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6dac57-8746-4409-b307-c2489f147b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe738f47-458c-434e-9d41-c57af4dd942a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061cc80a-079a-48a9-a403-d2f0dd9896dc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3848af75-5862-41da-a977-719672f89abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb4e9ca-ac02-40b4-9699-11c17876f4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0342d5-458e-4e74-86ae-ec3320e0fd0d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4492821-9e68-43fc-a0e6-6fcf98e377e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf360adc-37ad-479e-8e2d-6ef65ffa4141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806843ca-2d20-4775-9819-393ac2d4ff05",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a6f7e7-51f5-4ae7-b3ae-098ee950412b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5afbcf-e8a3-4172-88e3-ca4c9ae7ece0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d4a467-2c61-4a85-b6c5-671654489613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "898cf8ab-e50c-46ba-ad82-7ee20b72f716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0553732c-5b3f-4d2f-b925-58d297915112",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240be3cf-4a59-4cc2-aea0-de63905bcd7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25bf95fc-375e-4261-a8c5-b92fd4f6491e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab0b979-8a9a-43b2-aa6c-41d91ae8b66e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78932da2-c64c-4da9-bc4f-77917188840e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaf6480-0015-4f96-bea1-6b3a224c9e21",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a90f1d-26cf-42c3-9b79-07f96ef97482",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f1433bf-4800-4b5e-a5f7-61e02034527f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49580d79-376e-43be-aca4-0ed0f8dc95f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3192f8-c84c-437b-a39b-52ac65acfe17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd55bf1-2622-4eee-aef8-4b272030d794",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064f4b4f-b698-476d-9eaf-bd7c7233c648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4a1fbd0-6440-49f8-9c60-4195a17fad91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cf4ddc-9f23-4b43-906b-ece7c5ae6af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb21e5f5-5002-4cb8-b720-e665883a5904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4cf6ef-9f75-424b-854f-ea5a344b4bb8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce95afef-60d9-41e5-aa6f-3b9f166ba1d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19514090-7e3a-42fb-9d6b-3c88ce1fff79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67325926-464f-428f-8502-94edd402c948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "279c7c47-13ad-45ef-8e2d-0b6af39118ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2fb4c5d-604d-47d4-8282-e1c16caa1261",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00ee223-93a6-471a-a5b5-942fdb331282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d8e656-1770-4b92-8ddc-42f50c67b2d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f59040-1304-48da-b855-c09b2617dc00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f28b66e3-c581-4705-bd04-6a9fb7d89dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74582a17-9b3a-487e-9365-50189583ee2c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b9c036-7cbd-4a09-a1cb-8dd741b1c4b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07471619-829f-4b56-8f35-77e7689ae746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f16ccf-7381-4717-8e0a-5cbd3f18b59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41e9b2a3-705d-42d9-b9e5-3b8e57de0108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821bc579-176f-4ff2-b6e5-2dec0196c403",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d4a7561-8af8-4df4-a3fc-d403378667ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fde167b-e7cf-4267-ac96-e1034d8a1f97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3064de56-c2da-407b-9e77-169e344b1b39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333ff156-dde5-4ffa-aea5-981d362d620c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a14db3d-2578-457f-9fcf-a1cfa926e81b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f377b71-c052-4ecd-97d2-6d66bcac5979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b3b9a94-3869-4b97-854d-a9fe90741933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97eba86-13d5-4870-b3d0-c841c8696c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be216a3d-20e0-41f8-a680-f4b2261bb9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b548d90-e47c-4d3d-ace5-704dd4ba0c49",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5bd528-dbca-4925-aeb0-a08d837d9c6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d28a483-db02-4b87-bca2-9873df15bb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8335d218-e910-4dc2-8211-dcba3b521caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3852565-077b-4f5b-a983-59cd4f820560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fac6f9a-13ef-4e61-93db-a77f6d0eb7d4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df4ddf7-2746-4254-9f02-a13d937bbe37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf58e02-db5f-44f6-a01a-1bc7c6388469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf471ee-bdc2-4cd6-9b4e-9f592e19958a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f080707-2895-4afc-8a8f-24ea08359a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66e3756-b64c-45b1-9d8f-5eaf5db59388",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e7a114-8ca0-4c99-9bf5-81cb822cbcf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dafa75b-6fdb-4661-8be9-c3f71d954e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55576b2-0309-4df9-8c4d-6a71a1d3c3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bec6e1-6ea1-4390-9c9a-c1d4ba6c1f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a95ce3c-9e70-400e-88fb-d6ef1879a64a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c7641e-f345-4670-aa80-309711c8a4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ca8902-8e24-455f-a745-fbae45a81ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5611fbcb-494e-4f57-b35d-2f985953fa0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad0bd3e-e735-4c39-a717-1a12f2d9e589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb3bb60-66ae-439f-a229-7b17627b07a6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d59e3d1-b5ea-4960-9ab2-9b5ea342e6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d1e9f8-5fb1-457c-9af9-975110f4e28c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b950d9b1-d088-4f1c-82e9-c263fca3f5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2cbb2f-c62f-47f9-bad6-5e0fda70c831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5d17de-a2ec-4bc2-8d47-b423cb519cdc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f733d613-1cae-45d3-9f99-efbc0aeb9556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd878601-7630-46ae-9f6b-973486758900"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd59542-0ba8-471c-8510-4a9db517b109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7799fd28-70d9-40fe-86ce-bd031bfe7c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2788f7d3-b950-4ea3-94f6-d788b237c5c9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63392462-33d1-480b-a936-c317ef8d4ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "278d5697-8609-4f54-9c4b-a052f0647023"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4738dfc5-2b4c-4dce-ab4b-5bcecbf27008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5011d6e9-7375-49df-8351-6d6b1c4137ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7465428d-ab51-4107-acab-ee86b5573bb6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0dceeb7-93a0-4647-8bef-e9a1c09d8da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e67fe1f-4ab8-4e61-a93e-7bb7807e4de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9e9e10-fb0d-496f-8c86-63ef163d4167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260a4c00-7b47-4908-81ea-616b2bccd1cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbebea25-ffd9-4107-84e8-a687cedc0668",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bebde54-0fc9-45a2-a7aa-46c9d7082f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e96d7c2-66ba-444e-968f-c009c276aa96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991630f9-dd78-4098-895b-5350f224af9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbeffef2-8a04-483d-a558-0ab5951b0caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11529568-68cb-4a60-812e-744784345211",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f676c5-5a84-4418-97fc-5324985e5603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77997cba-4110-4fe6-87e9-c551f9027512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e211b1ce-1be1-4fca-8a85-3272db3be6cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb744cce-d4fa-40e1-a0cb-419b7a888c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bb5394-5640-4158-85eb-e58898c58b52",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9820387b-37ab-4e57-a25f-48876b095145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fdf8710-fbe9-47ad-94be-dee79076c0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d75447-2209-4cf0-bd8f-cb317b400b75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975aaf59-4923-4560-9afd-727a178517f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57beeb3-3fcb-4401-908d-288479c04d8f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6652066f-a3ac-43cd-a7ab-c555a7929112",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71653d68-ae16-4ad5-be87-0d9d1a10e232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88edc0e-3e2b-449d-abc8-a82d4ab2b806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ce35eb-b377-44eb-98a4-7c7390fc3f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf84936-115d-401c-98a5-7d410567aa67",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3579a9-0753-48c3-997e-2ebb03d78c8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e655b75-fc66-4ead-8894-25458026fa75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6df55e5-6420-437b-bf35-e36b963d185a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d192181-98be-4b58-9cbf-5390a36ed4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1678c8-bf95-48fa-9457-2ccf35a6126e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a33bb78-730f-40ee-ac9b-c79e1e0ae9e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe5456e-4cde-4ae7-9b91-7dcd6d69a15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24f866c-1ef5-4162-9640-280ae7b14842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfeffd66-5028-4369-83ac-6e3e08c56f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a4ddfe-bdcc-42cf-acdb-f7f6282c470e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ff7d50-7139-437a-be2a-7a0eebd84386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba612ed0-e194-4900-8969-24b5685d9296"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c926cc-58ca-4b36-8656-690a00c5bbd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589c9ce9-4831-4bc1-9e8d-39bccedbad6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a73106-e990-4917-a6f7-0b3810eb171c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44cb50b-79db-4c1b-8b5d-e04847e006fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9708a42-6e07-4d19-b03b-33b6055f497e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9c4178-c607-4714-aacb-8549dbfe4c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798d3e79-c3b6-48fa-9870-09e55dee5d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a406cd-58e1-464d-9673-a92ccf78e663",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfbac163-8e56-4b94-9eb8-ddfb8c78e1e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7810760-229e-43ca-9e73-bd35e732705f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322f0374-56eb-42e9-a8a8-281dea1349e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42dd015a-06af-44dc-8bc4-7bf98074e594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896b590b-a494-49c7-80d8-0125a6faf398",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b29e13-4e5a-4e0f-b02b-feb4815b1e6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7006f8b-ec92-4239-adb0-e1a6de44d063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996c3b73-3f54-443f-bc74-11f7ccbf513b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef2eab1-2dc8-49b4-a21e-f99b65beb3cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b193ec9b-571d-41d6-9456-a2659b22d1b3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9a6ea4-1605-446f-bee9-aee707935c4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86aba1a3-af0f-4bc1-914d-12033535e6c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c98ff3-2276-4110-a0e2-0f5f5d8e10cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0433233b-fdca-4364-b071-1f7869618ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c5959a-6442-497a-89a5-4af4541f3f28",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdc839b-2b33-4a4d-9930-0a5f5d973817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a868bcee-3b07-4e81-86fb-27da297a1199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56ce6e8-0efe-4c82-a8c3-b1d102bf7717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c55b7e-d4a5-4dbf-99a5-80a6d679c68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b8767a-fbb8-4d78-94db-72f3eb50bf5a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcc77ae-b810-4678-8d33-68aa16b575e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d359ebd6-e5e9-4347-8336-6dae2110a141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55401d86-dc60-49c2-97c4-8f19078fb54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd150cb4-5502-4f2e-ad55-36eacbc5997f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f3067e-bd45-4c02-80c7-d58c4e1ab8d9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3680a3bb-9c39-48d1-be69-18bbf331eb49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2fc0a4-b443-4fe7-a1c7-0c1bdf1f50ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b74796-c0fa-4dc3-bf4e-d6c276c4af02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf26582-6c20-4002-98fb-73b54ab53645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272eaacc-cfc7-48d0-863f-d8dde7256b63",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d04b7d-f370-4cef-9b14-3bad069326e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e17d472c-0522-4552-9795-4fab924ba232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa6ff6c-0e39-4a74-883e-93a8e3f3dc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f5f85b1-5b78-4d0e-a9e8-9c8704cd0b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7233051-5e58-40d6-804d-cfdbe7407e3c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da83bca-a40f-44b1-9ebb-740adbf6c627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294ffdf9-8eac-4161-9bbe-0681f28ba828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dce630-b00e-45e9-8c57-7e887e0a883d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b35bece-516b-4295-92fc-31d8587bd467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3bd5ac-6384-4137-b0e4-fefe9cdc2029",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc14e0f7-afc1-4fee-b4f9-95da57aba893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11aea483-34cd-4901-a03a-3ffdc2e431af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6accf55e-89bd-408b-8bf5-fcac9ba1ceab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119fe820-76cb-4847-a732-ee4ecc8537ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d290b2d-fe4f-40fe-9707-06858ddfebfe",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42dc44e1-bce2-4d03-bcdb-5e1b07c29598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414135b9-0cf7-4780-9d16-fe8b823c8a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3c7a0e-ce5a-4c47-811a-3a0cedeae6a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8bf789-d1f4-4481-a9e7-f5912b175dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa537306-9d3b-4a81-b20c-a49a33406019",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a1bcd1-8d2c-49aa-85d9-17a8fcbf71b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404f55f6-8b80-4b7b-bcb3-0d4b40f64d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "138fc4ef-6d21-44c6-8f77-0fb12ffee458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b9c16fd-6314-4b95-9959-4fca6aad65f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775bcab0-745a-4201-8902-08cae6725756",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7317f364-66b1-49fe-a0bd-e1fa4cb175a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b2d8b2-a6ce-4e09-8c75-3990d545a465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928caf65-8c85-4f24-9427-aa83975effb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d06c30-69a4-4f33-b796-dd31d4f4a735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04300e96-c2f9-4e2a-b29e-6d41afe185e8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55579097-121d-44c5-af97-c2565b5fc7fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378c6fb9-2ec4-4843-aa20-7a431cba0958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d92e83d-c598-4e2d-a39a-c3084b27353e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f54b0588-430d-48ea-9d76-612048a5308a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b3015c-83f9-4983-bf99-126843979e5a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b18397d-1651-4e3b-8696-960d8f091f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e0a26b-0fa3-4499-b24d-2bb63a457c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3459bdaa-eabf-40c6-9983-f65b94b0920f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e47dc0a-dcb4-41cb-9f63-a08c0dc20827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e344d9b-4f82-47ac-b3f5-27f989d0624f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f3a0e8-20a4-499e-8e31-539798a30cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240971cb-5107-4abf-ba59-c72e40d9b8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f74396-39c3-439b-b1c9-953c71fdbd99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced05c9d-7816-4475-a755-91b99caba931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f22b68-175e-4228-a1aa-e8c556e310c7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd04e175-95a0-4651-919f-dc75455a6ab3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23e4085-1ffa-4674-a1cb-e88fc5c36d46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c06d6f0-d8b5-4cbe-a769-2e185693969f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd4a891-0143-4871-9dd8-0409150741fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a0c071-267a-42ec-b506-ada7ef9e98ad",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6d36e7-5036-41b3-8e0d-9e6430e60058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6187e8-5bd7-4a97-b284-40020ec29897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96de3559-900f-4ff1-993e-30c8f0f662e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "567b776f-dd4f-4eee-bf06-64009225d02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f8e3cd-3914-4469-a4bc-71fc4aa7a9d3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8be171e-91a4-4a32-8a17-f5edbaff188e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537e8786-d0e7-447d-a63e-4ebe1ddbb36b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "420958dd-4f02-42ba-a501-20c04e3efa11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "950eb705-4813-435e-b2da-3dc452b10617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22aa1182-86c9-41aa-b7e8-2106536de80f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7a84a2-6c71-4f25-8644-2b616dfa1723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd3868b-f0a4-475a-9b40-7440da23026a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab45c6d-3e50-4840-9b2c-6f5b15bf9400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f7d17b-9b72-42de-bdef-adabce848069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9aeadd-e99d-4b06-bc45-b891b7318498",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286d74e3-553b-45fa-ae0e-16aa823edd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b41530c5-ebd4-452f-a552-5fbeb2f423c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11659545-c139-4e2a-9656-8ea96625f66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee01b94-ee61-4bdd-8cca-8301a4bf699f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5680cf78-2448-444c-a2cd-9af825a6e721",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b216459-12b3-437a-9cf0-72f406f5288c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777d56bf-6695-47b5-8ea1-bfa983248c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7d04ed-e4c9-44e5-8020-d0e5e460b4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "140692cf-a3ea-4572-a34b-01a6edde80e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e3b6d5-7fe1-4454-884e-b42b33430def",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b2f8a2-82cf-44c4-ab79-9e05b7bf19ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "204cdc58-628d-49a9-b550-b5502efcd3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50566d01-fa0a-4fb0-9a8a-755521825851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c65b65-abef-444c-b62d-270aea957a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717ffac2-f4c3-4686-9422-680185f9eb84",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee60341c-cf12-43b6-8a63-b89cc0e2f230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f7557b-bb72-47ee-9e9e-6e00fc26a3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cb8b29-ac0b-4aaf-a3c7-b2efd6c9f993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4953d5f5-4848-4932-ad75-2097f71f09e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3fe1b0-6d49-4478-aba5-070c7a4225ad",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fabddf-0d15-4c85-a02f-a0b8c7ca768f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f3baa3-03ef-459f-89a8-bd9ad8a5cdf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7897439-bf60-41c6-9fb1-a1199d948d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5296ab-de8e-459b-90f5-32dba9b1c6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da68866-d685-461e-a0b9-a9137db73c42",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6619bf61-0c4d-49e5-9fc8-6ffcbbc1fa97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab156a51-39d4-443c-af5d-ba64ec0a378d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb924990-12b8-4f61-bb4f-01187c0dae02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0c3158-59b4-4334-b3c3-2042840e882b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b03c18-febf-479c-a41e-089c5b3507e6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c389514c-d3f2-4f40-8b05-7fc75911a5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45803d1a-5946-4dad-adc4-a32ae6f2ac25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aadd3dc-7aee-4bf3-bc7d-12009ded4336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bdfe52b-1e2f-4d33-8d8f-5361e96381cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e4ca10-c7c6-470d-8233-60c1a434cd0d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c358da0-1106-41ef-a09d-205c49ad9123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83568f4c-cccb-4022-aeb3-6f31e21972f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf3f2d4-42eb-41b9-8f64-e2a2cd8532ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6807f078-d814-40b5-8e2f-7d257b4c21df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e873af83-be5d-4acf-9c8f-9e544bbd54d0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d73bc0c-c895-42ae-8212-e384aa3f5137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fd1cfb-a85f-4315-a71e-b506c20675d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bea3218-0b4e-465b-b7cb-033742cd78f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e1634c-4155-4320-a7c0-51ef9448d333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3444344c-a637-4fcd-b1e2-396ff9e78226",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f91010-f883-4f60-8553-fcccc0257f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9110a848-16f6-4c63-884b-7389081fbed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6629aa2-a79b-4dd5-aa0e-bbc90ba2053d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22bcde96-f909-448e-81d9-2756fe5d5099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6b9cb0-b26a-4b24-ad1c-2b40b2ab6996",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbef00eb-0b82-4e58-8775-46d09051f2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfaa9ef3-0d1f-4872-b83e-edce9b7812cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0191e18f-6221-4d07-a6dc-38de50374e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e762b3ab-ca7d-466c-b393-e5f6bc9f7dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d879ae6-0c01-45f2-9be1-f3d04ffb925e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35045817-97ee-41bb-9d0e-6a28569ab47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec306ba-7efb-4455-bfd4-e9ee9c050f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f5bdcc-62bd-4f91-a965-95f05851868f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74573f59-6a6f-47ef-8f72-8d66b7dda032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d986069-60b8-4c34-b0d6-7c2f93329ad0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45cf402b-a874-4d9b-b9a5-3c927a153216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4309f410-e1ef-476e-8503-b73e36b4c507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad766b2b-8427-424c-a241-f9d360ce4d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd7bbe65-2f0f-4e2a-baa6-1a9c52c213f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048e898b-ff96-4603-99bf-cea4f0ce51d6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195db3b2-df45-4bb6-aa45-890281dd842b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1486e96e-25c3-4915-9721-b749db9976f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf09146-edc6-4612-b824-d1526e5e490c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078e821e-cae1-488d-875b-2f2aae063fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9efc825-d01e-485b-bf5f-0a6d310b3dc1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a616a78-f63d-4714-b563-c3ed3d77b772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8ace53e-4cb9-4c52-9c44-58644d13615f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09789303-2222-42f1-ac97-50f0cd3ea5e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ccfa62-76f5-4cf6-88e8-2ddd39f1a6ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6537e34-140d-403d-ab6e-b141777a332d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d4eaa1-bd8f-4f38-86fd-459c1dbb55f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df7418ba-00c5-4099-b55d-fe768989a9a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6dfa7f4-75b7-4fff-802a-081b99a4b068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4f4607-4c26-46fc-a849-7da5ab33a8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af3fff0-71fd-46d2-a74a-c96935f10ce6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd4a9ae-949f-4af5-87fd-db9f936b39f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bddcf51f-0cb9-48c6-9a83-8922c5b3c3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc838bf-52d2-4986-845f-1c8999dae8b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d4e38c-4e53-4901-b9c2-7c06c27ed00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c617c929-6f0d-4cdc-8137-bc8fe8e540cb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81d4564-c062-4ec6-9126-e011eb93d17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30954eb2-a62c-42f0-a44b-4a1d0768ede1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a419ba47-f607-4f9d-a8fc-7c853004a1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48452d13-e00f-4aa1-a468-88d8f4a7c8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8260b45e-d88f-4d25-b7e4-58f8b083be10",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7d62f6-86aa-4e91-b104-5a4d798896bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e4b6aa6-c227-4ea2-8beb-d45fab4b613c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec12a328-8f3a-422b-a065-2330fe04b466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab220801-6d65-4535-b608-54e3a67917ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f0021e-dc42-478d-a8e9-37aed140c934",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a7e88d-79b1-4cc9-9c9e-d7028bf508c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29fd62e3-7cf7-4a92-8d1e-68736e8c748f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e0a4d9-1c8b-43ce-8f7d-2991cece00c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f7e528-e7ba-43b5-8917-4b8586ef31c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d480cc66-9599-4823-acf9-9486c198bcc9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efc8af0-fe41-42a7-85c0-fb90d357ce96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f5c698e-ccd8-49eb-843f-fb6f28b036c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be48ef0-d221-4b68-a24c-b65405d7aff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bd6e84-a4ed-4ac9-9628-3d24769c2763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c973583a-9133-431d-8aed-c144389e26f8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c5a40d-1dad-4a53-9386-03ddf618988e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8953906c-f736-4df8-a93f-5f7facf4d8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc12663-6aad-434d-85c3-22af97b8f943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f349d5fe-89e5-43fc-ada9-0ba111c77ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd6030a-e4d7-4bbf-ac74-92ab08f3a225",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4073a1d-0998-4a73-88fd-d39e4dfb8e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad6f9e7-acb9-441c-8fc5-8c58d033371d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63af5451-f884-4e93-9c51-6837a8537e46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206b6043-a99a-4c22-a5b4-202ada5fbcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7770ef9f-1862-47ef-be1e-6452d509c108",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d83f9f-1c8e-4ebb-8dd8-f6b26727b9d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6408dc22-b42b-4449-8221-df5b2a804fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7f2c31-fb5f-4786-8399-2d5c8b699cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ef3dce-6b02-4596-87a5-da4aee662265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45eb68bb-5a2b-4d19-bccb-aaef8297e564",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c42cd3f-256d-4bc5-b39b-9f9476ac9089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beb401c3-8cac-4dd3-8ff4-18d73a70b966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3631df99-e9cd-41e5-a82a-443ef6be9b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd45d210-e1d1-465e-bfe0-6e7bbd92d00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf4dbd2-aa12-40f2-a76f-ab12e632ad44",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2ad860-531c-46f5-82d1-d0716428ae51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f8328e7-490c-42f4-a343-3692f863df49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd29304a-9209-4eba-af50-c0f9e2590559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367c61c1-84a2-49aa-87fd-7e674da405b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc35b0cd-9b76-468c-9f1c-bde3cba09517",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d35115-4567-47b2-97cf-b009d910ad75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e6341b6-e74d-43d4-a89d-29ff0a4e4c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ef21fa-bc41-49b7-ac4e-2a14761001f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e14d53ac-be74-43c0-922e-5e1a7beca46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745e4a4a-958a-4eea-8d4a-f6488068d28c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8fd40a-1d38-4d5d-aecb-a54aa324823f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f919342-b6c6-463d-a5f4-e4dcc6785992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9edd521-db64-468a-9573-0b5a9005360d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee8037a-c4b9-4ccb-9ade-5f4bc57b75bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50d2140e-a45f-44b1-9fff-e70e6c40bdfd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620a77cc-3837-4124-ba15-46a3815f5512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7df1c14-dcae-4d58-a288-708d441fc886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82f9606-053d-4e16-ab5b-a05fced312a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ceec71-aca9-4751-a3c0-1d7206ef479f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890f4b34-b839-4ede-a7b8-f054f09517ff",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38891f69-0a26-4f64-8f04-7368618cd5b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6e1e67-deec-431f-8478-4caa62c16399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f31ac4-c0e7-41b3-a108-c9148c38463a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c599f5-7679-4da9-ad7e-d46462aa9c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9383bc-56bc-4e51-8592-fd84bf5bc5a8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e75532-d40c-4f66-84d9-5dce269c7d2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cb928c-8aca-41ed-a23f-13ec13c8693c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4774c958-fec4-4958-93c6-83a7eda428fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a976b5bd-a408-4da9-8dc7-de0da5bc8837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cd6608-7164-4dc3-9f90-b9033ea1b93e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f08f2b-0c5d-41f1-a908-7580d9ec6fe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf228039-296a-4a63-bc58-58f4f68b63c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "586d871e-6a8a-4d9f-8466-127e26641e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab6223b0-f057-4df9-9dd0-b235589c3b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff62cf4-a94d-4869-bd3a-60f78d561d3a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e6c1df-72b4-4ca4-8700-797d5afa0cbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a31e52f-4cad-4c69-8fd1-fea596042d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c117af66-4abf-4ad2-a061-930bc976b5e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995c76ab-0d58-4a7c-91a7-a1b9b8908885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e4a870-efdf-4d56-9791-54fbfe3ba77b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b3c38a-afe7-4373-b5cf-888d98822cce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6136e5c-9925-42ff-8167-66514029ed5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0663b28-ca84-49d6-9c14-1929cff4fe09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e33bce-dc9c-46d4-a769-e09580015dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5f23e1-42b3-46e6-b6af-24c3d1e63af2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63469d01-381d-46bd-8478-0b834bbe4ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "846aed66-fa40-4fd7-bd8e-465943cc3066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915b6a6d-ff9f-4496-ac04-6922c8a77468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2ded31c-ddc4-469d-84d8-b3df6e9cfb9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee815be7-9f9a-4998-ad7e-9bbe77806756",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5763d2a-327b-4175-abd3-5e898de8ecc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c82ccfe-2653-4fc2-bc58-afc2c61d6843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c77bd14-a44c-4c60-96fe-6bebc15f5046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "586d0fb1-3cd3-4c80-b0f1-a3cec04b6205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d872cd-7bdf-4ffc-be12-b0644adb9ee9",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27432d0-6864-427d-b2df-7122911403a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4fb4cb-e2b5-4b34-8348-f3c3bc8c2a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50aa0c05-0968-4470-bdb7-a9c298b36d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f1d2e0-370c-4d4f-9345-ca462962148f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73c8a31-a8be-4648-b5ea-f62bf235e418",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac93ab9-9313-4418-a339-4c1c6bbb5b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29dff666-32fc-4ea2-b435-acf3450b1b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842b5f42-dac6-4559-87b5-87bf944b7b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4eb7c93b-6dad-4c8e-b1eb-d8712e2cb91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8271fd-fd58-4d7e-9503-a671c11ecbd7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fc41cc-ae86-4f78-93dc-a6ebffc69b32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166c8c77-c59f-4778-a8f5-c5d570ee1ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89e3953-f412-4e11-ac7b-ce0eb7f3c15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43c75a1-78a4-4a0c-90d1-e38e2dc7a0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe4824f-32c4-4985-afc4-6cc6149a434c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4232a09e-ce04-44d5-8a55-b022d3d7ac07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba5e72d3-44a4-4a85-90cb-4626fe5aefa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ffe557-74bc-4975-bc45-2796f73c455d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f930f51-3655-4319-b35d-d188be764e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ef8d6a-a657-429f-9bc8-8851636a1d48",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9f75ee-bb0a-4be3-8673-634c284dcc14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ead0aea3-cb70-481d-9915-37106e970ea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e939a0-7b34-46b8-be28-518fc64d0c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc29e521-ff5d-4416-af3a-5cd54c4befc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff3413b-f835-4ad5-a2f8-3a122677479e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3834e4-b43c-4d66-b3a8-1c103e4dd3c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c50a8d-d811-4ff8-b718-020088f6c1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c7e145-a16f-401d-9d76-5ee50ec8036f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "437d6a35-1e82-4362-87a4-323593fc2aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a70779-45cf-415c-b3a4-5f8b564881db",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f238c519-f4be-46be-8db9-f09e35680b76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62e59b4-d0b1-4b6d-b085-e4dbfba17f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c183f6-3a59-4ec1-873b-68683afaed75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da985ae3-f7a8-4d27-8f6f-ddfa144a7c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addc0492-7c12-47f6-b97c-10519c18162b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb987d1d-365d-4203-80cc-5145f0ba0d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3786cac-00fb-4e63-9032-e319d76d8722"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b623c650-aa42-4019-9d61-6bc2955d4b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000678bc-bbec-4c13-98ad-db7e21cf466d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b44435-ffa5-4ee2-829f-d954780ebca4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0b5c4b-584f-4250-a3f5-610a7fff1036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5800fc4a-c3e4-455e-ab1b-bc7d317fd670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758ecd96-52e9-4d1e-8c52-0e78355369fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7a7f60-d12e-488d-88a7-4e977e3a234c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e7340e-1a4e-46dd-9b7c-8556d8244cd4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93e5b9c-bfe3-4ea7-bccd-f0f27a6238a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3032ff92-093b-4afe-b06e-ae3d2b160504"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd021b50-482c-4e98-bd5e-1d9691a4b689",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551fcabb-b085-4a4a-a887-bc0112d45a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e62fb5c-faca-4710-9f27-1702a9e743c9",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934e50b2-d61a-442b-8698-12fdd1d9a305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d2cea1-5501-4537-b5bc-164e697fad95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76014ce-dfb7-483a-8b77-09d3b457e756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0c4936-f4be-4047-9acf-d868e208d334"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a68e1945-2901-4f7f-9165-564ef76b6c31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25c7b38e-6ee5-4fe4-b78d-542a1d36e0de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "48403f2d-a3bb-4690-8a77-90fb5207c4f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6eecf30-09ae-4803-a4ef-786a37d2b745"
                    }
                  }
                ]
              },
              {
                "id": "ffa15350-5a91-439d-bfaa-8d6178a1a96b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ee32370-f1b3-4d05-bf86-f6f8794036e8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5965a67c-634b-4f02-848a-3ea2b4658247",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7b35ade0-f794-4eaa-a798-f42d72419b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d74d22-7e51-4ad1-8159-921c824100d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74ac6208-8934-4918-82b2-576831182c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c651e8-3a11-4a50-92ce-deccceb93e18",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a853095e-754e-4c55-89d6-220ab464d795",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ee0b5277-8f15-4f24-af7f-8e0811bb0a41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2a6172-8474-4ede-aa49-cc6d47df5401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db466d1d-963d-4fbc-b4e4-00d07e4d0237"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4169f0f1-7914-402d-9e36-eee344f25c3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eae5e661-633e-4fb2-bc67-79cfb8a8bf2b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a16b0b9-7f31-49b1-a581-b39603a84ee3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e97631cb-386e-40cd-8dd9-e540aa93b2c9"
                    }
                  }
                ]
              },
              {
                "id": "c01095a1-039f-43b2-ac5c-4928aef29345",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "682d0c0a-8742-4425-9682-e2fa7e5b3060",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c602f65-be95-49d4-aeaf-04850564e024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "37aedbdf-3e0e-4f7e-952a-239839b92085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5465a19-e635-4c61-8541-33a0ffa453a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af61b29-b050-4feb-85f9-a6e8d871bf32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "37ea2a94-a302-4dfe-b41c-d4d244c7dea5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51243eb8-9c6b-4ae0-aab3-714d775c5a9d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13d5c910-3756-4bc6-bcd1-be443175fe98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a0d31a4-519a-4763-bf15-6f7a443924cb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2afbe9c0-b44b-47cb-995c-4c48c1bd755e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "481f9c82-dc29-407c-8fa7-b3bb86a3c754"
                    }
                  }
                ]
              },
              {
                "id": "368a889c-cb4a-41a5-a2dc-a5e8bf76b4c6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2140fb34-3cd3-48db-a36f-2bd3801bc802",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b7cb6ff6-de7d-4477-8a60-4e757898bfdc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8340753c-3a37-4d60-849c-072f92c05ee7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "588e1a26-7994-4e93-92e7-585c71e6c56d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2391be8-69c5-4ff3-a0bd-ed9302afa3c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bc92ec65-2d9e-415b-a04c-ba3f6cca230e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1d2e0fa-f1c9-4519-9458-51c0c6cd9a46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be72ed94-eea7-456d-a93b-97b3cfbb1b24"
            }
          }
        ]
      },
      {
        "id": "9d0a6e4f-c118-4795-9fa7-44864707d30b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ad65149e-4394-4829-bcc2-8588b09cfdbf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04c98557-8b19-4f73-9b11-38c9af974703",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2acf5ecb-c995-411d-a6c1-daa795680a34",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7704fd89-4165-4e95-adf9-ba58262cf5c0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d9306cab-73d0-45f6-9533-1bbea4237ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbdab20-8ba3-49dc-a8fc-d1e27aaea5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae4eb50c-b3ee-4c8f-bf5c-bb202dd90696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1c8555-1c6e-4f1e-9186-84af5a076238",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13b5cd1-dcc8-4393-bc68-50f3e7b6a90b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0ae8cce4-b066-4f2d-b358-65f9c7ad5d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b976d2-3e7c-475d-ab6b-1f0dd016170e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "525e5cad-1d17-41b6-a643-cd046aec88a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecb41fb6-2756-45f0-a305-28f9c0aa94b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e380a299-0181-490a-90af-e69496067493"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3157da0-abbd-4d1d-9f2f-31d2867ef14f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bca1d477-bc80-4497-abcd-1dbf3cd31d49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0c80861-230a-4c86-acd5-62ca60aec343",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "771351b1-45bf-4548-808f-e3459b7cca25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f337da1-7dc2-419b-bc6c-397649fb42c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "342cc45c-28fe-4d59-85a2-02f0769a5503"
            }
          }
        ]
      },
      {
        "id": "f348fb6c-f99f-48f8-84d2-923461ce374c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e636c6d9-def3-41f0-a74f-002fa2d47109",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6080cead-8b72-48c7-a021-f25e75f73992",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d182767-fafa-44ab-9a64-4b1a0df748d8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6563c3-3eeb-4b02-a39f-2d91fbb6db3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa7a7a51-2b5a-442c-9059-3a396dc9ca3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22095d03-4a5f-4511-af42-1522ac100c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "55902e33-a6c3-4c32-977c-c7fd97dad73c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5030db97-0582-49b5-8797-accbc2d05787",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d62a52-7235-4835-84a4-33ff9e28682f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "206dd70a-0e6d-4d11-893e-e9f9521a5d53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a903c3-4538-4951-a16b-f264ac31a638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0e0dc88c-7f92-46a7-8b98-b480ddfceb64"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73c4f358-cfb9-44b2-9cfa-b96e09a66b2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17369e1a-1621-45bd-86f7-74b628769b22"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2f3f91c-f26d-4bd6-a227-1ba7d5c24093",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2050e5f7-6706-44be-bbdb-75387bb8798d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13eb3c5b-4b81-4d57-a6c3-cc7a74cb7d09",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ae0f7c7d-89eb-4c53-9e09-0eeaafcccb07"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a3553ca-88f3-4a23-a070-959a9bbfffd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3e74e0d0-638b-4b63-ac48-c96ee4cd3be0"
            }
          }
        ]
      },
      {
        "id": "44cb8676-984c-456c-926b-df7d4b2c8086",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "7f88f45b-34e9-49bc-aa88-087616cadaca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e925727-06d3-4b6e-9ea1-d304c43af790",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54869d98-b06c-4e4b-bc82-9873621a3b45",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f6a815-46ae-452f-9308-edb3250ff01b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "353b3b25-707e-4e41-a964-f44a1a4cbccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3e70de-8803-4b85-9fca-3d7e853dffeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3db8a976-7136-409d-9731-39f8fe98f55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd6c3cb-cfad-4a54-bbbc-fefbb255ec2d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab0caba-9566-4ced-a23d-7f8c77b6554a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f85f35-f75d-4372-8d79-74c57d9d6e8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "658cc1c4-a6a3-4c68-ac63-69389c630240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51d78914-803c-42ca-8824-065c96f560e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "850e5a83-38ad-41b5-b5d5-19d2c0c6fdb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a9f7dd2-dee8-486f-b694-48e1e76e75b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a1085b8-f914-4495-b8a6-b9977feb54bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8c3fa8d-531f-4b14-bbb3-83ebcd614639"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "71cbf3f2-3f05-4c03-bc85-380a07ff12b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41921f4f-6a04-40d2-8444-4e74738e6dbd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21787871-f5e2-4755-8c4c-fc246ec250a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84288805-3a57-46d5-bd78-f5094f93c27c"
            }
          }
        ]
      },
      {
        "id": "f063f8bc-8638-4bfa-aabc-2155fd22b3ff",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f72e7f06-0193-405e-a07f-ae217e74f864",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e878e46c-6875-4390-8a32-87f1540a2c17",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6ff897ae-0307-478a-bf35-75584725f711",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "035f4729-ac85-46a6-ba07-aa406defd831",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96d82a81-c0d4-4962-b0b8-25768c73e308",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 944.4807692307689,
      "responseMin": 18,
      "responseMax": 11359,
      "responseSd": 1186.958023533342,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683851777914,
      "completed": 1683852034175
    },
    "executions": [
      {
        "id": "672ff748-3b14-4022-b202-2c52b741e7e0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7997847d-a7ad-4e52-863c-d70e9b0ddced",
          "httpRequestId": "7bf13dda-1ccb-4d14-915e-a55e62eae6a0"
        },
        "item": {
          "id": "672ff748-3b14-4022-b202-2c52b741e7e0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cbeafed7-790b-45c9-8dce-06777d49fcdd",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 0
        }
      },
      {
        "id": "c17827ad-a709-4c70-8996-686a1e7d1cf6",
        "cursor": {
          "ref": "8ec29ee7-fa8d-45e7-8649-5154eff4613f",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "70708764-cdf7-4060-b568-88e66de28b6b"
        },
        "item": {
          "id": "c17827ad-a709-4c70-8996-686a1e7d1cf6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b5238913-6edf-4181-a7c5-b866d0213438",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "eb167366-a601-44be-99e2-9b4812e52d4b",
        "cursor": {
          "ref": "c0829dd6-02ca-48b2-94da-28c2eb4a8a36",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "84ca8359-90a3-46d4-bf0a-a50aca9e8d5a"
        },
        "item": {
          "id": "eb167366-a601-44be-99e2-9b4812e52d4b",
          "name": "did_json"
        },
        "response": {
          "id": "10ce335a-f030-45e6-a828-76c7277c9a59",
          "status": "OK",
          "code": 200,
          "responseTime": 958,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6827781-5636-4709-ad46-3a65123c6652",
        "cursor": {
          "ref": "32f2620f-ca77-4227-86fe-91797296b52b",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "94de577e-ad94-482f-ae3e-f8937e510d7f"
        },
        "item": {
          "id": "b6827781-5636-4709-ad46-3a65123c6652",
          "name": "did:invalid"
        },
        "response": {
          "id": "f8ea8e4d-0442-4622-a63d-df719d5584a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1038,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6827781-5636-4709-ad46-3a65123c6652",
        "cursor": {
          "ref": "32f2620f-ca77-4227-86fe-91797296b52b",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "94de577e-ad94-482f-ae3e-f8937e510d7f"
        },
        "item": {
          "id": "b6827781-5636-4709-ad46-3a65123c6652",
          "name": "did:invalid"
        },
        "response": {
          "id": "f8ea8e4d-0442-4622-a63d-df719d5584a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1038,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abdf7c9-452b-4d33-8811-ac98d8066cc4",
        "cursor": {
          "ref": "e680feb9-e45d-4377-850d-370a7e98d521",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bc4671fa-d347-487c-b04d-447731bbf9a9"
        },
        "item": {
          "id": "2abdf7c9-452b-4d33-8811-ac98d8066cc4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "817d2d6e-fa85-4f97-abd2-5d9986726549",
          "status": "Not Found",
          "code": 404,
          "responseTime": 834,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a3c98b-85a4-4bd6-8e2f-6dba974e399a",
        "cursor": {
          "ref": "05c23981-9126-4d16-902a-1ebba15a43f7",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c98cce99-b277-4809-98e0-67dc32efe932"
        },
        "item": {
          "id": "82a3c98b-85a4-4bd6-8e2f-6dba974e399a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bcd359fa-6435-48b5-9a81-8e92c9495bdd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 747,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148fdd3b-d0c6-45bb-b272-f74c08521e38",
        "cursor": {
          "ref": "bcfae51e-f7d6-4574-abb0-11c63dcaea6a",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5f15c892-d9d2-4892-a795-f610d4699e10"
        },
        "item": {
          "id": "148fdd3b-d0c6-45bb-b272-f74c08521e38",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b31e27fa-6145-4fb9-a580-4cbbe1ca8777",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173ddb50-e4fc-4beb-b8c8-6bada37cee43",
        "cursor": {
          "ref": "764bba64-0b4c-44f5-89f2-ca2db9853749",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e3ba9d6c-1330-49b6-8a4c-6d5a3e43bb68"
        },
        "item": {
          "id": "173ddb50-e4fc-4beb-b8c8-6bada37cee43",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5a76c137-b703-40c3-89f0-6332e3a19095",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 734,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173ddb50-e4fc-4beb-b8c8-6bada37cee43",
        "cursor": {
          "ref": "764bba64-0b4c-44f5-89f2-ca2db9853749",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e3ba9d6c-1330-49b6-8a4c-6d5a3e43bb68"
        },
        "item": {
          "id": "173ddb50-e4fc-4beb-b8c8-6bada37cee43",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "5a76c137-b703-40c3-89f0-6332e3a19095",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 734,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3abf4f9-2ee0-49fc-8353-450b760b73a4",
        "cursor": {
          "ref": "36a3912c-d757-47ea-97c2-198337211a23",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7076a51e-530f-4c98-984d-f61f6c0ca518"
        },
        "item": {
          "id": "d3abf4f9-2ee0-49fc-8353-450b760b73a4",
          "name": "identifiers"
        },
        "response": {
          "id": "14ccf1ef-cb00-4f58-a74f-a7869c9d17cb",
          "status": "OK",
          "code": 200,
          "responseTime": 1500,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f59f03-0554-405e-bc9b-7e05451f0d30",
        "cursor": {
          "ref": "b1ed2553-124b-4abe-abe2-62872c38b5ad",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba1fdf13-ff59-4f06-8b6f-4c91cf7257f0"
        },
        "item": {
          "id": "49f59f03-0554-405e-bc9b-7e05451f0d30",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "70a26e18-a5f9-4693-bf31-bc62c958dcb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f59f03-0554-405e-bc9b-7e05451f0d30",
        "cursor": {
          "ref": "b1ed2553-124b-4abe-abe2-62872c38b5ad",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba1fdf13-ff59-4f06-8b6f-4c91cf7257f0"
        },
        "item": {
          "id": "49f59f03-0554-405e-bc9b-7e05451f0d30",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "70a26e18-a5f9-4693-bf31-bc62c958dcb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869cac77-5c97-4669-93f4-efd9111c355a",
        "cursor": {
          "ref": "ef8fa4ab-d80b-48ce-8991-80f20628c5c5",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7edd0c14-a5fe-4cbe-abe7-b368334dcb5f"
        },
        "item": {
          "id": "869cac77-5c97-4669-93f4-efd9111c355a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f4531424-1adf-44f9-8955-b99722c1bb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52ac0e4-2086-495e-8155-63e1686815f4",
        "cursor": {
          "ref": "61ff3382-36d3-4c96-bbda-7eecb374b0a1",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7b280a8b-803b-4656-8f3d-ccabf8dcc9d4"
        },
        "item": {
          "id": "b52ac0e4-2086-495e-8155-63e1686815f4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7ee90e06-6ecf-455f-a90f-499aa15e59c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b47556-26a1-47d0-9379-1cddc715dccb",
        "cursor": {
          "ref": "fbe46747-1e36-41d5-9f7e-f59f0b7dc72e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7120916f-375e-42a6-84e2-3a9aa352339b"
        },
        "item": {
          "id": "f5b47556-26a1-47d0-9379-1cddc715dccb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4b7eeda0-0b8b-4ff6-a7af-ce0776382341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b657e6-9031-4320-b16e-811fb6eb642f",
        "cursor": {
          "ref": "c71e23c3-568b-41e2-aa94-9b723cc22273",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "df89b0f7-14b7-40cc-8c9e-acfd22948e17"
        },
        "item": {
          "id": "83b657e6-9031-4320-b16e-811fb6eb642f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "003581d4-c82a-4c40-a984-5966226bc02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 741,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2a69da-fb1c-4f38-a882-4402be851c7b",
        "cursor": {
          "ref": "50d4959d-a5a0-45c0-b812-f539bac5b148",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "17c8ea4f-87c5-4618-9c10-cfbafa7b5ce3"
        },
        "item": {
          "id": "3a2a69da-fb1c-4f38-a882-4402be851c7b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1f7ebd88-02d5-4836-9580-b7eeb8788193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f88dee-0f9c-4030-9d71-1a4952629163",
        "cursor": {
          "ref": "2273ce61-767b-46e2-b661-3bec9eedf51d",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1f6bf989-2626-490f-bef7-f3baaf5f5c18"
        },
        "item": {
          "id": "08f88dee-0f9c-4030-9d71-1a4952629163",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "52f34e21-1536-409f-b7c0-7ab060005a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbd1080-4b88-411e-a8db-e07e857ff902",
        "cursor": {
          "ref": "34fdfba7-4426-40a8-a778-51fdfc56884a",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cb1b6ea7-2916-4efe-9c34-d85b9f573755"
        },
        "item": {
          "id": "ddbd1080-4b88-411e-a8db-e07e857ff902",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "554308c7-ac63-4431-9e16-c26231dec0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 721,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7b9171-fc5b-432b-b497-9322df6ae803",
        "cursor": {
          "ref": "1339428e-f609-4c4a-9f9e-d86a3ea00975",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0081e859-ca13-440b-ad57-41db0f6214f5"
        },
        "item": {
          "id": "7b7b9171-fc5b-432b-b497-9322df6ae803",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fde03b33-060e-48f6-9266-55f4ea490609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e887d22-33ff-4487-8dbf-a2dc32316661",
        "cursor": {
          "ref": "720052e2-5f1a-464c-935b-6cde8a58d86c",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "46472358-a25d-4390-9373-20f806ace489"
        },
        "item": {
          "id": "1e887d22-33ff-4487-8dbf-a2dc32316661",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4a352760-96d0-48ce-b60c-c39510a33356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6559dfd2-6b08-4f67-8d90-90727e5ac401",
        "cursor": {
          "ref": "6d986b67-a21a-4498-80e7-beb040234393",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a586d67e-507f-4a77-894f-b15a2b800106"
        },
        "item": {
          "id": "6559dfd2-6b08-4f67-8d90-90727e5ac401",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7e5eab47-4aaa-401d-9636-8618a4cbdf17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4152c430-d775-4861-b013-1750b47c44bd",
        "cursor": {
          "ref": "a82e3567-706f-4bd9-8c05-60a9d2a2191d",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8bb8c9a7-3e57-47de-9967-8cb2f85a79ee"
        },
        "item": {
          "id": "4152c430-d775-4861-b013-1750b47c44bd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "36120bc5-3891-4031-959b-b4036844ddbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498fa891-ecc1-4c4a-b9e7-61946148d0f4",
        "cursor": {
          "ref": "b825b3ba-282a-4f69-ba96-7c6298190205",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "98e90bc1-9689-4928-b4ba-3d392f24c51f"
        },
        "item": {
          "id": "498fa891-ecc1-4c4a-b9e7-61946148d0f4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7e940c3b-a157-4d44-87e5-3443e79607b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ab8937-8292-44ca-8d56-201d19d10bc2",
        "cursor": {
          "ref": "39b60e30-6e58-4749-bea3-e2c21cdede19",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d39ceee6-fb36-4787-ab97-c942fb5943ff"
        },
        "item": {
          "id": "b8ab8937-8292-44ca-8d56-201d19d10bc2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "868c7c39-3850-45cb-8f5f-b190772254d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440e70e6-21db-433d-a927-d970660f3300",
        "cursor": {
          "ref": "7a89338d-3b0e-477c-aac3-57554f35955b",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b66f55a9-4995-46ee-8104-663383aec80b"
        },
        "item": {
          "id": "440e70e6-21db-433d-a927-d970660f3300",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7f0d1e06-db64-4f09-bed2-47185485f701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1513,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0231df-a95b-4925-b5ea-0dac0140aa55",
        "cursor": {
          "ref": "6daefdc5-ced2-4551-9e61-b3bcfc875fb4",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bcfe9496-6f40-4d8d-96d9-cb343d21a244"
        },
        "item": {
          "id": "ed0231df-a95b-4925-b5ea-0dac0140aa55",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b642323b-2a6b-4ec2-ab64-761fc84ce8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1364,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf49f70-436d-434f-82ee-6180934fa0fa",
        "cursor": {
          "ref": "032d2746-2a9c-4754-8069-a72b8e3d3d49",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4931799d-a1c6-48cf-bcde-f4a1ddb3f268"
        },
        "item": {
          "id": "2cf49f70-436d-434f-82ee-6180934fa0fa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "050f307e-e85a-4bbe-bdca-9725fc929dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1166,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd09407e-728e-459d-88f2-ece294f3985a",
        "cursor": {
          "ref": "af8d36f0-1e3b-4a2f-aa26-12eca34c3a83",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "596bb9b1-11bd-4167-9e8f-c4dcee62af18"
        },
        "item": {
          "id": "cd09407e-728e-459d-88f2-ece294f3985a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "57009aad-699f-4dd2-ae7a-ec4ac4eddb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae81644-b458-4c1b-8927-362cf3247f55",
        "cursor": {
          "ref": "c9ddb171-37e4-4f68-9461-bee31b44fbde",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fc8dc3e0-28a0-41e1-977c-576d201e9555"
        },
        "item": {
          "id": "2ae81644-b458-4c1b-8927-362cf3247f55",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2c8604f3-7344-478c-abca-c228612aa3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 724,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ccff89-ac6a-413f-bb29-5c2d91c42095",
        "cursor": {
          "ref": "9b899f0e-ceb3-4ec0-8b69-d7b49cda3899",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3de23634-b86f-4785-b350-7121a4768c27"
        },
        "item": {
          "id": "e5ccff89-ac6a-413f-bb29-5c2d91c42095",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8aca6e89-36fa-4b52-8ae8-94d98de98817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bbe76f-d594-4539-b8d6-0c408d2e4fba",
        "cursor": {
          "ref": "6d35b86d-970e-488f-ada0-e7c9234e145c",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f21353c5-e4fc-4fb1-96da-2d637ec0fc7e"
        },
        "item": {
          "id": "25bbe76f-d594-4539-b8d6-0c408d2e4fba",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "17810264-2c12-44d1-a40d-316dbd3b83a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bec9206-0b13-4d73-b47e-10add90137aa",
        "cursor": {
          "ref": "43152509-45c4-469d-85aa-b480907ae951",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "09ea7045-b4db-4e7a-8081-893cd0eacbb7"
        },
        "item": {
          "id": "8bec9206-0b13-4d73-b47e-10add90137aa",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e6b33cb4-e72e-4b7a-b4e9-4fd7784fd90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ca7bdb-2b97-44e8-a7a4-f2a963a8c970",
        "cursor": {
          "ref": "186ad009-e31c-44df-a98f-56619c986cf4",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8bb573f8-6ffc-467c-8bdd-dd812e471beb"
        },
        "item": {
          "id": "b0ca7bdb-2b97-44e8-a7a4-f2a963a8c970",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9864bb47-2c19-4b95-9966-b5d2a8faf1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a7a773-7fc5-4c78-a963-c49a1ffa7b5e",
        "cursor": {
          "ref": "3290e01f-7908-4110-ac74-511e3a3d204f",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7f3f1f50-091e-4c24-8071-74daecc0a9b0"
        },
        "item": {
          "id": "70a7a773-7fc5-4c78-a963-c49a1ffa7b5e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d45b3481-1769-476a-963d-9514547ef73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9096811f-72fd-469a-8b42-d77207ce14c1",
        "cursor": {
          "ref": "1e32d3d6-293e-4a85-ac85-d0d799ffa097",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ef62aa8a-4f02-4e8b-83c4-75a71289e49f"
        },
        "item": {
          "id": "9096811f-72fd-469a-8b42-d77207ce14c1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "20c5e3c9-eba0-4c75-88c2-47efc7918a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1511,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef9a725-3e9a-4688-a483-e0a875e2ed8f",
        "cursor": {
          "ref": "d1453539-ff7b-434e-81fe-d7bbe0bc9783",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "82485ce5-c850-4fd8-b1d2-558eb572b9c1"
        },
        "item": {
          "id": "5ef9a725-3e9a-4688-a483-e0a875e2ed8f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "92d91137-2aaa-4ad7-8ebf-df9c6bb2a1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1126,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f48d4a99-4a74-49a9-aaf9-a2ab4e26f784",
        "cursor": {
          "ref": "fd137694-54c0-4f53-b908-2b7126de75c7",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "67dc3bee-52a8-4a98-8b55-35915cc7a7e0"
        },
        "item": {
          "id": "f48d4a99-4a74-49a9-aaf9-a2ab4e26f784",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b90f3e38-8187-4a1a-9169-8d29c1774b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1183,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0659d907-cc5b-45ba-af13-ffef31e6c2d1",
        "cursor": {
          "ref": "ccc07155-bcdb-49b8-9fb5-60a15a77b242",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5970fe1e-fb7f-4ebf-ad14-b174a10a8af7"
        },
        "item": {
          "id": "0659d907-cc5b-45ba-af13-ffef31e6c2d1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "14cad214-9789-48d9-8dd8-c694ccdb0081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c168b44a-dac9-410b-a440-b284e84f50cd",
        "cursor": {
          "ref": "5fa3ff88-6eaa-4e4c-afc8-d49ded9a41b1",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0204922c-d306-45b4-9b7b-59dca91c52f7"
        },
        "item": {
          "id": "c168b44a-dac9-410b-a440-b284e84f50cd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f491839a-80ea-47cb-a918-2ac7b54ec508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c22ade3-3091-4b9b-b967-67623b960d40",
        "cursor": {
          "ref": "35122971-41a1-40f0-af7f-b2255655b6be",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7f98bd62-df41-4684-a85d-46f7627248c4"
        },
        "item": {
          "id": "5c22ade3-3091-4b9b-b967-67623b960d40",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "19f2e39d-221a-4dfd-887b-9dbb1bf997b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8273d928-b45d-4cfb-b5e5-6684246412f1",
        "cursor": {
          "ref": "d288c8e6-d13e-457c-bc3d-9786719f32e7",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "aaf2b8de-3e6f-457f-b158-ceba06df0e8c"
        },
        "item": {
          "id": "8273d928-b45d-4cfb-b5e5-6684246412f1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0cd0dd27-5dd1-4fbe-a7a3-a7fedd7298d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4d4534-e44c-4889-8f45-12b4c88ae592",
        "cursor": {
          "ref": "8c4b85ae-6c8c-487c-aa6e-8c5c5c07733e",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "818ef7df-df37-4f9b-9517-cc6eaf4bfef6"
        },
        "item": {
          "id": "3b4d4534-e44c-4889-8f45-12b4c88ae592",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d78cb2ce-4031-4ce5-9475-a0913273cd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6aff93-16fa-4769-8ff8-94a7f16cbfea",
        "cursor": {
          "ref": "ec9d17b3-195c-4100-a2ef-135eb839560e",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2b9c461e-1f08-4921-af28-33dfe889f4fa"
        },
        "item": {
          "id": "be6aff93-16fa-4769-8ff8-94a7f16cbfea",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bbf5aa35-dca3-4816-8a05-2db756e14a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7726b4-82c2-4f89-9105-4b00e474fc9e",
        "cursor": {
          "ref": "92cb07a2-3680-49ae-90fc-5643f1781eea",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7c79143f-3bc5-4578-8596-8534346c026d"
        },
        "item": {
          "id": "0c7726b4-82c2-4f89-9105-4b00e474fc9e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "66e0666b-56f5-4cb1-b608-450af56e3ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637df055-8466-46e1-865a-c57240b52970",
        "cursor": {
          "ref": "d7d64020-1d02-430b-9ef0-184aaec92740",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "564bfb83-4b7a-466b-8de8-73e75e6e2be8"
        },
        "item": {
          "id": "637df055-8466-46e1-865a-c57240b52970",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e4364800-a331-4b0a-868e-4ee29bf3d56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e235ce42-add8-408a-bff0-e65d5cb31f28",
        "cursor": {
          "ref": "8aea9b62-f69e-4b4c-9611-dcf08f615270",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fa52f1c8-d64b-4159-be14-6c7fda0e3f9f"
        },
        "item": {
          "id": "e235ce42-add8-408a-bff0-e65d5cb31f28",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7b29a34c-7ba2-4d0c-8855-adbc0f258795",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 843,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd797f6-5841-462a-8b83-42eb451cdd26",
        "cursor": {
          "ref": "ecf1c80a-1fb4-46d0-830f-1e57e31f5263",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d44e3fbe-fd15-4dd2-a165-ba527053efe8"
        },
        "item": {
          "id": "6dd797f6-5841-462a-8b83-42eb451cdd26",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6e3da165-c9d2-4a11-9d8e-c08ee2f089d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f797b5e5-0cec-4d19-95d7-73dd96279766",
        "cursor": {
          "ref": "e46675b5-e7b5-481a-8ffd-9c4f37caf4f7",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "692378b9-9846-4ee3-bc84-a59507199d4d"
        },
        "item": {
          "id": "f797b5e5-0cec-4d19-95d7-73dd96279766",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f6adb671-0ba0-44cf-ac8c-1aa8f01d72e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01352108-d1e9-4b90-b05d-20bdb4a56cd2",
        "cursor": {
          "ref": "7234ca01-a36e-4cda-a18f-888059b91198",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c5a31248-9328-4d65-a8b4-2a910d3dac57"
        },
        "item": {
          "id": "01352108-d1e9-4b90-b05d-20bdb4a56cd2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e9cb905e-509a-49ad-8ef1-a9f430453873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a166e13-c991-4d90-afad-cedaed130f0f",
        "cursor": {
          "ref": "d6b54bbc-bdce-4eb2-8f03-681d424407ca",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b3a2a2c4-5f27-4141-957e-f110337ad565"
        },
        "item": {
          "id": "0a166e13-c991-4d90-afad-cedaed130f0f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9064163a-7ffa-4fd4-9e45-478800b14753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 686,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a389309-48b6-4a8c-9dd5-20ebf7d3c777",
        "cursor": {
          "ref": "670598e5-7ba7-48ce-9b64-e51ef426f502",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a394ec66-5e41-468c-9d4f-50c0d9d9555f"
        },
        "item": {
          "id": "9a389309-48b6-4a8c-9dd5-20ebf7d3c777",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8b65bda1-d7cd-4c48-8a87-feb172cdc8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531f3603-3919-457f-b8a0-fae98e314126",
        "cursor": {
          "ref": "703bac07-def6-4556-8c9c-4a0ae1b93418",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2fba8220-c1e2-449b-8cd6-c6110389df4e"
        },
        "item": {
          "id": "531f3603-3919-457f-b8a0-fae98e314126",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e2c7af60-c397-4801-b1dc-bd7c9590c32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433c0d7e-0d6d-4f5f-b9d8-a9b0d3f092cf",
        "cursor": {
          "ref": "544c1c8f-d369-491b-9b12-ba5fa67f127e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c360a816-7631-4abe-8e71-b5a9c4e52df7"
        },
        "item": {
          "id": "433c0d7e-0d6d-4f5f-b9d8-a9b0d3f092cf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ebd71a6b-930d-487b-8a3f-7e96a34ac140",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 815,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4943693e-7b58-40a1-b72d-a47b48a00580",
        "cursor": {
          "ref": "ba3a933b-7af8-4fd1-ba22-a8ad1fd80057",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9e1e58dc-9b1f-484b-9a0c-4856ddbb5279"
        },
        "item": {
          "id": "4943693e-7b58-40a1-b72d-a47b48a00580",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "dded36cb-c657-4be9-a746-f3e2af1810f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 706,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c7fe9d-7efb-4bd0-b06b-12470c24ba4d",
        "cursor": {
          "ref": "bc69fb53-88ef-42dd-8c52-494df9f6ddfb",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "21ecae6e-bd43-4a53-8ea3-4c6011bd1765"
        },
        "item": {
          "id": "69c7fe9d-7efb-4bd0-b06b-12470c24ba4d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b4d17d20-0bf1-4df2-9c7d-939110ef7d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e781aa0-2b04-47ba-8e71-f84521f85adf",
        "cursor": {
          "ref": "3a48b49b-05db-4b5f-aa29-584bef692233",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "40dc4a0e-3b89-4501-9179-4248d0c78534"
        },
        "item": {
          "id": "8e781aa0-2b04-47ba-8e71-f84521f85adf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ecaf33ca-b52e-44ba-9e7f-91fde952e7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43be0063-f82d-4ed5-bbc4-8a805774d172",
        "cursor": {
          "ref": "71cf9474-148b-4f08-af50-1f02e2350033",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2a0acf35-94a2-4f45-b207-eae9896d23d3"
        },
        "item": {
          "id": "43be0063-f82d-4ed5-bbc4-8a805774d172",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "36a16096-0589-40d5-91c0-a8d1abadb3be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 993,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b930820d-126d-4309-adff-5674805898c4",
        "cursor": {
          "ref": "2a6cf1ac-7f0f-4696-83b5-617998e52f06",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "63b4eb9d-021f-4701-8806-f0922cdd6861"
        },
        "item": {
          "id": "b930820d-126d-4309-adff-5674805898c4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c1a2ede4-9c33-4bda-aa08-aea1ecab2bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1311,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98d224b-8659-44dd-ba5f-fb2393551ffc",
        "cursor": {
          "ref": "52973722-79b8-423a-8b32-ba179545801e",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e0d1c9c2-643b-4504-92b5-3eea43d0596a"
        },
        "item": {
          "id": "e98d224b-8659-44dd-ba5f-fb2393551ffc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "61e74109-0f33-4b41-a953-56b68f6588f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1196,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4b70d0-9125-4227-87c7-ab4dcf1a530c",
        "cursor": {
          "ref": "2e7ec4db-21f3-4d94-b07a-3a046a33347f",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "055d1c5c-0460-4b50-b541-d8067ba5a15e"
        },
        "item": {
          "id": "3c4b70d0-9125-4227-87c7-ab4dcf1a530c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4c2af8fc-7586-488c-ad2e-e3d6c974b622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 964,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e57eb3-bbe1-4f51-8a15-21bd97981843",
        "cursor": {
          "ref": "6ddccf6e-dd4a-4a83-bd1c-c23290abd837",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "08f39156-be2b-4639-b256-0dbd09ae8b56"
        },
        "item": {
          "id": "c8e57eb3-bbe1-4f51-8a15-21bd97981843",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aa7e4811-01cb-43ac-9f81-5c9a9e51e566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ee2c25-0ffc-4c67-be0e-7a7171aa9c2c",
        "cursor": {
          "ref": "40fcf650-a132-4696-befa-747543e6ad99",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1cae6b8a-f58f-48c6-a329-cd7c5582fce7"
        },
        "item": {
          "id": "d7ee2c25-0ffc-4c67-be0e-7a7171aa9c2c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fb79c581-4d15-4e3b-ab34-5fff7473ef2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60012dc7-e72e-4ff6-8673-3a753301cb42",
        "cursor": {
          "ref": "9844292b-289d-4c59-8b88-6cfab9c40565",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "895b3088-82ec-42d6-834e-1c36e1ff32a7"
        },
        "item": {
          "id": "60012dc7-e72e-4ff6-8673-3a753301cb42",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fb18608d-c0b3-44bd-b9d3-d4a00133d45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966a4e0d-5b01-4cee-b16f-25c3d878dfea",
        "cursor": {
          "ref": "ee59f0eb-3c9b-4a94-8b93-9086966ac794",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "debcbd9f-aa2c-428c-a05f-e87e90b437c8"
        },
        "item": {
          "id": "966a4e0d-5b01-4cee-b16f-25c3d878dfea",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "14afc3cf-d36b-4453-b61b-0ede55f62c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa091ef-676d-4fd4-a7a6-f11b6309d30c",
        "cursor": {
          "ref": "eac4e914-8975-44eb-a4ec-4a00560eea4a",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a29253b0-e2f8-4db9-ae7f-447bd83495ff"
        },
        "item": {
          "id": "1aa091ef-676d-4fd4-a7a6-f11b6309d30c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "59c5aa45-1a74-4fb4-be4c-a6535b097013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb87f685-d23e-4e1e-a7f4-fbf1ddce7277",
        "cursor": {
          "ref": "14df0edd-4a4a-46ba-a3f7-320c64adc446",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "64912cd7-61f5-4848-bc4f-3cc5fbdc1950"
        },
        "item": {
          "id": "fb87f685-d23e-4e1e-a7f4-fbf1ddce7277",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "75215efe-10b6-4485-93ee-b8d88fe13da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b62971-ac5e-4020-871f-2d73749af205",
        "cursor": {
          "ref": "0d065efd-1b71-4c14-81ec-7a464c988767",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "468b166d-8982-4916-9d0f-8b4c46bc51fc"
        },
        "item": {
          "id": "60b62971-ac5e-4020-871f-2d73749af205",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1f750f78-5cc1-4cc4-bc18-bc426f682d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c3519b-bdc3-45b5-9054-4af0b85e5f2f",
        "cursor": {
          "ref": "fcd48835-6836-4139-8ee7-10c67b61fb45",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a45678c4-1a50-44c8-a3e7-b1e6162479ed"
        },
        "item": {
          "id": "13c3519b-bdc3-45b5-9054-4af0b85e5f2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "cf4e66e7-dd7b-4898-ab06-ae6f7a07e293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdd35e9-5863-483b-9311-c14107ae41b8",
        "cursor": {
          "ref": "e732d4dc-6c46-4f25-9104-c14293e1f1b5",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0ddc2620-e4f5-46b7-a906-4cca59785a17"
        },
        "item": {
          "id": "1bdd35e9-5863-483b-9311-c14107ae41b8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "81ce4025-7133-406c-85d7-427b73232fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646f04b2-d462-4506-b6c7-191b1169ee14",
        "cursor": {
          "ref": "9463a033-9306-487b-9f14-4272178d88ab",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2d04230d-5140-4fc1-9b94-458c2d354ee4"
        },
        "item": {
          "id": "646f04b2-d462-4506-b6c7-191b1169ee14",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "59dae4b3-b632-451c-907f-68e234f635e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c850b0e-0ed0-4d54-afbb-a38f99302cce",
        "cursor": {
          "ref": "059f7f96-639b-426b-8236-4fe211161c70",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1cdaa3e2-cc37-4260-ae05-25984a5caeed"
        },
        "item": {
          "id": "2c850b0e-0ed0-4d54-afbb-a38f99302cce",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "06ef59f4-9baf-4d75-9c1e-f9bd94a91f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 712,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b13703d-e6a3-4046-a5c1-9719c9876003",
        "cursor": {
          "ref": "d0c51b9d-2ffd-48c4-abb5-c4bedcf87773",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "62283c10-d18c-45ed-822c-6ac3644a12d4"
        },
        "item": {
          "id": "3b13703d-e6a3-4046-a5c1-9719c9876003",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "69bff0bf-7d91-46f6-bd35-baf8447aa5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 767,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942a8fc1-b09a-4da3-90c3-9f2f00104a09",
        "cursor": {
          "ref": "6fac1c8e-ec0a-4993-a542-2e7f7fe36df5",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b4a354e9-696f-46af-813d-36a4dbd7f461"
        },
        "item": {
          "id": "942a8fc1-b09a-4da3-90c3-9f2f00104a09",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2d5e609d-d325-4cf2-a0ba-1b59f5146b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2597b994-dd20-445a-baba-9bdedb0505a2",
        "cursor": {
          "ref": "a90f48cd-2b9b-4047-b9bf-53813f8830d7",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b7ebbc21-12fe-4152-b8f0-534200bb8d3e"
        },
        "item": {
          "id": "2597b994-dd20-445a-baba-9bdedb0505a2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "feadb7d0-ce6a-4b12-b6cc-8f8e3359b816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849ea90b-0c33-4c8a-82c8-95d96dd3ccd5",
        "cursor": {
          "ref": "679fc010-9d84-4c6f-9ac2-09e2b5541843",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4be9d297-510f-4ad4-939e-c922cc9247cb"
        },
        "item": {
          "id": "849ea90b-0c33-4c8a-82c8-95d96dd3ccd5",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "85527d7f-151a-4633-8db0-2290811987f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c0f296-73b3-4faa-ad08-6a2bc4eead09",
        "cursor": {
          "ref": "79b7655c-a1e7-4165-8494-8ce11432de2e",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0cc946f5-367c-4bba-bfa3-635c12a05415"
        },
        "item": {
          "id": "99c0f296-73b3-4faa-ad08-6a2bc4eead09",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "66ada30a-9ec5-408f-9f52-f0b27d094219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 793,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd50f7c-1d1a-4dad-aab3-395619e1029a",
        "cursor": {
          "ref": "b61b6be7-944d-4688-94f1-d1124dd3d4aa",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "85a70d06-a10d-4bc7-90c0-a557ce87b30b"
        },
        "item": {
          "id": "ddd50f7c-1d1a-4dad-aab3-395619e1029a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6be1ea53-ab08-44a1-a4e9-b63ba9488332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43550f0c-3cb7-40a1-8227-376f505f8229",
        "cursor": {
          "ref": "e846d07b-05cc-4238-aea9-0d0f4f2fdfcc",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "11596488-2ef4-4f6b-aa44-1be4cea90f0d"
        },
        "item": {
          "id": "43550f0c-3cb7-40a1-8227-376f505f8229",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ee4fdd95-d33f-441e-a75e-47834e062e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39a40d2-7970-4551-adc6-d87b2ad8debe",
        "cursor": {
          "ref": "8b593661-1756-475f-a311-2ad520b5a920",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "69d37803-9f8a-4d2d-a10d-cfd7ba13473b"
        },
        "item": {
          "id": "d39a40d2-7970-4551-adc6-d87b2ad8debe",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ceda9fda-eb37-401b-9a79-0f3dc881ce10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68b2fd5-b1a4-47b4-92be-abc9dc652863",
        "cursor": {
          "ref": "088e90d4-d0d8-4720-a347-d1ad70b2d1da",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4630d20c-f0c8-4673-9ce4-83eb3bc76c84"
        },
        "item": {
          "id": "f68b2fd5-b1a4-47b4-92be-abc9dc652863",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "64ac9a87-d320-4f23-a85d-7b430d0793bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d9da0b-d937-42c9-9659-699452ee424b",
        "cursor": {
          "ref": "a8f76198-f7c1-45c5-9cb1-ff6dc8259b1f",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fe4e32f5-4f20-41d3-848e-4841ece8c42c"
        },
        "item": {
          "id": "47d9da0b-d937-42c9-9659-699452ee424b",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ea55d8ec-20b0-470d-b018-a4646ea1f885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220b46a4-0bdc-4e7e-b72d-df8fe98ce7df",
        "cursor": {
          "ref": "043d5217-c3ff-431b-9004-188452aa3414",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "65657289-9fd7-4bba-9212-be5abf2ceada"
        },
        "item": {
          "id": "220b46a4-0bdc-4e7e-b72d-df8fe98ce7df",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f35c0f0d-325f-41e7-bb4f-981c8fd641d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab44274-6d16-425c-9826-3a6f9dfe327b",
        "cursor": {
          "ref": "195207b3-4831-4c52-bb99-06e95d88a471",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6b80864e-837a-4ea6-b976-4a46036cb861"
        },
        "item": {
          "id": "eab44274-6d16-425c-9826-3a6f9dfe327b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "53a25c4b-a523-4e2e-b225-4122a15370b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 747,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add9a198-275a-4bd3-bdeb-e1da6a74507c",
        "cursor": {
          "ref": "bb0a6e92-51bd-4a03-b02d-23ec03833d8c",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f48d0406-2f6e-457f-9ffb-3df4dcb5a4d8"
        },
        "item": {
          "id": "add9a198-275a-4bd3-bdeb-e1da6a74507c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e5cf4393-4e91-47d1-80b5-9192b3f29b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fadec2-198d-48e7-90b7-8c39bb348ca4",
        "cursor": {
          "ref": "5c11f25c-7ef1-4e40-9219-6643cf7bc3d9",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b7c2c101-9c5f-4bda-988f-c5fa56fc2488"
        },
        "item": {
          "id": "c7fadec2-198d-48e7-90b7-8c39bb348ca4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "cd5ed31d-b293-4d1f-b906-41f49d1f0e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb18e70-8463-401d-8e89-2a41b1e94ad8",
        "cursor": {
          "ref": "73ca4746-264b-484e-8f11-9371e73051ca",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1ae10402-f310-449d-a692-3ff1d320a574"
        },
        "item": {
          "id": "afb18e70-8463-401d-8e89-2a41b1e94ad8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "156ea492-1506-4555-9b46-45c0c49da1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 745,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30bed24-feab-4f04-97ac-c79ec6e50cb2",
        "cursor": {
          "ref": "d782f60d-75e2-4824-8459-db44f5223a48",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6355a87d-36d6-4e0e-8c1c-fb33f470b901"
        },
        "item": {
          "id": "b30bed24-feab-4f04-97ac-c79ec6e50cb2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "10748176-3d39-46b4-b4e4-928bfbffc82e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d3e27d-7fa9-4acf-8340-d2cac58826e1",
        "cursor": {
          "ref": "cc0c985e-f53b-4a96-8738-40240d4ab1ea",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3564506f-e719-4269-9293-380ef139b9ac"
        },
        "item": {
          "id": "31d3e27d-7fa9-4acf-8340-d2cac58826e1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "86b1fb1b-8d6f-42bc-9512-9b0ffd474e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 732,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e96bd3-b701-4af6-8b1d-ba30ef18b180",
        "cursor": {
          "ref": "abb1fc00-3f7a-4f78-ae42-59f1508fe2a4",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f95451a5-59f0-41e9-966c-5ecc07f64627"
        },
        "item": {
          "id": "a9e96bd3-b701-4af6-8b1d-ba30ef18b180",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a5ec2979-b7ea-404c-968c-2b9f6d5d95aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f674164-3fe0-4fca-a1d4-c1bc2211c00d",
        "cursor": {
          "ref": "d9f66bbe-63b9-4b28-9f1e-3ceab370828b",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "da92868b-75ad-4197-bddb-241f7f6d3a35"
        },
        "item": {
          "id": "1f674164-3fe0-4fca-a1d4-c1bc2211c00d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a61529d9-7c13-486a-9a63-4c53111bbb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ae1560-54db-40be-a452-17edc077c4c9",
        "cursor": {
          "ref": "bc392d86-33b7-482b-8778-47d6f15da88a",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5290e571-66a4-4f3c-8610-588e7edc3b42"
        },
        "item": {
          "id": "e0ae1560-54db-40be-a452-17edc077c4c9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "88578382-4dff-48ad-9ca0-6196bb53e0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c429b2-f671-4172-a6b9-ca9ad3bcb3da",
        "cursor": {
          "ref": "cb673f38-dc9b-4288-8bf4-2730e827892e",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a73b8ae3-b102-4864-87e3-33dfb5cab0fb"
        },
        "item": {
          "id": "a3c429b2-f671-4172-a6b9-ca9ad3bcb3da",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e4ef361a-24b1-4f7e-b633-487f00a89f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3f2d27-f6a1-42fb-a83e-3e81a26c31b7",
        "cursor": {
          "ref": "87af34dc-9c74-4bcc-a599-edb65637245b",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "66b99aa3-39c9-4c1a-bd5a-5b8c7c1a6649"
        },
        "item": {
          "id": "1e3f2d27-f6a1-42fb-a83e-3e81a26c31b7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f75ddbd2-1e2d-4ca6-b0e2-1c526c5ae1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e523e2-d99d-46ae-898f-aa23d39c2d45",
        "cursor": {
          "ref": "2245bf70-ff71-49f5-b02b-dd5e0ed7c859",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6b0e8304-3742-462e-ae80-32142eb76f84"
        },
        "item": {
          "id": "01e523e2-d99d-46ae-898f-aa23d39c2d45",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e5b3d504-f253-4612-a4a5-6afb9081d955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcb5749-f05a-415c-8ece-61cbf73ae258",
        "cursor": {
          "ref": "0893651a-7d83-4f8d-8243-67e84d9207b0",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a0cb326e-ef5a-40f9-a4ff-ff0defbc8b7d"
        },
        "item": {
          "id": "fdcb5749-f05a-415c-8ece-61cbf73ae258",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d1eebf9b-165d-4c79-afd0-2af4d1361dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 726,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a06b5a-0203-4ac3-b351-6d6b61400330",
        "cursor": {
          "ref": "28de2461-fe83-44db-9afc-70ecca1833db",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "60a914e3-54b3-43e3-9529-62fd630c6e34"
        },
        "item": {
          "id": "66a06b5a-0203-4ac3-b351-6d6b61400330",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8aa76fbf-880a-454c-85ce-611e87d40ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d1c054-e1cf-4b06-aae0-740c1e00a814",
        "cursor": {
          "ref": "85bab15d-b728-44a5-b97a-08493ebdc903",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "50b643ea-771e-4378-a028-c9ea43865326"
        },
        "item": {
          "id": "00d1c054-e1cf-4b06-aae0-740c1e00a814",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9986e72e-eee1-493f-91e3-97b5e417340d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 740,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9567c4f-8c15-4282-a541-d54e1c5a0574",
        "cursor": {
          "ref": "88829aba-3a30-412f-ae83-b273d3aabb69",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "976af7a4-2476-49a8-81da-2d3fc0fc91cc"
        },
        "item": {
          "id": "e9567c4f-8c15-4282-a541-d54e1c5a0574",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bd24317e-9329-485f-bd0a-d06cfcca859a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ab0157-215f-4e70-8153-a7fd2706703a",
        "cursor": {
          "ref": "2041010d-801e-44cb-b2bb-3583c7c614f3",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fb92a370-c185-4a2c-ab44-af2a0a2c1c5e"
        },
        "item": {
          "id": "56ab0157-215f-4e70-8153-a7fd2706703a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a81a70d2-318b-45dd-bf49-fb7ef3696074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab4f8cb-bc7d-4455-8af8-76cee07f4c14",
        "cursor": {
          "ref": "16b537a8-ea7f-44f5-8543-a586a7ed7471",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8e5533c8-9e11-462a-9632-fa7f4bb3c7e8"
        },
        "item": {
          "id": "3ab4f8cb-bc7d-4455-8af8-76cee07f4c14",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a67fff74-2574-4a7b-bac6-7d3ac95112bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef2649f-4b2c-4cdc-be9a-b87b08b43a1f",
        "cursor": {
          "ref": "3649e923-43fe-4001-9600-8aa903c8844f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e853b109-a0e9-4077-8394-a9f829d3040e"
        },
        "item": {
          "id": "7ef2649f-4b2c-4cdc-be9a-b87b08b43a1f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "031f155f-3de2-4791-a237-549f516fa453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750f2cbd-ae49-4761-8353-056f42fa8f35",
        "cursor": {
          "ref": "983878ca-54a3-4629-ad0d-de5dec1b2be7",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5c110894-3a4f-42fb-9355-9a1c4923528d"
        },
        "item": {
          "id": "750f2cbd-ae49-4761-8353-056f42fa8f35",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a7a1da2b-cf69-443e-9697-827dbc0ca8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1131,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474a969b-9f10-4fbb-8560-ec1fe32eb8a7",
        "cursor": {
          "ref": "e1726568-8be9-42bc-afb7-f2e61b91baf4",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ebeabfa4-8eb1-4490-b9d2-9c13cdbeb263"
        },
        "item": {
          "id": "474a969b-9f10-4fbb-8560-ec1fe32eb8a7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "696e7a42-f643-4ef6-9832-a0cfc213ceaf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394de719-4fc1-43e0-9840-386d010ddb0b",
        "cursor": {
          "ref": "534271ab-f968-4251-b91d-114f36a57daf",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2444a0de-a695-4396-aee4-c7e989d20c58"
        },
        "item": {
          "id": "394de719-4fc1-43e0-9840-386d010ddb0b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "d23919c1-af84-45a9-b6b9-bb6e52ea024f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 712,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143eb65d-5022-4ea1-a208-a297a9e20d1f",
        "cursor": {
          "ref": "2e79087e-db60-4a46-8ad8-3c68dba67edf",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e887ff01-16a9-49cc-b6b9-d30dff222961"
        },
        "item": {
          "id": "143eb65d-5022-4ea1-a208-a297a9e20d1f",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9b5eb46f-82a7-48c4-99f0-3c896b21c03b",
          "status": "Created",
          "code": 201,
          "responseTime": 8176,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b1dd81-eafd-4f06-9818-c22c31375e50",
        "cursor": {
          "ref": "53a71b96-a23d-4ae3-86b8-6af139c13a9c",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9845a5a0-2929-4e2d-8345-00323264dcaf"
        },
        "item": {
          "id": "10b1dd81-eafd-4f06-9818-c22c31375e50",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "24bd596e-3edc-42c9-81bb-8b7e45bb06ac",
          "status": "Created",
          "code": 201,
          "responseTime": 9853,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9615f6a5-8e4d-4f9f-9ed5-6ac47e476a3b",
        "cursor": {
          "ref": "56d4a5c5-db5f-4f49-a49c-c33c2b0470d2",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a0463e8e-82cd-48bb-bbe2-85b95103ef8d"
        },
        "item": {
          "id": "9615f6a5-8e4d-4f9f-9ed5-6ac47e476a3b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "491aafb0-2842-4381-96f6-7de330e761c4",
          "status": "Created",
          "code": 201,
          "responseTime": 11359,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "424cde33-d71f-4fb4-b647-99b1b47dbf38",
        "cursor": {
          "ref": "c50881fc-aea8-45f5-8bd8-c04fb0f7ed51",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c66d1eff-a0be-4490-9592-423dfb4e7a2f"
        },
        "item": {
          "id": "424cde33-d71f-4fb4-b647-99b1b47dbf38",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8c9f3942-f264-4218-bd40-dab126ff34c2",
          "status": "Created",
          "code": 201,
          "responseTime": 5782,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "504cfdac-0bdb-45ad-89bc-b104044567ca",
        "cursor": {
          "ref": "be66a00e-8810-4abc-a853-57685cbca503",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "14e7a03c-55ad-444f-a1cf-75ed8d995950"
        },
        "item": {
          "id": "504cfdac-0bdb-45ad-89bc-b104044567ca",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "28d4d263-2005-448a-a0d6-0f033eb79adf",
          "status": "Created",
          "code": 201,
          "responseTime": 6014,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "06869a57-3a4f-4cf5-aa6b-beb44c7423fd",
        "cursor": {
          "ref": "e74e25dc-7acc-409e-a2bb-97747916b681",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "babfa869-2d17-431d-b3fb-7bd646b62e5c"
        },
        "item": {
          "id": "06869a57-3a4f-4cf5-aa6b-beb44c7423fd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "503b2b7c-b2d0-49e4-a94a-06acc2df387d",
          "status": "Created",
          "code": 201,
          "responseTime": 7528,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be06d553-d2cc-40ac-900c-df3fd9efd506",
        "cursor": {
          "ref": "eff56da8-b3d3-4f9b-83ae-ad00d868d9e9",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1a01c0ab-81e6-4d4e-ac7c-8f7f76b477b5"
        },
        "item": {
          "id": "be06d553-d2cc-40ac-900c-df3fd9efd506",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "042cccae-fd1a-4f8d-94a3-da2715cecc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be06d553-d2cc-40ac-900c-df3fd9efd506",
        "cursor": {
          "ref": "eff56da8-b3d3-4f9b-83ae-ad00d868d9e9",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1a01c0ab-81e6-4d4e-ac7c-8f7f76b477b5"
        },
        "item": {
          "id": "be06d553-d2cc-40ac-900c-df3fd9efd506",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "042cccae-fd1a-4f8d-94a3-da2715cecc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 736,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2b0d5b-8a70-41f2-869f-16b8b32f9ced",
        "cursor": {
          "ref": "4db40703-a691-4398-8f81-684b2aad2d80",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d1212253-0ce6-4d94-908e-93685a810cb8"
        },
        "item": {
          "id": "da2b0d5b-8a70-41f2-869f-16b8b32f9ced",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2eb1dfcc-7a42-4a23-9215-ada82caad574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b05ca2-fa20-4f6c-af69-b316824239eb",
        "cursor": {
          "ref": "d4cd3fcb-2958-4451-a091-3a205c40b7dd",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "100c1b2c-ccce-45ce-b665-80e9e4947a93"
        },
        "item": {
          "id": "e0b05ca2-fa20-4f6c-af69-b316824239eb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "456e7c65-6d98-4a29-951e-e0665c5f67e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36736343-cd6c-45c2-90a8-797ddf439f69",
        "cursor": {
          "ref": "60358628-c7bc-4a80-aa9f-4c695689cb73",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "004fdd17-01c7-45d8-b11a-d4a6cb262020"
        },
        "item": {
          "id": "36736343-cd6c-45c2-90a8-797ddf439f69",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1e8721b7-0532-46fe-8d90-643416089edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1161,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd23e9a6-e03b-4ca8-8be4-5120873e6a72",
        "cursor": {
          "ref": "a98a1ddf-b3b1-4612-8226-09fcc3179622",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b2aa6920-6297-43f2-ad55-70e5424f9f77"
        },
        "item": {
          "id": "fd23e9a6-e03b-4ca8-8be4-5120873e6a72",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9dc533af-dad8-499a-8d49-a65dabab751b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d208fa-8ffc-4b5c-adca-8c80fd02ee9d",
        "cursor": {
          "ref": "219cb7ea-3199-4562-8518-ebc811542585",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "102ec16e-8ccc-41e6-9db4-383c8cd6e975"
        },
        "item": {
          "id": "73d208fa-8ffc-4b5c-adca-8c80fd02ee9d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c0f099ea-7cf3-4b05-b121-b5d0dd259c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57554c5d-6e75-4064-822a-80c904793346",
        "cursor": {
          "ref": "d17f91b8-e1fa-471d-87e7-2ea002ba9042",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1a344bab-0709-465c-aabd-c8180247db24"
        },
        "item": {
          "id": "57554c5d-6e75-4064-822a-80c904793346",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "71ae03f4-5d2e-4d36-b6db-fec08841c7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc82218c-93bd-4a36-8af8-325786a322b2",
        "cursor": {
          "ref": "972e7474-31b0-4bf0-8c0a-e546bbd1b9f7",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "910edd56-c88b-44a9-80be-cee6384c97f2"
        },
        "item": {
          "id": "fc82218c-93bd-4a36-8af8-325786a322b2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4d5677fa-5d7a-439b-8269-ffc7d2eeb761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 748,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ce0a5c-9b9b-4539-b9b9-a7b6f27df619",
        "cursor": {
          "ref": "ecab3d39-2dee-4f6a-a585-faeaba0db797",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1d4dba74-e87c-47de-8a24-8ad675d5a81a"
        },
        "item": {
          "id": "94ce0a5c-9b9b-4539-b9b9-a7b6f27df619",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4d05d84e-d276-4b0c-9311-f0ae8d5d6096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dbcbd0-df47-48bb-9a76-ba624e5915f4",
        "cursor": {
          "ref": "4b227974-ff88-4fa2-b8a7-077e93069947",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8e46c85b-3d60-4cc8-b568-8ea1b1f6d970"
        },
        "item": {
          "id": "49dbcbd0-df47-48bb-9a76-ba624e5915f4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f5d524b6-ef4b-4754-9e8c-ef1346621631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188d6a4f-7eba-46fe-8d92-3e54c03067fa",
        "cursor": {
          "ref": "f05c9a0b-a698-4fcc-9b4f-b26eda05de84",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7be645d4-c3b3-438a-a783-18eb71fe6f0b"
        },
        "item": {
          "id": "188d6a4f-7eba-46fe-8d92-3e54c03067fa",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "67cdfcf4-8a9e-4fac-9a8e-9638c12e5536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7e467b-d48b-4578-a4b2-88bfd37a7908",
        "cursor": {
          "ref": "43b3bc4d-92a7-45b7-abe0-d6992aa5b306",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cb639e69-eaf4-4a94-9f3c-2d326d296247"
        },
        "item": {
          "id": "3b7e467b-d48b-4578-a4b2-88bfd37a7908",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8a04165e-8561-4b1b-b0ab-511dcad39944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adeeec9d-c6ff-4c78-aa7a-b0324ead4467",
        "cursor": {
          "ref": "98ffab42-ed61-4b93-8cb6-d75e66974b29",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ba7eadc6-f80a-4a5c-81ba-343997b69cfb"
        },
        "item": {
          "id": "adeeec9d-c6ff-4c78-aa7a-b0324ead4467",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "09221ab5-ed22-4cad-863b-f2c4923035eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50582592-b624-4179-97bf-85244ea59577",
        "cursor": {
          "ref": "09dc85e7-01b5-44eb-9151-b26dab904e24",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "04f0dc3b-6aec-490f-8f2b-46173ed40b53"
        },
        "item": {
          "id": "50582592-b624-4179-97bf-85244ea59577",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4fd895d5-6fc8-4e92-af73-07b98f2ed492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301cc070-ad99-4064-ac51-6f21cc9ff4b0",
        "cursor": {
          "ref": "43cd68cc-2e59-4c01-b4da-57cce632acda",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e6aab5bf-31c0-499a-be0a-9851fae14870"
        },
        "item": {
          "id": "301cc070-ad99-4064-ac51-6f21cc9ff4b0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "30a4f019-abe6-49dc-91f0-e168ca70f92c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141565a5-ce14-41d3-9619-ac40f892174d",
        "cursor": {
          "ref": "3950e8b4-2fe7-4b2c-aba5-67c47d31eb70",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8eb4a1ea-0a66-46b1-9158-94281229d96b"
        },
        "item": {
          "id": "141565a5-ce14-41d3-9619-ac40f892174d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0eeff8ec-6ebd-4257-98e9-b0931c86f724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 731,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f19d9b3-ac9d-4f88-b50f-2b500b5f74b0",
        "cursor": {
          "ref": "8131bea4-413c-468b-8357-088d960083b6",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ab92b0fd-1f04-43ef-becf-d52a0e687579"
        },
        "item": {
          "id": "0f19d9b3-ac9d-4f88-b50f-2b500b5f74b0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c23acfcb-69fd-46cd-90a4-4a10e82626be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 714,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b7901b-d2c7-485e-9975-0ce50e5c4cc7",
        "cursor": {
          "ref": "5e35c395-06fb-4d27-af34-9e629811b257",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "99ccf0ec-46ff-4366-b687-d6a755a60efc"
        },
        "item": {
          "id": "48b7901b-d2c7-485e-9975-0ce50e5c4cc7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "24b0f13d-7531-4da4-bd1f-8472bdd8b624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff73fb02-cc0d-4f00-a6e2-e098b6de159a",
        "cursor": {
          "ref": "59787a8e-6f7a-4a7a-b408-71dbe1ecf104",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f4d54fb4-fe7f-4ce5-84bd-25e72de89186"
        },
        "item": {
          "id": "ff73fb02-cc0d-4f00-a6e2-e098b6de159a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ae79ce9-6216-42da-a531-185ac66067c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585edd5d-80d3-420a-abc7-44d418d3ad95",
        "cursor": {
          "ref": "d6541b85-3a42-477b-a0b1-ffef674b7554",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "358e6d88-9c39-4750-a4e1-6665edd29a11"
        },
        "item": {
          "id": "585edd5d-80d3-420a-abc7-44d418d3ad95",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "952a3df3-e60c-4daf-8a81-d63977118e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 735,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da919592-ea4f-4bac-89b2-13855bb0e99a",
        "cursor": {
          "ref": "76b957e7-9b19-4007-a9e7-f619a3fd8e04",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a9bbd0f0-7661-4dee-b0eb-18e501c0e22f"
        },
        "item": {
          "id": "da919592-ea4f-4bac-89b2-13855bb0e99a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9d83458e-0697-4e4a-a5c7-f6a72787bace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0292b81e-1cff-4c54-ad9e-eee44e4ecd6e",
        "cursor": {
          "ref": "c2bf003a-277a-4afc-b549-df1e90d4e916",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "06aad07e-15fb-4970-b842-c089722d319d"
        },
        "item": {
          "id": "0292b81e-1cff-4c54-ad9e-eee44e4ecd6e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b6c463df-8b3e-46fe-99c7-87d8b8b990c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a954e8a6-c5a1-4af6-829b-f95f40aca7a9",
        "cursor": {
          "ref": "d4667ca5-9754-4822-b003-e9cb00dfee61",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "35d724a9-30d4-4d5c-a9fc-c2988778a833"
        },
        "item": {
          "id": "a954e8a6-c5a1-4af6-829b-f95f40aca7a9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ab282a6c-c05f-410d-a7a6-855617b77255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3cffe2-5263-4e81-b62a-777a694ffecc",
        "cursor": {
          "ref": "701e2b9d-c720-4cf6-a9a4-1cc8e69114c5",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cc1ca47b-a323-4169-9fc1-d9273a731220"
        },
        "item": {
          "id": "aa3cffe2-5263-4e81-b62a-777a694ffecc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f71750fe-0ad4-49c0-8dda-8ea5a4ae0384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cc9b59-63eb-4d14-b982-3dde33febb44",
        "cursor": {
          "ref": "65431983-99b7-4a8b-8256-ed943e349ca0",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "71b9b546-1796-4877-9b6c-e415c23b6d2f"
        },
        "item": {
          "id": "83cc9b59-63eb-4d14-b982-3dde33febb44",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5da1888a-dd49-4d21-b49b-222840935bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8386e949-704f-40e2-a1b5-3ae99b93079f",
        "cursor": {
          "ref": "035bba57-aa7b-44ee-ae61-1fbc50523d0a",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e5639e9f-7d08-4d02-aec2-db73c736f1d4"
        },
        "item": {
          "id": "8386e949-704f-40e2-a1b5-3ae99b93079f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "83406371-2a87-40d9-9245-b36824e3d2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5cacc4-d685-4ace-b62b-7702625292cf",
        "cursor": {
          "ref": "5843cb67-08cc-4342-b375-3778fa05f4c9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "167186fe-5f18-45c2-8cc2-dd92ddab9744"
        },
        "item": {
          "id": "cf5cacc4-d685-4ace-b62b-7702625292cf",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f82cd489-baa8-4556-b9d5-fafa08434354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b403eb-04e6-4c86-a634-116d433880af",
        "cursor": {
          "ref": "3617eea7-2ab8-4143-9e82-0f8d45eaf901",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fbc1389e-4d48-4b61-8943-d0cb6cd39053"
        },
        "item": {
          "id": "e0b403eb-04e6-4c86-a634-116d433880af",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5e16c390-b711-405f-b4f1-c8bfd7795310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 744,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425426dd-4896-461e-a420-03d012ec361d",
        "cursor": {
          "ref": "870bc485-ffbf-4bf4-9d1e-7573d8b1885c",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c722e819-79b3-499e-8f03-13c911da70ff"
        },
        "item": {
          "id": "425426dd-4896-461e-a420-03d012ec361d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b8bb29d3-46a1-4719-a713-a123e73f9824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22451a3f-537b-492d-a44e-9a414bce9226",
        "cursor": {
          "ref": "0d636880-ac76-4743-9037-03698b8123b4",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e1ebe26f-60d9-4803-a82a-b65784e544c2"
        },
        "item": {
          "id": "22451a3f-537b-492d-a44e-9a414bce9226",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "72fc0160-d576-4402-9c23-7fbc7933e108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1148,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fff14b0-732e-45f4-8f67-f2895cdf27a7",
        "cursor": {
          "ref": "29e4bb71-bd83-4939-848b-e3984f0853e8",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "71a6ef92-3a42-403a-910f-3866d692f732"
        },
        "item": {
          "id": "2fff14b0-732e-45f4-8f67-f2895cdf27a7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "20d8f3a0-67bc-4982-91d4-eac49ed169d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1202,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426a8592-014b-4cc9-812e-efb96a92b641",
        "cursor": {
          "ref": "e6955b74-5639-44fd-8b52-8a9d8198f4c3",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c5672a75-2f5a-4517-87b8-1ea8b11110a5"
        },
        "item": {
          "id": "426a8592-014b-4cc9-812e-efb96a92b641",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3970f50e-6b12-4dab-b70e-ba5f34b1a126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1063,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb3c4d1-076d-4455-a873-251f0fed7a89",
        "cursor": {
          "ref": "b22a93be-702b-445c-8398-b8c04bdc6f55",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "062c4956-d4b2-4c0a-b58b-24302819b481"
        },
        "item": {
          "id": "8cb3c4d1-076d-4455-a873-251f0fed7a89",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aa192403-c9cb-4d6a-9e59-bdb6f1e212d8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30f0897-6fd1-4098-b04e-86d61f969915",
        "cursor": {
          "ref": "c2809047-6788-4671-9cd2-25dce12a4ef0",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5000d405-da46-473c-ac46-6fcc61f479d2"
        },
        "item": {
          "id": "e30f0897-6fd1-4098-b04e-86d61f969915",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "12be838c-c50c-4501-85f8-463b483c4af1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1351,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bdf65c-fda0-4657-a70d-923c09b6d957",
        "cursor": {
          "ref": "cd6ef397-060f-43f6-a84d-f7fb3cc30ab8",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6c9fb552-b992-4147-bedf-55c1c4708c01"
        },
        "item": {
          "id": "61bdf65c-fda0-4657-a70d-923c09b6d957",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5696f426-d4b6-466e-845a-39c57bbf39f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bdf65c-fda0-4657-a70d-923c09b6d957",
        "cursor": {
          "ref": "cd6ef397-060f-43f6-a84d-f7fb3cc30ab8",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6c9fb552-b992-4147-bedf-55c1c4708c01"
        },
        "item": {
          "id": "61bdf65c-fda0-4657-a70d-923c09b6d957",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5696f426-d4b6-466e-845a-39c57bbf39f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074fbe3c-308f-4ceb-ac2c-cd430b233ba5",
        "cursor": {
          "ref": "72a8f657-cabb-43b2-bb26-a066c572f804",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7cfe0ea7-daef-420d-9900-8c63e1c95911"
        },
        "item": {
          "id": "074fbe3c-308f-4ceb-ac2c-cd430b233ba5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "738e9aef-e560-4406-9c9e-d4cf838c16f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e6435c-1b22-4eb4-b63a-9b687a20a49a",
        "cursor": {
          "ref": "3ce72ba8-07be-415a-9974-d861edd72af1",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ede2c893-62d2-41ea-84ff-53e8df206cf8"
        },
        "item": {
          "id": "10e6435c-1b22-4eb4-b63a-9b687a20a49a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "43d653f6-563d-4ff6-b7cb-aa9f519f8f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc80b765-fc86-4077-9e18-82175208d171",
        "cursor": {
          "ref": "37279d18-5f62-48dc-9ca4-0bf110e46cff",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a0e475b1-5ed0-42b0-bc65-5a042d0098ff"
        },
        "item": {
          "id": "fc80b765-fc86-4077-9e18-82175208d171",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "503bbaca-ac87-4e13-9d4c-3868960331b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061cc80a-079a-48a9-a403-d2f0dd9896dc",
        "cursor": {
          "ref": "9a58e797-6833-4794-a387-4a861b777255",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d72081e9-f3f7-4fd1-9ebf-3d7c7122b0e6"
        },
        "item": {
          "id": "061cc80a-079a-48a9-a403-d2f0dd9896dc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5ee4754a-a34f-4b55-85ca-c6963e3c2dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0342d5-458e-4e74-86ae-ec3320e0fd0d",
        "cursor": {
          "ref": "90a05337-a66b-4bce-8a84-7ad5e9e00b57",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "023d9914-6a51-4c25-9bcc-4a467b460c4e"
        },
        "item": {
          "id": "fd0342d5-458e-4e74-86ae-ec3320e0fd0d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3a2bdb05-3e8e-405a-bd25-e099e393a776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806843ca-2d20-4775-9819-393ac2d4ff05",
        "cursor": {
          "ref": "a2f5bef4-4211-434b-a790-13c603648900",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c44a6cb6-fdf4-41d2-a02a-1f6552bdeae1"
        },
        "item": {
          "id": "806843ca-2d20-4775-9819-393ac2d4ff05",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fa1862d9-0b4c-4974-b024-ea6471f5df94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0553732c-5b3f-4d2f-b925-58d297915112",
        "cursor": {
          "ref": "706c68c9-3fd1-453f-8dd6-3551ebfdf132",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "809d54bb-c407-4eb6-b845-4faffa9dc510"
        },
        "item": {
          "id": "0553732c-5b3f-4d2f-b925-58d297915112",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ec40b3bd-25c1-4a27-84b1-bcdf82d5e286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1130,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaf6480-0015-4f96-bea1-6b3a224c9e21",
        "cursor": {
          "ref": "79ab6b44-5ef0-46a5-b1a0-99e81ca5dcdb",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9591876e-22e0-4392-bdff-43f1452a67d4"
        },
        "item": {
          "id": "9aaf6480-0015-4f96-bea1-6b3a224c9e21",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "31e1e629-c8d7-4914-95ac-3abfc20a3ac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1120,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd55bf1-2622-4eee-aef8-4b272030d794",
        "cursor": {
          "ref": "7d922c9c-7a33-4265-a8c9-8652d67e7ab2",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "313e4f8c-ab91-4290-8940-cd0ee0210e5f"
        },
        "item": {
          "id": "3dd55bf1-2622-4eee-aef8-4b272030d794",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e9165e43-8b2d-4cc8-b696-ec7223223b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4cf6ef-9f75-424b-854f-ea5a344b4bb8",
        "cursor": {
          "ref": "d520abb6-68a2-413a-8858-9b99ab012d1c",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6a62300a-c75a-41ce-a0d6-63e0b583ec14"
        },
        "item": {
          "id": "8b4cf6ef-9f75-424b-854f-ea5a344b4bb8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "cac518ce-f3f0-49c6-b002-f7245396af2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2fb4c5d-604d-47d4-8282-e1c16caa1261",
        "cursor": {
          "ref": "cfe05759-c853-4557-8b77-ef84b9ef94bb",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5c3008ee-0ee6-4222-ae2f-ebc9a6fa71fc"
        },
        "item": {
          "id": "f2fb4c5d-604d-47d4-8282-e1c16caa1261",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7b06821b-fdce-4c00-9d21-9082f7bbeccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1133,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74582a17-9b3a-487e-9365-50189583ee2c",
        "cursor": {
          "ref": "89af28f8-5740-4e12-ac62-18c47a7d2e3d",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "aed7b53a-09c7-4faa-9e00-4f5e97f7709b"
        },
        "item": {
          "id": "74582a17-9b3a-487e-9365-50189583ee2c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "25b3571a-6b3b-4a98-9ad1-48f3e9c4d71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821bc579-176f-4ff2-b6e5-2dec0196c403",
        "cursor": {
          "ref": "91895cbb-03fa-4132-8815-15de9074525b",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "814ff524-196c-44d0-898f-bec2e8b5f98a"
        },
        "item": {
          "id": "821bc579-176f-4ff2-b6e5-2dec0196c403",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2e77eaf2-bd1c-449d-9b2c-1d5718e382eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a14db3d-2578-457f-9fcf-a1cfa926e81b",
        "cursor": {
          "ref": "7ad43828-67fa-4362-ae8c-83195b507e40",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "74a522a6-f4e9-4e5a-8a0c-6219e16e556e"
        },
        "item": {
          "id": "6a14db3d-2578-457f-9fcf-a1cfa926e81b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8aafafce-5c7f-427e-8856-3c83b8465cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b548d90-e47c-4d3d-ace5-704dd4ba0c49",
        "cursor": {
          "ref": "9b72a882-5324-4f69-b48a-add31c889e35",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9746b446-3e0b-436f-aa04-b275476fc5ca"
        },
        "item": {
          "id": "7b548d90-e47c-4d3d-ace5-704dd4ba0c49",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "984e40c4-e950-43f9-87fd-33eff8ed52b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fac6f9a-13ef-4e61-93db-a77f6d0eb7d4",
        "cursor": {
          "ref": "c2b1cf9f-49a3-4d37-b12d-1d0d636fdc9b",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "288d3a95-0c9d-41e8-bfe5-d2307d084011"
        },
        "item": {
          "id": "6fac6f9a-13ef-4e61-93db-a77f6d0eb7d4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fdb11427-43b3-446c-87a4-14ce45317eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66e3756-b64c-45b1-9d8f-5eaf5db59388",
        "cursor": {
          "ref": "0205f295-956c-442f-a512-fe5a528b8890",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "66104fc0-d615-4cca-becb-dd613967b63f"
        },
        "item": {
          "id": "d66e3756-b64c-45b1-9d8f-5eaf5db59388",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0569f92f-5e2b-408c-b3d3-ded29d9dbf96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a95ce3c-9e70-400e-88fb-d6ef1879a64a",
        "cursor": {
          "ref": "ea225c3f-016e-416f-93ce-7f0bbd07912e",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8067f55d-5386-4b9f-9ac3-97e825b228f0"
        },
        "item": {
          "id": "4a95ce3c-9e70-400e-88fb-d6ef1879a64a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7b5ddb06-e20d-4774-b9b2-a9fc11a9b653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb3bb60-66ae-439f-a229-7b17627b07a6",
        "cursor": {
          "ref": "0a234263-80ef-4375-9b2e-d73a3475ef00",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "58bd8563-65df-453c-bec5-7eb733f31b9e"
        },
        "item": {
          "id": "1bb3bb60-66ae-439f-a229-7b17627b07a6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ea173b48-ab8e-4cf4-bb0b-76dcb158c596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5d17de-a2ec-4bc2-8d47-b423cb519cdc",
        "cursor": {
          "ref": "d1c88b2a-9ea4-417b-a4da-69a449e03da9",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a4856398-a487-45e5-9af8-975d05f85559"
        },
        "item": {
          "id": "db5d17de-a2ec-4bc2-8d47-b423cb519cdc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ba777e7f-e3ea-42e3-af1c-724e46c5e929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2788f7d3-b950-4ea3-94f6-d788b237c5c9",
        "cursor": {
          "ref": "5979fd35-ee56-4158-9cf8-cade12838de7",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4d140a72-713a-4161-9a40-70a480d18d8e"
        },
        "item": {
          "id": "2788f7d3-b950-4ea3-94f6-d788b237c5c9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5cc5253b-eb89-431b-9da8-8d7467711662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7465428d-ab51-4107-acab-ee86b5573bb6",
        "cursor": {
          "ref": "c824e106-2e5c-4f00-96fa-7035e87c5848",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f8ca27ae-d484-4335-80f0-939b8274776b"
        },
        "item": {
          "id": "7465428d-ab51-4107-acab-ee86b5573bb6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0ab23b1c-02d9-47f5-9782-95909e614a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbebea25-ffd9-4107-84e8-a687cedc0668",
        "cursor": {
          "ref": "c6fd03cb-bf93-4d57-8fc9-a16e7b4a29fc",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "54b041de-b702-4c6a-8715-038ef857febc"
        },
        "item": {
          "id": "cbebea25-ffd9-4107-84e8-a687cedc0668",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "855c49a3-414e-4234-950e-e80ead1b6eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11529568-68cb-4a60-812e-744784345211",
        "cursor": {
          "ref": "8c38f762-fd21-4ba7-9583-f68ec54a173b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7c1d8301-e397-43eb-b2ba-97a00b3cbb78"
        },
        "item": {
          "id": "11529568-68cb-4a60-812e-744784345211",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c7daf5c7-5067-4da0-9501-a56fd9baff63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bb5394-5640-4158-85eb-e58898c58b52",
        "cursor": {
          "ref": "df6751d9-887b-4da8-a319-6ddebf24df5b",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "20f8c031-002e-4aa5-966a-e29cdac88fe2"
        },
        "item": {
          "id": "c1bb5394-5640-4158-85eb-e58898c58b52",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9ce7bb70-cb8f-4aaa-9f53-d2acc904fb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57beeb3-3fcb-4401-908d-288479c04d8f",
        "cursor": {
          "ref": "79a30d1e-1421-4982-80f6-15dcba537152",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9a768ecd-e79f-41ad-a079-f941b7eef650"
        },
        "item": {
          "id": "b57beeb3-3fcb-4401-908d-288479c04d8f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1cc04b86-51d0-45a6-be91-3c8bb22544ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf84936-115d-401c-98a5-7d410567aa67",
        "cursor": {
          "ref": "4ae2b171-65b4-4c1f-8a1d-0945c65e24a2",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "236fb187-4d66-405c-b31c-0855784b50cf"
        },
        "item": {
          "id": "faf84936-115d-401c-98a5-7d410567aa67",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "64987a1c-6b3e-4d74-a540-e8825358fce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 512,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1678c8-bf95-48fa-9457-2ccf35a6126e",
        "cursor": {
          "ref": "1fa599b7-b4d8-4c24-86ca-6c0c4f36d5c5",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "156ff05f-9bb4-4f6b-8343-a7fcb2a2b121"
        },
        "item": {
          "id": "fc1678c8-bf95-48fa-9457-2ccf35a6126e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b831da84-2396-41b7-af28-fb9722cab257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a4ddfe-bdcc-42cf-acdb-f7f6282c470e",
        "cursor": {
          "ref": "4c480916-76f2-461f-a1ae-416fa22f53e1",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0b52951c-c8d5-4fcc-a3be-92dc2ae36e21"
        },
        "item": {
          "id": "86a4ddfe-bdcc-42cf-acdb-f7f6282c470e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "008114d0-b8b6-4d31-86bf-202088034af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a73106-e990-4917-a6f7-0b3810eb171c",
        "cursor": {
          "ref": "3cad22fc-260e-456f-af7f-d91cbcf30a27",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0b5e85a4-a050-4f28-9e86-af8b9f197ab7"
        },
        "item": {
          "id": "a8a73106-e990-4917-a6f7-0b3810eb171c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "06442584-0ceb-404f-91a7-47289b7358fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a406cd-58e1-464d-9673-a92ccf78e663",
        "cursor": {
          "ref": "9122c3a1-e00c-44c9-8b02-3f6d2d47301b",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "94b5f0e5-fe83-4a3c-a44c-cbd7b192347a"
        },
        "item": {
          "id": "e0a406cd-58e1-464d-9673-a92ccf78e663",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "516c0e29-40da-4a37-a861-9188316c03d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896b590b-a494-49c7-80d8-0125a6faf398",
        "cursor": {
          "ref": "8079bf1c-dee6-47ba-8ba9-3c31e131ea8c",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d7c4d8ea-9ea2-47fd-8a9a-e598280e9dc2"
        },
        "item": {
          "id": "896b590b-a494-49c7-80d8-0125a6faf398",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "2afcd7d8-2a72-4c5f-b588-267fa9a31c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b193ec9b-571d-41d6-9456-a2659b22d1b3",
        "cursor": {
          "ref": "a023d690-f4f8-4bfa-bcd5-72e21c4f5e39",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "92d17beb-53e4-48c4-986b-4009049e3a03"
        },
        "item": {
          "id": "b193ec9b-571d-41d6-9456-a2659b22d1b3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cb40ab4e-9f19-4afe-8b00-04409acb9fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 734,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c5959a-6442-497a-89a5-4af4541f3f28",
        "cursor": {
          "ref": "e2bd3510-aabc-4260-b4df-e671727d35f1",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "5106e42e-1518-4aaa-b7c6-3fffb0d38fbb"
        },
        "item": {
          "id": "50c5959a-6442-497a-89a5-4af4541f3f28",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cf9b4d36-42ac-4a84-a0a7-1a322f7dc7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b8767a-fbb8-4d78-94db-72f3eb50bf5a",
        "cursor": {
          "ref": "4dde03a2-4ed7-4b0c-9b6f-c7491cf028cc",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8917876b-9c4f-4509-8707-e778691b796b"
        },
        "item": {
          "id": "46b8767a-fbb8-4d78-94db-72f3eb50bf5a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "96017c17-a259-49da-ade9-c24053753319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f3067e-bd45-4c02-80c7-d58c4e1ab8d9",
        "cursor": {
          "ref": "96041520-96d0-4aa3-bcbc-f9915aecd208",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "daa4c4a9-9394-4e96-8a22-0c642b79fab4"
        },
        "item": {
          "id": "08f3067e-bd45-4c02-80c7-d58c4e1ab8d9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "415c6719-2b79-4b89-ae57-253e056a034b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272eaacc-cfc7-48d0-863f-d8dde7256b63",
        "cursor": {
          "ref": "d99f8422-6802-4e6e-b0cf-292b39abae95",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "79b07358-f776-4b6c-afe4-3ce2ec342895"
        },
        "item": {
          "id": "272eaacc-cfc7-48d0-863f-d8dde7256b63",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "be1718a4-0d83-476c-9bd0-115f47fc35f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 822,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7233051-5e58-40d6-804d-cfdbe7407e3c",
        "cursor": {
          "ref": "d57ce872-fc91-4853-917f-fffd42e8cad8",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "388dfa9b-d7a9-4f21-a67d-52e84687a3fb"
        },
        "item": {
          "id": "b7233051-5e58-40d6-804d-cfdbe7407e3c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "aa2cd212-8487-4978-9d52-961782ffa4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 655,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3bd5ac-6384-4137-b0e4-fefe9cdc2029",
        "cursor": {
          "ref": "7864c2e4-c763-480f-a5e8-a54c5a8d2c0c",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c6dce4b8-44eb-4728-9132-d1d4b87bdba9"
        },
        "item": {
          "id": "6a3bd5ac-6384-4137-b0e4-fefe9cdc2029",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "569899dc-62af-47a3-bacb-3313bdea3297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 815,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d290b2d-fe4f-40fe-9707-06858ddfebfe",
        "cursor": {
          "ref": "9a210f74-4283-43d0-bef1-8dd03c0fa333",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "63fa3f6a-0d84-44d1-b53c-365c1859f10b"
        },
        "item": {
          "id": "5d290b2d-fe4f-40fe-9707-06858ddfebfe",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "30cdcabd-0b36-43eb-9667-4e9fa9f5e9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa537306-9d3b-4a81-b20c-a49a33406019",
        "cursor": {
          "ref": "4caddb6a-6fb9-47e4-a4ae-2b6c747befd2",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4b503d8c-53f2-4ec1-87d2-9b678b93679c"
        },
        "item": {
          "id": "fa537306-9d3b-4a81-b20c-a49a33406019",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a0adfc59-5f92-42af-b49b-7eace24b0628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775bcab0-745a-4201-8902-08cae6725756",
        "cursor": {
          "ref": "a087a182-9c80-4a74-921a-9967e46db5ec",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f4f68556-dc57-4839-aaa4-1ba068ada5b4"
        },
        "item": {
          "id": "775bcab0-745a-4201-8902-08cae6725756",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "21015e44-18d9-4ee3-a683-14587056db76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04300e96-c2f9-4e2a-b29e-6d41afe185e8",
        "cursor": {
          "ref": "f4f452c4-e9f6-43fb-839a-1db0ca565d4a",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e41471ed-cf46-4989-b400-8087ff00e0c6"
        },
        "item": {
          "id": "04300e96-c2f9-4e2a-b29e-6d41afe185e8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "56714bec-3153-470a-a87d-f274e514c63c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b3015c-83f9-4983-bf99-126843979e5a",
        "cursor": {
          "ref": "1af9f164-3be0-4106-a71a-9a51eb95cc8f",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "47ef6866-b206-4b7d-aef5-4fa6f20e9ca5"
        },
        "item": {
          "id": "59b3015c-83f9-4983-bf99-126843979e5a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3c7c2b6e-d548-4a3d-87da-b55aa80372b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e344d9b-4f82-47ac-b3f5-27f989d0624f",
        "cursor": {
          "ref": "e996e4c3-aebe-4667-a79d-8ca57389571f",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6613fbd1-b1df-4c30-be28-b54b4630ecdf"
        },
        "item": {
          "id": "8e344d9b-4f82-47ac-b3f5-27f989d0624f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "4952316d-f534-4bae-8761-118210ca78b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 758,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f22b68-175e-4228-a1aa-e8c556e310c7",
        "cursor": {
          "ref": "a05555fc-93a9-4fb5-b039-55d04e73fd06",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "812df6d1-0fa1-4589-9ea2-0e1de6c49c4b"
        },
        "item": {
          "id": "f0f22b68-175e-4228-a1aa-e8c556e310c7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3ba6adc0-3ca9-4cbd-81ad-188b3650af99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a0c071-267a-42ec-b506-ada7ef9e98ad",
        "cursor": {
          "ref": "616fd5c4-3818-4861-8de0-ac7d048bd5b6",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "eb79995f-6f6f-4229-93b2-b3d75bacc888"
        },
        "item": {
          "id": "f7a0c071-267a-42ec-b506-ada7ef9e98ad",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d3ef1078-aa72-45aa-ac06-dc03e6368195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 855,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f8e3cd-3914-4469-a4bc-71fc4aa7a9d3",
        "cursor": {
          "ref": "52db968b-5d02-489c-805f-1aa9f1998cb0",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "62dc69ef-ad59-4053-92f5-5286a579a3d9"
        },
        "item": {
          "id": "c0f8e3cd-3914-4469-a4bc-71fc4aa7a9d3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5383b71e-391c-4fe5-9b7a-26cf601dada7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22aa1182-86c9-41aa-b7e8-2106536de80f",
        "cursor": {
          "ref": "fd51e8d2-a7e6-4c35-8797-dda999461dc7",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ea09a9ab-73f6-46b2-b71a-b175b848d838"
        },
        "item": {
          "id": "22aa1182-86c9-41aa-b7e8-2106536de80f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7e0ec407-c2d7-4d00-864f-f77e9fe7bbdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 771,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9aeadd-e99d-4b06-bc45-b891b7318498",
        "cursor": {
          "ref": "7ca2eae2-49e4-4b09-b67d-2abdae15975d",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "00cfa7a6-d80b-4f4e-905c-f7b9c89295a6"
        },
        "item": {
          "id": "8f9aeadd-e99d-4b06-bc45-b891b7318498",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "817804df-6ddd-4669-a413-9a0b994c29f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5680cf78-2448-444c-a2cd-9af825a6e721",
        "cursor": {
          "ref": "74081700-c785-4593-b30a-80997a7f6af5",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1f73406e-3d97-4cf2-98c4-4deaa3bdd9da"
        },
        "item": {
          "id": "5680cf78-2448-444c-a2cd-9af825a6e721",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "80056fb0-7c52-4760-bf89-033748939045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e3b6d5-7fe1-4454-884e-b42b33430def",
        "cursor": {
          "ref": "17825b8b-e2b4-464e-9f9b-825d453fb56b",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e153e948-2213-4fa2-9450-5c662cc3b368"
        },
        "item": {
          "id": "d7e3b6d5-7fe1-4454-884e-b42b33430def",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "2bd2c92d-84d3-47b6-973e-93c7e5daa2cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 729,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717ffac2-f4c3-4686-9422-680185f9eb84",
        "cursor": {
          "ref": "bd12db88-8b00-4821-b1e3-77958eeb437a",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "36f17116-4ecb-44a1-bdae-0d63b28eac3b"
        },
        "item": {
          "id": "717ffac2-f4c3-4686-9422-680185f9eb84",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "175cdf2c-ae91-4218-9488-f6f5fca39dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3fe1b0-6d49-4478-aba5-070c7a4225ad",
        "cursor": {
          "ref": "3256f9a1-51ab-4615-866a-7f28844ea94b",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ad046000-9f96-4ff8-a8fe-9284cdd43400"
        },
        "item": {
          "id": "5e3fe1b0-6d49-4478-aba5-070c7a4225ad",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2632f439-f3f1-4477-9f84-b037343733be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 707,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da68866-d685-461e-a0b9-a9137db73c42",
        "cursor": {
          "ref": "536b6f27-ec14-46c6-b047-e064f56a6e59",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "de341f90-af52-4056-82b4-c59c319530e2"
        },
        "item": {
          "id": "1da68866-d685-461e-a0b9-a9137db73c42",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3ddfacda-9c01-48e9-92ce-825d23625e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 708,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b03c18-febf-479c-a41e-089c5b3507e6",
        "cursor": {
          "ref": "8f066d01-5f65-49bc-96d5-9689de5a93f5",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4df582d3-d92a-4ba2-92ac-64a35ee5cda3"
        },
        "item": {
          "id": "e1b03c18-febf-479c-a41e-089c5b3507e6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a8a578f2-8300-454c-b48d-edbb953c26c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 699,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e4ca10-c7c6-470d-8233-60c1a434cd0d",
        "cursor": {
          "ref": "210950dc-5f6f-4628-914e-84d82940a1b2",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7c9fa187-3ea2-42dc-a051-5c029e7c978f"
        },
        "item": {
          "id": "e0e4ca10-c7c6-470d-8233-60c1a434cd0d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d809bc5f-bead-4f31-9664-7c0fe386137d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 695,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e873af83-be5d-4acf-9c8f-9e544bbd54d0",
        "cursor": {
          "ref": "e7d59060-237d-45eb-86b8-531253b07781",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "89bba864-cebb-4d57-a447-85da3afaa0cb"
        },
        "item": {
          "id": "e873af83-be5d-4acf-9c8f-9e544bbd54d0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d032d947-c947-4ab4-b04c-531b1d6c2aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 716,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3444344c-a637-4fcd-b1e2-396ff9e78226",
        "cursor": {
          "ref": "69963751-89e4-46b5-9c59-d4bbd61db655",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d1ff4f66-e113-47de-be85-768632ea04e0"
        },
        "item": {
          "id": "3444344c-a637-4fcd-b1e2-396ff9e78226",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1d19ff99-4a53-4b28-91d4-deadfad527d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6b9cb0-b26a-4b24-ad1c-2b40b2ab6996",
        "cursor": {
          "ref": "614b7ba7-1af1-4a99-9d7b-d84ae95c4bd4",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "761eec38-a4c5-4187-be33-c0e646ca49fe"
        },
        "item": {
          "id": "8d6b9cb0-b26a-4b24-ad1c-2b40b2ab6996",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "52fcf6b0-9494-40d8-b2e8-d489df0f8db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 742,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d879ae6-0c01-45f2-9be1-f3d04ffb925e",
        "cursor": {
          "ref": "28e40daa-8378-40dc-8af4-23c63c336639",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "eaf852e8-1b14-4866-80a5-0e3d7849dd5b"
        },
        "item": {
          "id": "8d879ae6-0c01-45f2-9be1-f3d04ffb925e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "504e3412-9869-4c0c-b91a-cadb7e81f245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 715,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d986069-60b8-4c34-b0d6-7c2f93329ad0",
        "cursor": {
          "ref": "f61ba8fc-39e1-4723-92b5-78f6b4ecbab2",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "44095f1b-e2a6-4101-aa78-037833499e54"
        },
        "item": {
          "id": "0d986069-60b8-4c34-b0d6-7c2f93329ad0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "aa8f8b02-b7d9-4fe2-9d7d-10ff0302bb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 727,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048e898b-ff96-4603-99bf-cea4f0ce51d6",
        "cursor": {
          "ref": "096f735d-8d58-48c5-9cad-b447aafeb866",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9a9502c9-61fa-424e-8200-d385203c39e1"
        },
        "item": {
          "id": "048e898b-ff96-4603-99bf-cea4f0ce51d6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "25ff5f5f-20e6-4560-9b52-770d3df4a915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1739,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9efc825-d01e-485b-bf5f-0a6d310b3dc1",
        "cursor": {
          "ref": "25f76e94-b42d-4536-aea1-db2350a8082d",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1435c389-2648-4738-ab30-e4816f64d652"
        },
        "item": {
          "id": "f9efc825-d01e-485b-bf5f-0a6d310b3dc1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "553fdb08-2f58-4920-a5c9-963eed4903bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1544,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6537e34-140d-403d-ab6e-b141777a332d",
        "cursor": {
          "ref": "16bfef54-3b3a-46a8-a6c3-2f3b423b6760",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4cf07b8d-45d8-4092-9adb-0aad1a8b8e98"
        },
        "item": {
          "id": "a6537e34-140d-403d-ab6e-b141777a332d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1a8aee7d-0b28-49dd-bde5-95f44baae2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1161,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af3fff0-71fd-46d2-a74a-c96935f10ce6",
        "cursor": {
          "ref": "4a9ef726-2ea1-4a59-b5ef-061f99c1cd33",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2f809c1a-8077-4d83-823f-687f109cc8c1"
        },
        "item": {
          "id": "9af3fff0-71fd-46d2-a74a-c96935f10ce6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9b988dd7-a8e2-406b-802a-10ad16e31eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c617c929-6f0d-4cdc-8137-bc8fe8e540cb",
        "cursor": {
          "ref": "0c4a6486-52e7-4d94-b2e3-76ccdbcf355e",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "66dbcbf4-9674-4fb8-89c3-926bdba12be8"
        },
        "item": {
          "id": "c617c929-6f0d-4cdc-8137-bc8fe8e540cb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8624e77e-7cd8-4c96-9268-c1c98f186cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8260b45e-d88f-4d25-b7e4-58f8b083be10",
        "cursor": {
          "ref": "7b233cb8-d930-4dd3-970a-651867bb0d7b",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3ba89de1-f829-44f2-bb7f-0b21fe4d3174"
        },
        "item": {
          "id": "8260b45e-d88f-4d25-b7e4-58f8b083be10",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "99428931-d2af-4538-847c-df4680aa25f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f0021e-dc42-478d-a8e9-37aed140c934",
        "cursor": {
          "ref": "9cb80510-5ecd-4b10-9fe9-a8f5910a657d",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "71f0d99c-5b3f-4eed-ac66-61b0236298b1"
        },
        "item": {
          "id": "12f0021e-dc42-478d-a8e9-37aed140c934",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "430a5fcf-7049-421f-8e3a-460417c66da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d480cc66-9599-4823-acf9-9486c198bcc9",
        "cursor": {
          "ref": "983f7364-f29f-4256-bb57-5e7ed910802f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1e6af692-a326-4545-b29a-b4abb1e708b5"
        },
        "item": {
          "id": "d480cc66-9599-4823-acf9-9486c198bcc9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "441f6f85-775f-45bb-bc4d-f27b62ea724e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c973583a-9133-431d-8aed-c144389e26f8",
        "cursor": {
          "ref": "a826bb28-72fd-4fcf-9973-af7820be88d3",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2a604cd5-30fb-45d2-a41b-c393beb9a1fb"
        },
        "item": {
          "id": "c973583a-9133-431d-8aed-c144389e26f8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "498db5f4-9f27-451f-9bcb-8805c07c44da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd6030a-e4d7-4bbf-ac74-92ab08f3a225",
        "cursor": {
          "ref": "6c720a4b-e90e-451f-ad68-7b5a61d98d42",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "adb3b6fe-3d1b-4ddd-9d25-e0a8536b472e"
        },
        "item": {
          "id": "6dd6030a-e4d7-4bbf-ac74-92ab08f3a225",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bdef2db9-b4f1-42b5-b537-7513fdbcb6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7770ef9f-1862-47ef-be1e-6452d509c108",
        "cursor": {
          "ref": "346447c1-5138-4bd9-97bc-48644722c445",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "62b81bc4-f4c4-4ce4-88d5-c81a96e52cff"
        },
        "item": {
          "id": "7770ef9f-1862-47ef-be1e-6452d509c108",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "722f1f93-9c65-4e33-94ff-cce5957bdd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45eb68bb-5a2b-4d19-bccb-aaef8297e564",
        "cursor": {
          "ref": "ff12f9e3-27fd-403b-b5ae-7c754ff2268a",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4e126632-c0a7-438b-bfc2-ae4b07c33972"
        },
        "item": {
          "id": "45eb68bb-5a2b-4d19-bccb-aaef8297e564",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "386047e9-db26-4a79-b83d-c604fc70ddfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf4dbd2-aa12-40f2-a76f-ab12e632ad44",
        "cursor": {
          "ref": "d5e73260-d8a8-4140-b092-d021c4b4f957",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6d88f3a8-7518-4a9d-8eca-e4198e0084d7"
        },
        "item": {
          "id": "cdf4dbd2-aa12-40f2-a76f-ab12e632ad44",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9695810a-7e02-4093-82d8-c6e8e5bf9e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc35b0cd-9b76-468c-9f1c-bde3cba09517",
        "cursor": {
          "ref": "48f1c119-36eb-486d-88b7-937cbcf19fc4",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2d65cdc2-a97a-41d7-959e-5489e9216eef"
        },
        "item": {
          "id": "dc35b0cd-9b76-468c-9f1c-bde3cba09517",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "23df2080-0a3e-4030-8677-5bb848b8eb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745e4a4a-958a-4eea-8d4a-f6488068d28c",
        "cursor": {
          "ref": "a8e2b38c-fdbc-4a29-9224-ef9d850c0ad3",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "246443dc-1621-4c0b-9b89-ef6e10f42cd3"
        },
        "item": {
          "id": "745e4a4a-958a-4eea-8d4a-f6488068d28c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e477954b-b65a-41f1-8e68-ffce2d9ec173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1041,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50d2140e-a45f-44b1-9fff-e70e6c40bdfd",
        "cursor": {
          "ref": "6510d33e-ff3b-4196-9267-cc1705bf5683",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "157ea59d-4a72-4910-9aaf-568f6add77ed"
        },
        "item": {
          "id": "50d2140e-a45f-44b1-9fff-e70e6c40bdfd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f64d0810-f20a-473d-afe5-19642b2ca23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890f4b34-b839-4ede-a7b8-f054f09517ff",
        "cursor": {
          "ref": "bf7bc6cb-2a48-4f6b-aa7a-ff47e2cc3fa9",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9c627e48-8621-40b7-b275-e03a29c93cc6"
        },
        "item": {
          "id": "890f4b34-b839-4ede-a7b8-f054f09517ff",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9b9381d3-0bc4-4aa3-baec-dabdbf1cd9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1381,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9383bc-56bc-4e51-8592-fd84bf5bc5a8",
        "cursor": {
          "ref": "d688c1d1-db23-4ddc-9531-de47fcf25a85",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6112eb62-b5fe-4bb4-b982-63689147e25e"
        },
        "item": {
          "id": "dd9383bc-56bc-4e51-8592-fd84bf5bc5a8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1ff92410-8aa8-41a2-b9db-744763f00489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1979,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cd6608-7164-4dc3-9f90-b9033ea1b93e",
        "cursor": {
          "ref": "14e3d28b-afcd-4a0e-a4f6-4740894f88f5",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3851f8bf-af41-4c30-8095-0ec8f7bc2fa2"
        },
        "item": {
          "id": "81cd6608-7164-4dc3-9f90-b9033ea1b93e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e5a48d03-6bc8-4f79-a8b0-96f31cc15f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1660,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff62cf4-a94d-4869-bd3a-60f78d561d3a",
        "cursor": {
          "ref": "4055a033-6142-424c-926d-6252f8b7ceb2",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "583c2f2e-7653-422a-a7b4-f63439d2f6e0"
        },
        "item": {
          "id": "bff62cf4-a94d-4869-bd3a-60f78d561d3a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6e442f73-275f-4fc1-82a9-a4c4567e429e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2264,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e4a870-efdf-4d56-9791-54fbfe3ba77b",
        "cursor": {
          "ref": "fe941271-ee19-4b2e-86e7-c6afafb40427",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "267b63a9-c770-468d-b011-8980583f1e58"
        },
        "item": {
          "id": "73e4a870-efdf-4d56-9791-54fbfe3ba77b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "520286a7-0484-47b0-b133-270fbbf93c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1710,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5f23e1-42b3-46e6-b6af-24c3d1e63af2",
        "cursor": {
          "ref": "fe105207-7bf7-4122-9a8d-9884ad831a65",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "254fbc96-b6b6-4c5c-b30d-67df2304db86"
        },
        "item": {
          "id": "6f5f23e1-42b3-46e6-b6af-24c3d1e63af2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ee50f181-543d-4dcd-8839-95b60bcbf24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee815be7-9f9a-4998-ad7e-9bbe77806756",
        "cursor": {
          "ref": "0893c34e-2f84-4c8e-918c-2351a5beb15d",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bc81d533-d84c-44b2-a299-8782f59dfbc2"
        },
        "item": {
          "id": "ee815be7-9f9a-4998-ad7e-9bbe77806756",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0e31be2a-7c7a-42e1-818c-e4e072a0e61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d872cd-7bdf-4ffc-be12-b0644adb9ee9",
        "cursor": {
          "ref": "57a1e26e-9fbb-4581-b044-f10728032dca",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8b2748fd-1733-492f-8b12-740f0ca73543"
        },
        "item": {
          "id": "23d872cd-7bdf-4ffc-be12-b0644adb9ee9",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fd4fbd4b-f85a-4ac5-b5a2-853aa8c29c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 772,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73c8a31-a8be-4648-b5ea-f62bf235e418",
        "cursor": {
          "ref": "b8fc8827-d52b-4e65-a0f1-6da87858d85b",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9c0e520d-3992-4bd0-8e0c-8ef69534ccc2"
        },
        "item": {
          "id": "f73c8a31-a8be-4648-b5ea-f62bf235e418",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "00fc4cfe-b318-46a8-a78b-0c7827f196e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8271fd-fd58-4d7e-9503-a671c11ecbd7",
        "cursor": {
          "ref": "3e475eb0-df41-41af-8ac1-0527e998c08b",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "673fd02d-b272-47c6-a54d-66ca91ef428f"
        },
        "item": {
          "id": "ce8271fd-fd58-4d7e-9503-a671c11ecbd7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a4f0612c-ecec-493f-8c1c-940f160ef945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe4824f-32c4-4985-afc4-6cc6149a434c",
        "cursor": {
          "ref": "8d79c1db-3c34-4318-8c50-8c2446dad4d9",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7d1425fd-a019-40b3-ae72-dfd1c247775c"
        },
        "item": {
          "id": "0fe4824f-32c4-4985-afc4-6cc6149a434c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e3080c0a-6a06-4bb6-863d-0c0082f3dec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ef8d6a-a657-429f-9bc8-8851636a1d48",
        "cursor": {
          "ref": "34ea2532-7cab-4894-95b0-c09eccf25bc0",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "08666583-befe-4332-9175-5ce176b31c8e"
        },
        "item": {
          "id": "29ef8d6a-a657-429f-9bc8-8851636a1d48",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "15b5a892-778a-4b76-8882-65c471a1ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff3413b-f835-4ad5-a2f8-3a122677479e",
        "cursor": {
          "ref": "222d79db-90bd-49fe-a0ec-3226e3e53734",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "73068cd1-a5ae-4dc6-b158-2cd073722ece"
        },
        "item": {
          "id": "fff3413b-f835-4ad5-a2f8-3a122677479e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "052660fb-0d6d-4200-a521-95d2f46be879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a70779-45cf-415c-b3a4-5f8b564881db",
        "cursor": {
          "ref": "38d307b7-fb6b-4144-90cb-747faefc13a4",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "aa4fa73c-b7d7-43b1-9cf9-9747d70782d4"
        },
        "item": {
          "id": "79a70779-45cf-415c-b3a4-5f8b564881db",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4233ed9f-15b4-43fd-83e1-903374bb6e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addc0492-7c12-47f6-b97c-10519c18162b",
        "cursor": {
          "ref": "05f4b6f3-0192-4956-ad2e-a63e390e8c51",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "de8f5bc9-823e-4c79-bbfd-bd2ca9118942"
        },
        "item": {
          "id": "addc0492-7c12-47f6-b97c-10519c18162b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "062a22cb-4312-43d5-bbda-c46b1d5b8885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b44435-ffa5-4ee2-829f-d954780ebca4",
        "cursor": {
          "ref": "a72f6eeb-48ac-43fd-ab81-b302461b4f6a",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "97fe34b4-617a-49c8-b4a2-f5392f39b15b"
        },
        "item": {
          "id": "42b44435-ffa5-4ee2-829f-d954780ebca4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "69e32176-aa7c-4b19-9fe5-7a36d3374399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e7340e-1a4e-46dd-9b7c-8556d8244cd4",
        "cursor": {
          "ref": "015e3c1b-8686-4c1d-92dd-cafe0d05771c",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e6d67a0b-247b-44e1-9343-bfa56e6b616f"
        },
        "item": {
          "id": "69e7340e-1a4e-46dd-9b7c-8556d8244cd4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c3710e4b-8d20-4fbe-88a5-ab1c29d2946e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e62fb5c-faca-4710-9f27-1702a9e743c9",
        "cursor": {
          "ref": "e65b48ab-c209-4dfa-b027-6179fdb8044f",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3f91db7b-5734-4650-8b3c-7cfefc29f2c1"
        },
        "item": {
          "id": "1e62fb5c-faca-4710-9f27-1702a9e743c9",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a0751cac-c113-4825-a937-28101c7b97ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 943,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee32370-f1b3-4d05-bf86-f6f8794036e8",
        "cursor": {
          "ref": "4675d9c0-b208-4b49-9586-0362618e97a6",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "29e7aace-3b0c-4560-8b9a-b58a56768d5f"
        },
        "item": {
          "id": "1ee32370-f1b3-4d05-bf86-f6f8794036e8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d35033cf-df60-4fbb-b00f-af28f80da641",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c651e8-3a11-4a50-92ce-deccceb93e18",
        "cursor": {
          "ref": "f2d88d4f-f9c7-4adb-a8d8-2afa9cecd802",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f7519243-14ea-459d-ab81-e99bdb576017"
        },
        "item": {
          "id": "c7c651e8-3a11-4a50-92ce-deccceb93e18",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "bd787234-b115-4e77-94f0-4777b3b89d25",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 876,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682d0c0a-8742-4425-9682-e2fa7e5b3060",
        "cursor": {
          "ref": "74c9411c-9194-44cf-8ada-ee3034239e0b",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "903454a7-1bf6-4cd9-863e-4350037ba95f"
        },
        "item": {
          "id": "682d0c0a-8742-4425-9682-e2fa7e5b3060",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a1bbfcd0-72b2-4b9e-9aad-a1ef8bf4e240",
          "status": "OK",
          "code": 200,
          "responseTime": 1588,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "51243eb8-9c6b-4ae0-aab3-714d775c5a9d",
        "cursor": {
          "ref": "16962f1e-1abf-4d01-8ec8-73b7edebad45",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6e12afe7-24f7-4bb9-b6e4-8382f2ce31b3"
        },
        "item": {
          "id": "51243eb8-9c6b-4ae0-aab3-714d775c5a9d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "15056620-27e1-4c95-9c0b-6626ef588fd3",
          "status": "OK",
          "code": 200,
          "responseTime": 2884,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "368a889c-cb4a-41a5-a2dc-a5e8bf76b4c6",
        "cursor": {
          "ref": "6b3ebf52-b3e9-438c-a0a1-bc671e1515bd",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "23a00c27-d14c-4d80-ac61-5d0a9cbdffd5"
        },
        "item": {
          "id": "368a889c-cb4a-41a5-a2dc-a5e8bf76b4c6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "494e1661-6678-48e9-bdbb-7bcee245feda",
          "status": "OK",
          "code": 200,
          "responseTime": 1667,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acf5ecb-c995-411d-a6c1-daa795680a34",
        "cursor": {
          "ref": "3bfeb633-8f41-4c5f-b04d-7be0c184bc43",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f1b664ac-64c0-4cbf-b3d1-08a0839018b4"
        },
        "item": {
          "id": "2acf5ecb-c995-411d-a6c1-daa795680a34",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47d8dab5-d3f2-4169-838d-7650b8e5d5c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acf5ecb-c995-411d-a6c1-daa795680a34",
        "cursor": {
          "ref": "3bfeb633-8f41-4c5f-b04d-7be0c184bc43",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f1b664ac-64c0-4cbf-b3d1-08a0839018b4"
        },
        "item": {
          "id": "2acf5ecb-c995-411d-a6c1-daa795680a34",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47d8dab5-d3f2-4169-838d-7650b8e5d5c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acf5ecb-c995-411d-a6c1-daa795680a34",
        "cursor": {
          "ref": "3bfeb633-8f41-4c5f-b04d-7be0c184bc43",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f1b664ac-64c0-4cbf-b3d1-08a0839018b4"
        },
        "item": {
          "id": "2acf5ecb-c995-411d-a6c1-daa795680a34",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "47d8dab5-d3f2-4169-838d-7650b8e5d5c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1c8555-1c6e-4f1e-9186-84af5a076238",
        "cursor": {
          "ref": "e42d17cf-ba95-4cb6-a3cb-65835b10e32a",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "a097bc64-247a-459d-a142-aafec7d6a529"
        },
        "item": {
          "id": "8a1c8555-1c6e-4f1e-9186-84af5a076238",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "d031026e-d2d6-452c-8826-846604d94f5b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 594,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d182767-fafa-44ab-9a64-4b1a0df748d8",
        "cursor": {
          "ref": "2fd4c48f-2be5-4f5d-bade-98075f07e106",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aecec1e1-ade4-4605-92e1-0fd7f4de1746"
        },
        "item": {
          "id": "8d182767-fafa-44ab-9a64-4b1a0df748d8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "695e333c-a7d3-4f35-8c0e-908bc2a46698",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d182767-fafa-44ab-9a64-4b1a0df748d8",
        "cursor": {
          "ref": "2fd4c48f-2be5-4f5d-bade-98075f07e106",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "aecec1e1-ade4-4605-92e1-0fd7f4de1746"
        },
        "item": {
          "id": "8d182767-fafa-44ab-9a64-4b1a0df748d8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "695e333c-a7d3-4f35-8c0e-908bc2a46698",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5030db97-0582-49b5-8797-accbc2d05787",
        "cursor": {
          "ref": "8b9a6fa6-f6bc-4876-83f0-995f1e61a68b",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "5ed32175-7156-4fec-bb19-2c0c4c129568"
        },
        "item": {
          "id": "5030db97-0582-49b5-8797-accbc2d05787",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "9b990aa5-a57c-4749-89f6-a9db4fad15b0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 866,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54869d98-b06c-4e4b-bc82-9873621a3b45",
        "cursor": {
          "ref": "04eb49ca-f4fd-464e-a17b-e441209e09dd",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6c6257b0-1856-498e-a897-172cbac45bda"
        },
        "item": {
          "id": "54869d98-b06c-4e4b-bc82-9873621a3b45",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fd16453b-19d3-4eef-9528-35882c63863f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54869d98-b06c-4e4b-bc82-9873621a3b45",
        "cursor": {
          "ref": "04eb49ca-f4fd-464e-a17b-e441209e09dd",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6c6257b0-1856-498e-a897-172cbac45bda"
        },
        "item": {
          "id": "54869d98-b06c-4e4b-bc82-9873621a3b45",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fd16453b-19d3-4eef-9528-35882c63863f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd6c3cb-cfad-4a54-bbbc-fefbb255ec2d",
        "cursor": {
          "ref": "5cc08812-ce4d-4e80-bffc-d24b87358ac2",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7de1119f-532b-4aba-81ad-a0b270ae1a82"
        },
        "item": {
          "id": "8bd6c3cb-cfad-4a54-bbbc-fefbb255ec2d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "0689aa9c-4bb7-474d-ad41-01f402dddb13",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 753,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}